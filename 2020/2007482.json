{
 "awd_id": "2007482",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Personalizing API Documentation",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2020-07-01",
 "awd_exp_date": "2023-06-30",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 532000.0,
 "awd_min_amd_letter_date": "2020-06-24",
 "awd_max_amd_letter_date": "2022-05-17",
 "awd_abstract_narration": "Application programming interfaces (APIs), including libraries, frameworks, toolkits, software development kits and web services, are used throughout most programmers' code. Since programming is a human activity, the usability of the APIs has a big impact on the effectiveness of the programmer and the resulting code: poor usability of APIs has been shown to result in bugs and security holes in code, as well as to reduce the programmer's productivity. Further, today's programmers must be learning new APIs all the time, as they switch projects or start using new packages or web services. A longstanding, but often overlooked, complaint about the usability of APIs is in the documentation. To be effective, API documentation must inform programmers, who have varying levels of expertise, how to correctly and effectively use the API. This project will create and empirically evaluate a system that automatically estimates the knowledge needs to use an API, and the needs and learning style of the user, to create personalized documentation focused on what the user needs to know. The project has the potential to significantly improve API usability and API learning, which could improve programmer effectiveness and productivity, and reduce bugs and security flaws, which would have a significant impact on all computerized systems. \r\n\r\nThis project involves fundamental research to identify and represent the knowledge that a programmer has, and programmers' learning styles, as it relates to APIs, based on user-centered studies and computational techniques including mining software repositories and natural language processing. From these sources, the system will identify how to create personalized documentation, which presents the right information in an appropriate format, without requiring the documentation writer to do much more work. The research will also identify new ways to support process-oriented learning and tinkering so they are both more effective. The research includes validating all of these for effectiveness through appropriate user studies using real and large APIs in collaboration with the research team's industrial partners. The research also aims to support diverse learning styles that are often the styles favored by underrepresented populations that tend to be unsupported in software.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Brad",
   "pi_last_name": "Myers",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "Brad A Myers",
   "pi_email_addr": "bam@cs.cmu.edu",
   "nsf_id": "000360868",
   "pi_start_date": "2020-06-24",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Bogdan",
   "pi_last_name": "Vasilescu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Bogdan Vasilescu",
   "pi_email_addr": "vasilescu@cmu.edu",
   "nsf_id": "000692194",
   "pi_start_date": "2020-06-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie Mellon University",
  "perf_str_addr": "5000 Forbes Ave",
  "perf_city_name": "Pittsburgh",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133890",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 500000.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-75656496-7fff-d74e-14e2-e07c7194d4d3\">&nbsp;</span></p>\n<p dir=\"ltr\"><span>Our research draws upon several fields. We have conducted software repository mining to understand developers? needs (Software Engineering), developed and employed natural language processing techniques to collect and process information scattered across various mediums (NLP), and designed human-computer interaction methods to enhance usability when designing and testing such tools (HCI). For our suite of annotation tools, we utilized human-centered methods through the whole development process (HCI) and drew upon software engineering literature to understand what types of information processing and sensemaking issues developers commonly encounter when developing software and using documentation (Software Engineering).</span></p>\n<p dir=\"ltr\"><span>[Documentation Logs] We conducted an exploratory, mixed-methods empirical study on Google Cloud Platform documentation page-view logs, which revealed discernible patterns of documentation page visits. The study showed that developers use documentation differently, and developers? contextual factors, such as past experience with a specific product, do correlate with which documentation pages developers visit.&nbsp;</span></p>\n<p dir=\"ltr\"><span>[SOREL] We developed a learning-based system that considers the task of writing code using unfamiliar libraries. This system extracts comparable API methods and explanations from Stack Overflow posts and provides proactive suggestions, outperforming conventional information-seeking approaches like search engines or pattern-matching based extraction approaches.</span></p>\n<p dir=\"ltr\"><span>[LLM for code understanding] We created an in-IDE information support tool that takes into account the code the developer is working on as an extra context. By employing pre-trained large language models, it generated information tailored to the users? task context and demonstrated that generation-based context-aware information support can significantly enhance developers? ability to complete tasks compared to the general search engine-based information-seeking.</span></p>\n<p dir=\"ltr\"><span>[Adamite] To help developers better utilize documentation on the internet, we developed a browser extension called ?Adamite? that allows users to annotate and categorize information they learn on the web about software libraries. The system is designed both to help the original annotator keep track of their thoughts and questions about the documentation, and to assist later readers of the documentation through allowing developers to mark and share their answered questions and other useful notes. Our evaluation found that developers were able to utilize annotated documentation to more successfully complete a programming task, over non-annotated documentation.</span></p>\n<p dir=\"ltr\"><span>[Catseye] As an expansion of the Adamite work, we moved our annotation system and design goals into the code editor with a code annotation tool called ?Catseye?. Given the mutable nature of code and the difference in goals when writing code versus understanding documentation, our system design changed to support more developer-specific activities, such as lightweight versioning of code, capturing code output, and specialized support for copy and pasting code blocks, along with deletion. When performing a debugging task, Catseye users were better able to keep track of their information using annotations and successfully resolved more bugs, on average, than people using traditional information tracking measures, such as code comments.</span></p>\n<p dir=\"ltr\"><span>[Sodalite] A key component to the success of both Adamite and Catseye is utilizing the context of the annotation anchor points to support sharing useful information with later developers. Similarly, both of these systems focused on keeping track of short-form, more ephemeral types of information such as open questions about the text in documentation. We decided to extend our design into a new tool called ?Sodalite?, which supports the authoring of long-form documents about code while retaining the anchoring concepts of linking between the developer?s written text and code within the editor to make the information more comprehensible to later developers. The approach of situating the long-form document within the editor additionally allows us to try and automatically repair the documentation when the code changes through recomputing new anchor points and marking the associated text as either correct or in need of review, given how successful our technique was in finding a code block that matches the block the author originally linked the text to. In our evaluation, we found that developers were able to create code documents with our tool and that the repairing mechanism worked in finding an appropriate anchoring point or marking the text as in need of review 86% of the time.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/02/2023<br>\n\t\t\t\t\tModified by: Brad&nbsp;A&nbsp;Myers</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696275686286_4-Adamite--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696275686286_4-Adamite--rgov-800width.jpg\" title=\"Adamite, our annotation system, open on Piling docs. Left: green-highlighted code, indicating annotations. Text selected, pop-up displays 5 annotation types. Right: Adamite sidebar with 2 annotations, search bar, and list of pinned annotations.\"><img src=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696275686286_4-Adamite--rgov-66x44.jpg\" alt=\"Adamite, our annotation system, open on Piling docs. Left: green-highlighted code, indicating annotations. Text selected, pop-up displays 5 annotation types. Right: Adamite sidebar with 2 annotations, search bar, and list of pinned annotations.\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Overview of our browser-based documentation annotation tool, Adamite. (1) and (2) show the menu for creating a new annotation on some selected text, (4) shows how the annotated text looks on the web page, and (5) and (3) show the Adamite sidebar and an annotation, respectively.</div>\n<div class=\"imageCredit\">Screenshot by Amber Horvath</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Brad&nbsp;A&nbsp;Myers</div>\n<div class=\"imageTitle\">Adamite, our annotation system, open on Piling docs. Left: green-highlighted code, indicating annotations. Text selected, pop-up displays 5 annotation types. Right: Adamite sidebar with 2 annotations, search bar, and list of pinned annotations.</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696272760951_3-pageviewlogs--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696272760951_3-pageviewlogs--rgov-800width.jpg\" title=\"Polar plots of average dwell time of selected example clusters accompanied with bar charts summarizing the user distributions. The first set shows the average usage of the entire users in the dataset. The other sets show discernible usages of documentation and the distributions of the users.\"><img src=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696272760951_3-pageviewlogs--rgov-66x44.jpg\" alt=\"Polar plots of average dwell time of selected example clusters accompanied with bar charts summarizing the user distributions. The first set shows the average usage of the entire users in the dataset. The other sets show discernible usages of documentation and the distributions of the users.\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Highlights of the clustering analysis of Google Cloud Platform documentation page-view logs analysis. Each polar plot displays the average time spent on each type of documentation. Bar charts show the proportions (%) of each group in the cluster.</div>\n<div class=\"imageCredit\">Generated by Daye Nam</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Brad&nbsp;A&nbsp;Myers</div>\n<div class=\"imageTitle\">Polar plots of average dwell time of selected example clusters accompanied with bar charts summarizing the user distributions. The first set shows the average usage of the entire users in the dataset. The other sets show discernible usages of documentation and the distributions of the users.</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696272658151_2-SOREL--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696272658151_2-SOREL--rgov-800width.jpg\" title=\"SOREL is a browser plug-in providing comparable API methods and explanations. The image shows a Tensorflow method shown in the search result, with an orange \ufffdVS\ufffd icon indicating the availability of comparable API methods. The right side of the image shows a SOREL panel displaying the information.\"><img src=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696272658151_2-SOREL--rgov-66x44.jpg\" alt=\"SOREL is a browser plug-in providing comparable API methods and explanations. The image shows a Tensorflow method shown in the search result, with an orange \ufffdVS\ufffd icon indicating the availability of comparable API methods. The right side of the image shows a SOREL panel displaying the information.\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Overview of SOREL, a browser plug-in. (1) When there are comparable API methods, SOREL inserts a \ufffdvs'' icon showing (2) the comparable API methods; (3) the explanations for the comparison; (4) a link to the Stack Overflow answer where the information is extracted from.</div>\n<div class=\"imageCredit\">Screenshot by Daya Nam</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Brad&nbsp;A&nbsp;Myers</div>\n<div class=\"imageTitle\">SOREL is a browser plug-in providing comparable API methods and explanations. The image shows a Tensorflow method shown in the search result, with an orange \ufffdVS\ufffd icon indicating the availability of comparable API methods. The right side of the image shows a SOREL panel displaying the information.</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696275846268_1-GILT--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696275846268_1-GILT--rgov-800width.jpg\" title=\"Our prototype for generation-based information support tool, GILT, opened in VS Code. The right code panel includes code, part of it highlighted. The left panel shows the GILT sidebar, displaying the summary of the highlighted code and the LLM-generated information, and a textbox for a user prompt.\"><img src=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696275846268_1-GILT--rgov-66x44.jpg\" alt=\"Our prototype for generation-based information support tool, GILT, opened in VS Code. The right code panel includes code, part of it highlighted. The left panel shows the GILT sidebar, displaying the summary of the highlighted code and the LLM-generated information, and a textbox for a user prompt.\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">GILT tool for generation-based information support. (1) A trigger button; (2) code used as context when prompting LLM; (3) code summary; (4) more details buttons; (5) input box for user prompts; (6) embed information into code; (7) clear the panel and an abort LLM; (8) refresh.</div>\n<div class=\"imageCredit\">Screenshot by Daye Nam</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Brad&nbsp;A&nbsp;Myers</div>\n<div class=\"imageTitle\">Our prototype for generation-based information support tool, GILT, opened in VS Code. The right code panel includes code, part of it highlighted. The left panel shows the GILT sidebar, displaying the summary of the highlighted code and the LLM-generated information, and a textbox for a user prompt.</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696275938243_5-catseye--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696275938243_5-catseye--rgov-800width.jpg\" title=\"Catseye, code annotation system, open in dark mode Visual Studio Code. Left: HTML file. Right: Catseye pane mimics VS Code style and includes search bar, \ufffdPinned\ufffd and \ufffdCurrent File\ufffd annotations, code snippets, and annotations. Snapshots and replies are expanded.\"><img src=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696275938243_5-catseye--rgov-66x44.jpg\" alt=\"Catseye, code annotation system, open in dark mode Visual Studio Code. Left: HTML file. Right: Catseye pane mimics VS Code style and includes search bar, \ufffdPinned\ufffd and \ufffdCurrent File\ufffd annotations, code snippets, and annotations. Snapshots and replies are expanded.\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Overview of our code annotation tool, Catseye. The Catseye pane displays a list of annotations \ufffd in this case, a single annotation is open which has multiple code anchors ((6) and (7)) and multiple versions and replies ((8) and (9)). (1) shows how the annotation anchor point looks within the editor.</div>\n<div class=\"imageCredit\">Screenshot by Amber Horvath</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Brad&nbsp;A&nbsp;Myers</div>\n<div class=\"imageTitle\">Catseye, code annotation system, open in dark mode Visual Studio Code. Left: HTML file. Right: Catseye pane mimics VS Code style and includes search bar, \ufffdPinned\ufffd and \ufffdCurrent File\ufffd annotations, code snippets, and annotations. Snapshots and replies are expanded.</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696276039472_6-Sodalite--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696276039472_6-Sodalite--rgov-800width.jpg\" title=\"Sodalite with multiple code stories open. Each code story is a rounded rectangle with a title and text with code links in red. One story has text highlighted in yellow because the maintenance algorithm found the text in need of review \ufffd another has red highlights because the code links are broken.\"><img src=\"/por/images/Reports/POR/2023/2007482/2007482_10680143_1696276039472_6-Sodalite--rgov-66x44.jpg\" alt=\"Sodalite with multiple code stories open. Each code story is a rounded rectangle with a title and text with code links in red. One story has text highlighted in yellow because the maintenance algorithm found the text in need of review \ufffd another has red highlights because the code links are broken.\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">How our long-form code documentation system, Sodalite, appears when multiple documents are open. (1) shows a code document with a code link in red, and has no errors, while (2) is a story with warnings and a pop-up (3). (4) is a code story with errors, given that no matches were found.</div>\n<div class=\"imageCredit\">Screenshot by Amber Horvath</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Brad&nbsp;A&nbsp;Myers</div>\n<div class=\"imageTitle\">Sodalite with multiple code stories open. Each code story is a rounded rectangle with a title and text with code links in red. One story has text highlighted in yellow because the maintenance algorithm found the text in need of review \ufffd another has red highlights because the code links are broken.</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\n \nOur research draws upon several fields. We have conducted software repository mining to understand developers? needs (Software Engineering), developed and employed natural language processing techniques to collect and process information scattered across various mediums (NLP), and designed human-computer interaction methods to enhance usability when designing and testing such tools (HCI). For our suite of annotation tools, we utilized human-centered methods through the whole development process (HCI) and drew upon software engineering literature to understand what types of information processing and sensemaking issues developers commonly encounter when developing software and using documentation (Software Engineering).\n[Documentation Logs] We conducted an exploratory, mixed-methods empirical study on Google Cloud Platform documentation page-view logs, which revealed discernible patterns of documentation page visits. The study showed that developers use documentation differently, and developers? contextual factors, such as past experience with a specific product, do correlate with which documentation pages developers visit. \n[SOREL] We developed a learning-based system that considers the task of writing code using unfamiliar libraries. This system extracts comparable API methods and explanations from Stack Overflow posts and provides proactive suggestions, outperforming conventional information-seeking approaches like search engines or pattern-matching based extraction approaches.\n[LLM for code understanding] We created an in-IDE information support tool that takes into account the code the developer is working on as an extra context. By employing pre-trained large language models, it generated information tailored to the users? task context and demonstrated that generation-based context-aware information support can significantly enhance developers? ability to complete tasks compared to the general search engine-based information-seeking.\n[Adamite] To help developers better utilize documentation on the internet, we developed a browser extension called ?Adamite? that allows users to annotate and categorize information they learn on the web about software libraries. The system is designed both to help the original annotator keep track of their thoughts and questions about the documentation, and to assist later readers of the documentation through allowing developers to mark and share their answered questions and other useful notes. Our evaluation found that developers were able to utilize annotated documentation to more successfully complete a programming task, over non-annotated documentation.\n[Catseye] As an expansion of the Adamite work, we moved our annotation system and design goals into the code editor with a code annotation tool called ?Catseye?. Given the mutable nature of code and the difference in goals when writing code versus understanding documentation, our system design changed to support more developer-specific activities, such as lightweight versioning of code, capturing code output, and specialized support for copy and pasting code blocks, along with deletion. When performing a debugging task, Catseye users were better able to keep track of their information using annotations and successfully resolved more bugs, on average, than people using traditional information tracking measures, such as code comments.\n[Sodalite] A key component to the success of both Adamite and Catseye is utilizing the context of the annotation anchor points to support sharing useful information with later developers. Similarly, both of these systems focused on keeping track of short-form, more ephemeral types of information such as open questions about the text in documentation. We decided to extend our design into a new tool called ?Sodalite?, which supports the authoring of long-form documents about code while retaining the anchoring concepts of linking between the developer?s written text and code within the editor to make the information more comprehensible to later developers. The approach of situating the long-form document within the editor additionally allows us to try and automatically repair the documentation when the code changes through recomputing new anchor points and marking the associated text as either correct or in need of review, given how successful our technique was in finding a code block that matches the block the author originally linked the text to. In our evaluation, we found that developers were able to create code documents with our tool and that the repairing mechanism worked in finding an appropriate anchoring point or marking the text as in need of review 86% of the time.\n\n \n\n\t\t\t\t\tLast Modified: 10/02/2023\n\n\t\t\t\t\tSubmitted by: Brad A Myers"
 }
}