{
 "awd_id": "2001580",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF:Small:Collaborative Research: Application-aware Energy Modeling and Power Management for Parallel and High Performance Computing",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927498",
 "po_email": "achtchel@nsf.gov",
 "po_sign_block_name": "Almadena Chtchelkanova",
 "awd_eff_date": "2019-10-15",
 "awd_exp_date": "2020-09-30",
 "tot_intn_awd_amt": 23273.0,
 "awd_amount": 23273.0,
 "awd_min_amd_letter_date": "2019-11-12",
 "awd_max_amd_letter_date": "2019-11-12",
 "awd_abstract_narration": "One of the critical challenges in scaling out current and future high performance computing (HPC) and enterprise computing systems is the requirement that their power envelope remain comparable to that of today?s systems. This project addresses this ?power wall? challenge from the system software aspect by developing application-aware methodologies of energy modeling and power management. The project optimizes system efficiency by tuning performance and energy consumption to resonate with application runtime behavior while staying below the system power envelope. The project develops user interfaces and new compiler models and runtime tuning techniques to manage the tradeoffs between performance and energy consumption. The approach enables cooperative, application-specific control of energy consumption between hardware, system software and applications. The investigations and solutions deepen understanding of application power usage and guide users to customized performance and energy consumption behavior.\r\n\r\nThis collaborative project integrates the development, education, and outreach efforts of collaborating University partners and is well positioned to have a substantial impact on both the HPC research community and hardware designers and vendors. All findings are published in peer-reviewed conferences and journals while source code and results are available through a project web site. This work addresses the need for energy efficiency improvements in large-scale systems in support of high-end simulations used to design pharmaceuticals, aircraft, global warming scenarios, etc. The proposed techniques influence the design of future directions HPC and enterprise computing systems from industry and government. The project engages and trains graduate and undergraduate students, including underrepresented minority students, in the area of energy efficient computing, parallel and high performance computing, and computer architecture and systems. The open source evaluation platforms are used in teaching related coursework in graduate and undergraduate classes.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Yonghong",
   "pi_last_name": "Yan",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Yonghong Yan",
   "pi_email_addr": "yyan7@uncc.edu",
   "nsf_id": "000604781",
   "pi_start_date": "2019-11-12",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of North Carolina at Charlotte",
  "inst_street_address": "9201 UNIVERSITY CITY BLVD",
  "inst_street_address_2": "",
  "inst_city_name": "CHARLOTTE",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "7046871888",
  "inst_zip_code": "282230001",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "NC12",
  "org_lgl_bus_name": "UNIVERSITY OF NORTH CAROLINA AT CHARLOTTE",
  "org_prnt_uei_num": "NEYCH3CVBTR6",
  "org_uei_num": "JB33DT84JNA5"
 },
 "perf_inst": {
  "perf_inst_name": "University of North Carolina at Charlotte",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "282230001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "NC12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7942",
   "pgm_ref_txt": "HIGH-PERFORMANCE COMPUTING"
  }
 ],
 "app_fund": [
  {
   "app_code": "0114",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001415DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2014,
   "fund_oblg_amt": 23273.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-61644fcf-7fff-b0dd-b7c2-998e4bd2f484\"> </span></p>\n<p dir=\"ltr\"><span>The goal of the project is to develop user interfaces and runtime tuning techniques to manage the tradeoffs between performance and energy consumption for parallel and high performance computing (HPC) applications. The approach is expected to enable cooperative, application-specific control of energy consumption between hardware, system software and applications. The investigations and solutions deepen understanding of application power usage and guide users to customized performance and energy consumption behavior.</span></p>\n<p dir=\"ltr\"><span>With these goals, the project have the following outcomes:&nbsp;</span></p>\n<p dir=\"ltr\"><span>1. Language extensions and compiler support have been created based on OpenMP to support distributing computation and data among multiple heterogeneous devices (CPU, NVIDIA GPU and Intel Xeon Phi MIC) on a computing node. These extensions enable more information sharing between programmers&rsquo; intension and system software for co-scheduling of data movement and computation to achieve maximum overlapping. It significantly improves programming productivity for users when using multiple devices for offloading computational tasks.&nbsp;</span></p>\n<p dir=\"ltr\"><span>2. A runtime-based tuning framework has been created that is able to automatically tune the thread count and CPU frequency based on the performance and energy tradeoff and preference. The runtime API enables users to embed analysis, modeling and tuning capabilities in a parallel iterative program to guide computation simulation and solver at runtime. It has the potential to make a significant impact to the way computational simulation is performed in the future.</span></p>\n<p dir=\"ltr\"><span>3. Black-box model and fine-grained model for combined analysis of performance and energy consumption of parallel and HPC applications have been created within the Aspen framework. The effectiveness of the models has been demonstrated for both energy prediction and optimization to enhance the energy efficiency of HPC applications.&nbsp;</span></p>\n<p dir=\"ltr\"><span>4. A performance tool for HPC applications such as those created with MPI, OpenMP and CUDA has been created by integrating state-of-the-art Linux performance tools including LTTng, Eclipse, and runtime and profiling tool interface of existing programming models. This development demonstrates that leveraging commodity Linux tools for creating HPC-specific performance tools is viable and can greatly reduce the development cycle.&nbsp;</span></p>\n<p dir=\"ltr\"><span>5. Existing scientific kernels, mini-apps, and proxy-apps that are widely used for HPC application experiments have been studied and enhanced with features and capability developed in this project to promote the adoption of the techniques produced by this project. All the software, tools, and experiment data produced during this project are released in the public domain or as open-source software. Some of the language extensions have been proposed to the OpenMP language committee to be considered as part of the standard.&nbsp;</span></p>\n<p dir=\"ltr\"><span>6. Several Ph.D., master, and undergraduate students funded in this project are trained and graduated with skills of computer system, HPC applications, measurement of performance and power, and performance optimization.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/13/2021<br>\n\t\t\t\t\tModified by: Yonghong&nbsp;Yan</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nThe goal of the project is to develop user interfaces and runtime tuning techniques to manage the tradeoffs between performance and energy consumption for parallel and high performance computing (HPC) applications. The approach is expected to enable cooperative, application-specific control of energy consumption between hardware, system software and applications. The investigations and solutions deepen understanding of application power usage and guide users to customized performance and energy consumption behavior.\nWith these goals, the project have the following outcomes: \n1. Language extensions and compiler support have been created based on OpenMP to support distributing computation and data among multiple heterogeneous devices (CPU, NVIDIA GPU and Intel Xeon Phi MIC) on a computing node. These extensions enable more information sharing between programmers\u2019 intension and system software for co-scheduling of data movement and computation to achieve maximum overlapping. It significantly improves programming productivity for users when using multiple devices for offloading computational tasks. \n2. A runtime-based tuning framework has been created that is able to automatically tune the thread count and CPU frequency based on the performance and energy tradeoff and preference. The runtime API enables users to embed analysis, modeling and tuning capabilities in a parallel iterative program to guide computation simulation and solver at runtime. It has the potential to make a significant impact to the way computational simulation is performed in the future.\n3. Black-box model and fine-grained model for combined analysis of performance and energy consumption of parallel and HPC applications have been created within the Aspen framework. The effectiveness of the models has been demonstrated for both energy prediction and optimization to enhance the energy efficiency of HPC applications. \n4. A performance tool for HPC applications such as those created with MPI, OpenMP and CUDA has been created by integrating state-of-the-art Linux performance tools including LTTng, Eclipse, and runtime and profiling tool interface of existing programming models. This development demonstrates that leveraging commodity Linux tools for creating HPC-specific performance tools is viable and can greatly reduce the development cycle. \n5. Existing scientific kernels, mini-apps, and proxy-apps that are widely used for HPC application experiments have been studied and enhanced with features and capability developed in this project to promote the adoption of the techniques produced by this project. All the software, tools, and experiment data produced during this project are released in the public domain or as open-source software. Some of the language extensions have been proposed to the OpenMP language committee to be considered as part of the standard. \n6. Several Ph.D., master, and undergraduate students funded in this project are trained and graduated with skills of computer system, HPC applications, measurement of performance and power, and performance optimization.\n\n \n\n\t\t\t\t\tLast Modified: 01/13/2021\n\n\t\t\t\t\tSubmitted by: Yonghong Yan"
 }
}