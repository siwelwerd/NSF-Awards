{
 "awd_id": "2007832",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Dynamic Gating and Adaptation of Deep Neural Networks for Efficient Inference and Training",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927843",
 "po_email": "sabasu@nsf.gov",
 "po_sign_block_name": "Sankar Basu",
 "awd_eff_date": "2020-06-15",
 "awd_exp_date": "2024-05-31",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 500000.0,
 "awd_min_amd_letter_date": "2020-06-05",
 "awd_max_amd_letter_date": "2020-06-05",
 "awd_abstract_narration": "The past half-decade has seen unprecedented growth in machine learning with deep neural networks (DNNs), which now represent the state-of-the-art in many AI applications. However, existing DNN models require substantial memory and computing power, which greatly limit their use in resource-constrained systems such as mobile and IoT devices. This project will develop new algorithms and hardware to significantly improve the efficiency of DNNs, and represents an important step towards enabling fast and adaptive DNN executions even in resource-limited environments. In that sense, this project has the potential to enable a wider deployment of machine learning, which will play a critical role in many aspects of the future smart society. The research project will provide research training opportunities to the students as well as new curriculum development by leveraging existing resources at Cornell, e.g., summer camps as well as an outreach programs for high-school students including women.\r\n\r\nThis project aims to significantly improve the efficiency of DNNs, while maintaining high accuracy, by co-developing algorithm optimizations and  an efficient hardware-accelerator architecture. While there exist many lines of work on reducing DNN execution costs, the majority of these techniques are designed primarily to improve inference and perform static optimizations that reduce computation uniformly for all inputs or only exploit a limited form of dynamic sparsity, namely zeros. This project aims to enable new performance-accuracy trade-off points for DNNs that are not possible today by exploiting general forms of dynamic sparsity that are specific to each input at run-time. More specifically, the project plans to investigate input-specific gating techniques that can remove redundant computations for both training and inference, develop dynamic quantization techniques that do not require training data, and design an efficient and unified hardware accelerator architecture that provides both real-world performance and energy improvements.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Gookwon",
   "pi_last_name": "Suh",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Gookwon E Suh",
   "pi_email_addr": "gs272@cornell.edu",
   "nsf_id": "000104889",
   "pi_start_date": "2020-06-05",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Zhiru",
   "pi_last_name": "Zhang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhiru Zhang",
   "pi_email_addr": "zhiruz@cornell.edu",
   "nsf_id": "000631474",
   "pi_start_date": "2020-06-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148535401",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "075Z",
   "pgm_ref_txt": "Artificial Intelligence (AI)"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7945",
   "pgm_ref_txt": "DES AUTO FOR MICRO & NANO SYST"
  }
 ],
 "app_fund": [
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 500000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-8d29e4e1-7fff-7f9a-1bfe-49c2b037bca9\">\n<p dir=\"ltr\"><span>Deep neural networks (DNNs) are reshaping many aspects of our lives by enabling computers to better understand/generate contents such as pictures, videos, and texts and providing more personalized experiences for individuals. However, DNN models require significant amounts of computational power. Moreover, improving the security, robustness, interpretability, and fairness of the DNN models requires even more computational power. The project investigated a new direction to improve the efficiency of DNNs while still maintaining high accuracy by leveraging characteristics that are specific to individual inputs at run-time. The new technologies developed from this project has a potential to enable DNNs to be more widely deployed even in resource-constrained devices and also reduce the costs of improving robustness and security of DNN models.&nbsp;</span></p>\n<p dir=\"ltr\"><span>The project developed a set of new dynamic run-time optimization techniques, which can significantly improve the efficiency of DNNs. For DNN inference, which makes a prediction or generates content using a DNN model, the project found that the cost of computation can be significantly reduced by carefully adopting single-bit (binary) operations instead of traditional floating-point operations on multi-bit (for example, 32-bit) values. Surprisingly, this project showed that the accuracy of DNN models can be maintained even with single-bit operations. For example, FracBNN introduced an accurate and efficient binary neural network (BNN) architecture through dynamic quantization, which automatically chooses the number of bits needed for different parts of the DNN for individual inputs. PokeBNN further improved the accuracy-efficiency trade-off through new binary convolutions and careful design space explorations. Finally, this project showed that binarization can be applied to Transformer models in machine translation (MT) to significantly reduce the size of the model while maintaining the quality of floating-point models. For the first time, these results showed that binarized models can match the accuracy of floating-point models for both computer vision and natural language processing.</span></p>\n<p dir=\"ltr\"><span>In addition to binarization, this project also found that dynamic optimizations can significantly reduce the cost of improving robustness and security of machine learning. Leveraging the observation that only a small subset of training examples are important in improving the robustness of a model, BulletTrain significantly improved training time to make models more robust against both malicious and corrupted inputs. The project also led to development of efficient hardware-based protection for DNN models. GuardNN and MGX showed that DNN models can be run inside a secure accelerator with almost no overhead by carefully optimizing memory encryption and verification techniques based on a DNN model&rsquo;s access pattern. Similarly, we also showed that the protection overhead of running a DNN model inside a CPU-based trusted execution environment (TEE) can be significantly improved through an algorithm-protection co-design.</span></p>\n<p dir=\"ltr\"><span>For broader impacts, this project trained graduate (PhD and MEng) and undergraduate students, including several from underrepresented minority groups. The project disseminated its research outcomes through publications, external talks, and multiple open-source ML models. It also contributed to graduate-level teaching materials and diversity initiatives at Cornell University.</span></p>\n</span></p><br>\n<p>\n Last Modified: 10/17/2024<br>\nModified by: Gookwon&nbsp;E&nbsp;Suh</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n\n\n\nDeep neural networks (DNNs) are reshaping many aspects of our lives by enabling computers to better understand/generate contents such as pictures, videos, and texts and providing more personalized experiences for individuals. However, DNN models require significant amounts of computational power. Moreover, improving the security, robustness, interpretability, and fairness of the DNN models requires even more computational power. The project investigated a new direction to improve the efficiency of DNNs while still maintaining high accuracy by leveraging characteristics that are specific to individual inputs at run-time. The new technologies developed from this project has a potential to enable DNNs to be more widely deployed even in resource-constrained devices and also reduce the costs of improving robustness and security of DNN models.\n\n\nThe project developed a set of new dynamic run-time optimization techniques, which can significantly improve the efficiency of DNNs. For DNN inference, which makes a prediction or generates content using a DNN model, the project found that the cost of computation can be significantly reduced by carefully adopting single-bit (binary) operations instead of traditional floating-point operations on multi-bit (for example, 32-bit) values. Surprisingly, this project showed that the accuracy of DNN models can be maintained even with single-bit operations. For example, FracBNN introduced an accurate and efficient binary neural network (BNN) architecture through dynamic quantization, which automatically chooses the number of bits needed for different parts of the DNN for individual inputs. PokeBNN further improved the accuracy-efficiency trade-off through new binary convolutions and careful design space explorations. Finally, this project showed that binarization can be applied to Transformer models in machine translation (MT) to significantly reduce the size of the model while maintaining the quality of floating-point models. For the first time, these results showed that binarized models can match the accuracy of floating-point models for both computer vision and natural language processing.\n\n\nIn addition to binarization, this project also found that dynamic optimizations can significantly reduce the cost of improving robustness and security of machine learning. Leveraging the observation that only a small subset of training examples are important in improving the robustness of a model, BulletTrain significantly improved training time to make models more robust against both malicious and corrupted inputs. The project also led to development of efficient hardware-based protection for DNN models. GuardNN and MGX showed that DNN models can be run inside a secure accelerator with almost no overhead by carefully optimizing memory encryption and verification techniques based on a DNN models access pattern. Similarly, we also showed that the protection overhead of running a DNN model inside a CPU-based trusted execution environment (TEE) can be significantly improved through an algorithm-protection co-design.\n\n\nFor broader impacts, this project trained graduate (PhD and MEng) and undergraduate students, including several from underrepresented minority groups. The project disseminated its research outcomes through publications, external talks, and multiple open-source ML models. It also contributed to graduate-level teaching materials and diversity initiatives at Cornell University.\n\t\t\t\t\tLast Modified: 10/17/2024\n\n\t\t\t\t\tSubmitted by: GookwonESuh\n"
 }
}