{
 "awd_id": "2007733",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CNS Core: Small: Caching with Delayed Hits",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2020-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 499998.0,
 "awd_amount": 515998.0,
 "awd_min_amd_letter_date": "2020-07-08",
 "awd_max_amd_letter_date": "2021-05-19",
 "awd_abstract_narration": "Caches are responsible for storing data close to where computer systems access them in order to make things faster.  For example, when a user accesses a website, the web browser first checks the cache to see if the webpage files are already there; if not, the cache goes to the website servers, which takes longer.  Unfortunately, caches are small and don\u2019t have room to store everything.  In order to make systems faster, this project\u2019s goal is to decide what to store in the cache while accounting for \"delayed hits\", which occur when multiple requests happen for the same data back-to-back.\r\n\r\nThis project will explore the impact of delayed hits on cache performance. Delayed hits occur when a request \"misses\" in the cache, and a second request occurs for the same object before the first request has returned from the backing store. The second hit does not have equal latency to a true \"hit\" nor a true \"miss\". Because caches assume that requests result in either a hit or a miss, caches do not achieve the best possible latency. This project will explore new caching algorithms to achieve better latency by taking delayed hits into account.\r\n\r\nThe technical impact of this project will be to improve latencies for a broad range of computer systems that rely on caches, from key-value stores in data centers to web caches.  Systems with very long latencies will benefit the most, leading to the hypothesis that one will see strong benefits for web caches in Internet-underserved regions which may be hundreds of miles from their nearest data center.  This project will also impact education and broaden participation in computing by including undergraduate researchers in the research process.\r\n\r\nAll simulators, scripts, and analysis resulting from this work will be uploaded to public repositories (http://www.github.com/cmu-snap) where they may be accessed by the public indefinitely.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Justine",
   "pi_last_name": "Sherry",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Justine Sherry",
   "pi_email_addr": "justines@andrew.cmu.edu",
   "nsf_id": "000728919",
   "pi_start_date": "2020-07-08",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Weina",
   "pi_last_name": "Wang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Weina Wang",
   "pi_email_addr": "weinaw@cs.cmu.edu",
   "nsf_id": "000800768",
   "pi_start_date": "2020-07-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie Mellon University",
  "perf_str_addr": "5000 Forbes Avenue",
  "perf_city_name": "Pittsburgh",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133815",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 499998.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p dir=\"ltr\"><span>Caches are computer systems which store data closer to users and clients that want to access it. By keeping data closer to users, caches make systems such as web sites and computer processors faster. However, caches cannot store every piece of data users want to access because they have a limited amount of storage space. Hence, researchers have invested significant study into&nbsp;</span><span>caching algorithms</span><span>&nbsp;which determine which data to keep in the cache, and which data to store elsewhere. Typically, researchers study caching algorithms by focusing on &ldquo;hit rates&rdquo; (how many requests to the cache result in an access to an object that&nbsp;</span><span>is</span><span>&nbsp;in the cache) and &ldquo;miss rates&rdquo; (how many requests result in an access to the object which&nbsp;</span><span>is not</span><span>&nbsp;in the cache, and hence must be requested from further away).&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>In this study, we explored a surprisingly under-analyzed aspect of caching. What happens when a request for an object that is&nbsp;</span><span>not</span><span>&nbsp;in the cache occurs, and then a request for the&nbsp;</span><span>same object</span><span>&nbsp;comes shortly thereafter? This second request does not have to wait as long as a true &ldquo;miss&rdquo; for the object, since the object is already on its way to the cache. But, it is not as fast as a hit because the object is not in the cache, yet, when the request occurs. We call these &ldquo;in between&rdquo; outcomes&nbsp;</span><span>delayed hits.</span><span>&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>Our key results included new caching algorithms that are aware of delayed hits, which are able to access data 12-40% faster than traditional caching algorithms. However, in the context of &ldquo;hierarchical&rdquo; caches (in which many caches are used together) our algorithms provided little improvement based on the state of the art. We also explored fundamental limits of perfect caching, and explored new mathematical techniques such as Palm Calculus which improved our understanding and analysis of cache performance.&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>Our research promoted national objectives of advancing national technological competitiveness by improving our understanding of caching, a fundamental technology which underlies much of the American tech industry. The project also cultivated an equitable STEM education, engagement, and workforce ecosystem by including trainees in the research project, including PhD students, master&rsquo;s students, and bachelor&rsquo;s students from a range of American institutions and backgrounds.</span></p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 01/29/2024<br>\nModified by: Justine&nbsp;Sherry</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nCaches are computer systems which store data closer to users and clients that want to access it. By keeping data closer to users, caches make systems such as web sites and computer processors faster. However, caches cannot store every piece of data users want to access because they have a limited amount of storage space. Hence, researchers have invested significant study intocaching algorithmswhich determine which data to keep in the cache, and which data to store elsewhere. Typically, researchers study caching algorithms by focusing on hit rates (how many requests to the cache result in an access to an object thatisin the cache) and miss rates (how many requests result in an access to the object whichis notin the cache, and hence must be requested from further away).\n\n\n\n\n\nIn this study, we explored a surprisingly under-analyzed aspect of caching. What happens when a request for an object that isnotin the cache occurs, and then a request for thesame objectcomes shortly thereafter? This second request does not have to wait as long as a true miss for the object, since the object is already on its way to the cache. But, it is not as fast as a hit because the object is not in the cache, yet, when the request occurs. We call these in between outcomesdelayed hits.\n\n\n\n\n\nOur key results included new caching algorithms that are aware of delayed hits, which are able to access data 12-40% faster than traditional caching algorithms. However, in the context of hierarchical caches (in which many caches are used together) our algorithms provided little improvement based on the state of the art. We also explored fundamental limits of perfect caching, and explored new mathematical techniques such as Palm Calculus which improved our understanding and analysis of cache performance.\n\n\n\n\n\nOur research promoted national objectives of advancing national technological competitiveness by improving our understanding of caching, a fundamental technology which underlies much of the American tech industry. The project also cultivated an equitable STEM education, engagement, and workforce ecosystem by including trainees in the research project, including PhD students, masters students, and bachelors students from a range of American institutions and backgrounds.\n\n\n\t\t\t\t\tLast Modified: 01/29/2024\n\n\t\t\t\t\tSubmitted by: JustineSherry\n"
 }
}