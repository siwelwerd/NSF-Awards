{
 "awd_id": "1948489",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII: SaTC: Simplification of Mixed Boolean-Arithmetic Obfuscated Expression",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2020-05-01",
 "awd_exp_date": "2023-04-30",
 "tot_intn_awd_amt": 174982.0,
 "awd_amount": 174982.0,
 "awd_min_amd_letter_date": "2020-03-05",
 "awd_max_amd_letter_date": "2020-03-05",
 "awd_abstract_narration": "Software obfuscation is a transformation procedure to make a program difficult to understand, but still preserves all of the program's original behavior. Mixed-Boolean-Arithmetic (MBA) obfuscation is a powerful and efficient obfuscation method. It transforms simple calculations to very complex expressions with mixed Boolean and arithmetic operators. Since many malware developers have adopted obfuscation techniques to hide malware from detection, analyzing obfuscated programs plays a crucial role in modern software security. This project seeks to effectively reverse MBA obfuscation result, which means to recover the original program logic from an obfuscated program produced by MBA transformation.\r\n\r\nThe objective of this project is to unveil the theoretical and practical attributes of MBA obfuscation. This research reveals the undiscovered fundamental weakness of MBA obfuscation and consequently challenges the existing design of MBA obfuscation. The research tasks include: 1) developing an arithmetic-based simplification method to reverse normal MBA obfuscation; 2) simplifying multi-granularity MBA obfuscation; and 3) reducing generic non-linear MBA expression. This project will advance human knowledge about MBA de-obfuscation and produce practical MBA reverse analysis tools.\r\n\r\nThe project will enable broader adoption of formal methods in security analysis applications and inspire more interdisciplinary research across programming languages and software security. The developed methods and data set will be publicly available. Besides, this project will facilitate the development of novel educational tools to enhance several current courses at The University of New Hampshire (UNH). The minority students and under-served populations will be engaged in both research and extracurricular activities (such as Capture-the-Flag competition) to participate in cutting-edge cyber-security research.\r\n\r\nSource code, documentation, experimental results, and scholarly publications, will be managed using the distributed version control system Git. New curriculum materials will be organized by the course management system at UNH. A local repository copy will be stored in the backup servers at UNH SoftSec Group. Data will be retained for at least three years beyond the award period. The scholarly publications, presentations, and open-source code will be available on the homepage (https://www.cs.unh.edu/~dxu).\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Dongpeng",
   "pi_last_name": "Xu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Dongpeng Xu",
   "pi_email_addr": "dongpeng.xu@unh.edu",
   "nsf_id": "000791489",
   "pi_start_date": "2020-03-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of New Hampshire",
  "inst_street_address": "51 COLLEGE RD",
  "inst_street_address_2": "BLDG 107",
  "inst_city_name": "DURHAM",
  "inst_state_code": "NH",
  "inst_state_name": "New Hampshire",
  "inst_phone_num": "6038622172",
  "inst_zip_code": "038242620",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "NH01",
  "org_lgl_bus_name": "UNIVERSITY SYSTEM OF NEW HAMPSHIRE",
  "org_prnt_uei_num": "",
  "org_uei_num": "GBNGC495XA67"
 },
 "perf_inst": {
  "perf_inst_name": "University of New Hampshire",
  "perf_str_addr": "51 College Road",
  "perf_city_name": "Durham",
  "perf_st_code": "NH",
  "perf_st_name": "New Hampshire",
  "perf_zip_code": "038242620",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "NH01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 174982.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Software obfuscation is a process of transforming a program in such a way that it becomes challenging to comprehend, while still retaining the program's original functionality. As obfuscation techniques have been widely adopted by malware developers to conceal malicious code and evade detection, the analysis of obfuscated programs plays a vital role in modern software security. One emerging obfuscation method is Mixed-Boolean-Arithmetic (MBA) transformation, which converts simple calculations into highly intricate math formulas, incorporating both boolean and arithmetic operators. This project have successfully produced a series of ground-breaking techniques to analyze programs obfuscated by MBA transformation.</p>\n<p><br />First, we demystify the underlying mechanism of MBA obfuscation. Our in-depth study reveals a hidden two-way transformation feature 1-bit and n-bit variables. We exploit this feature and develop a viable solution to efficiently deobfuscate code with MBA obfuscation. The key insight is that MBA transformations behave in the same way on 1-bit and n-bit variables. We have implemented this idea as an open-source prototype, named MBA-Blast, and evaluated it on a comprehensive dataset with about 10,000 MBA expressions and real-world binary code. Compared with existing work, MBA-Blast is the most generic and efficient MBA deobfuscation technique; it has a solid theoretical underpinning, as well as, the highest success rate with negligible overhead.</p>\n<p>Second, we scrutinize solvers' performance on solving different categories of MBA expressions. We observe that solvers can handle simple linear MBA expressions, but facing a severe performance slowdown when solving complex linear and non-linear MBA expressions. The root cause is that complex MBA expressions break the reduction laws for pure arithmetic or bitwise computation. To boost solvers' performance, we propose a semantic-preserving transformation to reduce the mixing degree of bitwise and arithmetic operations. We first calculate a signature vector based on the truth table extracted from an MBA expression, which captures the complete MBA semantics. Next, we generate a simpler MBA expression from the signature vector. Our large-scale evaluation on 3000 complex MBA equations shows that our technique significantly boost modern solvers performance on solving MBA formulas.</p>\n<p>Third, we proposed a graph-to-sequence neural network, which can effectively learn the hierarchical information of graphs inputs to solve mathematics and speculate answers. Mathematical equations are represented by graphs with syntax analysis. The graph structure exposes the relations between variables and operators while preserving the expressions semantics. A complete experiment incorporating four classes of mathematical tasks and three baselines is built to conduct a comprehensive analysis. The results show that our method outperforms others in hidden information learning and mathematics resolving.</p>\n<p>This project output helps the GenCyber 2020, a summer cybersecurity camp for students and teachers at the K-12 level. The project content is used in the undergraduate and graduate courses in the University of New Hampshire.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/07/2023<br>\n\t\t\t\t\tModified by: Dongpeng&nbsp;Xu</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nSoftware obfuscation is a process of transforming a program in such a way that it becomes challenging to comprehend, while still retaining the program's original functionality. As obfuscation techniques have been widely adopted by malware developers to conceal malicious code and evade detection, the analysis of obfuscated programs plays a vital role in modern software security. One emerging obfuscation method is Mixed-Boolean-Arithmetic (MBA) transformation, which converts simple calculations into highly intricate math formulas, incorporating both boolean and arithmetic operators. This project have successfully produced a series of ground-breaking techniques to analyze programs obfuscated by MBA transformation.\n\n\nFirst, we demystify the underlying mechanism of MBA obfuscation. Our in-depth study reveals a hidden two-way transformation feature 1-bit and n-bit variables. We exploit this feature and develop a viable solution to efficiently deobfuscate code with MBA obfuscation. The key insight is that MBA transformations behave in the same way on 1-bit and n-bit variables. We have implemented this idea as an open-source prototype, named MBA-Blast, and evaluated it on a comprehensive dataset with about 10,000 MBA expressions and real-world binary code. Compared with existing work, MBA-Blast is the most generic and efficient MBA deobfuscation technique; it has a solid theoretical underpinning, as well as, the highest success rate with negligible overhead.\n\nSecond, we scrutinize solvers' performance on solving different categories of MBA expressions. We observe that solvers can handle simple linear MBA expressions, but facing a severe performance slowdown when solving complex linear and non-linear MBA expressions. The root cause is that complex MBA expressions break the reduction laws for pure arithmetic or bitwise computation. To boost solvers' performance, we propose a semantic-preserving transformation to reduce the mixing degree of bitwise and arithmetic operations. We first calculate a signature vector based on the truth table extracted from an MBA expression, which captures the complete MBA semantics. Next, we generate a simpler MBA expression from the signature vector. Our large-scale evaluation on 3000 complex MBA equations shows that our technique significantly boost modern solvers performance on solving MBA formulas.\n\nThird, we proposed a graph-to-sequence neural network, which can effectively learn the hierarchical information of graphs inputs to solve mathematics and speculate answers. Mathematical equations are represented by graphs with syntax analysis. The graph structure exposes the relations between variables and operators while preserving the expressions semantics. A complete experiment incorporating four classes of mathematical tasks and three baselines is built to conduct a comprehensive analysis. The results show that our method outperforms others in hidden information learning and mathematics resolving.\n\nThis project output helps the GenCyber 2020, a summer cybersecurity camp for students and teachers at the K-12 level. The project content is used in the undergraduate and graduate courses in the University of New Hampshire.\n\n\t\t\t\t\tLast Modified: 08/07/2023\n\n\t\t\t\t\tSubmitted by: Dongpeng Xu"
 }
}