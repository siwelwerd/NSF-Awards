{
 "awd_id": "1954327",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TWC: Small: Benchmarking Testing Methods for Access Control Policies",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2019-09-01",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 285157.0,
 "awd_amount": 285157.0,
 "awd_min_amd_letter_date": "2019-10-28",
 "awd_max_amd_letter_date": "2019-10-28",
 "awd_abstract_narration": "Access control policies specify which users may perform which actions on which resources within which environments.  Defective policies may have serious impacts, allowing unintended access (e.g., bank account withdrawals by a stranger) or preventing critical legitimate access (e.g., a doctor cannot view her patient's x-ray).  As computer systems become more complex, policy defects have become more common. However, existing testing methods for detecting faults in access control policies have not been very successful and there is no explanation for why they are unable to detect a majority of faults. This project is investigating the inherent strengths, limitations, and cost-effectiveness of existing testing methods for access control policies. The results of this project will provide essential guidelines for planning testing efforts and selecting appropriate testing methods.\r\n\r\nThe project focuses on access control policies expressed in the XACML language.  The project is formalizing fault detection conditions that test cases must satisfy in order to detect specific types of access control faults. These conditions consist of reachability constraints, necessity constraints, and propagation constraints of various faults in XACML policies. They are used to determine the fault detection ability of a given testing method by evaluating whether or not its test cases satisfy the fault detection conditions. Based on the collective fault detection conditions of fault groups, the project is developing a method for generating optimal test suites using an efficient constraint solver. The optimal test suites are used to quantitatively measure cost-effectiveness levels of other testing methods in terms of the ratio between the number of faults detected (i.e., effectiveness) and the size of test suite generated (i.e., cost).  Thus, the project is a study of benchmarking testing methods for access control policies.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Dianxiang",
   "pi_last_name": "Xu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Dianxiang Xu",
   "pi_email_addr": "dxu@umkc.edu",
   "nsf_id": "000483704",
   "pi_start_date": "2019-10-28",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Missouri-Kansas City",
  "inst_street_address": "118 UNIVERSITY HALL",
  "inst_street_address_2": "",
  "inst_city_name": "COLUMBIA",
  "inst_state_code": "MO",
  "inst_state_name": "Missouri",
  "inst_phone_num": "8162355839",
  "inst_zip_code": "652113020",
  "inst_country_name": "United States",
  "cong_dist_code": "03",
  "st_cong_dist_code": "MO03",
  "org_lgl_bus_name": "THE CURATORS OF THE UNIVERSITY OF MISSOURI",
  "org_prnt_uei_num": "",
  "org_uei_num": "J9CDGR596MN3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Missouri-Kansas City",
  "perf_str_addr": "",
  "perf_city_name": "Kansas City",
  "perf_st_code": "MO",
  "perf_st_name": "Missouri",
  "perf_zip_code": "641102499",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "MO05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 285157.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Broken access control remains one of the most critical security concerns. It is challenging to enforce access control policies correctly because they have become increasingly complex. As an important approach to the security assurance of access control policies, policy testing aims to find errors in a policy by running it with a test suite (i.e., a set of access requests) and determining if the corresponding access decisions are correct. This project focuses on the foundational issues of testing attribute-based access control policies in the XACML standard. It has: (a) formulated seven test coverage criteria of XACML policies that measure the extent to which a test suite exercises an XACML policy. The quantitative evaluation with various policies shows that the test suites satisfying different coverage criteria have a varying fault (error)-detection capability. (b) formalized the detection conditions of faults represented by policy mutants. The detection condition of a fault captures the sufficient and necessary condition that a test case must satisfy to find the fault. (c) developed algorithms for generating test cases by solving the fault-detection conditions of policy mutants with a constraint-solver. These tests can determine whether the hypothesized fault in each mutant is present or absent in the given policy. They form a near-optimal test suite for the policy. (d) qualitatively evaluated the fault-detection capabilities of five coverage-based test generation methods by the formalized fault detection conditions. The evaluation results show that each method can never reveal certain faults while detecting other types. (e) implemented the test generation methods in a publicly available open-source tool. The above research results have led to 6 peer-reviewed publications, one book chapter, and an open-source tool; One publication received the best paper award of the ACM Symposium on Access Control Models and Technologies, the premier conference on access control. The research results have also been integrated into a textbook. The project has involved four Ph.D. students, three MS students, and three undergraduate students. One Ph.D. graduate has started an academic career in cybersecurity, and the undergraduate students continued to pursue graduate studies.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/01/2022<br>\n\t\t\t\t\tModified by: Dianxiang&nbsp;Xu</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nBroken access control remains one of the most critical security concerns. It is challenging to enforce access control policies correctly because they have become increasingly complex. As an important approach to the security assurance of access control policies, policy testing aims to find errors in a policy by running it with a test suite (i.e., a set of access requests) and determining if the corresponding access decisions are correct. This project focuses on the foundational issues of testing attribute-based access control policies in the XACML standard. It has: (a) formulated seven test coverage criteria of XACML policies that measure the extent to which a test suite exercises an XACML policy. The quantitative evaluation with various policies shows that the test suites satisfying different coverage criteria have a varying fault (error)-detection capability. (b) formalized the detection conditions of faults represented by policy mutants. The detection condition of a fault captures the sufficient and necessary condition that a test case must satisfy to find the fault. (c) developed algorithms for generating test cases by solving the fault-detection conditions of policy mutants with a constraint-solver. These tests can determine whether the hypothesized fault in each mutant is present or absent in the given policy. They form a near-optimal test suite for the policy. (d) qualitatively evaluated the fault-detection capabilities of five coverage-based test generation methods by the formalized fault detection conditions. The evaluation results show that each method can never reveal certain faults while detecting other types. (e) implemented the test generation methods in a publicly available open-source tool. The above research results have led to 6 peer-reviewed publications, one book chapter, and an open-source tool; One publication received the best paper award of the ACM Symposium on Access Control Models and Technologies, the premier conference on access control. The research results have also been integrated into a textbook. The project has involved four Ph.D. students, three MS students, and three undergraduate students. One Ph.D. graduate has started an academic career in cybersecurity, and the undergraduate students continued to pursue graduate studies.\n\n \n\n\t\t\t\t\tLast Modified: 10/01/2022\n\n\t\t\t\t\tSubmitted by: Dianxiang Xu"
 }
}