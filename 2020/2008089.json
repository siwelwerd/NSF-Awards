{
 "awd_id": "2008089",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CHS: SMALL: Collaborative Research:  Adaptive Development Environments: Modeling and Supporting Cognitive Styles of Software Developers",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032928832",
 "po_email": "dcosley@nsf.gov",
 "po_sign_block_name": "Dan Cosley",
 "awd_eff_date": "2020-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 250000.0,
 "awd_amount": 250000.0,
 "awd_min_amd_letter_date": "2020-08-17",
 "awd_max_amd_letter_date": "2020-10-19",
 "awd_abstract_narration": "This research will investigate mechanisms to seamlessly support the different cognitive styles and information needs of software developers, such that development environments can model the developers' behavior and adapt to their individual needs.  Software development is a notoriously complex endeavor that requires developers to use an environment where information is fragmented across different tools and repositories. Although integrated development environments may help, they are often inadequate in supporting developers' information needs.  Major barriers are caused by development environments not adapting to the developers' cognitive styles and information needs.  This project will advance the knowledge of software developers' behavior and transform software development tools to be more efficient and more inclusive to a wider population of software developers. It also addresses a fundamental issue concerning broader participation, that of individual differences in problem solving. Models and tools that accommodate these individual differences may help level the playing field. \r\n\r\nThe methodology involves four stages: (1) conduct empirical studies to understand developers' information needs and cognitive styles, (2) build predictive models of developer behavior based on their cognitive styles, (3) create development environments that adapt to support developers' cognitive styles, and (4) evaluate the effectiveness of the predictive models and the adaptive environments. This work will generate a deep understanding of the impact of cognitive styles on how developers learn and make sense of the development history to place their work in the context of past and ongoing changes. It is novel in providing an integrated perspective on the broader set of history explorations in which programmers engage when they are programming as well as in leading to empirically validated predictive models that not only model how development activities are influenced by differences in cognitive styles, but also by the development task at hand.  Key goals include the design and evaluation of a novel environment that not only allows developers to seamlessly explore different aspects of the development histories, but also adapts to support the individual needs of a developer. Extensive curated versions of the collected data will be developed and shared with the scientific community to promote additional research into the topic.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Anita",
   "pi_last_name": "Sarma",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Anita Sarma",
   "pi_email_addr": "anita.sarma@oregonstate.edu",
   "nsf_id": "000518767",
   "pi_start_date": "2020-08-17",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Oregon State University",
  "inst_street_address": "1500 SW JEFFERSON AVE",
  "inst_street_address_2": "",
  "inst_city_name": "CORVALLIS",
  "inst_state_code": "OR",
  "inst_state_name": "Oregon",
  "inst_phone_num": "5417374933",
  "inst_zip_code": "973318655",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "OR04",
  "org_lgl_bus_name": "OREGON STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "MZ4DYXE1SL98"
 },
 "perf_inst": {
  "perf_inst_name": "Oregon State University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "OR",
  "perf_st_name": "Oregon",
  "perf_zip_code": "973318507",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "OR04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736700",
   "pgm_ele_name": "HCC-Human-Centered Computing"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7367",
   "pgm_ref_txt": "Cyber-Human Systems"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 250000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-a396ad3d-7fff-2866-953d-8a816be59452\"> </span></p>\n<p dir=\"ltr\"><span>The software development industry hinges on developers' designing and developing complex, non-trivial software systems. To do so, developers have to understand the complex project dependencies, the organizational goals, and the deployment context of their software. A critical part of this process is <em>problem solving</em>. While a plethora of development tools exist today, they all take the view of supporting an individual developer in their current programming task. However, understanding software development in terms of individual program activities is insufficient and limiting since it creates development tools that are siloed and fail to take a holistic view of programming. This in turn leads to inefficiencies and errors as programmers have to switch contexts and tools through their development task.&nbsp;</span></p>\n<p dir=\"ltr\"><span>In this project, we rethought programming as problem solving. We explored how different developers approach problem solving in programming differently. More specifically, we investigated to what extent development environments support different problem solving styles (e.g., learning style, information processing style) and identified fixes when development tools (e.g., GitHub interface) did not support the diverse problem solving styles. We then rethought what a development environment would look like through the design of a novel prototype (Synectic) that uses a cards metaphor to allow developers to find and curate different pieces of information needed for their development tasks and arrange all relevant cards as a side-by-side information visualization. This can significantly reduce context switching across different development tools that house different types of information. We also investigated the use of conversational agents (Newton) to aid in development tasks, especially for novices. The conversational agent was designed to understand the task context and be able to pull all the information needed by the developer contextualized to the task at hand and presented within the development environment, thereby minimizing context and tool switching.&nbsp;</span></p>\n<p dir=\"ltr\"><span>The impact of this work is more than just on research. The inventions from this research have been released as free, publicly available research prototypes. The project also directly trained </span><span>two doctoral and 2 masters students </span><span>and 4 undergraduate students on research. These students have now graduated with one (female PhD) student being a tenure track faculty while others have secured jobs in industry as software engineers.</span></p>\n<p dir=\"ltr\"><span>The ideas from this research will continue to impact products, services, education, and our workforce for years to come, helping in improving the developer productivity and efficiency.</span></p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 01/18/2024<br>\nModified by: Anita&nbsp;Sarma</p></div>\n<div class=\"porSideCol\"\n><div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls onePhoto\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2024/2008089/2008089_10698351_1704570095358_newton_UI--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2024/2008089/2008089_10698351_1704570095358_newton_UI--rgov-800width.jpg\" title=\"Newton Conversational Agent\"><img src=\"/por/images/Reports/POR/2024/2008089/2008089_10698351_1704570095358_newton_UI--rgov-66x44.jpg\" alt=\"Newton Conversational Agent\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Newton is a conversational agent created as a Jupyter Notebook plugin that provides contextualized responses (right panel) and code snippets based on the current state of programming in the editor (left panel).</div>\n<div class=\"imageCredit\">Emily Arteaga</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Anita&nbsp;Sarma\n<div class=\"imageTitle\">Newton Conversational Agent</div>\n</div>\n</li><li>\n<a href=\"/por/images/Reports/POR/2024/2008089/2008089_10698351_1705620056177_Synectic_vc--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2024/2008089/2008089_10698351_1705620056177_Synectic_vc--rgov-800width.jpg\" title=\"Synectic Development Environment\"><img src=\"/por/images/Reports/POR/2024/2008089/2008089_10698351_1705620056177_Synectic_vc--rgov-66x44.jpg\" alt=\"Synectic Development Environment\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Interactive cards, stacks, branch map, and a side-by-side comparison of different\nversions of the same card (code base) in Synectic development environment</div>\n<div class=\"imageCredit\">Nicholas Nelson</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Anita&nbsp;Sarma\n<div class=\"imageTitle\">Synectic Development Environment</div>\n</div>\n</li></ul>\n</div>\n</div></div>\n</div>\n",
  "por_txt_cntn": "\n\n \n\n\nThe software development industry hinges on developers' designing and developing complex, non-trivial software systems. To do so, developers have to understand the complex project dependencies, the organizational goals, and the deployment context of their software. A critical part of this process is problem solving. While a plethora of development tools exist today, they all take the view of supporting an individual developer in their current programming task. However, understanding software development in terms of individual program activities is insufficient and limiting since it creates development tools that are siloed and fail to take a holistic view of programming. This in turn leads to inefficiencies and errors as programmers have to switch contexts and tools through their development task.\n\n\nIn this project, we rethought programming as problem solving. We explored how different developers approach problem solving in programming differently. More specifically, we investigated to what extent development environments support different problem solving styles (e.g., learning style, information processing style) and identified fixes when development tools (e.g., GitHub interface) did not support the diverse problem solving styles. We then rethought what a development environment would look like through the design of a novel prototype (Synectic) that uses a cards metaphor to allow developers to find and curate different pieces of information needed for their development tasks and arrange all relevant cards as a side-by-side information visualization. This can significantly reduce context switching across different development tools that house different types of information. We also investigated the use of conversational agents (Newton) to aid in development tasks, especially for novices. The conversational agent was designed to understand the task context and be able to pull all the information needed by the developer contextualized to the task at hand and presented within the development environment, thereby minimizing context and tool switching.\n\n\nThe impact of this work is more than just on research. The inventions from this research have been released as free, publicly available research prototypes. The project also directly trained two doctoral and 2 masters students and 4 undergraduate students on research. These students have now graduated with one (female PhD) student being a tenure track faculty while others have secured jobs in industry as software engineers.\n\n\nThe ideas from this research will continue to impact products, services, education, and our workforce for years to come, helping in improving the developer productivity and efficiency.\n\n\n\t\t\t\t\tLast Modified: 01/18/2024\n\n\t\t\t\t\tSubmitted by: AnitaSarma\n"
 }
}