{
 "awd_id": "1946668",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Standard Research Grant: Beautiful Code: Aesthetic Discourse and Aesthetic Practice in a Software Organization",
 "cfda_num": "47.075",
 "org_code": "04050000",
 "po_phone": "7032925034",
 "po_email": "wbauchsp@nsf.gov",
 "po_sign_block_name": "Wenda K. Bauchspies",
 "awd_eff_date": "2020-03-01",
 "awd_exp_date": "2024-02-29",
 "tot_intn_awd_amt": 350925.0,
 "awd_amount": 350925.0,
 "awd_min_amd_letter_date": "2020-03-12",
 "awd_max_amd_letter_date": "2020-03-12",
 "awd_abstract_narration": "The actions of hundreds of software developers must be precisely coordinated if the software systems and web technologies that people use every day are to work effectively. Ensuring common orientations towards the development process is therefore crucial for developing and deploying new software applications. This project examines how multidisciplinary teams collaborate and coordinate around software systems to effectively develop new software. In addition to using the instrumental language of function and effectiveness to coordinate their work, software developers also discuss software, algorithms, and solutions as being \u201cbeautiful\u201d or \u201cugly\u201d to help them coordinate their design methods and problem-solving strategies. This project examines aesthetics as a mechanism of social control, organizational alignment, and professional signaling among software development teams in video game development where issues of aesthetics are paramount and where groups graphic artists, designers, computer programmers, and other professions must collaborate to craft a common sense of aesthetic practice within engineering production work. Broader impacts include graduate student training, using research materials to develop new university courses, and engaging in public conversations about values and design considerations of automated systems.\r\n\r\nThis project investigates how technical and nontechnical factors shape the outcomes of software engineering collaborations in a digital game studio in which software engineers and programmers work with artists and marketers in developing their products. The main goals are to understand how aesthetics emerge within the daily work practices of collaborative teams, how aesthetic evaluations act as mechanisms of social control and practices of categorization, and how different aesthetic schemas are brought into alignment across the various components of video game design work. Adopting an ethnographic approach, the investigators will engage in participant observation for eight months, four days a week, including formal meetings and informal interactions. Observations will be supplemented with informal conversations and ethnographic interviews focusing on career trajectory, aesthetics, and socializing practices among software developers. Overall, this project will contribute to basic social scientific understanding of engineering work and collaboration at the human-technology interface.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "SBE",
 "org_dir_long_name": "Directorate for Social, Behavioral and Economic Sciences",
 "div_abbr": "SES",
 "org_div_long_name": "Division of Social and Economic Sciences",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Paul",
   "pi_last_name": "Dourish",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Paul Dourish",
   "pi_email_addr": "jpd@ics.uci.edu",
   "nsf_id": "000488963",
   "pi_start_date": "2020-03-12",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Melissa",
   "pi_last_name": "Mazmanian",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Melissa Mazmanian",
   "pi_email_addr": "mmazmani@uci.edu",
   "nsf_id": "000544816",
   "pi_start_date": "2020-03-12",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Irvine",
  "inst_street_address": "160 ALDRICH HALL",
  "inst_street_address_2": "",
  "inst_city_name": "IRVINE",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "9498247295",
  "inst_zip_code": "926970001",
  "inst_country_name": "United States",
  "cong_dist_code": "47",
  "st_cong_dist_code": "CA47",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA IRVINE",
  "org_prnt_uei_num": "MJC5FCYQTPE6",
  "org_uei_num": "MJC5FCYQTPE6"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Irvine",
  "perf_str_addr": "Donald Bren Hall, Room 5086",
  "perf_city_name": "Irvine",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "926173213",
  "perf_ctry_code": "US",
  "perf_cong_dist": "47",
  "perf_st_cong_dist": "CA47",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "760300",
   "pgm_ele_name": "STS-Sci, Tech & Society"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9179",
   "pgm_ref_txt": "GRADUATE INVOLVEMENT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 350925.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span>This project investigated everyday work in a small game design company and led to deeper understanding of the interplay between work process technologies, aesthetic considerations, and norms around how work should be conducted in the production of software systems. In particular, we explored how programmers understand the aesthetic of a game and engage in distinct modes of work. These modes of work (shared occupational ideas and practices about how work should and can be performed) affect how they evaluate code, develop solutions, coordinate their work, and develop community in software teams and organizations.</span></p>\n<p><span>Several outcomes emerged from this project. Our ethnographic research, or long-term, immersive fieldwork, revealed nuanced insights about how technical software engineering and artistic concerns intersect in the everyday work of game development. Specifically, in order for makers of a game to develop a product they describe as &ldquo;fun,&rdquo; art and design has to align with game mechanics in a manner that integrates style, mood, random aspects of play (enabled by AI) and technical elements of the game. However, artists/designers have a different mode of work than programmers.</span></p>\n<p><span>We found that software engineers engaged in what we call an &ldquo;atomized mode of work,&rdquo; or a mode of work in which programming tasks are understood as modular. Thus, work can be easily broken down into bounded tasks assigned to individual engineers to be completed in a discrete chunks of time. Software engineers who work together in building the back end of the game are seen as interchangeable, and the goal of the team is to create a &ldquo;good enough&rdquo; working product that can be refined through iteration.</span></p>\n<p><span>Artists and designers, in contrast, engaged in what we call a &ldquo;holistic mode of work,&rdquo; or a mode of work that assumes that work cannot be easily separated into discrete tasks, those tasks cannot be completed in short interactive cycles, and do not fit into discrete chunks of time. Artists and designers assume that work tasks cannot be shared, and the contributions of an artist or designer are not interchangeable.</span></p>\n<p><span>In order for a company to create a technically advanced, fun, and artistically appealing game, holistic and atomized modes of work needed to operate in parallel and be brought into periodic strategic alignment. We found that when a company privileges one mode of work at the expense of the other, the emerging product fails to develop the key properties of &ldquo;fun.&rdquo;</span></p>\n<p><span>Further, when a company relies on popular software development management tools, such as Jira, they can fail to understand how such tools are designed to support only one mode of work. Jira, in particular, understands work in an atomized mode and is thus well designed for software development. In sum, when VC and management invest principally in supporting software engineers (who develop the technical aspects of a game) and ignore or sideline artistic and design aspects of a game, the resulting product loses the ephemeral but critical aspect of &ldquo;fun.&rdquo;</span></p>\n<p><span>The intellectual merit of this project lies in understanding the critical influence of modes of work on how software products are developed and the need for active management of multiple modes of work. Broader implications of this project are a deeper understanding into how existing software development tools can support certain modes of work but undermine others, leading to a challenge in developing tools that require strategic alignment between different modes of work.</span></p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 08/07/2024<br>\nModified by: Melissa&nbsp;Mazmanian</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThis project investigated everyday work in a small game design company and led to deeper understanding of the interplay between work process technologies, aesthetic considerations, and norms around how work should be conducted in the production of software systems. In particular, we explored how programmers understand the aesthetic of a game and engage in distinct modes of work. These modes of work (shared occupational ideas and practices about how work should and can be performed) affect how they evaluate code, develop solutions, coordinate their work, and develop community in software teams and organizations.\n\n\nSeveral outcomes emerged from this project. Our ethnographic research, or long-term, immersive fieldwork, revealed nuanced insights about how technical software engineering and artistic concerns intersect in the everyday work of game development. Specifically, in order for makers of a game to develop a product they describe as fun, art and design has to align with game mechanics in a manner that integrates style, mood, random aspects of play (enabled by AI) and technical elements of the game. However, artists/designers have a different mode of work than programmers.\n\n\nWe found that software engineers engaged in what we call an atomized mode of work, or a mode of work in which programming tasks are understood as modular. Thus, work can be easily broken down into bounded tasks assigned to individual engineers to be completed in a discrete chunks of time. Software engineers who work together in building the back end of the game are seen as interchangeable, and the goal of the team is to create a good enough working product that can be refined through iteration.\n\n\nArtists and designers, in contrast, engaged in what we call a holistic mode of work, or a mode of work that assumes that work cannot be easily separated into discrete tasks, those tasks cannot be completed in short interactive cycles, and do not fit into discrete chunks of time. Artists and designers assume that work tasks cannot be shared, and the contributions of an artist or designer are not interchangeable.\n\n\nIn order for a company to create a technically advanced, fun, and artistically appealing game, holistic and atomized modes of work needed to operate in parallel and be brought into periodic strategic alignment. We found that when a company privileges one mode of work at the expense of the other, the emerging product fails to develop the key properties of fun.\n\n\nFurther, when a company relies on popular software development management tools, such as Jira, they can fail to understand how such tools are designed to support only one mode of work. Jira, in particular, understands work in an atomized mode and is thus well designed for software development. In sum, when VC and management invest principally in supporting software engineers (who develop the technical aspects of a game) and ignore or sideline artistic and design aspects of a game, the resulting product loses the ephemeral but critical aspect of fun.\n\n\nThe intellectual merit of this project lies in understanding the critical influence of modes of work on how software products are developed and the need for active management of multiple modes of work. Broader implications of this project are a deeper understanding into how existing software development tools can support certain modes of work but undermine others, leading to a challenge in developing tools that require strategic alignment between different modes of work.\n\n\n\t\t\t\t\tLast Modified: 08/07/2024\n\n\t\t\t\t\tSubmitted by: MelissaMazmanian\n"
 }
}