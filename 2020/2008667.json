{
 "awd_id": "2008667",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: CNS CORE: Small: Scalable ACID Transactions for Persistent Memory Databases",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Jason Hallstrom",
 "awd_eff_date": "2020-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 214996.0,
 "awd_amount": 214996.0,
 "awd_min_amd_letter_date": "2020-08-13",
 "awd_max_amd_letter_date": "2020-10-19",
 "awd_abstract_narration": "This project addresses the inability of current database systems to keep up with the ever growing demands of applications that analyze and extract information from machine-generated data sets, such as Internet-of-Things sensors and machine-learning systems. Intuitively, doubling a system's computing resources should double the load that the system can process per unit of time, but that is not true of today's databases: beyond a fairly modest system size, adding more computing resources does not scale to proportionate gains in performance.  The key reason is that databases, to perform correctly, must limit concurrent access to some critical data structures: adding more resources increases competition for access to these data structures, creating a bottleneck for the system's performance.  This project introduces a key innovation towards scalable databases. It frees the database from the need, whenever a databases record is modified,  to  immediately update  range indexes---a common form of data organization in databases that tend to become  a hotspot when databases try to scale up their computing resources. To remove this bottleneck, this project develops a  new scalable interface: per-processor-core queues absorb index updates and merge them  in the shared range index data structures periodically, in the background. Eliminating synchronous updates to range indices does not weaken the database guarantees:  the standard correctness criterion of serializability is achieved by globally ordering transactional updates using multi-part timestamps derived from a system-wide clock; data durability is achieved by storing per-core queues in non-volatile memory;  and a new data structure ensures that reads performed on individual records return their most-recently committed value.\r\n\r\nDatabases are a critical component of modern planet-scale applications. By eliminating scalability bottlenecks and leveraging emerging non volatile memory technology, this project will dramatically reduce the cost to provision databases. In particular, a large fraction of operational cost in multi-billion-dollar data centers is spent on powering a growing number of servers. Improving the scalability of multiple processor cores will increase the density of database deployments, reducing drastically the number of servers required to provision a database: the savings can defer the need for new data centers and storage devices, as more useful work is achieved with existing servers, or reduce energy consumption for existing workloads. The work will also influence  the education of the next generation of database engineers. Proposed lecture and project materials will prepare students to identify scalable database designs when responding to future changes in hardware and application workloads.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Lorenzo",
   "pi_last_name": "Alvisi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Lorenzo Alvisi",
   "pi_email_addr": "la13@cornell.edu",
   "nsf_id": "000217257",
   "pi_start_date": "2020-08-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "107 Hoy Road",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148537501",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 214996.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-74fcd019-7fff-6905-43ef-728fb02d310a\"> </span></p>\n<p dir=\"ltr\"><span>This project focused on enhancing the scalability of modern database systems, with two main goals: 1) improving &nbsp;the performance and usability of persistent memory databases by developing solutions&nbsp;that can efficiently handle increasing data volumes and write-heavy workloads; and 2)&nbsp;<span>improving the performance &nbsp;of &nbsp;geo-replicated data stores under workloads, prevalent in real-world applications, &nbsp;where multiple transactions concurrently access the same data.</span></span></p>\n<p dir=\"ltr\"><span>A key milestone towards the first goal was the development of ScaleDB, a serializable in-memory relational database with SQL support, tailored for multi-core machines. A significant innovation within ScaleDB is the introduction of the \"indexlet\", a transformative construct for managing range indexes in databases. Indexlets enable asynchronous updates, allowing for more efficient write operations by reducing the bottlenecks typically associated with traditional indexing methods. Their design is particularly advantageous in write-heavy environments, enhancing performance and scalability. This innovation enables databases to efficiently scale with the increasing number of cores in contemporary hardware architectures, contributing significantly to the adaptability and responsiveness of persistent memory databases. Complementing the development of indexlets, ScaleDB introduces the asynchronous concurrency control (ACC) protocol. This protocol is pivotal in managing scalable serializable transactions, particularly in conjunction with indexlets. It ensures that database operations are efficiently processed, maintaining data consistency even under high workloads, which is critical for applications requiring real-time data processing and analysis.</span></p>\n<p dir=\"ltr\">A significant contribution towards the second goal was the development of Morty,&nbsp;<span id=\"docs-internal-guid-0bf42ba3-7fff-7389-e01b-2396de14bc51\"><span>&nbsp;a novel storage system that leverages the newly developed notion of conflict windows to capture the fundamental limits to the ability of conflicting transactions to execute concurrently while guaranteeing a correct outcome. Intuitively, transactions with overlapping conflict windows must not &nbsp;execute at the same time; Morty demonstrates that&nbsp;</span></span>&nbsp;restarting a transaction as soon as it detects that its conflict window overlaps with that of another transaction can shift conflict windows &nbsp;to minimize overlaps and significantly improve the number of transactions that can be successfully completed &nbsp;in a given time interval.</p>\n<p dir=\"ltr\"><span id=\"docs-internal-guid-0bf42ba3-7fff-7389-e01b-2396de14bc51\"><span>&nbsp;</span></span>The project's findings were widely disseminated through various channels. ScaleDB was presented at OSDI 2023 and Morty was published at Eurosys '23. Both were made available on Github. Other notable contributions include the publication of zIO and HeMem, both aimed at accelerating IO-intensive applications and improving memory management in big data applications. The project formed the basis for four Ph.D. theses and had a significant impact on teaching, with key concepts integrated in graduate-level courses.</p>\n<p dir=\"ltr\"><span>&nbsp;The project's success in addressing key challenges in the scalability of &nbsp;both in memory and geo-replicated data stores marks significant advancements in database design and implementation, with implications extending beyond academia into practical industry applications. The project lays a foundation for future research and development in database technologies, aligning with evolving hardware and software landscapes.</span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 02/12/2024<br>\nModified by: Lorenzo&nbsp;Alvisi</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n \n\n\nThis project focused on enhancing the scalability of modern database systems, with two main goals: 1) improving the performance and usability of persistent memory databases by developing solutionsthat can efficiently handle increasing data volumes and write-heavy workloads; and 2)improving the performance of geo-replicated data stores under workloads, prevalent in real-world applications, where multiple transactions concurrently access the same data.\n\n\nA key milestone towards the first goal was the development of ScaleDB, a serializable in-memory relational database with SQL support, tailored for multi-core machines. A significant innovation within ScaleDB is the introduction of the \"indexlet\", a transformative construct for managing range indexes in databases. Indexlets enable asynchronous updates, allowing for more efficient write operations by reducing the bottlenecks typically associated with traditional indexing methods. Their design is particularly advantageous in write-heavy environments, enhancing performance and scalability. This innovation enables databases to efficiently scale with the increasing number of cores in contemporary hardware architectures, contributing significantly to the adaptability and responsiveness of persistent memory databases. Complementing the development of indexlets, ScaleDB introduces the asynchronous concurrency control (ACC) protocol. This protocol is pivotal in managing scalable serializable transactions, particularly in conjunction with indexlets. It ensures that database operations are efficiently processed, maintaining data consistency even under high workloads, which is critical for applications requiring real-time data processing and analysis.\n\n\nA significant contribution towards the second goal was the development of Morty,a novel storage system that leverages the newly developed notion of conflict windows to capture the fundamental limits to the ability of conflicting transactions to execute concurrently while guaranteeing a correct outcome. Intuitively, transactions with overlapping conflict windows must not execute at the same time; Morty demonstrates thatrestarting a transaction as soon as it detects that its conflict window overlaps with that of another transaction can shift conflict windows to minimize overlaps and significantly improve the number of transactions that can be successfully completed in a given time interval.\n\n\nThe project's findings were widely disseminated through various channels. ScaleDB was presented at OSDI 2023 and Morty was published at Eurosys '23. Both were made available on Github. Other notable contributions include the publication of zIO and HeMem, both aimed at accelerating IO-intensive applications and improving memory management in big data applications. The project formed the basis for four Ph.D. theses and had a significant impact on teaching, with key concepts integrated in graduate-level courses.\n\n\nThe project's success in addressing key challenges in the scalability of both in memory and geo-replicated data stores marks significant advancements in database design and implementation, with implications extending beyond academia into practical industry applications. The project lays a foundation for future research and development in database technologies, aligning with evolving hardware and software landscapes.\n\n\n\n\n\n\n\n\n\t\t\t\t\tLast Modified: 02/12/2024\n\n\t\t\t\t\tSubmitted by: LorenzoAlvisi\n"
 }
}