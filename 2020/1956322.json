{
 "awd_id": "1956322",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CHS: Medium: Collaborative Research: Code demography: Addressing information needs at scale for programming interface users and designers",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032928832",
 "po_email": "dcosley@nsf.gov",
 "po_sign_block_name": "Dan Cosley",
 "awd_eff_date": "2020-10-01",
 "awd_exp_date": "2024-09-30",
 "tot_intn_awd_amt": 150000.0,
 "awd_amount": 150000.0,
 "awd_min_amd_letter_date": "2020-08-24",
 "awd_max_amd_letter_date": "2020-10-15",
 "awd_abstract_narration": "Society is undergoing a digital transformation. More and more aspects of life are touched by software. Programmers often write new software by combining pre-existing pieces of software in novel ways. These pre-existing pieces, called programming interfaces, are written by other programmers, to be reused. However, the creators of programming interfaces often do not know enough about how their work gets used by others. Users often face barriers in deciding which of a set of interfaces they should choose, and how to use them. This project will conduct studies to learn about the unmet needs of programmers and then create novel tools to support the design, comparison, and use of programming interfaces. For this investigation, the team will develop a software infrastructure that automatically analyzes and processes large sets of online code.\r\n\r\nThis research will deepen our understanding of unmet information needs of programming interface designers and users, and how these are reflected in community usage data. To address the unmet needs, the team will perform an iterative design process, developing novel tools, interaction techniques, and implications for helping developers understand the big picture of existing code repositories. This is expected to help make emergent software design choices within a community explicit, rather than implicit, and for improving code quality. The research is based on an approach called code demography: the study of recurring patterns in large code corpora. It will apply code demography to investigate: (1) how to use programming interfaces in a particular context; (2) how to design and evolve a programming interface; and (3) how to assess and select among multiple programming interfaces with similar capabilities.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Miryung",
   "pi_last_name": "Kim",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Miryung Kim",
   "pi_email_addr": "miryung@cs.ucla.edu",
   "nsf_id": "000676266",
   "pi_start_date": "2020-08-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Los Angeles",
  "inst_street_address": "10889 WILSHIRE BLVD STE 700",
  "inst_street_address_2": "",
  "inst_city_name": "LOS ANGELES",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "3107940102",
  "inst_zip_code": "900244200",
  "inst_country_name": "United States",
  "cong_dist_code": "36",
  "st_cong_dist_code": "CA36",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, LOS ANGELES",
  "org_prnt_uei_num": "",
  "org_uei_num": "RN64EPNH8JC6"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Los Angeles",
  "perf_str_addr": "404 Westwood Plaza",
  "perf_city_name": "Los Angeles",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "900951596",
  "perf_ctry_code": "US",
  "perf_cong_dist": "36",
  "perf_st_cong_dist": "CA36",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736700",
   "pgm_ele_name": "HCC-Human-Centered Computing"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7367",
   "pgm_ref_txt": "Cyber-Human Systems"
  },
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 150000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p dir=\"ltr\"><span>Programmers often write new software by combining pre-existing pieces of software in novel ways. These pre-existing pieces, called programming interfaces, are written by other programmers, to be reused. However, the creators of programming interfaces often do not know enough about how their work is used by others. Users often face barriers in deciding which of a set of interfaces they should choose, and how to use them.&nbsp;</span></p>\n<p dir=\"ltr\"><span>This project aims to explore and address the information needs of programming interface designers and users. Our focus is on processing, organizing, and visualizing community usage data to meet these needs. Toward this project goal, we took a three-pronged approach.&nbsp;</span></p>\n<ol>\n<li>A need finding study on data-driven API design with community usage data:&nbsp;We conducted an in-depth analysis of their design styles, design decisions, evaluation methods of API design, common issues of <a href=\"https://dl.acm.org/doi/10.1145/3313831.3376382\">API usability, and unmet information needs</a>. We then proposed several tool design implications for leveraging community usage data to address the unmet needs of API designers and enable them to make data-driven decisions.</li>\n<li>Concept annotated examples for library comparison:&nbsp;We investigated novel design and interaction support <a href=\"https://doi.org/10.1145/3526113.3545647\">ParaLib</a> to help assess different API packages in terms of provided functionality and ease of use. We designed a novel interface to support the comparison of many code examples across different programming languages and libraries by designing a new interaction method to annotate code examples with an associated concept name and for browsing and comparing code examples using concept annotation.</li>\n<li>Active learning based, interactive code search and pattern inference:&nbsp;We designed an interactive code search and pattern inference tool, called <a href=\"https://doi.org/10.1145/3597503.3639193\">SURF</a>, to assist developers in identifying similar code. SURF minimizes users' labeling effort while actively guiding them in understanding the implications of specific feature choices within constructed patterns. It provides insights into the global distribution of features, showing how each aligns with already labeled positive and negative instances and predicting how selecting a new feature might yield additional matches. Through \"what-if\" analysis, SURF contrasts how different feature choices impact the inclusion of instances across the broader population.</li>\n</ol>\n<p dir=\"ltr\"><span>The project at UCLA resulted in six publications in top conferences and journals, and it supported one PhD student and one postdoc researcher. The postdoc supported by this grant have gone on to become a tenure-track faculty member at University of Sydney. PI Miryung Kim delivered a keynote speech titled *\"Journey Through Searching Similar Code\"* at the </span><a href=\"https://www.dagstuhl.de/en/seminars/seminar-calendar/seminar-details/24172\"><span>Dagstuhl Seminar on Code Search</span></a><span>. Her keynote highlighted her research team&rsquo;s two decades of contributions to code search, with the SURF project serving as a focal point. The seminar brought together leading researchers from academia and industry, including participants from Google, Facebook, Microsoft, and JetBrains.</span></p>\n<p><br /><br /></p>\n<p dir=\"ltr\"><span>&nbsp;</span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 11/21/2024<br>\nModified by: Miryung&nbsp;Kim</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nProgrammers often write new software by combining pre-existing pieces of software in novel ways. These pre-existing pieces, called programming interfaces, are written by other programmers, to be reused. However, the creators of programming interfaces often do not know enough about how their work is used by others. Users often face barriers in deciding which of a set of interfaces they should choose, and how to use them.\n\n\nThis project aims to explore and address the information needs of programming interface designers and users. Our focus is on processing, organizing, and visualizing community usage data to meet these needs. Toward this project goal, we took a three-pronged approach.\n\nA need finding study on data-driven API design with community usage data:We conducted an in-depth analysis of their design styles, design decisions, evaluation methods of API design, common issues of API usability, and unmet information needs. We then proposed several tool design implications for leveraging community usage data to address the unmet needs of API designers and enable them to make data-driven decisions.\nConcept annotated examples for library comparison:We investigated novel design and interaction support ParaLib to help assess different API packages in terms of provided functionality and ease of use. We designed a novel interface to support the comparison of many code examples across different programming languages and libraries by designing a new interaction method to annotate code examples with an associated concept name and for browsing and comparing code examples using concept annotation.\nActive learning based, interactive code search and pattern inference:We designed an interactive code search and pattern inference tool, called SURF, to assist developers in identifying similar code. SURF minimizes users' labeling effort while actively guiding them in understanding the implications of specific feature choices within constructed patterns. It provides insights into the global distribution of features, showing how each aligns with already labeled positive and negative instances and predicting how selecting a new feature might yield additional matches. Through \"what-if\" analysis, SURF contrasts how different feature choices impact the inclusion of instances across the broader population.\n\n\n\nThe project at UCLA resulted in six publications in top conferences and journals, and it supported one PhD student and one postdoc researcher. The postdoc supported by this grant have gone on to become a tenure-track faculty member at University of Sydney. PI Miryung Kim delivered a keynote speech titled *\"Journey Through Searching Similar Code\"* at the Dagstuhl Seminar on Code Search. Her keynote highlighted her research teams two decades of contributions to code search, with the SURF project serving as a focal point. The seminar brought together leading researchers from academia and industry, including participants from Google, Facebook, Microsoft, and JetBrains.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tLast Modified: 11/21/2024\n\n\t\t\t\t\tSubmitted by: MiryungKim\n"
 }
}