{
 "awd_id": "1938909",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Optimal Scheduling of Parallelizable Jobs in Cloud Computing Environments",
 "cfda_num": "47.041",
 "org_code": "07030000",
 "po_phone": "7032922443",
 "po_email": "gaklutke@nsf.gov",
 "po_sign_block_name": "Georgia-Ann Klutke",
 "awd_eff_date": "2020-01-01",
 "awd_exp_date": "2022-12-31",
 "tot_intn_awd_amt": 549470.0,
 "awd_amount": 549470.0,
 "awd_min_amd_letter_date": "2019-12-19",
 "awd_max_amd_letter_date": "2019-12-19",
 "awd_abstract_narration": "This award will contribute to the advancement of national prosperity and economic welfare by deriving methods to improve response times for processing jobs in cloud computing environments.  Today, data centers of major companies and supercomputing centers are heavily occupied in processing machine learning jobs, where each job occupies multiple servers/cores in parallel.  While there is a long history on scheduling for serial jobs, less is known about parallel job scheduling, and existing heuristics perform poorly in the cloud computing environment.  This award will develop algorithms for efficiently allocating a finite number of servers across a set of parallelizable jobs.  Optimal scheduling is difficult because an individual parallel job receives decreasing marginal benefit from each additional server that it is allocated.  The PIs will develop new analytical methods to address this complex scheduling problem.  The results of this research are highly relevant to industry and will inform state-of-the-art cloud scheduling systems.  Algorithms, protocols, and experimental results will be disseminated via journal publications, online code and open access data repositories.  As part of this award, the PIs will provide outreach to middle school girls to increase exposure and skills in mathematics and computing, as well as training of both undergraduates and PhD students in the areas of parallel computing, scheduling, and queueing.\r\n\r\nThis award will support research on optimally allocating a finite number of servers across parallel jobs, so as to minimize mean flow time, mean slowdown, and related metrics. Motivated by real-world benchmarks and measurements, parallel jobs are modeled via a concave speedup function which specifies the speedup benefit to the job as a function of the number of servers which are allocated to it.  The research plan addresses a wide variety of situations, including the case where jobs have different speedup functions, where jobs have different priorities, where job sizes are not known a priori, and where jobs arrive over time.  Deriving optimal scheduling strategies will require the development of new analytic techniques to vastly reduce the search space of possible allocations and reveal the structure of the optimal solution.  Towards that goal, the award will develop a series of dimensionality reduction techniques, including a scale-free property, a size-invariant property, an online completion order property, a technique for trading off job sizes and different parallelization levels, and a parallel counterpart to the Gittins Index scheduling policy.  Results will be validated first via stochastic simulation and then via trace-driven simulation using traces from industry and supercomputing centers.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "ENG",
 "org_dir_long_name": "Directorate for Engineering",
 "div_abbr": "CMMI",
 "org_div_long_name": "Division of Civil, Mechanical, and Manufacturing Innovation",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Mor",
   "pi_last_name": "Harchol-Balter",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Mor Harchol-Balter",
   "pi_email_addr": "harchol@cs.cmu.edu",
   "nsf_id": "000201705",
   "pi_start_date": "2019-12-19",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Benjamin",
   "pi_last_name": "Moseley",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Benjamin J Moseley",
   "pi_email_addr": "moseleyb85@gmail.com",
   "nsf_id": "000671246",
   "pi_start_date": "2019-12-19",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133890",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "006Y00",
   "pgm_ele_name": "OE Operations Engineering"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "072E",
   "pgm_ref_txt": "NETWORKS & QUEUING SYSTEMS"
  },
  {
   "pgm_ref_code": "073E",
   "pgm_ref_txt": "OPTIMIZATION & DECISION MAKING"
  },
  {
   "pgm_ref_code": "5514",
   "pgm_ref_txt": "OPERATIONS RESEARCH"
  },
  {
   "pgm_ref_code": "8024",
   "pgm_ref_txt": "Complex Systems"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 549470.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p id=\"docs-internal-guid-f8d5038c-7fff-1226-9918-881fc20cf9d8\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">This project asks the timely question of how to schedule the parallel jobs found in cloud computing environments.&nbsp; Specifically, we ask how one should optimally allocate a limited number of servers across a stream of parallel jobs, so as to minimize the mean flow time across all jobs. Our jobs are characterized by a speedup function, whereby a job runs faster when allocated more servers, but the benefit of each additional server is depreciating (sublinear).</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">On the technical end, we developed optimal algorithms for scheduling parallel jobs and derived their analysis.&nbsp;&nbsp;&nbsp;</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">First, we considered the case where the scheduler has no information about jobs.&nbsp; Here we proved that the optimal scheduling policy is EQUI, which splits all servers equally among all jobs currently in the system.&nbsp;&nbsp;&nbsp;</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Second, we considered the case where all job sizes are known, but all jobs are present at the start. &nbsp; Here we developed the optimal policy, heSRPT, which is a high-efficiency (he) twist on the Shortest Remaining Processing Time (SRPT) policy. &nbsp; It turns out that standard SRPT is a very poor solution for parallel jobs with sublinear speedup functions because it allocates all servers to a single job.&nbsp; By contrast, our heSRPT policy gives every job some portion of the service capacity, but allocates more servers to the jobs with shorter remaining size.&nbsp;&nbsp;</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Third, we considered the very common setting where the jobs have different speedup functions, which are known to the scheduler.&nbsp; Specifically we assumed that some jobs are elastic (fully parallelizable, linear speedup function) while others are inelastic (sequential). &nbsp; In this setting, we found that, counter to intuition, the best scheduling policy is a policy which puts Inelastic jobs First (IF).&nbsp; By giving strict priority to the inelastic jobs, and deferring the elastic jobs, we are able to greatly increase the efficiency of the system and also obtain optimal response time in many settings.</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Finally, we began work on the setting where a job&rsquo;s speedup function changes over time.&nbsp; Here we found that a good scheduling policy is IFSRPT, which is a combination of IF and SRPT. &nbsp; We also began work on the setting where job sizes are not known a priori, but can be learned.</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">The project also produced several broader impacts. &nbsp; Six PhD students as well as five undergraduates were partially funded under this project. &nbsp; Three PhD students received their PhDs during the grant: one of these is now a tenure-track assistant professor at Cornell in the ORIE department and one is a tenure-track assistant professor at UNC-Chapel Hill in the Computer Science department. &nbsp; Over thirty peer-reviewed papers were produced during this grant, including five Best Paper or Best Student Paper Awards one of which was the 2022 George Nicholson Prize in OR.&nbsp; Several new courses were created during this project, including a course on teaching computer systems students how to apply performance modeling tools and a course on analytics for business.&nbsp; Additionally an undergraduate textbook was written during this grant, titled </span><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: italic; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Introduction to Probability for Computing</span><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">, which should be complete in the next year or so, and is being published by Cambridge University Press.&nbsp; The book will be available for free online, along with free teaching resources which have yet to be developed.&nbsp; The project also included substantial work on improving Diversity, Equity, and Inclusion (DEI).&nbsp; The PIs were heavily involved in a DEI committee to increase support for graduate student women, and also in the development of a new DEI course for graduate students.&nbsp; Finally, the PIs gave a total of six keynote talks during the course of this project to help disseminate their work. &nbsp; The work was also disseminated through collaboration with Google and Relational AI.</span></p>\n<p><br /><br /><br /><br /></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/10/2023<br>\n\t\t\t\t\tModified by: Mor&nbsp;Harchol-Balter</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "This project asks the timely question of how to schedule the parallel jobs found in cloud computing environments.  Specifically, we ask how one should optimally allocate a limited number of servers across a stream of parallel jobs, so as to minimize the mean flow time across all jobs. Our jobs are characterized by a speedup function, whereby a job runs faster when allocated more servers, but the benefit of each additional server is depreciating (sublinear).\n\n \nOn the technical end, we developed optimal algorithms for scheduling parallel jobs and derived their analysis.   \n\n \nFirst, we considered the case where the scheduler has no information about jobs.  Here we proved that the optimal scheduling policy is EQUI, which splits all servers equally among all jobs currently in the system.   \n\n \nSecond, we considered the case where all job sizes are known, but all jobs are present at the start.   Here we developed the optimal policy, heSRPT, which is a high-efficiency (he) twist on the Shortest Remaining Processing Time (SRPT) policy.   It turns out that standard SRPT is a very poor solution for parallel jobs with sublinear speedup functions because it allocates all servers to a single job.  By contrast, our heSRPT policy gives every job some portion of the service capacity, but allocates more servers to the jobs with shorter remaining size.  \n\n \nThird, we considered the very common setting where the jobs have different speedup functions, which are known to the scheduler.  Specifically we assumed that some jobs are elastic (fully parallelizable, linear speedup function) while others are inelastic (sequential).   In this setting, we found that, counter to intuition, the best scheduling policy is a policy which puts Inelastic jobs First (IF).  By giving strict priority to the inelastic jobs, and deferring the elastic jobs, we are able to greatly increase the efficiency of the system and also obtain optimal response time in many settings.\n\n \nFinally, we began work on the setting where a job\u2019s speedup function changes over time.  Here we found that a good scheduling policy is IFSRPT, which is a combination of IF and SRPT.   We also began work on the setting where job sizes are not known a priori, but can be learned.\n\n \nThe project also produced several broader impacts.   Six PhD students as well as five undergraduates were partially funded under this project.   Three PhD students received their PhDs during the grant: one of these is now a tenure-track assistant professor at Cornell in the ORIE department and one is a tenure-track assistant professor at UNC-Chapel Hill in the Computer Science department.   Over thirty peer-reviewed papers were produced during this grant, including five Best Paper or Best Student Paper Awards one of which was the 2022 George Nicholson Prize in OR.  Several new courses were created during this project, including a course on teaching computer systems students how to apply performance modeling tools and a course on analytics for business.  Additionally an undergraduate textbook was written during this grant, titled Introduction to Probability for Computing, which should be complete in the next year or so, and is being published by Cambridge University Press.  The book will be available for free online, along with free teaching resources which have yet to be developed.  The project also included substantial work on improving Diversity, Equity, and Inclusion (DEI).  The PIs were heavily involved in a DEI committee to increase support for graduate student women, and also in the development of a new DEI course for graduate students.  Finally, the PIs gave a total of six keynote talks during the course of this project to help disseminate their work.   The work was also disseminated through collaboration with Google and Relational AI.\n\n\n\n\n\n\n\n\t\t\t\t\tLast Modified: 02/10/2023\n\n\t\t\t\t\tSubmitted by: Mor Harchol-Balter"
 }
}