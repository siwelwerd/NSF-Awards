{
 "awd_id": "2016422",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CNS Core: Small:  Rethinking Runtime Power Management for Mobile System-on-a-Chip",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Alexander Jones",
 "awd_eff_date": "2020-01-01",
 "awd_exp_date": "2022-06-30",
 "tot_intn_awd_amt": 488719.0,
 "awd_amount": 520719.0,
 "awd_min_amd_letter_date": "2020-02-07",
 "awd_max_amd_letter_date": "2021-05-19",
 "awd_abstract_narration": "Runtime power management (PM) is concerned with putting idle components of a computer system into power-saving modes while the system is still serving its user.   Power management is increasingly important to the battery lifetime and thermal management of mobile systems whose computational heart, a system-on-a-chip (SoC), often integrates tens and hundreds of components and billions of transistors. Existing systems reply on device drivers for runtime PM.  A device driver is a software program that controls a particular type of hardware device attached to a computer.   This approach to PM not only leads to unoptimized, or often complete absence of runtime PM in widely used mobile systems, but also incurs high overhead by engaging the high-power central processing unit (CPU). The goal of this project is to relieve device drivers and the CPU of runtime PM by completely rethinking runtime PM of mobile SoCs. First, it will investigate a novel architecture in which a single operating system entity reasons whether a SoC component is idle without involving its device driver.  Second, the project will contribute to operating system support such that the runtime PM logic can be entirely realized on an ultra-low-power computing core available in modern mobile systems. The project will prototype and evaluate its technical innovations with Android/Linux-based testbeds and Field-Programmable Gate Array (FPGA)-based SoC prototyping hardware.\r\n\r\nThe project will leverage collaborations with industry leaders to ensure a timely transfer of technologies into industry and a broad impact on the commercial development of mobile systems and their SoCs. The project will provide new modules for teaching mobile and embedded systems and a platform to engage high-school and minority students. As mobile systems are providing access to information technologies to underserved populations and being adopted for professional uses, by improving their battery lifetime and therefore usability, the project will have a positive socio-economic impact globally.  Research results will be published in academic conferences and journals. Resulting hardware design, software, and data will be made open-source and freely available at a repository accessible from http://download.recg.org.   This repository will be maintained at least five years after the project is completed.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Lin",
   "pi_last_name": "Zhong",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Lin Zhong",
   "pi_email_addr": "lin.zhong@yale.edu",
   "nsf_id": "000189041",
   "pi_start_date": "2020-02-07",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Yale University",
  "inst_street_address": "150 MUNSON ST",
  "inst_street_address_2": "",
  "inst_city_name": "NEW HAVEN",
  "inst_state_code": "CT",
  "inst_state_name": "Connecticut",
  "inst_phone_num": "2037854689",
  "inst_zip_code": "065113572",
  "inst_country_name": "United States",
  "cong_dist_code": "03",
  "st_cong_dist_code": "CT03",
  "org_lgl_bus_name": "YALE UNIV",
  "org_prnt_uei_num": "FL6GV84CKN57",
  "org_uei_num": "FL6GV84CKN57"
 },
 "perf_inst": {
  "perf_inst_name": "Yale University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "CT",
  "perf_st_name": "Connecticut",
  "perf_zip_code": "065208327",
  "perf_ctry_code": "US",
  "perf_cong_dist": "03",
  "perf_st_cong_dist": "CT03",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 488719.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-31be1722-7fff-e95f-339c-346a63ea5e82\">\n<p dir=\"ltr\"><span>To reduce power and energy consumption, modern operating systems (OSes) must place idle hardware components into low-power modes even if the system is still serving its user, a strategy called runtime power management (PM). It is increasingly important to the battery lifetime and thermal management of mobile systems whose computational heart, a system-on-a-chip (SoC), often integrates tens and hundreds of hardware components and billions of transistors. Existing operating systems rely on device drivers for runtime PM, which not only leads to unoptimized, often complete absence of, runtime PM in widely used mobile systems, but also incurs high overhead by engaging the high-power central processing unit (CPU).&nbsp;&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>This project aimed at relieving device drivers and CPU of runtime PM by completely rethinking runtime PM of mobile SoCs. The project contributed three different solutions toward this goal.&nbsp; First, it contributed a novel architecture in which a single OS entity reasons about whether a SoC component is idle, without involving its driver.&nbsp; Second, the project further demonstrated&nbsp; that the said entity can be realized on an ultra low-power core available in modern mobile systems. Finally, the project showed that by representing a hardware component as an object of Linear/Affine Type, its device driver can rely on logic statically inserted by the compiler to correctly perform runtime PM, completely relieving driver developers from runtime PM and yet still compatible with the existing Linux runtime PM framework.&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>The project provided new modules for teaching mobile and embedded systems and a platform to engage students from underrepresented groups. Its core ideas have been incorporated into open-source projects. Through our interaction with the mobile industry, the project raised the awareness of the problems with existing runtime power management solutions and showed key industrial players multiple paths forward. As mobile systems are providing access to information technologies to underserved populations and being adopted for professional uses, by improving their battery lifetime and therefore usability, the project will have a positive socio-economic impact globally.</span></p>\n<br /><span>Research results have been published in academic conferences and journals. Resulting hardware design, software, and data have been made open-source and freely available at a repository accessible from </span><a href=\"http://download.recg.org/\"><span>http://download.yecl.org</span></a><span>. </span></span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/14/2022<br>\n\t\t\t\t\tModified by: Lin&nbsp;Zhong</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nTo reduce power and energy consumption, modern operating systems (OSes) must place idle hardware components into low-power modes even if the system is still serving its user, a strategy called runtime power management (PM). It is increasingly important to the battery lifetime and thermal management of mobile systems whose computational heart, a system-on-a-chip (SoC), often integrates tens and hundreds of hardware components and billions of transistors. Existing operating systems rely on device drivers for runtime PM, which not only leads to unoptimized, often complete absence of, runtime PM in widely used mobile systems, but also incurs high overhead by engaging the high-power central processing unit (CPU).  \n\n\nThis project aimed at relieving device drivers and CPU of runtime PM by completely rethinking runtime PM of mobile SoCs. The project contributed three different solutions toward this goal.  First, it contributed a novel architecture in which a single OS entity reasons about whether a SoC component is idle, without involving its driver.  Second, the project further demonstrated  that the said entity can be realized on an ultra low-power core available in modern mobile systems. Finally, the project showed that by representing a hardware component as an object of Linear/Affine Type, its device driver can rely on logic statically inserted by the compiler to correctly perform runtime PM, completely relieving driver developers from runtime PM and yet still compatible with the existing Linux runtime PM framework. \n\n\nThe project provided new modules for teaching mobile and embedded systems and a platform to engage students from underrepresented groups. Its core ideas have been incorporated into open-source projects. Through our interaction with the mobile industry, the project raised the awareness of the problems with existing runtime power management solutions and showed key industrial players multiple paths forward. As mobile systems are providing access to information technologies to underserved populations and being adopted for professional uses, by improving their battery lifetime and therefore usability, the project will have a positive socio-economic impact globally.\n\nResearch results have been published in academic conferences and journals. Resulting hardware design, software, and data have been made open-source and freely available at a repository accessible from http://download.yecl.org. \n\n \n\n\t\t\t\t\tLast Modified: 11/14/2022\n\n\t\t\t\t\tSubmitted by: Lin Zhong"
 }
}