{
 "awd_id": "2200343",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Practical Analyses and Safe Transformations for Imperative Deep Learning Programs",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2022-06-01",
 "awd_exp_date": "2026-05-31",
 "tot_intn_awd_amt": 599974.0,
 "awd_amount": 599974.0,
 "awd_min_amd_letter_date": "2022-05-23",
 "awd_max_amd_letter_date": "2022-05-23",
 "awd_abstract_narration": "Learning often occurs by pattern recognition. Software systems learn by using algorithms to recognize patterns and draw inferences from existing data and apply the inferences to previously unseen data. Deep Learning (DL) is a kind of machine-learning algorithm inspired by neural networks of human brains. A DL model learns decision logic from a large set of examples. A classic application is image processing, where a model may learn to recognize particular images through training with many sample images. While software systems that incorporate DL models involve large amounts of data, they still have to be efficient and responsive. This project is expected to increase DL system robustness, reliability, and scalability, positively impacting computer vision, autonomous driving, medicine, and extremism identification. Tools developed as a result of this project are also expected to democratize the Artificial Intelligence workforce, as they will assist data scientists and software engineers of varying proficiencies in writing quality DL code. Such tools can potentially contribute to a diverse, globally competitive STEM workforce and increase US economic competitiveness. This project will also promote software engineering concepts in machine learning by augmenting and creating several undergraduate and graduate courses. Dissemination will occur through publicly distributing datasets, papers, open-source software, and Open Educational Resources.\r\n\r\nDL frameworks increasingly make various tradeoffs to balance the often competing requirements of reliability, usability, and generality. Popular DL frameworks have historically embraced graph-based, deferred execution-style (low-level) Application Programming Interfaces (APIs). While efficient, (legacy) systems using such interfaces are cumbersome, error-prone, and difficult to debug, maintain, and port. Contrarily, (modern) eager execution-style DL APIs facilitate higher-level, imperative, and Object-Oriented (Python) programs that are easier to debug, less error-prone, and more extensible have consequently emerged at the expense of run-time performance. Though hybrid approaches aim to bridge the two paradigms, they necessitate a non-trivial amount of technical metadata and exhibit several limitations and known issues on the use of native program constructs. This project is expected to contribute practical analyses and safe transformations for modern imperative and Object-Oriented DL programs that markedly improve their reliability and scalability. First, various software engineering artifacts will be mined for bug fixes, (manual) refactorings (semantics-preserving source-to-source program transformations), and missed opportunities in efficiently executing imperative DL code. Then, novel analyses and refactorings for automatically (i) migrating legacy, deferred execution-style DL code to more robust imperative DL code and (ii) specifying how their otherwise eagerly-executed imperative DL code should be reliably and efficiently executed as graphs at run-time will be formulated. Finally, novel analyses for detecting performance bottlenecks and semantic errors associated with graph-based execution of imperative, otherwise eagerly-executed DL code will be designed. This contribution is significant because it fills the void of techniques, methodologies, and tools for effectively developing---and evolving long-lived---trustworthy and efficient DL systems that pervasively use imperative and Object-Oriented DL programming.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Raffi",
   "pi_last_name": "Khatchadourian",
   "pi_mid_init": "T",
   "pi_sufx_name": "",
   "pi_full_name": "Raffi T Khatchadourian",
   "pi_email_addr": "khatchad@hunter.cuny.edu",
   "nsf_id": "000700613",
   "pi_start_date": "2022-05-23",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Anita",
   "pi_last_name": "Raja",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Anita Raja",
   "pi_email_addr": "anita.raja@hunter.cuny.edu",
   "nsf_id": "000213258",
   "pi_start_date": "2022-05-23",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "CUNY Hunter College",
  "inst_street_address": "695 PARK AVE",
  "inst_street_address_2": "",
  "inst_city_name": "NEW YORK",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "2127724020",
  "inst_zip_code": "100655024",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "NY12",
  "org_lgl_bus_name": "RESEARCH FOUNDATION OF THE CITY UNIVERSITY OF NEW YORK",
  "org_prnt_uei_num": "",
  "org_uei_num": "EK93EZLLBSC4"
 },
 "perf_inst": {
  "perf_inst_name": "CUNY Hunter College",
  "perf_str_addr": "695 Park Avenue",
  "perf_city_name": "New York",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "100655024",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "NY12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 599974.0
  }
 ],
 "por": null
}