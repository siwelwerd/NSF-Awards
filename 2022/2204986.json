{
 "awd_id": "2204986",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Static Verification for Fearless GPU programming",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2022-06-01",
 "awd_exp_date": "2026-05-31",
 "tot_intn_awd_amt": 546610.0,
 "awd_amount": 546610.0,
 "awd_min_amd_letter_date": "2022-05-20",
 "awd_max_amd_letter_date": "2022-05-20",
 "awd_abstract_narration": "Programming Graphics Processing Units (GPUs) is an art currently reserved to a\r\nselect few experts, as unlocking the full potential of these devices requires\r\nmastering an intricate hardware architecture and execution model. Scientists and\r\ndomain experts need to adapt their algorithms to a programming model where\r\nsimply changing the order in which data is accessed can have a 10\u00d7 performance\r\noverhead, and off-by-one errors can silently corrupt their data. The intent of\r\nthis project is to develop an infrastructure of complementary code analysis\r\ntechniques that include bug prevention, performance profiling, and bug\r\nrepairing. The project's novelties are in developing a holistic understanding of\r\nperformance and safety bugs, which considers the interactions between various\r\nclasses of bugs. The project's impacts are on making GPU programming more\r\naccessible, by providing tools to all programmers that simplify understanding\r\nparallel programming and hardware architectures, thus enabling algorithm\r\ncorrectness and more in depth performance analysis. An outcome of this project\r\nis improved developer productivity and software sustainability, as the project\r\naids in writing correct and highly efficient GPU programs without sacrificing\r\neither objectives. There is an expectation of interest from industry (e.g., autonomous\r\nmobility, artificial intelligence applications) as well as from academia and\r\nnational laboratories. The research lowers the barrier to entry of GPU\r\nprogramming, so it is expected to widen the suitability of GPUs to more fields. The\r\ntools that result from this project can empower students to understand bugs in\r\ntheir code autonomously, leading to a more focused pedagogical experience\r\nbetween the instructor and the student.\r\n\r\nThis project advances the state of the art of static verification for GPUs and\r\nother accelerator architectures, both in terms of correctness and performance\r\nanalysis. Static verification aims to assess the requirements of software\r\nwithout executing the program. Existing solutions suffer from a high rate of\r\nfalse alarms, cannot handle large codes, or are unsound. Most importantly,\r\nexisting approaches either address performance or safety, but not both at once.\r\nA key aspect of this project is an underlying static verification\r\ninfrastructure, a collection of analysis backed by theoretical results, that\r\nenables novel and efficient tools that better our understanding of existing\r\nsoftware. Such verification infrastructure is built around a novel and general\r\nintermediate representation based on behavioral type theory, which codifies,\r\nstructures, and enforces the meaning of parallel programs. The project expands\r\nour formal understanding of GPU programming models, by introducing safety\r\nproperties, semantics preserving transformations, and behavioral equivalences,\r\nall fully mechanized using a proof assistant.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Tiago",
   "pi_last_name": "Cogumbreiro",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Tiago Cogumbreiro",
   "pi_email_addr": "Tiago.Cogumbreiro@umb.edu",
   "nsf_id": "000815518",
   "pi_start_date": "2022-05-20",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Massachusetts Boston",
  "inst_street_address": "100 WILLIAM T MORRISSEY BLVD",
  "inst_street_address_2": "",
  "inst_city_name": "DORCHESTER",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6172875370",
  "inst_zip_code": "021253300",
  "inst_country_name": "United States",
  "cong_dist_code": "08",
  "st_cong_dist_code": "MA08",
  "org_lgl_bus_name": "UNIVERSITY OF MASS AT BOSTON",
  "org_prnt_uei_num": "CGCDJ24JJLZ1",
  "org_uei_num": "CGCDJ24JJLZ1"
 },
 "perf_inst": {
  "perf_inst_name": "University of Massachusetts Boston",
  "perf_str_addr": "100 Morrissey Boulevard",
  "perf_city_name": "Dorchester",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021253300",
  "perf_ctry_code": "US",
  "perf_cong_dist": "08",
  "perf_st_cong_dist": "MA08",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7943",
   "pgm_ref_txt": "PROGRAMMING LANGUAGES"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 546610.0
  }
 ],
 "por": null
}