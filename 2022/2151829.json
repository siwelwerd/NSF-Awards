{
 "awd_id": "2151829",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CNS Core: Small: Budgets, Budgets Everywhere: A Necessity for Safe Real-Time on Multicore",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2022-07-15",
 "awd_exp_date": "2026-06-30",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 500000.0,
 "awd_min_amd_letter_date": "2022-07-13",
 "awd_max_amd_letter_date": "2022-07-13",
 "awd_abstract_narration": "Multicore computers are increasingly being used to implement real-time systems. In a real-time system, programs exist that are subject to timing constraints. An automobile is a good example: When a car's brake pedal is depressed, the braking system must react by a certain deadline. Many real-time systems are safety-critical, meaning that failures may have catastrophic consequences, such as loss of life or serious financial repercussions. Automobiles are also a good example of a safety-critical system; while a typical driver may be unaware of it, modern cars contain many computers that run a myriad of programs that perform functions required for steering, braking, engine control, etc. Safety-critical real-time systems typically must undergo a certification process that ensures that important functionality is properly supported. An important part of this process is to validate that deadline requirements are met, i.e., that programs execute \"on time.\" To do this, worst-case execution times (WCETs) of programs should be known. Unfortunately, on today's complex multicore computers, determining accurate WCETs is difficult because the worst-case execution time of a program may occur under rare circumstances and thus be difficult to reproduce. The traditional defense against not knowing WCETs with absolute certainty is to have the operating system (OS) enforce execution budgets; a program's budget is a limit on its execution time that the OS ensures won't be exceeded.\r\n\r\nWhile budgets have conventionally been enforced at the program level, in challenging real-time applications of interest today, such enforcement is needed at many levels. For example, in an autonomous vehicle, the overall system is broken into subsystems, where each subsystem provides some separate function, e.g., sensing obstacles in the road, computing a plan to react to obstacles, etc. These subsystems, which may contain many programs each, should be subject to budget enforcement as well. For instance, if the obstacle-sensing subsystem takes too much time, then executing the planning subsystem is pointless. This project is directed at (i) identifying the various levels at which budgets must be enforced in complex multicore real-time applications, (ii) examining the implications for real-time safety certification that arise from making multi-level budget enforcement a first-class concern, and (iii) producing efficient implementations of such enforcement. Addressing these goals will enable safer systems to be developed. In terms of broader impacts, a special emphasis will be placed on outreach to girls and women. Such outreach will include: events involving the Graduate Women in Computer Science (GWiCS) group at UNC, which hosts an annual research symposium targeted toward undergraduate women and other underrepresented minorities; Tar Heel Hack, a hackathon for local middle and high school girls; UNC Computer Science's Girls Who Code Club, which provides local girls in grades 6-12 with a community for learning about computer science; and UNC Computer Science's annual Open House and Science Expo. Further outreach to female students will be done in the context of a computer science club for undergraduate women led by the PI called TOPICS (Talking Over Papers In Computer Science).\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "James",
   "pi_last_name": "Anderson",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "James H Anderson",
   "pi_email_addr": "anderson@cs.unc.edu",
   "nsf_id": "000481767",
   "pi_start_date": "2022-07-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of North Carolina at Chapel Hill",
  "inst_street_address": "104 AIRPORT DR STE 2200",
  "inst_street_address_2": "",
  "inst_city_name": "CHAPEL HILL",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9199663411",
  "inst_zip_code": "275995023",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "NC04",
  "org_lgl_bus_name": "UNIVERSITY OF NORTH CAROLINA AT CHAPEL HILL",
  "org_prnt_uei_num": "D3LHU66KBLD5",
  "org_uei_num": "D3LHU66KBLD5"
 },
 "perf_inst": {
  "perf_inst_name": "University of North Carolina at Chapel Hill",
  "perf_str_addr": "Department of Computer Science",
  "perf_city_name": "Chapel Hill",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "275993175",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "NC04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 500000.0
  }
 ],
 "por": null
}