{
 "awd_id": "2200446",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: STARSS: Small: IoT Circuit Locking, Obfuscation & Authentication Kernel (CLOAK), A Compilable Architecture for Secure IoT Device Production, Testing, Activation & Operation",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2021-10-01",
 "awd_exp_date": "2022-09-30",
 "tot_intn_awd_amt": 300000.0,
 "awd_amount": 111647.0,
 "awd_min_amd_letter_date": "2021-10-21",
 "awd_max_amd_letter_date": "2021-10-21",
 "awd_abstract_narration": "Autonomy, control and actuation opportunities offered by a colossal deployment of Internet of Things (IoT) open the door to a revolution in the way we live and interact with our environment. However, widespread adoption of IoT comes with the danger of its misuse for malicious purposes, threatening the loss of privacy, property, and life. The scope and reach of potential IoT security threat grows as fast as the number and reach of IoT devices. Hence, protecting the hardware of IoT cannot be left as an afterthought. This project aims to improve the security of the IoT devices throughout their manufacturing and operational lifespan.\r\n\r\nTo secure the IoT devices throughout their manufacturing and operational lifespan, this proposal introduces IoT CLOAK - IoT Circuit Locking, Obfuscation & Authentication Kernel. CLOAK is a compilable, universal and lightweight architecture for secure production, testing, cloud activation & operation of IoT devices. The major goals of this project include: (1) building an open-source compiler to synthesize any netlist into CLOAK-protected and CLOAK-obfuscated netlist; (2) making the obfuscation-key a truly moving target that changes from activation to activation; (3) removing the need to store keys on the IoT devices or on the cloud by generating it on demand on the cloud; (4) exploring lightweight cryptography, and its side channel vulnerabilities, to secure the IoT-Cloud communication; (5) addressing the challenge of safe readout of PUF signature from IoT device; (6) investigating ultra-lightweight PUF and TRNG solutions; (7) investigating the functional testing of the CLOAK-protected chips in untrusted facilities and (8) developing cloud-based CLOAK-management services capable of configuring, managing, unlocking, licensing, and authenticating CLOAK-protected IoT devices.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Avesta",
   "pi_last_name": "Sasan",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Avesta Sasan",
   "pi_email_addr": "asasan@ucdavis.edu",
   "nsf_id": "000711431",
   "pi_start_date": "2021-10-21",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Davis",
  "inst_street_address": "1850 RESEARCH PARK DR STE 300",
  "inst_street_address_2": "",
  "inst_city_name": "DAVIS",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "5307547700",
  "inst_zip_code": "956186153",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "CA04",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, DAVIS",
  "org_prnt_uei_num": "",
  "org_uei_num": "TX2DAGQPENZ5"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Davis",
  "perf_str_addr": "1850 Research Park Dr.",
  "perf_city_name": "Davis",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "956186134",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "CA04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "021Z",
   "pgm_ref_txt": "Industry Partnerships"
  },
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "8225",
   "pgm_ref_txt": "SaTC Special Projects"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 111647.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><strong>Intellectual Merit</strong></p>\n<p>The technical outcome of this project includes 1) developing techniques and security primitives for logic locking. 2) developing software solutions for evaluating the strength of logic locking. 3) developing an architectural solution for operating a logic-obfuscated circuit. 4) evaluating side-channel protection of emerging authenticated ciphers, including candidates in the Competition for Authenticated Encryption, Security, Applicability, and Robustness (CAESAR). Each of these achievements is explained next.&nbsp;Logic locking (obfuscation) is a hardware security technique for protecting the intellectual property embedded in ICs when designed and fabricated in an untrusted global supply chain. The logic-locking techniques developed in this project include:</p>\n<ul>\n<li>Cyclic logic locking, in GLSVLSI2018 and TVLSI2020</li>\n<li>Look Up Table (LUT) locking, in GLSVLSI2018, TODAS2022, DAC2022&nbsp;</li>\n<li>Routing obfuscation (Full-Lock), in DAC2019</li>\n<li>FSM locking, in VTS2020, ISVLSI2020</li>\n<li>Scan-Chain locking, in GLSVLSI2020</li>\n<li>Fused-Logic and Routing Obfuscation, in ICCAD2020</li>\n<li>Asynchronous Data Flow locking, in TVLSI2021</li>\n<li>Chaotic gate locking, in ISQED2021</li>\n</ul>\n<p>We also investigated the means of evaluating the strength of logic-locking solutions and developed several new attack models. Some of the models are shared with the community in an open-source format, available through the GitHub page of the PIs research lab (GATE lab) and the cadforassurance.org webpage, and others through peer-reviewed conferences and journal publications. The attack models developed with the support of this project include the following:</p>\n<ul>\n<li>SAT-attack design space exploration, in ISVLSI2018</li>\n<li>SMT Attack, in CHES2019 (open source, available on GitHub and cadforassurance.org)</li>\n<li>A new Cyclic SAT attack, in TVLSI2020</li>\n<li>Neural Network Guided SAT (NNgSAT) Attack, in ICCAD2020</li>\n<li>RANE attack, in GLSVLSI2021 (open source, available on GitHub and in cadforassurance.org)</li>\n</ul>\n<p><br />We developed a compiler for building a complete logic locking solution and published this solution in the International Symposium on Research in Attacks, Intrusions, and Defenses (RAID) in 2019. The compiler creates a security architecture called Communication and Obfuscation Management Architecture (COMA) to manage the activation and operation of logic locking. COMA addresses three challenges for operating obfuscated circuits: First, it removes the need for storing the obfuscation unlock key at the untrusted chip. Second, the key sent for unlocking an obfuscated circuit changes after each activation. Third, it introduces two secure mechanisms for exchanging data to/from COMA-protected architectures:(1) a highly secure but slow double encryption for exchanging keys, (2) a high-performance and low-energy yet leaky encryption, secured utilizing frequent key renewal.&nbsp;</p>\n<p><br />For secret key cryptography (SKC), we developed side-channel protected Authenticated Encryption with Associated Data (AEAD) implementations of AES-GCM and ACORN. Both implementations pass the t-test, which measures the extent of side channel information. COMA uses a PUF to generate the secret key for its AEAD. COMA protects the readout of the PUF response using Public Key Cryptography (PKC). Given that only the PKC encryption function was required, and the readout happens only once, COMA uses a lightweight encryption-only PKC developed based on Elliptic-Curve Cryptography (ECC). We also evaluated all side channel-protected lightweight encryption solutions in the CAESAR competition, and alternative emerging authenticated cipher ASCON, the result of which are reflected in our publications in FCCM18, HOST18, FPT18, and Cryptography18.</p>\n<p><strong>Broader Impact:</strong></p>\n<p>The broader impact of this project includes 1) workforce training, including 5 Ph.D. and 3 M.Sc. students in Hardware Security, Cryptography, and Microelectronics. 2) Improving education at the hosting institution(s) and integration of the research into teaching, providing training to a broader group of graduate and undergraduate students, 3) Developing and providing access to several open-source tools, and 4) Contributing to the CAESAR competition in identifying best lightweight side-channel protected AEAD candidates. Each of these broader impacts is explained next.<br />This project trained 5 Ph.D. students, four male and one female student, 3 of which joined the industry, and 2 (a male and a female student) pursued postdoctoral education. They were later hired as assistant professors at a US institution to continue their research on Hardware Security. This project also trained 3 M.Sc students. Two M.Sc students joined the industry, and one continued his study toward a Ph.D. in the domain of hardware security.&nbsp;<br />PI integrated his research into teaching and developed a graduate course (open to senior undergraduates) on Hardware Security in 2019. The course was offered twice at George Mason University and the University of California Davis for the third time. The course uses many of the tools developed in this sponsored project.</p>\n<p><br />The SMT attack and the RANE attack are made public in open-source format and available on GATE lab's GitHub page and Cadforassurance.org webpage. These tools enable other community members to pursue research in this domain.&nbsp;</p>\n<p><br />This project supported the evaluation of several emerging AEAD algorithms in the CAESAR competition, serving the cryptography research community in choosing the best candidates. The most promising candidates were implemented with countermeasures against side-channel attacks. This activity's benefit will propagate down to the public through many applications that are enabled and use safer cryptography (and obfuscation) technologies.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/21/2022<br>\n\t\t\t\t\tModified by: Avesta&nbsp;Sasan</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIntellectual Merit\n\nThe technical outcome of this project includes 1) developing techniques and security primitives for logic locking. 2) developing software solutions for evaluating the strength of logic locking. 3) developing an architectural solution for operating a logic-obfuscated circuit. 4) evaluating side-channel protection of emerging authenticated ciphers, including candidates in the Competition for Authenticated Encryption, Security, Applicability, and Robustness (CAESAR). Each of these achievements is explained next. Logic locking (obfuscation) is a hardware security technique for protecting the intellectual property embedded in ICs when designed and fabricated in an untrusted global supply chain. The logic-locking techniques developed in this project include:\n\nCyclic logic locking, in GLSVLSI2018 and TVLSI2020\nLook Up Table (LUT) locking, in GLSVLSI2018, TODAS2022, DAC2022 \nRouting obfuscation (Full-Lock), in DAC2019\nFSM locking, in VTS2020, ISVLSI2020\nScan-Chain locking, in GLSVLSI2020\nFused-Logic and Routing Obfuscation, in ICCAD2020\nAsynchronous Data Flow locking, in TVLSI2021\nChaotic gate locking, in ISQED2021\n\n\nWe also investigated the means of evaluating the strength of logic-locking solutions and developed several new attack models. Some of the models are shared with the community in an open-source format, available through the GitHub page of the PIs research lab (GATE lab) and the cadforassurance.org webpage, and others through peer-reviewed conferences and journal publications. The attack models developed with the support of this project include the following:\n\nSAT-attack design space exploration, in ISVLSI2018\nSMT Attack, in CHES2019 (open source, available on GitHub and cadforassurance.org)\nA new Cyclic SAT attack, in TVLSI2020\nNeural Network Guided SAT (NNgSAT) Attack, in ICCAD2020\nRANE attack, in GLSVLSI2021 (open source, available on GitHub and in cadforassurance.org)\n\n\n\nWe developed a compiler for building a complete logic locking solution and published this solution in the International Symposium on Research in Attacks, Intrusions, and Defenses (RAID) in 2019. The compiler creates a security architecture called Communication and Obfuscation Management Architecture (COMA) to manage the activation and operation of logic locking. COMA addresses three challenges for operating obfuscated circuits: First, it removes the need for storing the obfuscation unlock key at the untrusted chip. Second, the key sent for unlocking an obfuscated circuit changes after each activation. Third, it introduces two secure mechanisms for exchanging data to/from COMA-protected architectures:(1) a highly secure but slow double encryption for exchanging keys, (2) a high-performance and low-energy yet leaky encryption, secured utilizing frequent key renewal. \n\n\nFor secret key cryptography (SKC), we developed side-channel protected Authenticated Encryption with Associated Data (AEAD) implementations of AES-GCM and ACORN. Both implementations pass the t-test, which measures the extent of side channel information. COMA uses a PUF to generate the secret key for its AEAD. COMA protects the readout of the PUF response using Public Key Cryptography (PKC). Given that only the PKC encryption function was required, and the readout happens only once, COMA uses a lightweight encryption-only PKC developed based on Elliptic-Curve Cryptography (ECC). We also evaluated all side channel-protected lightweight encryption solutions in the CAESAR competition, and alternative emerging authenticated cipher ASCON, the result of which are reflected in our publications in FCCM18, HOST18, FPT18, and Cryptography18.\n\nBroader Impact:\n\nThe broader impact of this project includes 1) workforce training, including 5 Ph.D. and 3 M.Sc. students in Hardware Security, Cryptography, and Microelectronics. 2) Improving education at the hosting institution(s) and integration of the research into teaching, providing training to a broader group of graduate and undergraduate students, 3) Developing and providing access to several open-source tools, and 4) Contributing to the CAESAR competition in identifying best lightweight side-channel protected AEAD candidates. Each of these broader impacts is explained next.\nThis project trained 5 Ph.D. students, four male and one female student, 3 of which joined the industry, and 2 (a male and a female student) pursued postdoctoral education. They were later hired as assistant professors at a US institution to continue their research on Hardware Security. This project also trained 3 M.Sc students. Two M.Sc students joined the industry, and one continued his study toward a Ph.D. in the domain of hardware security. \nPI integrated his research into teaching and developed a graduate course (open to senior undergraduates) on Hardware Security in 2019. The course was offered twice at George Mason University and the University of California Davis for the third time. The course uses many of the tools developed in this sponsored project.\n\n\nThe SMT attack and the RANE attack are made public in open-source format and available on GATE lab's GitHub page and Cadforassurance.org webpage. These tools enable other community members to pursue research in this domain. \n\n\nThis project supported the evaluation of several emerging AEAD algorithms in the CAESAR competition, serving the cryptography research community in choosing the best candidates. The most promising candidates were implemented with countermeasures against side-channel attacks. This activity's benefit will propagate down to the public through many applications that are enabled and use safer cryptography (and obfuscation) technologies.\n\n\t\t\t\t\tLast Modified: 10/21/2022\n\n\t\t\t\t\tSubmitted by: Avesta Sasan"
 }
}