{
 "awd_id": "2211751",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: SHF: Medium: Near-Hardware Program Repair and Optimization",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2022-10-01",
 "awd_exp_date": "2026-09-30",
 "tot_intn_awd_amt": 99998.0,
 "awd_amount": 99998.0,
 "awd_min_amd_letter_date": "2022-05-23",
 "awd_max_amd_letter_date": "2022-05-23",
 "awd_abstract_narration": "The project addresses today's reality that special-purpose computing hardware and hardware accelerators have become de facto necessities for supporting the large-scale computations used for data analysis, AI and machine learning, scientific modeling, and social-media platforms. At the same time, education and existing tools still require computer programmers to have deep knowledge of both low-level hardware considerations and higher-level application logic.  Higher levels of program abstraction are more tractable for humans and automated program improvement methods because they separate algorithm logic from implementation details, while lower 'near-hardware' levels of abstraction are difficult for humans to understand and optimize because of the many crucial architectural and hardware details that often interact with application-level logic in non-trivial ways. The project addresses this gap by developing automated methods for near-hardware run-time optimization of programs, bug repair, and creation of new programs.  It includes an evaluation featuring interactive human evaluations, which studies human interactions with the project's automated tools along several dimensions.\r\n\r\nThe project aims to improve the automation of software engineering tasks for near-hardware domains. This requires addressing fundamental questions such as: What representations span multiple levels of abstraction? How can one analyze and select optimizations respecting both hardware and software constraints for real-world applications? How can a tool communicate its results to users who may lack expertise in either domain-specific architecture or hardware-specific details? The project adapts higher-level automated program improvement methods to three specific tasks: automatically finding optimizations that reduce general-purpose GPU code runtimes; repairing defects in circuit designs; and synthesizing debuggable code for hardware accelerators. Each task requires representations and algorithms that cross abstraction levels, and each task features an evaluation plan that places explicit emphasis on the human element, measuring the semantic gap between automatically lifted optimizations and different levels of human expertise, measuring ease of use of interactive synthesis tools across human expertise levels, and using eye tracking to investigate which elements of a multi-edit patch are most difficult understand.  The project will enable many of the benefits of source-level automated program improvement to be available to near-hardware domains.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Kevin",
   "pi_last_name": "Angstadt",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "Kevin A Angstadt",
   "pi_email_addr": "kangstadt@stlawu.edu",
   "nsf_id": "000870121",
   "pi_start_date": "2022-05-23",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Saint Lawrence University",
  "inst_street_address": "23 ROMODA DR",
  "inst_street_address_2": "",
  "inst_city_name": "CANTON",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "3152295574",
  "inst_zip_code": "136171423",
  "inst_country_name": "United States",
  "cong_dist_code": "21",
  "st_cong_dist_code": "NY21",
  "org_lgl_bus_name": "ST. LAWRENCE UNIVERSITY",
  "org_prnt_uei_num": "HJ53DTC6EUA5",
  "org_uei_num": "HJ53DTC6EUA5"
 },
 "perf_inst": {
  "perf_inst_name": "Saint Lawrence University",
  "perf_str_addr": "St. Lawrence University",
  "perf_city_name": "Canton",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "136171501",
  "perf_ctry_code": "US",
  "perf_cong_dist": "21",
  "perf_st_cong_dist": "NY21",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 99998.0
  }
 ],
 "por": null
}