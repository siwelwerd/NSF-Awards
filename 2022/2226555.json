{
 "awd_id": "2226555",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "NSF Convergence Accelerator Track G: Building Resilient and Secure 5G Systems (BRASS)",
 "cfda_num": "47.084",
 "org_code": "15020000",
 "po_phone": "7032922251",
 "po_email": "jgeorge@nsf.gov",
 "po_sign_block_name": "Jemin George",
 "awd_eff_date": "2022-09-01",
 "awd_exp_date": "2023-08-31",
 "tot_intn_awd_amt": 682189.0,
 "awd_amount": 682189.0,
 "awd_min_amd_letter_date": "2022-08-18",
 "awd_max_amd_letter_date": "2022-08-18",
 "awd_abstract_narration": "5G wireless communications technologies currently in development rely on a wide variety of devices, including base stations, radios, and end user devices. Most of these devices contain a number of different processors, each running complex firmware, each potentially vulnerable to cyber attacks. The Building Resilient and Secure 5G Systems (BRASS) project tackles the challenge of low-level firmware exploitation of 5G devices, and thereby prevent major classes of attacks. The main research challenge to be targeted in BRASS by the performer Red Balloon Security (RBS) is: How does one provide security on a 5G host in a diverse supply chain environment with multiple vendors and unknown yet-to-be-discovered vulnerabilities almost certainly present in the firmware of the 5G devices \u2013 particularly, given the challenge of extreme diversity of firmware formats, and frequent lack of access to source code and/or hardware design information? Currently, addressing these challenges requires significant per-device, per-processor, and per-firmware reverse engineering effort by an expert. The BRASS project will research methods to automate and accelerate the integration of passive and active firmware protections to platforms in critical and vulnerable environments. Leveraging Red Balloon Security\u2019s (RBS) experience in commercializing its firmware security solutions, BRASS will not only result in a prototype that addresses anticipated Department of Defense (DoD) mission scenarios and can be transitioned into DoD operational use, but which can also create protections that 5G Original Equipment Manufacturers (OEMs) would want to incorporate into their products. Given its focus on addressing the challenge presented by the diversity of 5G devices, BRASS would support RBS's broader goal of providing world-class protections to a broad class of cyber-physical system (CPS) embedded firmware. BRASS improvements to RBS\u2019s core firmware analysis and modification toolchain will be made publicly available, enabling a variety of firmware analysis, improvement, and hardening applications.\r\n\r\nRed Balloon Security (RBS) has pioneered and successfully deployed novel, host-based embedded firmware defense technologies capable of preventing and/or detecting large classes of cyber attacks, including ones exploiting zero-day vulnerabilities.  These capabilities are merged into the candidate firmware using RBS's Open Firmware Reverse Analysis Konsole (OFRAK) toolkit, which does not require access to source code. In BRASS, RBS would: 1) apply firmware protections to baseband firmware on the end-user devices, securing them in the context of arbitrary networks (tracks G.1, G.2, G.3); 2) apply firmware protections to the platform and radio front-end firmware in the 5G infrastructure devices, without affecting their network functionality (tracks G.2 and G.3); and 3) use OFRAK's autotomy capabilities to remove the code implementing non-essential 5G features, and thus all vulnerabilities that code could contain (track G.3 tailored networks not requiring a complete 5G standard implementation). \r\n\r\nIn Phase 1, RBS will leverage a team with multidisciplinary proficiency to: 1) refine the requirements for its technology based on the DoD mission scenarios and needs; 2) continue its ongoing dialogues with 5G OEMs, such as Ericsson, Nokia, and Parallel Wireless, and to include at least one of them in its Phase 2 team; and 3) demonstrate a proof-of-concept prototype of 5G firmware protections. \r\n\r\nRBS will target 5G firmware to: 1) perform a security assessment to highlight security gaps, vulnerabilities, and design flaws; 2) develop a design document and proof of concept describing the new firmware defense capabilities; 3) deliver a feature-complete prototype integrated on target 5G firmware; and 4) demonstrate the prototype\u2019s   security efficacy against an exploit in a 5G test environment.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "TIP",
 "org_dir_long_name": "Directorate for Technology, Innovation, and Partnerships",
 "div_abbr": "ITE",
 "org_div_long_name": "Innovation and Technology Ecosystems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Ang",
   "pi_last_name": "Cui",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ang Cui",
   "pi_email_addr": "research-admin@redballoonsecurity.com",
   "nsf_id": "000875166",
   "pi_start_date": "2022-08-18",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Aleksey",
   "pi_last_name": "Nogin",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Aleksey Nogin",
   "pi_email_addr": "aleksey@redballoonsecurity.com",
   "nsf_id": "000877464",
   "pi_start_date": "2022-08-18",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Stephen",
   "pi_last_name": "Kuhn",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Stephen Kuhn",
   "pi_email_addr": "stephen.kuhn@phaedrusllc.com",
   "nsf_id": "000878063",
   "pi_start_date": "2022-08-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Red Balloon Security Inc",
  "inst_street_address": "639 11TH AVE",
  "inst_street_address_2": "",
  "inst_city_name": "NEW YORK",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "2019063438",
  "inst_zip_code": "100362003",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "NY12",
  "org_lgl_bus_name": "RED BALLOON SECURITY, INC",
  "org_prnt_uei_num": "M3HHLMBESDY4",
  "org_uei_num": "M3HHLMBESDY4"
 },
 "perf_inst": {
  "perf_inst_name": "Red Balloon Security Inc",
  "perf_str_addr": "639 11TH AVE",
  "perf_city_name": "NEW YORK",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "100362003",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "NY12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": null,
 "pgm_ref": null,
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002122RB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 682189.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-6b030ced-7fff-2478-3d58-3f715f2afbec\"> </span></p>\n<p><span id=\"docs-internal-guid-a47d184f-7fff-614d-2eca-d33a19eb2b04\"> </span></p>\n<p><span id=\"docs-internal-guid-531b28a8-7fff-33ce-1885-fd7c67614269\"> </span></p>\n<p dir=\"ltr\"><span>While 5G technology is the most advanced and capable form of mobile network connectivity today, that doesn?t mean 5G devices are the most secure. In fact, 5G devices -- from consumer phones to enterprise radios -- are less secure than one might expect. Once you start examining the inner hardware and software embedded within any 5G device, there are a range of vulnerabilities that could exist. In 2021-2022, as part of a different effort to develop cybersecurity for 5G infrastructure, we purchased a used 5G base station and looked inside. We found numerous security issues in how the firmware embedded deep inside the device was implemented. This current reality of 5G security served as the initial motivation for our work on this NSF project.</span></p>\n<p dir=\"ltr\"><span>The challenge is that even when 5G devices utilize secure network protocols to connect to other 5G devices, multiple low-level vulnerabilities could still exist inside the devices? firmware which attackers could use to completely bypass these secure protocols.&nbsp; Imagine the worst-case scenario: adversaries target such vulnerabilities to plant malicious code deep inside 5G mobile devices. Then the code stays dormant until it suddenly halts or redirects communications. With the current state of 5G device security, users and operators might not suspect anything until the attack occurs and the connectivity shuts off.</span></p>\n<p dir=\"ltr\"><span>For this Phase 1 effort, we decided to examine the user equipment side. Modern mobile phones contain a Communications Processor (CP), also often called a baseband processor, which is separate from the Application Processor running the operating system. The CP interfaces directly with the 5G network, so its firmware is critical for network security. Yet, most security models focus more on the operating systems, such as Android and iOS, running on the Application Processor and less on the CP. To contextualize the implications of how the CP could be targeted, we discovered a flaw in the boot process of a major brand 5G phone that allowed us to bypass firmware authentication and run modified firmware on the CP.</span></p>\n<p dir=\"ltr\"><span>We considered, with all of the investment going into 5G cybersecurity, how could 5G devices -- whether the 5G infrastructure devices we previously investigated or the user equipment we researched during Phase 1 -- still run firmware with critical security vulnerabilities? A significant component of our Phase 1 stakeholder outreach was aimed at developing a better understanding of this phenomenon. We discovered that the current 5G security investments overwhelmingly focus on the intended functionality, such as stronger requirements, better algorithms, additional security features, and secure protocols. And some vendors believe that this is all they need to do for cybersecurity. Additionally, we found that many vendors only consider security as adhering to standards, such as 3GPP, and don?t think beyond them for how to further secure their devices. This approach is not a future-oriented security strategy and will not defend against the techniques of tomorrow?s attackers.</span></p>\n<p dir=\"ltr\"><span>The problem is that by focusing on intended functionality, today?s standards fall short. Once such a standard is implemented, the question remains: how do we know the implementation is actually secure and will actually perform as intended, even when deployed in the field and under attack? While 5G specifications suggest performing a number of surface-level tests before a 5G device is deployed, those one-time tests are far from sufficient, and increasingly so, as the implementations keep getting more complex.</span></p>\n<p dir=\"ltr\"><span>So what happens in the field when adversaries discover new vulnerabilities, compromise those devices, and then passively sit inside, stay covert, and wait for an opportunity to strike? What will slow them down? How do we discover if the software and hardware embedded deep inside a device are compromised and are no longer executing all of their intended functionality, but not visibly misbehaving -- yet?</span></p>\n<p dir=\"ltr\"><span>To address this challenge, we developed the 5G Firmware Symbiote to deliver assurance of 5G device integrity. This software technology automatically hardens firmware binaries at the deepest levels of the software stack within 5G devices, enabling users and operators to rely on the security of their 5G devices. Red Balloon has been developing these capabilities for over a decade and, since 2015, our Firmware Symbiote has been deployed into a variety of embedded devices, such as HP printers, shipping millions of units.&nbsp;</span></p>\n<p dir=\"ltr\"><span>In this Phase 1 effort, we worked on prototyping 5G Firmware Symbiote for a 5G phone and conducted extensive discussions with a variety of 5G security stakeholders. We identified the key barriers that stand in the way of technology transition and adoption for 5G Firmware Symbiote, as well as developed a team and plan for how we hope to tackle these challenges in our Phase 2 effort.</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/29/2023<br>\n\t\t\t\t\tModified by: Aleksey&nbsp;Nogin</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImage\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls onePhoto\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation onePhoto\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2023/2226555/2226555_10827954_1693545266295_5GFirmwareSymbiote--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2023/2226555/2226555_10827954_1693545266295_5GFirmwareSymbiote--rgov-800width.jpg\" title=\"Red Balloon's 5G Firmware Symbiote plugs into the existing OEM software development process. It performs automated hardening of 5G firmware binaries using Red Balloon's OFRAK, reducing attack surface, and adding continuous integrity monitoring that supplies real-time security telemetry to operators.\"><img src=\"/por/images/Reports/POR/2023/2226555/2226555_10827954_1693545266295_5GFirmwareSymbiote--rgov-66x44.jpg\" alt=\"Red Balloon's 5G Firmware Symbiote plugs into the existing OEM software development process. It performs automated hardening of 5G firmware binaries using Red Balloon's OFRAK, reducing attack surface, and adding continuous integrity monitoring that supplies real-time security telemetry to operators.\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Our 5G Firmware Symbiote solution automatically modifies firmware to enhance security. It is designed to seamlessly integrate into CI/CD pipelines to harden 5G firmware.</div>\n<div class=\"imageCredit\">Red Balloon Security, Inc</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Aleksey&nbsp;Nogin</div>\n<div class=\"imageTitle\">Red Balloon's 5G Firmware Symbiote plugs into the existing OEM software development process. It performs automated hardening of 5G firmware binaries using Red Balloon's OFRAK, reducing attack surface, and adding continuous integrity monitoring that supplies real-time security telemetry to operators.</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\n \n\n \n\n \nWhile 5G technology is the most advanced and capable form of mobile network connectivity today, that doesn?t mean 5G devices are the most secure. In fact, 5G devices -- from consumer phones to enterprise radios -- are less secure than one might expect. Once you start examining the inner hardware and software embedded within any 5G device, there are a range of vulnerabilities that could exist. In 2021-2022, as part of a different effort to develop cybersecurity for 5G infrastructure, we purchased a used 5G base station and looked inside. We found numerous security issues in how the firmware embedded deep inside the device was implemented. This current reality of 5G security served as the initial motivation for our work on this NSF project.\nThe challenge is that even when 5G devices utilize secure network protocols to connect to other 5G devices, multiple low-level vulnerabilities could still exist inside the devices? firmware which attackers could use to completely bypass these secure protocols.  Imagine the worst-case scenario: adversaries target such vulnerabilities to plant malicious code deep inside 5G mobile devices. Then the code stays dormant until it suddenly halts or redirects communications. With the current state of 5G device security, users and operators might not suspect anything until the attack occurs and the connectivity shuts off.\nFor this Phase 1 effort, we decided to examine the user equipment side. Modern mobile phones contain a Communications Processor (CP), also often called a baseband processor, which is separate from the Application Processor running the operating system. The CP interfaces directly with the 5G network, so its firmware is critical for network security. Yet, most security models focus more on the operating systems, such as Android and iOS, running on the Application Processor and less on the CP. To contextualize the implications of how the CP could be targeted, we discovered a flaw in the boot process of a major brand 5G phone that allowed us to bypass firmware authentication and run modified firmware on the CP.\nWe considered, with all of the investment going into 5G cybersecurity, how could 5G devices -- whether the 5G infrastructure devices we previously investigated or the user equipment we researched during Phase 1 -- still run firmware with critical security vulnerabilities? A significant component of our Phase 1 stakeholder outreach was aimed at developing a better understanding of this phenomenon. We discovered that the current 5G security investments overwhelmingly focus on the intended functionality, such as stronger requirements, better algorithms, additional security features, and secure protocols. And some vendors believe that this is all they need to do for cybersecurity. Additionally, we found that many vendors only consider security as adhering to standards, such as 3GPP, and don?t think beyond them for how to further secure their devices. This approach is not a future-oriented security strategy and will not defend against the techniques of tomorrow?s attackers.\nThe problem is that by focusing on intended functionality, today?s standards fall short. Once such a standard is implemented, the question remains: how do we know the implementation is actually secure and will actually perform as intended, even when deployed in the field and under attack? While 5G specifications suggest performing a number of surface-level tests before a 5G device is deployed, those one-time tests are far from sufficient, and increasingly so, as the implementations keep getting more complex.\nSo what happens in the field when adversaries discover new vulnerabilities, compromise those devices, and then passively sit inside, stay covert, and wait for an opportunity to strike? What will slow them down? How do we discover if the software and hardware embedded deep inside a device are compromised and are no longer executing all of their intended functionality, but not visibly misbehaving -- yet?\nTo address this challenge, we developed the 5G Firmware Symbiote to deliver assurance of 5G device integrity. This software technology automatically hardens firmware binaries at the deepest levels of the software stack within 5G devices, enabling users and operators to rely on the security of their 5G devices. Red Balloon has been developing these capabilities for over a decade and, since 2015, our Firmware Symbiote has been deployed into a variety of embedded devices, such as HP printers, shipping millions of units. \nIn this Phase 1 effort, we worked on prototyping 5G Firmware Symbiote for a 5G phone and conducted extensive discussions with a variety of 5G security stakeholders. We identified the key barriers that stand in the way of technology transition and adoption for 5G Firmware Symbiote, as well as developed a team and plan for how we hope to tackle these challenges in our Phase 2 effort.\n\n\t\t\t\t\tLast Modified: 09/29/2023\n\n\t\t\t\t\tSubmitted by: Aleksey Nogin"
 }
}