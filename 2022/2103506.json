{
 "awd_id": "2103506",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SBIR Phase I:  Reduced Instruction Set Computer-V (RISC-V) Unikernels",
 "cfda_num": "47.041, 47.084",
 "org_code": "15030000",
 "po_phone": "7032927529",
 "po_email": "smiqbal@nsf.gov",
 "po_sign_block_name": "Samir M. Iqbal",
 "awd_eff_date": "2021-11-01",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 231548.0,
 "awd_amount": 231548.0,
 "awd_min_amd_letter_date": "2021-10-28",
 "awd_max_amd_letter_date": "2021-10-28",
 "awd_abstract_narration": "The broader impact/commercial potential of this Small Business Innovation Research (SBIR) Phase 1 project focuses on the development of a more secure computer infrastructure in the US, particularly for building automation systems, power systems, etc. Much of the current infrastructure runs on older computer architectures and the hardware suffers from a number of vulnerabilities that cannot be fixed by upgrading the software.  This project seeks to allow ventors to find and fix hardware vulnerabilities more quickly and without constraints from intellectual property holders.  The project will allow un-modified Linux binaries to run as unikernels on the reduced instruction set of reduced instruction set computer-V (RISC-V) architecture. The RISC-V architecture is an open ISA (instruction set architecture) and allows for rapid innovation and broad adoption in the expanding edge and IoT (internet of things) space. Being able to deploy applications to RISC-V as unikernels versus ordinary Linux guests brings strong security, performance, and deployment benefits to the ecosystem.\r\n\r\nThis Small Business Innovation Research (SBIR) Phase 1 project directly addresses performance, security, and deployment problems current edge and IoT projects. Current edge-based systems use operating systems that are multi-decades old, are hard to upgrade, and are targeted in cyberattacks worldwide. To enable advanced technology that requires edge compute such as machine learning applications to be safely deployed, the security concerns of the underlying operating system must be addressed. Unikernels are single process systems that can run programs on the same virtual machines with a heavily reduced attack surface. By applying unikernel technology to the RISC-V architecture, advanced technology can be more quickly deployed in a safer manner.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "TIP",
 "org_dir_long_name": "Directorate for Technology, Innovation, and Partnerships",
 "div_abbr": "TI",
 "org_div_long_name": "Translational Impacts",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Ian",
   "pi_last_name": "Eyberg",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ian Eyberg",
   "pi_email_addr": "ian@nanovms.com",
   "nsf_id": "000818025",
   "pi_start_date": "2021-10-28",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "NanoVMs, Inc.",
  "inst_street_address": "148 TOWNSEND ST",
  "inst_street_address_2": "STE 2",
  "inst_city_name": "SAN FRANCISCO",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8887264283",
  "inst_zip_code": "941071919",
  "inst_country_name": "United States",
  "cong_dist_code": "11",
  "st_cong_dist_code": "CA11",
  "org_lgl_bus_name": "NANOVMS, INC.",
  "org_prnt_uei_num": "",
  "org_uei_num": "FVUXVFPZ6WZ1"
 },
 "perf_inst": {
  "perf_inst_name": "NanoVMs, Inc.",
  "perf_str_addr": "148 Townsend St",
  "perf_city_name": "San Francisco",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "941071919",
  "perf_ctry_code": "US",
  "perf_cong_dist": "11",
  "perf_st_cong_dist": "CA11",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "537100",
   "pgm_ele_name": "SBIR Phase I"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "4097",
   "pgm_ref_txt": "NETWORKING RESEARCH"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 231548.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The purpose of this project was to research the feasibility of deploying unikernels to the RISC-V architecture. Unikernels are a way of deploying software applications as light-weight virtual machines acting as their own operating system. Unlike general purpose operating systems such as Linux they lack the notion of users, interactive console access, multiple processes and have a heavily reduced attack surface. Because of their design they typically can run Linux payloads much faster. For example, NanoVMs has benchmarked up to a 200% reqs/sec throughput difference on Google Cloud and up to 300% on Amazon Web Services. Unikernels existed for X86-64 and ARM64 architectures. This project was geared at provisioning them for the RISC-V architecture.</p>\n<p>&nbsp;</p>\n<p>RISC-V is a newer architecture that is gaining widespread popularity for being a &lsquo;open ISA&rsquo;. What this means is that engineers can design hardware without paying expensive license fees to a company such as ARM. Many ISAs are not open and are proprietary. Recent hardware security vulnerabilities have highlighted a problem with this. The open ISA also allows limitless extendibility. Proponents of the RISC-V architecture foresee growth in both datacenter and edge environments.</p>\n<p>&nbsp;</p>\n<p>NanoVMs was able to successfully run unikernel payloads on the RISC-V architecture. While one could deploy unikernels to both X86-64 and aarch64 based architecture no prior known existing work had addressed RISC-V architecture. At the start of the project, it was expected that Nvidia would buy ARM and that would potentially result in more RISC-V growth, but it was blocked by the FTC. Notwithstanding, various geopolitical concerns caused the CHIPS Act to pass, and it is expected that RISC-V will continue to grow market share in both datacenter and edge applications because of its open ISA.</p>\n<p>&nbsp;</p>\n<p>Challenges such as the lack of real physical hardware that implemented the hypervisor spec for RISC-V existed, coupled with the lack of up-stream projects supporting to various degrees of other specs such as the atomics spec and bit manipulations spec. The latter was especially problematic since various instructions that would be available in x86 based architecture were not present in RISC-V at the time of the work. Problems like this were somewhat expected for a &rdquo;reduced&rdquo; instruction set but at the same time were problems that your average engineer might not be expected to deal with.</p>\n<p>&nbsp;</p>\n<p>The end result is that now companies and end-users utilizing RISC-V don&rsquo;t have to provision their guest virtual machines with general purpose operating systems instead relying on unikernels. Hardware being made with various machine learning application use-cases, especially those used in domain sets such as autonomous driving and media encoding can heavily benefit from the security and performance benefits unikernels bring.</p>\n<p>&nbsp;</p>\n<p>The source code is publicly available on the https://github.com/nanovms/nanos repository.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/05/2022<br>\n\t\t\t\t\tModified by: Ian&nbsp;Eyberg</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe purpose of this project was to research the feasibility of deploying unikernels to the RISC-V architecture. Unikernels are a way of deploying software applications as light-weight virtual machines acting as their own operating system. Unlike general purpose operating systems such as Linux they lack the notion of users, interactive console access, multiple processes and have a heavily reduced attack surface. Because of their design they typically can run Linux payloads much faster. For example, NanoVMs has benchmarked up to a 200% reqs/sec throughput difference on Google Cloud and up to 300% on Amazon Web Services. Unikernels existed for X86-64 and ARM64 architectures. This project was geared at provisioning them for the RISC-V architecture.\n\n \n\nRISC-V is a newer architecture that is gaining widespread popularity for being a \u2018open ISA\u2019. What this means is that engineers can design hardware without paying expensive license fees to a company such as ARM. Many ISAs are not open and are proprietary. Recent hardware security vulnerabilities have highlighted a problem with this. The open ISA also allows limitless extendibility. Proponents of the RISC-V architecture foresee growth in both datacenter and edge environments.\n\n \n\nNanoVMs was able to successfully run unikernel payloads on the RISC-V architecture. While one could deploy unikernels to both X86-64 and aarch64 based architecture no prior known existing work had addressed RISC-V architecture. At the start of the project, it was expected that Nvidia would buy ARM and that would potentially result in more RISC-V growth, but it was blocked by the FTC. Notwithstanding, various geopolitical concerns caused the CHIPS Act to pass, and it is expected that RISC-V will continue to grow market share in both datacenter and edge applications because of its open ISA.\n\n \n\nChallenges such as the lack of real physical hardware that implemented the hypervisor spec for RISC-V existed, coupled with the lack of up-stream projects supporting to various degrees of other specs such as the atomics spec and bit manipulations spec. The latter was especially problematic since various instructions that would be available in x86 based architecture were not present in RISC-V at the time of the work. Problems like this were somewhat expected for a \"reduced\" instruction set but at the same time were problems that your average engineer might not be expected to deal with.\n\n \n\nThe end result is that now companies and end-users utilizing RISC-V don\u2019t have to provision their guest virtual machines with general purpose operating systems instead relying on unikernels. Hardware being made with various machine learning application use-cases, especially those used in domain sets such as autonomous driving and media encoding can heavily benefit from the security and performance benefits unikernels bring.\n\n \n\nThe source code is publicly available on the https://github.com/nanovms/nanos repository.\n\n \n\n\t\t\t\t\tLast Modified: 09/05/2022\n\n\t\t\t\t\tSubmitted by: Ian Eyberg"
 }
}