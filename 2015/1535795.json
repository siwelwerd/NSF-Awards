{
 "awd_id": "1535795",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AitF: FULL: Collaborative Research: Better Hashing for Applications:  From Nuts & Bolts to Asymptotics",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2015-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 250000.0,
 "awd_amount": 250000.0,
 "awd_min_amd_letter_date": "2015-08-06",
 "awd_max_amd_letter_date": "2015-08-06",
 "awd_abstract_narration": "This project engages experts in systems and network algorithms from Carnegie Mellon University and Harvard University to improve hashing-based data structures for systems.  Hashing is an approach that turns a variable length string into a small, fixed-length value.  Hashing  provides a short, consistent fingerprint used to identify larger pieces of data, for uses including storing and locating data items quickly and effectively.  Hashing provides a key building block for sophisticated approaches to storing, measuring, and managing data. Hashing-based data structures have correspondingly become widely accepted, often key workhorses throughout systems and networking.\r\n\r\nThis project will create synergies between theory and systems in the area of hashing, with various approaches for lasting broader impact. Prototype code will be released for new algorithms and data structures created in the course of the project.  Curricular materials focused on project material will be developed and distributed.  The project will offer a wide range of research opportunities at various levels of sophistication for graduate and undergraduate students at both universities.\r\n\r\nThe team unites expertise with theoretical design and analysis with expertise in systems design and analysis, allowing ideas and insights to flow between the two sides.  The work starts from the lowest level of what choice of what hash functions to use, through the design and analysis of general data structures, to the development of applications that utilize hashing-based data structures to provide top performance.  Project goals include both improving existing structures such as Bloom filters and cuckoo hash tables in practical systems to developing new structures for related problems such as maintaining small structures for fast function evaluation on key sets and reconciliation of datasets.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Michael",
   "pi_last_name": "Mitzenmacher",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Michael Mitzenmacher",
   "pi_email_addr": "michaelm@eecs.harvard.edu",
   "nsf_id": "000439480",
   "pi_start_date": "2015-08-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Harvard University",
  "inst_street_address": "1033 MASSACHUSETTS AVE STE 3",
  "inst_street_address_2": "",
  "inst_city_name": "CAMBRIDGE",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6174955501",
  "inst_zip_code": "021385366",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "MA05",
  "org_lgl_bus_name": "PRESIDENT AND FELLOWS OF HARVARD COLLEGE",
  "org_prnt_uei_num": "",
  "org_uei_num": "LN53LCFJFL45"
 },
 "perf_inst": {
  "perf_inst_name": "Harvard University SEAS",
  "perf_str_addr": "33 Oxford St., 331 MD",
  "perf_city_name": "Cambridge",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021382933",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "MA05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "723900",
   "pgm_ele_name": "Algorithms in the Field"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "012Z",
   "pgm_ref_txt": "AitF FULL Projects"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 250000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The goal of this project was to advance the area of hashing applications.&nbsp; Hashing is a basic primitive in computer science, use to map an item a random value that can be used as an identifier, to give a location (in table), or for a variety of other purposes.&nbsp; Hashing is a building block for many algorithms and data structures, and in particular is used to help design Internet scale systems.&nbsp; It is also an area where&nbsp;<span>theory and practice can interrelate strongly, with new theoretical ideas enabling more efficient and new kinds of systems, and system development and design leading to not only highly practical products, but new questions and challenges that require theoretical analysis.&nbsp;&nbsp;</span></p>\n<p>Outcomes of the project include the following:</p>\n<p>1) New algorithms and analyses for network telemtry, including efficient mechanisms for reducing the overhead per packet required while still allowing robust network measurements for applications such as congestion control, path tracing, and flow monitoring.&nbsp;&nbsp;</p>\n<p>2) For some data structures that use hashing (such as Bloom filters), the structure is allowed to give wrong answers, or false positives, a certain fraction of the time.&nbsp; In some settings, however, the data structure can be asked the same question repeatedly -- for example, a browser security system might ask if a certain URL is unsafe.&nbsp; In such cases, when a false positive is found, it may be useful to remove the false positive to prevent if from reoccurring.&nbsp; As part of the project, new variations of data structures that adapt have been developed, and the framework for developing adaptive versions of such data structures has been formally introduced.&nbsp;&nbsp;</p>\n<p>3) The idea of using machine learning to enchance existing hash-based data structures, such as Bloom filters, has been explored and analyzed.&nbsp; In this setting, a machine-learning based predictor can offer a first prediction as to whether an element is in a set or not.&nbsp; By layering this predictor with a standard Bloom filter data structure, we can gain improvements over either the predictor or Bloom filter alone, with provable performance guarantees.</p>\n<p>4) Many hash-based data structures use multiple hash functions, corresponding to multiple choices of locations where an element can be found.&nbsp; A simple version of this approach, double hashing, using just two hash functions to generate multiple choices, in a natural way.&nbsp; (If the two hash functions return values x and y, we use x, x+y, x+2y, x+3y, ... and so on if more than two choices are needed.)&nbsp; We have shown this simple improvement that yields better computation speed does not hurt the accuracy performance of the data structures that use a separate hash function for each choice, simpflying several hash-based data structures.</p>\n<p>5) We have developed new reconciliation algorithms, for settings where two agents have nearly the object, and have to determine the differences with small amounts of communication.&nbsp; For example, our algorithms apply to graphs, where two parties may have nearly the same graph but differ in a small number of edges, and they want to determine the differences with as little communication as possible.&nbsp; In particular, the communicaiton should depend on the number of differences, which should be small, and not the size of the graph, which could be very large.&nbsp;&nbsp;</p>\n<p>Beyond the research advances funded by this proposal, the proposal has led to training of postdoctoral researchers, graduate students, and undergraduates, either direclty or by supporting the PI.&nbsp; In particular, the PI has worked with several undergraduates by advising theses or summer research projects, with some going to graduate school and others into industry positions.&nbsp; The proposal has also supported the PIs educational efforts, including survey articles and book chapters, and outreach to the data science community.&nbsp;&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/13/2020<br>\n\t\t\t\t\tModified by: Michael&nbsp;Mitzenmacher</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe goal of this project was to advance the area of hashing applications.  Hashing is a basic primitive in computer science, use to map an item a random value that can be used as an identifier, to give a location (in table), or for a variety of other purposes.  Hashing is a building block for many algorithms and data structures, and in particular is used to help design Internet scale systems.  It is also an area where theory and practice can interrelate strongly, with new theoretical ideas enabling more efficient and new kinds of systems, and system development and design leading to not only highly practical products, but new questions and challenges that require theoretical analysis.  \n\nOutcomes of the project include the following:\n\n1) New algorithms and analyses for network telemtry, including efficient mechanisms for reducing the overhead per packet required while still allowing robust network measurements for applications such as congestion control, path tracing, and flow monitoring.  \n\n2) For some data structures that use hashing (such as Bloom filters), the structure is allowed to give wrong answers, or false positives, a certain fraction of the time.  In some settings, however, the data structure can be asked the same question repeatedly -- for example, a browser security system might ask if a certain URL is unsafe.  In such cases, when a false positive is found, it may be useful to remove the false positive to prevent if from reoccurring.  As part of the project, new variations of data structures that adapt have been developed, and the framework for developing adaptive versions of such data structures has been formally introduced.  \n\n3) The idea of using machine learning to enchance existing hash-based data structures, such as Bloom filters, has been explored and analyzed.  In this setting, a machine-learning based predictor can offer a first prediction as to whether an element is in a set or not.  By layering this predictor with a standard Bloom filter data structure, we can gain improvements over either the predictor or Bloom filter alone, with provable performance guarantees.\n\n4) Many hash-based data structures use multiple hash functions, corresponding to multiple choices of locations where an element can be found.  A simple version of this approach, double hashing, using just two hash functions to generate multiple choices, in a natural way.  (If the two hash functions return values x and y, we use x, x+y, x+2y, x+3y, ... and so on if more than two choices are needed.)  We have shown this simple improvement that yields better computation speed does not hurt the accuracy performance of the data structures that use a separate hash function for each choice, simpflying several hash-based data structures.\n\n5) We have developed new reconciliation algorithms, for settings where two agents have nearly the object, and have to determine the differences with small amounts of communication.  For example, our algorithms apply to graphs, where two parties may have nearly the same graph but differ in a small number of edges, and they want to determine the differences with as little communication as possible.  In particular, the communicaiton should depend on the number of differences, which should be small, and not the size of the graph, which could be very large.  \n\nBeyond the research advances funded by this proposal, the proposal has led to training of postdoctoral researchers, graduate students, and undergraduates, either direclty or by supporting the PI.  In particular, the PI has worked with several undergraduates by advising theses or summer research projects, with some going to graduate school and others into industry positions.  The proposal has also supported the PIs educational efforts, including survey articles and book chapters, and outreach to the data science community.  \n\n\t\t\t\t\tLast Modified: 09/13/2020\n\n\t\t\t\t\tSubmitted by: Michael Mitzenmacher"
 }
}