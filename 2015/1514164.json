{
 "awd_id": "1514164",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Medium: Collaborative Research: Information Compression in Algorithm Design and Statistical Physics",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2015-06-15",
 "awd_exp_date": "2020-05-31",
 "tot_intn_awd_amt": 461342.0,
 "awd_amount": 461342.0,
 "awd_min_amd_letter_date": "2015-06-08",
 "awd_max_amd_letter_date": "2018-04-13",
 "awd_abstract_narration": "The existence of connections between probabilistic algorithms, statistical physics and information theory has been known for decades and has yielded a number of unexpected breakthroughs. Recent discoveries of the PIs and other researchers give clear indications that these connections go much deeper than previously thought. A key new idea is the realization that stochastic local search algorithms can be judged by their capacity to compress the randomness they consume, with convergence following as a consequence of compressibility. Further exploration of this idea is expected to have significant impact, both conceptual and technical, in multiple scientific fields. This includes algorithm design by information theoretic methods, the study of phase transitions in statistical mechanical systems based on information bottleneck arguments, and non-constructive proofs of existence of combinatorial objects. The project will offer a wide range of research opportunities at various levels of sophistication for graduate and undergraduate students in three state universities.\r\n\r\nInformation compression arguments have recently found striking applications in computer science and combinatorics. A glowing example is Moser's proof of the algorithmic Lovasz Local Lemma, which suggested an entirely new way of reasoning about randomized algorithms. Inspired by the work of Moser, one of the PIs with a collaborator has very recently created a general framework for analyzing stochastic local search algorithms using information compression. The framework is purely algorithmic, completely bypassing the Probabilistic Method. Besides helping to analyze the running times of existing algorithms it can also be used as a powerful new tool for designing novel, non-obvious randomized algorithms. The proposed research further develops this framework with the aim of unearthing completely new applications in computer science and combinatorics, while establishing mathematically rigorous connections to statistical physics. Concrete examples of such applications to be investigated include new tools for bounding the mixing time of Markov chains and algebraic connections between randomized algorithms and the classical theory of phase transitions in statistical physics.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Eric",
   "pi_last_name": "Allender",
   "pi_mid_init": "W",
   "pi_sufx_name": "",
   "pi_full_name": "Eric W Allender",
   "pi_email_addr": "Allender@cs.rutgers.edu",
   "nsf_id": "000391611",
   "pi_start_date": "2018-04-13",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Mario",
   "pi_last_name": "Szegedy",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Mario Szegedy",
   "pi_email_addr": "szegedy@cs.rutgers.edu",
   "nsf_id": "000297467",
   "pi_start_date": "2015-06-08",
   "pi_end_date": "2018-04-13"
  }
 ],
 "inst": {
  "inst_name": "Rutgers University New Brunswick",
  "inst_street_address": "3 RUTGERS PLZ",
  "inst_street_address_2": "",
  "inst_city_name": "NEW BRUNSWICK",
  "inst_state_code": "NJ",
  "inst_state_name": "New Jersey",
  "inst_phone_num": "8489320150",
  "inst_zip_code": "089018559",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "NJ12",
  "org_lgl_bus_name": "RUTGERS, THE STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "M1LVPE5GLSD9"
 },
 "perf_inst": {
  "perf_inst_name": "Rutgers University New Brunswick",
  "perf_str_addr": "110 Frelinghuysen Road",
  "perf_city_name": "Piscataway",
  "perf_st_code": "NJ",
  "perf_st_name": "New Jersey",
  "perf_zip_code": "088548072",
  "perf_ctry_code": "US",
  "perf_cong_dist": "06",
  "perf_st_cong_dist": "NJ06",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 461342.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Which functions are hard to compute, and which are easy?&nbsp; Which strings  contain a lot of information, and which do not?&nbsp; Although these  questions may seem unrelated, there are actually close connections  between the two.&nbsp; The best known approaches to measuring the amount of  information in a string center on the question of how much a string can  be compressed.&nbsp; More precisely, algorithmic information theory (also  known as Kolmogorov complexity) equates the information content of a  string with the length of its shortest description.&nbsp;&nbsp; This notion of  information is also closely connected with (and can provide an  alternative definition of) entropy, which arises in many fields of  study, including physics.&nbsp; A variant of Kolmogorov complexity, called  KT, takes into account not only the length of the shortest description  of a string, but also the time required to obtain the string from its  description.&nbsp; The KT complexity of the graph of a function turns out to  be an approximation of the circuit size that is required to compute the  function.</p>\n<p class=\"indentedCitation\">The fifteen  publications that acknowledge the support of this grant (one of which  won a best student paper award) span a variety of topics related  compression and complexity.&nbsp; Much of the work centers on the Minimum  Circuit Size Problem (MCSP), and the related problem of determining the  KT complexity of a string (called MKTP).&nbsp; Work supported by the grant  established that certain approximations to MCSP and MKTP are of  intermediate complexity (neither tractable nor NP-complete) if  cryptographically-secure one-way functions exist, and other  approximations are provably not NP-hard under a well-studied notion of  reducibility.&nbsp; In addition, tighter connections were established between the  problem of computing the entropy of a distribution and computing KT  complexity; it remains an important open question whether this  connection also holds between computing entropy and MCSP.</p>\n<p class=\"indentedCitation\">Work supported  by the grant also made progress on phase transitions in physical systems  (using the techniques of theoretical computer science to attack a  problem in physics), and on phase transitions in algorithmic behavior  (between classes of input instances where an algorithm performs quickly,  and where it requires a long run-time).</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/08/2020<br>\n\t\t\t\t\tModified by: Eric&nbsp;W&nbsp;Allender</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nWhich functions are hard to compute, and which are easy?  Which strings  contain a lot of information, and which do not?  Although these  questions may seem unrelated, there are actually close connections  between the two.  The best known approaches to measuring the amount of  information in a string center on the question of how much a string can  be compressed.  More precisely, algorithmic information theory (also  known as Kolmogorov complexity) equates the information content of a  string with the length of its shortest description.   This notion of  information is also closely connected with (and can provide an  alternative definition of) entropy, which arises in many fields of  study, including physics.  A variant of Kolmogorov complexity, called  KT, takes into account not only the length of the shortest description  of a string, but also the time required to obtain the string from its  description.  The KT complexity of the graph of a function turns out to  be an approximation of the circuit size that is required to compute the  function.\nThe fifteen  publications that acknowledge the support of this grant (one of which  won a best student paper award) span a variety of topics related  compression and complexity.  Much of the work centers on the Minimum  Circuit Size Problem (MCSP), and the related problem of determining the  KT complexity of a string (called MKTP).  Work supported by the grant  established that certain approximations to MCSP and MKTP are of  intermediate complexity (neither tractable nor NP-complete) if  cryptographically-secure one-way functions exist, and other  approximations are provably not NP-hard under a well-studied notion of  reducibility.  In addition, tighter connections were established between the  problem of computing the entropy of a distribution and computing KT  complexity; it remains an important open question whether this  connection also holds between computing entropy and MCSP.\nWork supported  by the grant also made progress on phase transitions in physical systems  (using the techniques of theoretical computer science to attack a  problem in physics), and on phase transitions in algorithmic behavior  (between classes of input instances where an algorithm performs quickly,  and where it requires a long run-time).\n\n\t\t\t\t\tLast Modified: 07/08/2020\n\n\t\t\t\t\tSubmitted by: Eric W Allender"
 }
}