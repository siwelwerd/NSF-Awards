{
 "awd_id": "1526875",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CIF: Small: Collaborative Research:Synchronization and Deduplication of Distributed Coded Data: Fundamental Limits and Algorithms",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922981",
 "po_email": "pregalia@nsf.gov",
 "po_sign_block_name": "Phillip Regalia",
 "awd_eff_date": "2015-07-01",
 "awd_exp_date": "2021-06-30",
 "tot_intn_awd_amt": 150000.0,
 "awd_amount": 150000.0,
 "awd_min_amd_letter_date": "2015-06-29",
 "awd_max_amd_letter_date": "2020-03-18",
 "awd_abstract_narration": "Part 1: Coding for distributed storage systems has garnered significant attention in the past few years due to the rapid development of information technologies and the emergence of Big Data formats that need to be stored and disseminated across large-scale networks. As typical distributed systems need to ensure low-latency data access and store a large number of files over a set of nodes connected through a communication network, it is imperative to develop new distributed coding schemes that protect the systems from undesired component failures. The two key functionalities of codes used in distributed systems, namely the reconstruction of files via access to a subset of the nodes and repair of failed nodes, need to be retained when the files are accessed and processed by the users via symbol/block insertion, deletion, or substitution edits. Deletions frequently arise due to system-level data deduplication: when parts of files are deduplicated or edited, the changes in the information content need to be communicated to the redundant storage nodes with minimum communication cost. Current solutions for synchronizing data that underwent edits assume that data is uncoded and they do not fully exploit the distributed nature of information. Furthermore, they mostly ignore the presence of deduplication protocols. This makes distributed storage architectures inefficient in terms of storage, user access times, and error protection. Hence, the goals of the proposed research program are to develop a new set of protocols and coding schemes that will  support a new generation of versatile and updatable coded distributed storage systems. \r\n\r\nPart 2: Building on the preliminary work of the investigators, this proposal aims to set the foundations of the new field of coded synchronization and deduplication, with the goal of deriving fundamental performance limits, developing efficient algorithmic solutions for the two families of problems, and constructing new distributed storage codes that enable synchronization of coded data and coded deduplication. In particular, the proposal addresses the following comprehensive issues: \r\n1) Characterizing the communication rate limits of known and new (un)coded synchronization schemes, trade-offs between deduplication and data repair performance for different structured or encoded data formats and different types of communication channels.\r\n2) Introducing and analyzing the communication rate-distortion (CRD) function for approximate synchronization and deduplication of structured/encoded data, with a special focus on delay-sensitive applications.\r\n3) Developing dynamically updatable synchronization and deduplication algorithms cognizant of the network topology and of different prioritization needs of the users, as encountered in image and video data coding.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Olgica",
   "pi_last_name": "Milenkovic",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Olgica Milenkovic",
   "pi_email_addr": "milenkov@uiuc.edu",
   "nsf_id": "000322789",
   "pi_start_date": "2015-06-29",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Illinois at Urbana-Champaign",
  "inst_street_address": "506 S WRIGHT ST",
  "inst_street_address_2": "",
  "inst_city_name": "URBANA",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "2173332187",
  "inst_zip_code": "618013620",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "IL13",
  "org_lgl_bus_name": "UNIVERSITY OF ILLINOIS",
  "org_prnt_uei_num": "V2PHZ2CSCH63",
  "org_uei_num": "Y8CWNJRCNN91"
 },
 "perf_inst": {
  "perf_inst_name": "University of Illinois at Urbana-Champaign",
  "perf_str_addr": "506 S. Wright Street",
  "perf_city_name": "Urbana",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "618013620",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "IL13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779700",
   "pgm_ele_name": "Comm & Information Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7935",
   "pgm_ref_txt": "COMM & INFORMATION THEORY"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 150000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>It is a common practice to store massive volumes of dynamically changing data in a distributed manner, across different servers and storage centers. As individual servers may fail, data needs to be protected and repaired in terms of added redundancy. It also needs to be dynamically synchronized in order to ensure that all users have access to the most recent copy of a document or file,&nbsp; and deduplicated in order to maintin updates and reduce the storage footprint.&nbsp;</p>\n<p>This project addressed the problem of designing codes that simultaneously enable distributed repair as well as efficient synchronization and deduplication via iterative reconcilliation protocols. The intellectual merit of the project includes&nbsp; the development of specialized methods for repairing multiple missing blocks of information for some of the most frequently used error-control codes termed Reed-Solomon codes, when specifically applied in distributed storage systems. Further contributions include the design of new multi-deletion correcting codes used for iterative file synchronization: Such codes allow physically remote servers to adjust their content using only a small number of rounds of small-volume data exchange. The work also introduced the first solution to the problem of jointly repairing missing information while removing duplicated, redundant content. Broader imapcts of the work are new operational and conceptually simple protocols for deduplication that may be applied in existing distributed storage platforms.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/11/2021<br>\n\t\t\t\t\tModified by: Olgica&nbsp;Milenkovic</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIt is a common practice to store massive volumes of dynamically changing data in a distributed manner, across different servers and storage centers. As individual servers may fail, data needs to be protected and repaired in terms of added redundancy. It also needs to be dynamically synchronized in order to ensure that all users have access to the most recent copy of a document or file,  and deduplicated in order to maintin updates and reduce the storage footprint. \n\nThis project addressed the problem of designing codes that simultaneously enable distributed repair as well as efficient synchronization and deduplication via iterative reconcilliation protocols. The intellectual merit of the project includes  the development of specialized methods for repairing multiple missing blocks of information for some of the most frequently used error-control codes termed Reed-Solomon codes, when specifically applied in distributed storage systems. Further contributions include the design of new multi-deletion correcting codes used for iterative file synchronization: Such codes allow physically remote servers to adjust their content using only a small number of rounds of small-volume data exchange. The work also introduced the first solution to the problem of jointly repairing missing information while removing duplicated, redundant content. Broader imapcts of the work are new operational and conceptually simple protocols for deduplication that may be applied in existing distributed storage platforms.\n\n\t\t\t\t\tLast Modified: 10/11/2021\n\n\t\t\t\t\tSubmitted by: Olgica Milenkovic"
 }
}