{
 "awd_id": "1555599",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: EAGER: Probabilistic Considerations in the Analysis of Algorithms",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Tracy Kimbrel",
 "awd_eff_date": "2015-09-01",
 "awd_exp_date": "2018-08-31",
 "tot_intn_awd_amt": 100000.0,
 "awd_amount": 100000.0,
 "awd_min_amd_letter_date": "2015-08-26",
 "awd_max_amd_letter_date": "2015-08-26",
 "awd_abstract_narration": "One of the main uses for computers is to solve large computational problems of a discrete nature, for example to find ways of optimally routing vehicles to make deliveries within minimum time. To be useful, the amount of computing time needed to solve the problem must be small. Unfortunately, many, if not most of the problems of this nature tend to be of a class for which there is no algorithm that can finish quickly for all problem instances. On the other hand, these problems have to be tackled and it has been noted that algorithms tend to do better than the worst-case scenario might suggest.\r\n\r\nInteger Programming is a framework within which many of these problems can be described. The PI will conduct research on the average performance of algorithms for these problems. The aim is twofold. First, the PI wants to explain, in terms of probability, why the average performance is much better than the worst case. Second, the PI will seek ways to practically exploit the ''friendly'' nature of typical problems, thus leading to more efficient algorithms for Integer Programming.\r\n\r\nThe related problem of Linear Programming has been a spectacular success for mathematics. The Simplex Algorithm and more recent Interior Point Method have enabled us to solve huge linear programs. Integer Programs are superficially similar to Linear Programs and one approach to solving them is through polyhedral methods. We try to approximate the convex hull of the integer solutions and then apply Linear Programming. This has led to the study of Polyhedral Combinatorics. The PI proposes to study Polyhedral Combinatorics within a probabilistic framework. For example, the PI will try to determine the expected number of Gomory cuts needed to solve a pure Integer Program. This will require a combination of probabilistic, geometric, and algorithmic ideas in order to be successful.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "ALAN",
   "pi_last_name": "FRIEZE",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "ALAN FRIEZE",
   "pi_email_addr": "af1p@andrew.cmu.edu",
   "nsf_id": "000208132",
   "pi_start_date": "2015-08-26",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "5000 Forbes Avenue",
  "perf_city_name": "Pittsburgh",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133815",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 100000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Broadly speaking, the outcomes of this report enhance our knowledge of some algorithmic questions in Theoretical Computer Science and of some questions in Probabilistic Combinatorics.&nbsp;</p>\n<p>The algorithmic questions are mainly concerned with a particular hashing algorithm called Cuckoo Hashing. This is a scheme designed to quickly access the contents of large data files. We were able to prove much better bounds on the time taken for a certain simple algorithm that inserts data into a file. We als proved results on the ime for a random walk to visit every node of a network. Such questions arise in searching large networks.</p>\n<p>We also studied algorithmic questions associated with purchasing items on-line when one has to make an immediate decison as to whether a particular object contributes cheaply enough to ones goals.</p>\n<p>We studied some theoretical and practical aspects of Markov chains. Our theoretical studies involved randomly coloring hypergraphs. We proved that a natural Markov Chain Monte Carlo algorithm succeeds rapidly given enough colors. This is the best result so far on this problem.</p>\n<p>We also designed a test to see whether a given state of a Markov Chain is likely to be unbiassed. We applied this test to the Pennsylvania districting map and it showed clear bias in the construction. So much so that it was accepted as fact by judge in a law suit.</p>\n<p>In adddition, we proved many results on the likely structure of randomly constructed networks.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/01/2018<br>\n\t\t\t\t\tModified by: Alan&nbsp;Frieze</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nBroadly speaking, the outcomes of this report enhance our knowledge of some algorithmic questions in Theoretical Computer Science and of some questions in Probabilistic Combinatorics. \n\nThe algorithmic questions are mainly concerned with a particular hashing algorithm called Cuckoo Hashing. This is a scheme designed to quickly access the contents of large data files. We were able to prove much better bounds on the time taken for a certain simple algorithm that inserts data into a file. We als proved results on the ime for a random walk to visit every node of a network. Such questions arise in searching large networks.\n\nWe also studied algorithmic questions associated with purchasing items on-line when one has to make an immediate decison as to whether a particular object contributes cheaply enough to ones goals.\n\nWe studied some theoretical and practical aspects of Markov chains. Our theoretical studies involved randomly coloring hypergraphs. We proved that a natural Markov Chain Monte Carlo algorithm succeeds rapidly given enough colors. This is the best result so far on this problem.\n\nWe also designed a test to see whether a given state of a Markov Chain is likely to be unbiassed. We applied this test to the Pennsylvania districting map and it showed clear bias in the construction. So much so that it was accepted as fact by judge in a law suit.\n\nIn adddition, we proved many results on the likely structure of randomly constructed networks.\n\n \n\n\t\t\t\t\tLast Modified: 11/01/2018\n\n\t\t\t\t\tSubmitted by: Alan Frieze"
 }
}