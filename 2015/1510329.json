{
 "awd_id": "1510329",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CI-EN: Collaborative Research:  TraceLab Community Infrastructure for Replication, Collaboration, and Innovation",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2015-06-01",
 "awd_exp_date": "2018-12-31",
 "tot_intn_awd_amt": 100000.0,
 "awd_amount": 100000.0,
 "awd_min_amd_letter_date": "2015-06-02",
 "awd_max_amd_letter_date": "2015-06-02",
 "awd_abstract_narration": "This is the second phase of the TraceLab project, which was initially funded under an NSF Major Research Instrumentation grant.   The goal of this project is to deliver an instrument that facilitates reproducibility of Software Engineering experiments, fosters comparative evaluation, and provides an environment in which components can be easily shared across research groups.  The challenge of experimental reproducibility extends across almost every science and engineering discipline. Recently, a widely reported study conducted by the biotech firm \"Amgen\" revealed that of 53 previously published landmark papers, only six were reproducible. Recent studies have unearthed similar problems across a diverse set of Software Engineering domains, including, but not limited to, software traceability, feature location, and compiler optimization.  Reproducibility is often undermined by lack of publicly available datasets, obsolete and unavailable tools, insufficient details about the experiment, and undocumented decisions about the way various metrics are computed.  TraceLab provides a plug-and-play experimental environment, as well as libraries of shareable components and seminal experiments.  As such, it is designed to address these problems.\r\n\r\nTraceLab introduces a radically different way of approaching empirical software engineering research and paves the way for greater community collaboration, more rigorous evaluation of results, and an easier entry-way for new researchers.  It is expected to lay the foundation for future advances in the field of empirical software engineering, accelerate and shape future research directions, support industrial pilot studies, and significantly reduce the cost and effort that oftentimes discourages new researchers from entering the field.  In addition, the project will provide opportunities to a diverse group of undergraduate and graduate students, and will be used for educational purposes across various software engineering courses.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Collin",
   "pi_last_name": "McMillan",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Collin McMillan",
   "pi_email_addr": "collin.mcmillan@nd.edu",
   "nsf_id": "000626801",
   "pi_start_date": "2015-06-02",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Notre Dame",
  "inst_street_address": "940 GRACE HALL",
  "inst_street_address_2": "",
  "inst_city_name": "NOTRE DAME",
  "inst_state_code": "IN",
  "inst_state_name": "Indiana",
  "inst_phone_num": "5746317432",
  "inst_zip_code": "465565708",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "IN02",
  "org_lgl_bus_name": "UNIVERSITY OF NOTRE DAME DU LAC",
  "org_prnt_uei_num": "FPU6XGFXMBE9",
  "org_uei_num": "FPU6XGFXMBE9"
 },
 "perf_inst": {
  "perf_inst_name": "University of Notre Dame",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "IN",
  "perf_st_name": "Indiana",
  "perf_zip_code": "465565708",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "IN02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735900",
   "pgm_ele_name": "CCRI-CISE Cmnty Rsrch Infrstrc"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7359",
   "pgm_ref_txt": "COMPUTING RES INFRASTRUCTURE"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 100000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Reproducibility in science has become a major concern for both the scientific community and public interest in general.&nbsp; The concern has been well placed: if scientific findings cannot be replicated, then progress based on those findings is difficult to trust.&nbsp; This project targets the problem of reproducibility in software engineering experiments.&nbsp; The TraceLab infrastructure, of which this project is a part, is an experimental framework for designing, saving, and transferring knowledge about software engineering experiments among different research groups.&nbsp; The infrastructure began specifically for experiments in traceability, but has had its scope widened to include many areas of studies on computer software.&nbsp; The infrastructure breaks experiments into components which can be reconfigured and shared to encourage improvements.<br /><br />This project created TraceLab components for replicating experiments in source code summarization.&nbsp; Code summarization is the problem of automatically writing natural language descriptions of software source code.&nbsp; For example, writing an English description of the behavior of a function written in C source code.&nbsp; Code summarization has been a rapidly growing research area since around 2009, but progress has been stalled due to a lack of easily reproducible experiments.&nbsp; Essentially the problem is that different research groups have needed to build their own experimental infrastructure, processing programs, and datasets.&nbsp; This project envisions a much more efficient solution in which different groups share experimental data via a common infrastructure (TraceLab).<br /><br />Specific deliveries of this project are summarized in three packages associated with published articles.&nbsp; These packages have been released once per year for each year of the project.&nbsp; Each includes all TraceLab components, reproducibility instructions, datasets, and dependencies for key experiments written in that year.&nbsp; The public may view these packages and follow clear, step-by-step instructions for replicating the experiments.&nbsp; The aim is that scientific progress would increase with the availability of these materials.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/22/2019<br>\n\t\t\t\t\tModified by: Collin&nbsp;Mcmillan</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nReproducibility in science has become a major concern for both the scientific community and public interest in general.  The concern has been well placed: if scientific findings cannot be replicated, then progress based on those findings is difficult to trust.  This project targets the problem of reproducibility in software engineering experiments.  The TraceLab infrastructure, of which this project is a part, is an experimental framework for designing, saving, and transferring knowledge about software engineering experiments among different research groups.  The infrastructure began specifically for experiments in traceability, but has had its scope widened to include many areas of studies on computer software.  The infrastructure breaks experiments into components which can be reconfigured and shared to encourage improvements.\n\nThis project created TraceLab components for replicating experiments in source code summarization.  Code summarization is the problem of automatically writing natural language descriptions of software source code.  For example, writing an English description of the behavior of a function written in C source code.  Code summarization has been a rapidly growing research area since around 2009, but progress has been stalled due to a lack of easily reproducible experiments.  Essentially the problem is that different research groups have needed to build their own experimental infrastructure, processing programs, and datasets.  This project envisions a much more efficient solution in which different groups share experimental data via a common infrastructure (TraceLab).\n\nSpecific deliveries of this project are summarized in three packages associated with published articles.  These packages have been released once per year for each year of the project.  Each includes all TraceLab components, reproducibility instructions, datasets, and dependencies for key experiments written in that year.  The public may view these packages and follow clear, step-by-step instructions for replicating the experiments.  The aim is that scientific progress would increase with the availability of these materials.\n\n\t\t\t\t\tLast Modified: 01/22/2019\n\n\t\t\t\t\tSubmitted by: Collin Mcmillan"
 }
}