{
 "awd_id": "1527093",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Assisting Developers in the Creation and Maintenance of Unit Tests",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2015-09-01",
 "awd_exp_date": "2019-08-31",
 "tot_intn_awd_amt": 450000.0,
 "awd_amount": 450000.0,
 "awd_min_amd_letter_date": "2015-08-14",
 "awd_max_amd_letter_date": "2015-08-14",
 "awd_abstract_narration": "To test software, developers must perform two activities: test\r\ncreation and test maintenance.  The first activity, test creation,\r\nconsists of developing and implementing a test suite---the set of\r\ntests that will be used to evaluate the software.  The second\r\nactivity, test maintenance, consists of both understanding existing\r\ntest cases and evolving them in response to changes in the application\r\nthat is being tested.  Despite decades of work, both of these\r\nactivities are still expensive and labor-intensive.  In this project,\r\nwe will address the need for useful developer support for both test\r\ncreation and test maintenance by investigating and building\r\ncooperative approaches where automated tools and developers work\r\ntogether, each focusing on their respective strengths.  Improving the\r\nefficiency and effectiveness of both testing activities will be\r\nbeneficial in reducing the overall cost of software development and,\r\nat the same time, improving software quality.\r\n\r\n\r\nThis project will contribute to the state of the art by (1) innovating\r\nin the areas of program analysis and natural-language program analysis\r\nand (2) synergistically integrating these two strands of innovations.\r\nFirst, the PIs will investigate cooperative approaches for generating unit\r\ntests based on developer intent to save developer's time and to lower\r\nthe cognitive barrier for writing tests by automating the tedious\r\naspects of test creation.  Second, the PIs will investigate techniques for\r\nimproving the comprehensibility of existing tests by automatically\r\ngenerating various forms of test documentation including descriptive\r\ntest method names and both summary and explanatory comments.  Finally,\r\nthe PIs will quantitatively and qualitatively evaluate and refine the newly\r\ndeveloped techniques to ensure that they are both useful and\r\neffective.  The tools and experimental infrastructure developed within\r\nthe project will be released, which will let researchers and\r\npractitioners build on the project's results.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "James",
   "pi_last_name": "Clause",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "James A Clause",
   "pi_email_addr": "clause@udel.edu",
   "nsf_id": "000610489",
   "pi_start_date": "2015-08-14",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Emily",
   "pi_last_name": "Hill",
   "pi_mid_init": "",
   "pi_sufx_name": "Dr.",
   "pi_full_name": "Emily Hill",
   "pi_email_addr": "emhill@drew.edu",
   "nsf_id": "000604314",
   "pi_start_date": "2015-08-14",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Delaware",
  "inst_street_address": "550 S COLLEGE AVE",
  "inst_street_address_2": "",
  "inst_city_name": "NEWARK",
  "inst_state_code": "DE",
  "inst_state_name": "Delaware",
  "inst_phone_num": "3028312136",
  "inst_zip_code": "197131324",
  "inst_country_name": "United States",
  "cong_dist_code": "00",
  "st_cong_dist_code": "DE00",
  "org_lgl_bus_name": "UNIVERSITY OF DELAWARE",
  "org_prnt_uei_num": "",
  "org_uei_num": "T72NHKM259N3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Delaware",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "DE",
  "perf_st_name": "Delaware",
  "perf_zip_code": "197162553",
  "perf_ctry_code": "US",
  "perf_cong_dist": "00",
  "perf_st_cong_dist": "DE00",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  },
  {
   "pgm_ele_code": "915000",
   "pgm_ele_name": "EPSCoR Co-Funding"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 450000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project contribute to the state of the art by (1) innovating in the areas of program analysis and natural-language program analysis and (2) synergistically integrating these two strands of innovations. The PIs investigated: 1) cooperative approaches for generating unit tests based on developer intent to save developers' time and to lower the cognitive barrier for writing tests by automating the tedious aspects of test creation and 2) techniques for improving the comprehensibility of existing tests by automatically generating various forms of test documentation including descriptive test method names and both summary and explanatory comments. Both areas of investigation were quantitatively and qualitatively evaluated to determine the usefulness and effectiveness of the developed approaches.&nbsp;<br /><br />The research will provide numerous benefits.&nbsp; First, it advanced discovery and understanding by introducing and training bothundergraduate and graduate students, including students from underrepresented groups, in state-of-the-art research in software engineering, particularly in program analysis, testing, and natural-language program analysis.&nbsp; The education component of included interdisciplinary curriculum development that integrated both testing and software engineering with the broader computer science curriculum. Second, infrastructure including prototype tools, experimental subjects was publicly released which enables extending the work, broader experimentation, and training and educating students and professional developers outside of the University of Delaware and Drew University. Third, the results of the research were disseminated though publication in relevant workshops, conferences, and journals. Fourth, the research benefits several groups. Researchers in software engineering benefit from new knowledge, tools, and techniques which enable the practical application of a broad range of new techniques as well as the sharing of ideas across community boundaries.&nbsp; Practicing software developers benefit from tools and techniques that reduce the costs of creating and maintaining tests.&nbsp; The general public benefits from improved software quality.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/22/2019<br>\n\t\t\t\t\tModified by: James&nbsp;A&nbsp;Clause</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project contribute to the state of the art by (1) innovating in the areas of program analysis and natural-language program analysis and (2) synergistically integrating these two strands of innovations. The PIs investigated: 1) cooperative approaches for generating unit tests based on developer intent to save developers' time and to lower the cognitive barrier for writing tests by automating the tedious aspects of test creation and 2) techniques for improving the comprehensibility of existing tests by automatically generating various forms of test documentation including descriptive test method names and both summary and explanatory comments. Both areas of investigation were quantitatively and qualitatively evaluated to determine the usefulness and effectiveness of the developed approaches. \n\nThe research will provide numerous benefits.  First, it advanced discovery and understanding by introducing and training bothundergraduate and graduate students, including students from underrepresented groups, in state-of-the-art research in software engineering, particularly in program analysis, testing, and natural-language program analysis.  The education component of included interdisciplinary curriculum development that integrated both testing and software engineering with the broader computer science curriculum. Second, infrastructure including prototype tools, experimental subjects was publicly released which enables extending the work, broader experimentation, and training and educating students and professional developers outside of the University of Delaware and Drew University. Third, the results of the research were disseminated though publication in relevant workshops, conferences, and journals. Fourth, the research benefits several groups. Researchers in software engineering benefit from new knowledge, tools, and techniques which enable the practical application of a broad range of new techniques as well as the sharing of ideas across community boundaries.  Practicing software developers benefit from tools and techniques that reduce the costs of creating and maintaining tests.  The general public benefits from improved software quality.\n\n\t\t\t\t\tLast Modified: 11/22/2019\n\n\t\t\t\t\tSubmitted by: James A Clause"
 }
}