{
 "awd_id": "1449723",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: SI2-SSI: Removing Bottlenecks in High Performance Computational Science",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Seung-Jong Park",
 "awd_eff_date": "2015-08-01",
 "awd_exp_date": "2021-07-31",
 "tot_intn_awd_amt": 600000.0,
 "awd_amount": 600000.0,
 "awd_min_amd_letter_date": "2015-06-24",
 "awd_max_amd_letter_date": "2015-06-24",
 "awd_abstract_narration": "Computational chemistry has become ubiquitous throughout the fields of science and engineering. Among the many uses of computational chemistry codes are to aid in the design of new materials with specific properties, to understand protein folding dynamics related to the human body, to understand the mechanisms of enzyme catalysis to produce biofuels, and to identify and characterize gaseous species in the atmosphere. Because computational chemistry simulations can require large amounts of computer, memory and disk space, one focus of this research is to reduce the demands on computer resources by exploiting methods that can efficiently fragment large molecules into smaller pieces and at the same time take advantage of computers that have many thousands of computer cores. The principal investigators are developers of several computational chemistry programs, each of which has unique functionalities that have taken multiple person-years to develop and implement. In order to minimize further development efforts and to maximize the utility of the unique features, a second key focus of this research will be to develop the ability of each program to access the unique features and data of the other programs. A major bottleneck in the effort to construct high performance computers with more and more compute cores is the power that is required to drive such systems. One way that the research team will address the power issue is to explore the utility of low power architectures, such as graphical processing units for computational chemistry calculations. All of the newly developed codes will be made available to the user community by web download at no cost.\r\n\r\nThis project presents an integrated computational science approach to very high quality electronic structure and dynamics calculations that will (a) be broadly accessible to both the development and applications communities, (b) have the capability to address problems of great interest, such as the properties of liquids and solvent effects, and photochemical/photobiological dynamics with high accuracy, (c) provide interoperability and sustainability into the foreseeable future, and (d) solve bottlenecks including power consumption using accelerators. A primary goal is to provide to the broad community new, accurate approaches that may be easily used, with a clear path forward to further code improvement and development. As part of the proposed effort, in addition to the usual outlets of journal articles and public presentations, the investigators will organize workshops at prominent national meetings, so that the expertise and software developed will be available to as broad a group of users as possible.  All of the developed codes will be available on the web for easy downloads. The proposed research will develop new paradigms for interoperability, with a focus on the highly popular program suites GAMESS, NWChem, PSI4  and the AIMS dynamics code. Also included will be a cloud-based client-server model, a common quantum chemistry driver and novel data management approaches. The integration of the codes will be accomplished by making use of the combined expertise of the PIs in developing interoperable methods and data interfaces in computational science. In addition, several new methods will be developed, including novel explicit (R12) correlation methods that will be integrated with the most accurate levels of theory: multi-reference and the most accurate and novel coupled cluster methods, as well as the derivation and implementation of analytic derivatives. Applicability to large molecular systems will be made feasible by drawing upon novel fragmentation methods that scale nearly perfectly to the petascale.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Charles",
   "pi_last_name": "Sherrill",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "Charles D Sherrill",
   "pi_email_addr": "sherrill@gatech.edu",
   "nsf_id": "000349219",
   "pi_start_date": "2015-06-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Georgia Tech Research Corporation",
  "inst_street_address": "926 DALNEY ST NW",
  "inst_street_address_2": "",
  "inst_city_name": "ATLANTA",
  "inst_state_code": "GA",
  "inst_state_name": "Georgia",
  "inst_phone_num": "4048944819",
  "inst_zip_code": "303186395",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "GA05",
  "org_lgl_bus_name": "GEORGIA TECH RESEARCH CORP",
  "org_prnt_uei_num": "EMW9FC8J3HN4",
  "org_uei_num": "EMW9FC8J3HN4"
 },
 "perf_inst": {
  "perf_inst_name": "Georgia Institute of Technology",
  "perf_str_addr": "225 North Avenue NW",
  "perf_city_name": "Atlanta",
  "perf_st_code": "GA",
  "perf_st_name": "Georgia",
  "perf_zip_code": "303320002",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "GA05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "125300",
   "pgm_ele_name": "OFFICE OF MULTIDISCIPLINARY AC"
  },
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "8009",
   "pgm_ref_txt": "Scientifc Software Integration"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 600000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>In this collaborative project, we created software to enhance interoperability and sustainability of software elments in the field of computational chemistry.&nbsp; In modern research, thousands of scientists and engineers use computational chemistry in their work, to predict the behavior of molecules or collections of molecules.&nbsp; There are quite a few computational chemistry software packages available, some freely-available and open-source, and others commerical programs.&nbsp; Each of these programs has different strengths and weaknesses.&nbsp; Our project aimed to make it easier for researchers to use computational chemistry software for complex tasks, particularly ones where different pieces of software might be best for different parts of the overall task.&nbsp; Collaborators in our project represented several major quantum chemistry programs, and we worked closely to design and develop our interoperability software.&nbsp; The NSF Molecular Sciences Software Institute (MolSSI), formed after our project began, also had strong interests in interoperability of computational chemistry software, and so in the latter part of our project, we collaborated with MolSSI in our work.&nbsp;&nbsp;</p>\n<p>The collaborative team enhanced interoperabilty between the Psi4, GAMESS, NWChem, and CFOUR quantum chemistry programs, and many other major programs and supporting software elements.&nbsp; Working with MolSSI, we helped develop the QCSchema standard data interchange format for quantum chemistry data.&nbsp; We developed QCElemental, a software library providing basic information for computational chemistry (e.g., information from the periodic table, physical constants, etc.) and an ability to convert vector quantities to a standard reference frame (necessary to combine vector quantities like energy gradients from different quantum chemistry programs).&nbsp; We helped MolSSI develop QCEngine, a library to run quantum chemistry programs in a standard way.&nbsp; We developed QCDB, a user front-end/driver that provides a unified user interface to many quantum chemistry programs (thanks to QCEngine), and that provides code for many standard operations in quantum chemistry (e.g., automatic counterpoise correction).&nbsp; &nbsp;All of this software is made freely available to the public as open-source software.</p>\n<p>As a broader impact of this work, these software elements will make it easier for molecular scientists to incorporate computational chemistry into complex workflows.&nbsp; The managing of the computations can be handled in a unified way, and data more easily handled and translated, thanks to these software tools.&nbsp; This will make it easier for molecular scientists to study complex problems in crystal engineering, catalyst design, drug design, and other difficult projects.&nbsp; This project also provided excellent training opportunities to project personnel in software and data structure design, software engineering, and software sustainability practices.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/29/2021<br>\n\t\t\t\t\tModified by: Charles&nbsp;D&nbsp;Sherrill</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIn this collaborative project, we created software to enhance interoperability and sustainability of software elments in the field of computational chemistry.  In modern research, thousands of scientists and engineers use computational chemistry in their work, to predict the behavior of molecules or collections of molecules.  There are quite a few computational chemistry software packages available, some freely-available and open-source, and others commerical programs.  Each of these programs has different strengths and weaknesses.  Our project aimed to make it easier for researchers to use computational chemistry software for complex tasks, particularly ones where different pieces of software might be best for different parts of the overall task.  Collaborators in our project represented several major quantum chemistry programs, and we worked closely to design and develop our interoperability software.  The NSF Molecular Sciences Software Institute (MolSSI), formed after our project began, also had strong interests in interoperability of computational chemistry software, and so in the latter part of our project, we collaborated with MolSSI in our work.  \n\nThe collaborative team enhanced interoperabilty between the Psi4, GAMESS, NWChem, and CFOUR quantum chemistry programs, and many other major programs and supporting software elements.  Working with MolSSI, we helped develop the QCSchema standard data interchange format for quantum chemistry data.  We developed QCElemental, a software library providing basic information for computational chemistry (e.g., information from the periodic table, physical constants, etc.) and an ability to convert vector quantities to a standard reference frame (necessary to combine vector quantities like energy gradients from different quantum chemistry programs).  We helped MolSSI develop QCEngine, a library to run quantum chemistry programs in a standard way.  We developed QCDB, a user front-end/driver that provides a unified user interface to many quantum chemistry programs (thanks to QCEngine), and that provides code for many standard operations in quantum chemistry (e.g., automatic counterpoise correction).   All of this software is made freely available to the public as open-source software.\n\nAs a broader impact of this work, these software elements will make it easier for molecular scientists to incorporate computational chemistry into complex workflows.  The managing of the computations can be handled in a unified way, and data more easily handled and translated, thanks to these software tools.  This will make it easier for molecular scientists to study complex problems in crystal engineering, catalyst design, drug design, and other difficult projects.  This project also provided excellent training opportunities to project personnel in software and data structure design, software engineering, and software sustainability practices.\n\n\t\t\t\t\tLast Modified: 10/29/2021\n\n\t\t\t\t\tSubmitted by: Charles D Sherrill"
 }
}