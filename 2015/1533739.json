{
 "awd_id": "1533739",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "XPS:FULL:DSD: Collaborative Research: FPGA Cloud Platform for Deep Learning, Applications in Computer Vision",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2015-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 574044.0,
 "awd_amount": 574044.0,
 "awd_min_amd_letter_date": "2015-08-13",
 "awd_max_amd_letter_date": "2015-08-13",
 "awd_abstract_narration": "We stand on the verge of dramatic advances in deep learning applications, which will soon enable practicality and widespread adoption of computer vision based recognition in scientific inquiry, commercial applications, and everyday life.  Grand challenge problems are within our reach; we will soon be able to build automated systems that recognize nearly everything we see, systems that can recognize the tens of thousands of basic-level categories that psychologists posit humans can recognize, systems that continuously learn from photos, video, and web content in order to create more complete and accurate visual models of the world.  However, while it is clear that the computational capabilities for deep learning are within reach, it is equally clear that the required computational power cannot come from general-purpose processors.  To succeed, we will need to build specialized domain-specific computing systems based on hardware accelerators that are capable of exploiting the extreme fine-grained parallelism inherent in deep-learning workloads.  This project leverages parallelization and reconfigurable hardware to create an automated system that distributes computer vision algorithms onto a large number of field-programmable gate arrays (FPGA Cloud). \r\n\r\nThis project builds on recent advances in domain-specific hardware generation tools in order to bring the potential parallelism and performance per watt advantages of FPGAs to large-scale computer vision problems.   By developing a platform to run deep learning algorithms on large clouds of FPGAs, this proposal explicitly addresses scaling algorithms beyond what a single chip can process.  This involves addressing a wide range of challenging problems in algorithm analysis, building domain-specific hardware generators, communication for scaling algorithms across multiple FPGAs, and extensive validation of generating hardware for state-of-the-art deep learning approaches applied to computer vision problems.  This project advances tools for designing domain-specific FPGA implementations of algorithms, taking a step toward making more efficient computing with greater parallelism more widely available.  In particular, for computer vision, there will be significant benefits from a product of multiple improvements: higher parallelism, lower gate requirement by moving to fixed point when possible, and better performance per watt leading to higher computation density in servers.  Together, these have the potential to significantly increase the extent to which computer vision can be a part of our daily lives, making computers better able to understand the context of our world.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Michael",
   "pi_last_name": "Ferdman",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Michael Ferdman",
   "pi_email_addr": "mferdman@cs.stonybrook.edu",
   "nsf_id": "000634656",
   "pi_start_date": "2015-08-13",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Peter",
   "pi_last_name": "Milder",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Peter Milder",
   "pi_email_addr": "peter.milder@stonybrook.edu",
   "nsf_id": "000629904",
   "pi_start_date": "2015-08-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "SUNY at Stony Brook",
  "inst_street_address": "W5510 FRANKS MELVILLE MEMORIAL LIBRARY",
  "inst_street_address_2": "",
  "inst_city_name": "STONY BROOK",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6316329949",
  "inst_zip_code": "117940001",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "NY01",
  "org_lgl_bus_name": "THE RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK",
  "org_prnt_uei_num": "M746VC6XMNH9",
  "org_uei_num": "M746VC6XMNH9"
 },
 "perf_inst": {
  "perf_inst_name": "SUNY at Stony Brook",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "117944400",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "NY01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "828300",
   "pgm_ele_name": "Exploiting Parallel&Scalabilty"
  }
 ],
 "pgm_ref": null,
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 574044.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Deep neural networks have revolutionized many fields including computer vision, natural language processing, fraud detection, bioinformatics, and many other domains with a wide range of commercial and scientific applications. Convolutional neural networks (CNNs), primarily used to solve computer vision challenges, are at the vanguard of this transformation. However, CNNs exhibit immense computational costs, necessitating hardware acceleration.</p>\n<p>The goal of this project was to develop technologies for leveraging field-programmable gate arrays (FPGAs) for cloud-scale computation. FPGAs exhibit efficiency advantages over CPUs and GPUs; efficient use of FPGAs can greatly improve the practical capabilities of computer vision.&nbsp;</p>\n<p>In the course of this project, we made several key innovations in implementing CNN accelerators, which enable higher efficiency (and therefore higher performance). We evaluated our ideas analytically and through FPGA prototyping, and we developed associated design optimization methods that would allow an automated tool to perform the necessary design exploration to parameterize the architectures that we developed. &nbsp;This work has resulted in papers published and presented at major conferences, including ISCA, MICRO, FCCM, and FPL. The intellectual contributions of this project include:</p>\n<p>- Fused layer convolutional neural network evaluation. &nbsp;We developed a new method for greatly reducing the memory bandwidth required for CNN accelerators. This method works by optimizing the flow of data across CNN layers. &nbsp;Rather than shuffling data on and off chip after each network stage, computation is reordered such that multiple stages can be fused, eliminating intermediate data transfer. Our results show that, on a portion of VGGNet-E, we can reduce the data transfer by 95%, from 77MB down to 3.6MB, at the cost of only 362KB of on-chip storage. &nbsp;This work was published at MICRO'16 and was granted a US patent.</p>\n<p>- Multi-CLP accelerator architecture. &nbsp;We developed a new CNN accelerator paradigm and an accompanying automated design methodology that partitions the available FPGA resources into multiple processors, each of which is tailored for a different subset of the CNN convolutional layers. Using the same FPGA resources as a single large processor, multiple smaller specialized processors increase computational efficiency and lead to a higher overall throughput. Our design methodology achieved 3.8x higher throughput than the state-of-the-art approach on evaluating the popular AlexNet CNN on a Xilinx Virtex-7 FPGA. Initial versions of this technique were published in FCCM'16 and a generalized version was published in ISCA'17.</p>\n<p>- Escher CNN accelerator design. &nbsp;We developed a new accelerator design with a flexible data buffering scheme that ensures a balance between the input and weight transfer bandwidth, significantly reducing overall bandwidth requirements. For example, compared to the state-of-the-art CNN accelerator designs targeting a Virtex-7 690T FPGA, our design reduces the accelerator's peak bandwidth requirements by 2.4&times; across both fully-connected and convolutional layers on fixed-point AlexNet, and reduces convolutional layer bandwidth by up to 10.5&times; on fixed-point GoogLeNet. &nbsp;This work was published at FCCM'17.</p>\n<p>- Medusa memory interconnect. &nbsp;We developed a new memory interconnect specifically suited for Multi-CLP / many-narrow-port accelerators in systems with wide memory buses, such as FPGAs and systems with HBM memories. &nbsp;The Medusa interconnect uses significantly less resources than a traditional interconnect, while allowing it to run at much higher clock rates. &nbsp;This work was published at FPL'18.</p>\n<p>- Argus system. &nbsp;We wrote an overview paper for the IEEE Micro special issue on neural network accelerators that describes the end-to-end framework for CNN accelerators and all of the components developed and prototyped through this project.</p>\n<p>- Argus web-based generator. &nbsp;We created and made publicly and freely available a web site connected to our Argus hardware generator framework that can leverage our technologies to automatically produce optimized CNN designs for a given target network and FPGA. &nbsp;This interactive webpage allows users to log in, select their parameters, and download the resulting hardware design along with the necessary driver and software code to use that hardware.</p>\n<p>In addition to the technical impacts described above, other broader impacts of this project include the creation of a new graduate course on hardware accelerators for deep learning, and the training of PhD students, masters students, and undergraduates.<br /><br /><br /></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/16/2020<br>\n\t\t\t\t\tModified by: Michael&nbsp;Ferdman</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nDeep neural networks have revolutionized many fields including computer vision, natural language processing, fraud detection, bioinformatics, and many other domains with a wide range of commercial and scientific applications. Convolutional neural networks (CNNs), primarily used to solve computer vision challenges, are at the vanguard of this transformation. However, CNNs exhibit immense computational costs, necessitating hardware acceleration.\n\nThe goal of this project was to develop technologies for leveraging field-programmable gate arrays (FPGAs) for cloud-scale computation. FPGAs exhibit efficiency advantages over CPUs and GPUs; efficient use of FPGAs can greatly improve the practical capabilities of computer vision. \n\nIn the course of this project, we made several key innovations in implementing CNN accelerators, which enable higher efficiency (and therefore higher performance). We evaluated our ideas analytically and through FPGA prototyping, and we developed associated design optimization methods that would allow an automated tool to perform the necessary design exploration to parameterize the architectures that we developed.  This work has resulted in papers published and presented at major conferences, including ISCA, MICRO, FCCM, and FPL. The intellectual contributions of this project include:\n\n- Fused layer convolutional neural network evaluation.  We developed a new method for greatly reducing the memory bandwidth required for CNN accelerators. This method works by optimizing the flow of data across CNN layers.  Rather than shuffling data on and off chip after each network stage, computation is reordered such that multiple stages can be fused, eliminating intermediate data transfer. Our results show that, on a portion of VGGNet-E, we can reduce the data transfer by 95%, from 77MB down to 3.6MB, at the cost of only 362KB of on-chip storage.  This work was published at MICRO'16 and was granted a US patent.\n\n- Multi-CLP accelerator architecture.  We developed a new CNN accelerator paradigm and an accompanying automated design methodology that partitions the available FPGA resources into multiple processors, each of which is tailored for a different subset of the CNN convolutional layers. Using the same FPGA resources as a single large processor, multiple smaller specialized processors increase computational efficiency and lead to a higher overall throughput. Our design methodology achieved 3.8x higher throughput than the state-of-the-art approach on evaluating the popular AlexNet CNN on a Xilinx Virtex-7 FPGA. Initial versions of this technique were published in FCCM'16 and a generalized version was published in ISCA'17.\n\n- Escher CNN accelerator design.  We developed a new accelerator design with a flexible data buffering scheme that ensures a balance between the input and weight transfer bandwidth, significantly reducing overall bandwidth requirements. For example, compared to the state-of-the-art CNN accelerator designs targeting a Virtex-7 690T FPGA, our design reduces the accelerator's peak bandwidth requirements by 2.4&times; across both fully-connected and convolutional layers on fixed-point AlexNet, and reduces convolutional layer bandwidth by up to 10.5&times; on fixed-point GoogLeNet.  This work was published at FCCM'17.\n\n- Medusa memory interconnect.  We developed a new memory interconnect specifically suited for Multi-CLP / many-narrow-port accelerators in systems with wide memory buses, such as FPGAs and systems with HBM memories.  The Medusa interconnect uses significantly less resources than a traditional interconnect, while allowing it to run at much higher clock rates.  This work was published at FPL'18.\n\n- Argus system.  We wrote an overview paper for the IEEE Micro special issue on neural network accelerators that describes the end-to-end framework for CNN accelerators and all of the components developed and prototyped through this project.\n\n- Argus web-based generator.  We created and made publicly and freely available a web site connected to our Argus hardware generator framework that can leverage our technologies to automatically produce optimized CNN designs for a given target network and FPGA.  This interactive webpage allows users to log in, select their parameters, and download the resulting hardware design along with the necessary driver and software code to use that hardware.\n\nIn addition to the technical impacts described above, other broader impacts of this project include the creation of a new graduate course on hardware accelerators for deep learning, and the training of PhD students, masters students, and undergraduates.\n\n\n\n\n\t\t\t\t\tLast Modified: 11/16/2020\n\n\t\t\t\t\tSubmitted by: Michael Ferdman"
 }
}