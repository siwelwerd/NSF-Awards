{
 "awd_id": "1512937",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "II-New: PyMTL: A Unified Framework for Vertically Integrated Computer Architecture Research",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927843",
 "po_email": "sabasu@nsf.gov",
 "po_sign_block_name": "Sankar Basu",
 "awd_eff_date": "2015-07-01",
 "awd_exp_date": "2020-06-30",
 "tot_intn_awd_amt": 443689.0,
 "awd_amount": 443689.0,
 "awd_min_amd_letter_date": "2015-06-21",
 "awd_max_amd_letter_date": "2015-06-21",
 "awd_abstract_narration": "This project will develop a new modeling framework to enable compelling new vertically integrated computer architecture research. The framework, called the PyMTL by the PIs, leverages the Python programming language to create a highly productive domain-specific embedded language for concurrent structural modeling and hardware design. The use of Python as a modeling and framework implementation language provides considerable benefit in terms of productivity. The proposal also describes plans for integrating PyMTL into the computer engineering curriculum, and ongoing educational and industry outreach efforts. \r\n\r\nThe project will enable research projects on data-parallel accelerators; accelerators for dynamic programming languages; on-chip interconnection networks; full-chip high-level synthesis; and domain-specific specification and compilation for FPGAs. It is also envisioned that other researchers at PIs' institution, and more broadly within the computer architecture community, will use PyMTL to enable fundamental advances in a variety of areas. The project also consists of a plan for engaging the computer architecture research community through an online based portal, conference tutorials, online tutorials, example lab assignments, cloud-based development environments, and PyMTL beta-testing.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Christopher",
   "pi_last_name": "Batten",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Christopher Batten",
   "pi_email_addr": "cbatten@cornell.edu",
   "nsf_id": "000539036",
   "pi_start_date": "2015-06-21",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Zhiru",
   "pi_last_name": "Zhang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhiru Zhang",
   "pi_email_addr": "zhiruz@cornell.edu",
   "nsf_id": "000631474",
   "pi_start_date": "2015-06-21",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "323 Rhodes Hall",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148533801",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735900",
   "pgm_ele_name": "CCRI-CISE Cmnty Rsrch Infrstrc"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7359",
   "pgm_ref_txt": "COMPUTING RES INFRASTRUCTURE"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 443689.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project aimed to significantly improve the productivity of researchers exploring future computer chips that increasingly integrate a mix of general-purpose processors and specialized accelerators. Exploring such heterogeneous systems requires a vertically integrated research methodology spanning various modeling abstractions, but these abstractions often use distinct languages, design patterns, and tools. This \"computer architecture research methodology gap\" introduces intellectual and technical barriers that make it challenging to pursue research across modeling abstractions. This project developed a unified framework, called PyMTL, to enable productive modeling, exploration, evaluation, and implementation of both general-purpose and specialized architectures at varying levels of design abstraction.</p>\n<p>PyMTL, which stands for \"Python framework for Modeling Towards Layout\", leverages the Python programming language to create a highly productive domain-specific embedded language for concurrent-structural modeling and hardware design. While the use of Python as a modeling and framework implementation language provides considerable benefits in terms of productivity, it also came at the cost of significantly longer simulation times. This project developed just-in-time compilation tools to improve the simulation performance at each level of abstraction. The project also developed systematic methodologies for integrating PyMTL into more traditional modeling frameworks and for generating parameterized area, energy, and timing models.</p>\n<p>PyMTL has been released as an open-source project as part of a new GitHub organization which serves as the heart of the growing PyMTL ecosystem. PyMTL has enabled new research directions in computer systems resulting in numerous research publications across many different universities. PyMTL was a key piece of infrastructure in four different academic tapeouts ranging from small chips with thousands of transistors to massive chips with 100s of millions of transistors. The project included a significant effort to evangelize PyMTL in both academic and industry through invited talks, half-day tutorials, and shorter one-hour tutorials. PyMTL has been tightly integrated into both undergraduate and graduate courses at Cornell University exposing over 500 students to the framework.</p>\n<p>While PyMTL was primarily envisioned as infrastructure for computer architecture researchers, PyMTL is now evolving to be a key piece of infrastructure in support of the open-source hardware movement. Open-source software has been a critical enabler for tremendous innovation in the software ecosystem over the past two decades. Inspired by this success, open-source hardware involves making the high-level description of hardware components freely available for others to study, change, distribute, and ultimately use in fabricating their own hardware components. Unfortunately, open-source hardware has had a relatively bleak history and has yet to offer the same kind of transformative impact in the hardware ecosystem. At the same time, emerging applications in visual computing, data science, and machine learning are demanding more performance with less resources motivating an increasing need for accelerator-centric system-on-chip design. We need hardware startups to drive the next phase of software/hardware innovation, and hardware startups need open-source hardware. Academics have a practical and ethical motivation for using, developing, and promoting open-source electronic design automation tools and open-source hardware designs. This project has enabled PyMTL to become a key enabler of the open-source hardware movement.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/22/2021<br>\n\t\t\t\t\tModified by: Christopher&nbsp;Batten</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project aimed to significantly improve the productivity of researchers exploring future computer chips that increasingly integrate a mix of general-purpose processors and specialized accelerators. Exploring such heterogeneous systems requires a vertically integrated research methodology spanning various modeling abstractions, but these abstractions often use distinct languages, design patterns, and tools. This \"computer architecture research methodology gap\" introduces intellectual and technical barriers that make it challenging to pursue research across modeling abstractions. This project developed a unified framework, called PyMTL, to enable productive modeling, exploration, evaluation, and implementation of both general-purpose and specialized architectures at varying levels of design abstraction.\n\nPyMTL, which stands for \"Python framework for Modeling Towards Layout\", leverages the Python programming language to create a highly productive domain-specific embedded language for concurrent-structural modeling and hardware design. While the use of Python as a modeling and framework implementation language provides considerable benefits in terms of productivity, it also came at the cost of significantly longer simulation times. This project developed just-in-time compilation tools to improve the simulation performance at each level of abstraction. The project also developed systematic methodologies for integrating PyMTL into more traditional modeling frameworks and for generating parameterized area, energy, and timing models.\n\nPyMTL has been released as an open-source project as part of a new GitHub organization which serves as the heart of the growing PyMTL ecosystem. PyMTL has enabled new research directions in computer systems resulting in numerous research publications across many different universities. PyMTL was a key piece of infrastructure in four different academic tapeouts ranging from small chips with thousands of transistors to massive chips with 100s of millions of transistors. The project included a significant effort to evangelize PyMTL in both academic and industry through invited talks, half-day tutorials, and shorter one-hour tutorials. PyMTL has been tightly integrated into both undergraduate and graduate courses at Cornell University exposing over 500 students to the framework.\n\nWhile PyMTL was primarily envisioned as infrastructure for computer architecture researchers, PyMTL is now evolving to be a key piece of infrastructure in support of the open-source hardware movement. Open-source software has been a critical enabler for tremendous innovation in the software ecosystem over the past two decades. Inspired by this success, open-source hardware involves making the high-level description of hardware components freely available for others to study, change, distribute, and ultimately use in fabricating their own hardware components. Unfortunately, open-source hardware has had a relatively bleak history and has yet to offer the same kind of transformative impact in the hardware ecosystem. At the same time, emerging applications in visual computing, data science, and machine learning are demanding more performance with less resources motivating an increasing need for accelerator-centric system-on-chip design. We need hardware startups to drive the next phase of software/hardware innovation, and hardware startups need open-source hardware. Academics have a practical and ethical motivation for using, developing, and promoting open-source electronic design automation tools and open-source hardware designs. This project has enabled PyMTL to become a key enabler of the open-source hardware movement.\n\n\t\t\t\t\tLast Modified: 02/22/2021\n\n\t\t\t\t\tSubmitted by: Christopher Batten"
 }
}