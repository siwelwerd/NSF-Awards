{
 "awd_id": "1539069",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "VEC: Small: Collaborative Research: The Visual Computing Database: A Platform for Visual Data Processing and Analysis at Internet Scale",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Maria Zemankova",
 "awd_eff_date": "2015-10-01",
 "awd_exp_date": "2018-09-30",
 "tot_intn_awd_amt": 110228.0,
 "awd_amount": 110228.0,
 "awd_min_amd_letter_date": "2015-09-04",
 "awd_max_amd_letter_date": "2015-09-22",
 "awd_abstract_narration": "This project develops a new parallel computing platform, namely Visual Computing Database, that facilitates the development of applications that require visual data analysis at massive scale. The developed system combines ideas from traditional relational database management systems (to more easily and powerfully organize and manage visual data collections) with modern graphics programming abstractions for efficiently manipulating pixel data. This project implements a prototype of the visual computing database, release it as an open source project to the community, and deploys the system at scale as a service to scientists and researchers on the Google Cloud Platform. There is strong evidence that in domains ranging from personal digital assistants that interpret one's surroundings, to management of critical infrastructure in smart cities, and to scientific data analysis, a fundamental requirement of the next generation of visual and experiential computing (VEC) applications will be the efficient analysis and mining of large repositories of visual data (images, videos, RGBD, etc.). Scaling visual data analysis applications to operate on collections such as the photos and videos on Facebook and YouTube, the traffic cameras in a city, or petabytes of images in a digital sky survey, presents significant computer science challenges due to the size of visual data representations and the computational expense of algorithms understanding and manipulating large image datasets. The difficulty of developing efficient, supercomputing scale applications from scratch inhibits the field's ability to explore advanced data-driven VEC applications. \r\n\r\nA central aspect of the project is the design of a new visual data query language that integrates concepts from high performance, functional image processing languages with relational operators and spatial and temporal predicates, providing the ability to execute sequences of complex image/video analysis operations with high efficiency in the database (near the data store). Since visual analysis workloads involve tight integration of data retrieval operations and processing of the result sets (e.g., largescale machine learning, image registration/alignment, and 3D reconstruction), a key design challenge is making the results of database operations easily accessible to non-relational, supercomputing scale computations. All together the project addresses fundamental systems design questions such as: what is a good visual query language for future visual data analysis tasks? How can key operations be implemented efficiently on throughput hardware at scale? What are the appropriate benchmarks for evaluating visual data analysis systems at scale?\r\n\r\nURL: http://graphics.cs.cmu.edu/projects/visualdb",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Kayvon",
   "pi_last_name": "Fatahalian",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Kayvon Fatahalian",
   "pi_email_addr": "kayvonf@cs.stanford.edu",
   "nsf_id": "000624440",
   "pi_start_date": "2015-09-04",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "5000 Forbes Ave",
  "perf_city_name": "Pittsburgh",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133890",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "164000",
   "pgm_ele_name": "Information Technology Researc"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "002Z",
   "pgm_ref_txt": "Intel/NSF VEC Partnership"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 110228.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-82c3a247-7fff-fd0e-9b9c-318316adc837\"> <span id=\"docs-internal-guid-cd1214d7-7fff-4ebd-6de1-9f35b27d947b\">&nbsp;</span></span></p>\n<p><span id=\"docs-internal-guid-298b3ffc-7fff-e380-4056-edbae53da353\">\n<p dir=\"ltr\"><span>An increasing number of computer graphics and vision applications depend on processing and analyzing large video collections. Unfortunately, very few programmers have the capability to operate efficiently at these scales, inhibiting the field's ability to explore advanced data-driven visual computing applications. In response, this project has focused on the design of new systems for efficient and productive video analysis at scale.</span></p>\n<p dir=\"ltr\"><span>In particular, our efforts have revolved around two central questions. &nbsp;(1) What are the requirements of a runtime system for efficiently executing video processing computations at scale? (2) What is the right programming system for the emerging field of large-scale visual data analytics? </span></p>\n<p dir=\"ltr\"><span>We addressed the first question via the design of Scanner, a distributed system for video processing at scale. &nbsp;</span><span>Scanner organizes video collections as tables in a data store optimized for sampling frames from compressed video, and executes pixel processing computations, expressed as dataflow graphs, on these frames. The Scanner runtime schedules video analysis applications expressed using these abstractions onto heterogeneous hardware, such as multi-core CPUs, GPUs, and media processing ASICs, for high-throughput pixel processing. &nbsp;&nbsp;We have demonstrated Scanner&rsquo;s use on both graphics and video analytics applications running on hundreds of GPUs and thousands of CPU cores in the cloud. Scanner is available as an open source project, and has since been used in industry settings, such as for VR video processing at Facebook.</span></p>\n<p dir=\"ltr\"><span>Scanner provides the ability to process large video collections, but a second aspect of the project centered on developing new systems that help analysts extract value from these datasets. &nbsp;Specifically, we have developed systems that </span><span>allow a user to go from a high-level question about a large collection of video, to a visual query, and then to an answer in a short period of time. &nbsp;For example, &ldquo;</span><span>What is the screen time given to hosts during TV news interviews&rdquo; in the last decade of CNN broadcasts? Or &ldquo;How often does a cinematic idiom such as &ldquo;shot-reverse-shot&rdquo; editing appear in a database of hundreds of Hollywood films&rdquo;?</span><span> &nbsp;</span><span>Our system is based on programmatic composition of multi-modal, spatiotemporal labels extracted from video. &nbsp;By combining basic primitives such as face detections, human pose estimates, phrases in transcripts, etc, we demonstrated it is possible to rapidly build higher-level labels that are useful for answering questions like the examples provided above. These queries execute in minutes on large video collections and failures are debuggable, which facilitates rapid iteration on the design of queries. We demonstrated use of this system to answer questions about a database of over 500 Hollywood films, and to address questions about gender representation and bias in a collection of over 200,000 hours of US TV News. </span></p>\n<p dir=\"ltr\"><span>We are proud that over the three-year duration of the project, multiple undergraduate and masters students were afforded the opportunity to particulate in research associated with our research efforts, and have since matriculated to computer science Ph.D. programs at Stanford, MIT, and Berkeley.</span></p>\n</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/11/2019<br>\n\t\t\t\t\tModified by: Kayvon&nbsp;Fatahalian</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n  \n\n\nAn increasing number of computer graphics and vision applications depend on processing and analyzing large video collections. Unfortunately, very few programmers have the capability to operate efficiently at these scales, inhibiting the field's ability to explore advanced data-driven visual computing applications. In response, this project has focused on the design of new systems for efficient and productive video analysis at scale.\nIn particular, our efforts have revolved around two central questions.  (1) What are the requirements of a runtime system for efficiently executing video processing computations at scale? (2) What is the right programming system for the emerging field of large-scale visual data analytics? \nWe addressed the first question via the design of Scanner, a distributed system for video processing at scale.  Scanner organizes video collections as tables in a data store optimized for sampling frames from compressed video, and executes pixel processing computations, expressed as dataflow graphs, on these frames. The Scanner runtime schedules video analysis applications expressed using these abstractions onto heterogeneous hardware, such as multi-core CPUs, GPUs, and media processing ASICs, for high-throughput pixel processing.   We have demonstrated Scanner?s use on both graphics and video analytics applications running on hundreds of GPUs and thousands of CPU cores in the cloud. Scanner is available as an open source project, and has since been used in industry settings, such as for VR video processing at Facebook.\nScanner provides the ability to process large video collections, but a second aspect of the project centered on developing new systems that help analysts extract value from these datasets.  Specifically, we have developed systems that allow a user to go from a high-level question about a large collection of video, to a visual query, and then to an answer in a short period of time.  For example, \"What is the screen time given to hosts during TV news interviews\" in the last decade of CNN broadcasts? Or \"How often does a cinematic idiom such as \"shot-reverse-shot\" editing appear in a database of hundreds of Hollywood films\"?  Our system is based on programmatic composition of multi-modal, spatiotemporal labels extracted from video.  By combining basic primitives such as face detections, human pose estimates, phrases in transcripts, etc, we demonstrated it is possible to rapidly build higher-level labels that are useful for answering questions like the examples provided above. These queries execute in minutes on large video collections and failures are debuggable, which facilitates rapid iteration on the design of queries. We demonstrated use of this system to answer questions about a database of over 500 Hollywood films, and to address questions about gender representation and bias in a collection of over 200,000 hours of US TV News. \nWe are proud that over the three-year duration of the project, multiple undergraduate and masters students were afforded the opportunity to particulate in research associated with our research efforts, and have since matriculated to computer science Ph.D. programs at Stanford, MIT, and Berkeley.\n\n\n \n\n\t\t\t\t\tLast Modified: 03/11/2019\n\n\t\t\t\t\tSubmitted by: Kayvon Fatahalian"
 }
}