{
 "awd_id": "1526695",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "STARSS: Small: Detection of Hardware Trojans Hidden in Unspecified Design Functionality",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2015-10-01",
 "awd_exp_date": "2018-09-30",
 "tot_intn_awd_amt": 300000.0,
 "awd_amount": 300000.0,
 "awd_min_amd_letter_date": "2015-07-31",
 "awd_max_amd_letter_date": "2015-07-31",
 "awd_abstract_narration": "Concern about the security and reliability of our electronic systems and infrastructure is at an all-time high.  Economic factors dictate that the design, manufacturing, testing, and deployment of silicon chips are spread across many companies and countries with different and often conflicting goals and interests. In modern complex digital designs, behaviors at a good fraction of observable output signals for many operational cycles are unspecified and vulnerable to malicious modifications, known as Hardware Trojans.  Since verification and testing is a major bottleneck, currently the verification effort is focused on increasing confidence in the correctness of specified functionality, meaning Trojans modifying unspecified behavior will go undetected. This research focuses on preventing and detecting the insertion of Hardware Trojans in unspecified design space.  Addressing this emerging yet powerful threat, this project advances the field of hardware verification and increases the stability of our society.\r\n\r\nThis project traverses the unspecified design space efficiently by focusing analysis only on portions of the design related to attacker controllable or observable signals.  After identifying potentially dangerous functionality, a mixture of formal and simulation-based methods confirm if the functionality is dangerous, and provide the verification team with a concrete trace illustrating a possible attack scenario. This methodology has been successfully applied to several register-transfer level (RTL) designs.  Additionally, the project will provide metrics allowing design owners to trade-off security with the costs of Trojan prevention/detection, which include area/power/timing overhead, manual effort, and analysis time.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Kwang-Ting",
   "pi_last_name": "Cheng",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Kwang-Ting Cheng",
   "pi_email_addr": "timcheng@ece.ucsb.edu",
   "nsf_id": "000458890",
   "pi_start_date": "2015-07-31",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Cetin",
   "pi_last_name": "Koc",
   "pi_mid_init": "K",
   "pi_sufx_name": "",
   "pi_full_name": "Cetin K Koc",
   "pi_email_addr": "koc@cs.ucsb.edu",
   "nsf_id": "000453941",
   "pi_start_date": "2015-07-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Santa Barbara",
  "inst_street_address": "3227 CHEADLE HALL",
  "inst_street_address_2": "",
  "inst_city_name": "SANTA BARBARA",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8058934188",
  "inst_zip_code": "931060001",
  "inst_country_name": "United States",
  "cong_dist_code": "24",
  "st_cong_dist_code": "CA24",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, SANTA BARBARA",
  "org_prnt_uei_num": "",
  "org_uei_num": "G9QBQDH39DF4"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Santa Barbara",
  "perf_str_addr": "Harold Frank Hall 4108",
  "perf_city_name": "Santa Barbara",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "931069560",
  "perf_ctry_code": "US",
  "perf_cong_dist": "24",
  "perf_st_cong_dist": "CA24",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "8225",
   "pgm_ref_txt": "SaTC Special Projects"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 300000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Concern about the security and reliability of our electronic systems and infrastructure is at an all-time high.&nbsp; &nbsp;Economic factors dictate that the design, manufacturing, testing, and deployment of silicon chips is spread across many companies and countries with different and often conflicting goals and interests. Hardware Trojans, malicious modifications made during the design or fabrication phases of the hardware design life cycle, are a major concern for both semiconductor design houses and the U.S. government.&nbsp; Any party with access to the design has the ability to insert hardware Trojans which are difficult to detect using existing verification and testing strategies.&nbsp;&nbsp;</p>\n<p><br />Due to the complexity of modern chips, a design specification usually only defines a small fraction of behavior. Traditional verification techniques only focus on ensuring the correctness of specified behavior, meaning any hardware Trojans or bugs (malicious or accidental) only affecting unspecified functionality will likely go undetected.&nbsp; &nbsp;The main accomplishment of this project was the development of threat models and pre-silicon verification methodologies for this new stealthy class of Trojan.&nbsp; &nbsp;Over the course of this project we have 1) demonstrated how Trojans modifying only unspecified functionality can leak information for numerous designs, 2) provided formal-based methods to verify unspecified&nbsp;functionality is Trojan-free, and 3) automated characterization of unspecified functionality.&nbsp;</p>\n<p><br />This project has extended research in the verification, testing, and security fields to develop automated methods identifying unspecified design functionality susceptible to malicious modifications and is applicable to a wide range of hardware designs.&nbsp; Since traditional verification and testing excludes analysis of unspecified functionality for efficiency, and focuses primarily on conformance checking, our work has advanced an unexplored research area. Our methodologies will both increase confidence in design correctness as well as prevent/detect the inclusion of malicious Trojan circuitry.&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/25/2018<br>\n\t\t\t\t\tModified by: Kwang-Ting&nbsp;Cheng</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nConcern about the security and reliability of our electronic systems and infrastructure is at an all-time high.   Economic factors dictate that the design, manufacturing, testing, and deployment of silicon chips is spread across many companies and countries with different and often conflicting goals and interests. Hardware Trojans, malicious modifications made during the design or fabrication phases of the hardware design life cycle, are a major concern for both semiconductor design houses and the U.S. government.  Any party with access to the design has the ability to insert hardware Trojans which are difficult to detect using existing verification and testing strategies.  \n\n\nDue to the complexity of modern chips, a design specification usually only defines a small fraction of behavior. Traditional verification techniques only focus on ensuring the correctness of specified behavior, meaning any hardware Trojans or bugs (malicious or accidental) only affecting unspecified functionality will likely go undetected.   The main accomplishment of this project was the development of threat models and pre-silicon verification methodologies for this new stealthy class of Trojan.   Over the course of this project we have 1) demonstrated how Trojans modifying only unspecified functionality can leak information for numerous designs, 2) provided formal-based methods to verify unspecified functionality is Trojan-free, and 3) automated characterization of unspecified functionality. \n\n\nThis project has extended research in the verification, testing, and security fields to develop automated methods identifying unspecified design functionality susceptible to malicious modifications and is applicable to a wide range of hardware designs.  Since traditional verification and testing excludes analysis of unspecified functionality for efficiency, and focuses primarily on conformance checking, our work has advanced an unexplored research area. Our methodologies will both increase confidence in design correctness as well as prevent/detect the inclusion of malicious Trojan circuitry. \n\n\t\t\t\t\tLast Modified: 11/25/2018\n\n\t\t\t\t\tSubmitted by: Kwang-Ting Cheng"
 }
}