{
 "awd_id": "1453171",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: Query Compilation Techniques for Complex Analytics on Enterprise Clusters",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032924481",
 "po_email": "hmunoz@nsf.gov",
 "po_sign_block_name": "Hector Munoz-Avila",
 "awd_eff_date": "2015-06-01",
 "awd_exp_date": "2023-05-31",
 "tot_intn_awd_amt": 550000.0,
 "awd_amount": 550000.0,
 "awd_min_amd_letter_date": "2015-06-09",
 "awd_max_amd_letter_date": "2022-06-10",
 "awd_abstract_narration": "Big data and the evolving field of Data Science are fundamentally shifting the meaning of analytics. Highly complex computations have come to define the typical workload, with jobs ranging from machine learning to large-scale visualization. However, there is a fundamental discrepancy between the availability of analytical tools for big Internet companies and those for non-tech enterprises. Current analytics frameworks, like Spark or Hadoop, are designed to meet the needs of giant Internet companies; that is, they are built to process petabytes of data in cloud deployments consisting of thousands of cheap commodity machines. Yet non-tech companies like banks and retailers - or even the typical data scientist - seldom operate deployments of that size, instead preferring smaller clusters, aka Enterprise clusters, with more reliable hardware. In fact, recent industry surveys reported that the median Hadoop cluster was fewer than 10 nodes, and over 65% of users operate clusters smaller than 50 nodes. Targeting complex analytics workloads on smaller clusters, however, fundamentally changes the way we should design analytics tools. Most current systems focus on the major challenges associated with large cloud deployments, where network and disk I/O are the primary bottleneck and failures are common, where the next generation of analytics frameworks should optimize specifically for the computation bottleneck. As part of this project, the PIs will systematically design a new analytical open-source engine, called Tupleware, build specifically for the infrastructure of non-tech companies. Tupleware will make complex analytics more accessible and push the boundaries of what computations are possible.\r\n\r\nSpecifically, the PIs will design, implement and evaluate various program synthesis, i.e., query compilation techniques, for complex analytics on enterprise clusters with fast interconnects and considerable available memory. Existing query compilation techniques focus on SQL and are not designed for workloads where UDFs and iterations dominate the computation, nor do they target distributed setups; all issues the PIs will address in this proposal. Furthermore, the PIs aim to combine high-level query optimization with compiler technology to holistically optimize complex analytical workflows by considering statistics about the data (e.g., the selectivity of predicates) with low-level statistics about the UDFs (e.g., the number of used registers). Finally, all the results will be integrated into the Tupleware system and thus, made accessible for a broader range of users.\r\n\r\nFor further information see the project web site at: http://tupleware.cs.brown.edu/",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Tim",
   "pi_last_name": "Kraska",
   "pi_mid_init": "K",
   "pi_sufx_name": "",
   "pi_full_name": "Tim K Kraska",
   "pi_email_addr": "kraska@mit.edu",
   "nsf_id": "000635999",
   "pi_start_date": "2015-06-09",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Brown University",
  "inst_street_address": "1 PROSPECT ST",
  "inst_street_address_2": "",
  "inst_city_name": "PROVIDENCE",
  "inst_state_code": "RI",
  "inst_state_name": "Rhode Island",
  "inst_phone_num": "4018632777",
  "inst_zip_code": "029129100",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "RI01",
  "org_lgl_bus_name": "BROWN UNIVERSITY",
  "org_prnt_uei_num": "E3FDXZ6TBHW3",
  "org_uei_num": "E3FDXZ6TBHW3"
 },
 "perf_inst": {
  "perf_inst_name": "Brown University",
  "perf_str_addr": "Office of Sponsored Projects",
  "perf_city_name": "Providence",
  "perf_st_code": "RI",
  "perf_st_name": "Rhode Island",
  "perf_zip_code": "029129093",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "RI01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736400",
   "pgm_ele_name": "Info Integration & Informatics"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7364",
   "pgm_ref_txt": "INFO INTEGRATION & INFORMATICS"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 111592.0
  },
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 115458.0
  },
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 119491.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 101840.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 101619.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-ad6ff558-7fff-61a8-3128-8f654cfd3fdd\"> </span></p>\n<p dir=\"ltr\"><span>The major goal of this project is to investigate the design of analytical frameworks for modern enterprise clusters with fast interconnects and considerable available memory. In particular, the goal is to study the impact of the next generation of network technology and CPU capabilities for complex analytics, as well as to dramatically enhance the state-of-the-art in query compilation techniques to better take advantage of the underlying hardware.&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>As part of the grant we made several major contributions:</span></p>\n<ul>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><strong>Tupleware</strong><span><strong>:</strong> We developed Tupleware and with it several techniques to compile data analytics workflows into efficient programs. Our results showed that Tupleware was able to achieve 2-3 orders-of-magnitude better performance than Spark and other frameworks at that time. Eventually this work inspired the development of Spark Photon. Furthermore, an early version of Tupleware got integrated into Vizdom, an interactive visual data science platform. Vizdom eventually was commercialized as einblick.ai&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><strong>Tuplex</strong><span><strong>:</strong> With Tuplex we went further and developed techniques to compile Python UDF data processing functions used as part of Pandas into efficient code. </span><span>We proposed the idea of hyperspecialization, which generates custom code for each Lambda function to a subset of the input to avoid sampling errors and improve overall efficiency. We showed how Tuplex is able to outperform single-threaded Python and Pandas by 5.8&ndash;18.7x, and parallel Spark and Dask by 5.1&ndash;91x. Moreover, we show how Tuplex outperforms general-purpose Python compilers by 6&ndash;24x, and its generated code comes within 2x of the performance of Weld and Hyper for pure query execution time, while achieving 2&ndash;7x&nbsp; faster end-to-end runtime in a realistic data analytics setting. Tuplex is available as open-source.</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><strong>Learned Sorting</strong><span> is a novel sorting algorithm that, unlike traditional methods, uses fast ML models to boost the sorting speed. The models learn to estimate the input's distribution based on a sample and arrange the keys in sorted order by predicting their empirical cumulative distribution function (eCDF) values. We demonstrated in our SIGMOD 2020 paper how learned sorting is able to outperform more traditional sorting algorithms. Moreover, we developed the first learned external sorting algorithm, ELSAR, which currently leads the sortbenchmark competition in the most energy efficient category (see </span><a href=\"https://sortbenchmark.org/\"><span>https://sortbenchmark.org/</span></a><span>)&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><strong>NAM-DB</strong><span>: We developed a scalable distributed transaction protocol with the very common Snapshot Isolation guarantee for the next generation of RDMA-enabled network technology. We further showed analytically and through experiments, that our NAM-DB architecture&nbsp; achieves nearly linear scale-out. Most notably, for the standard configuration of the TPC-C benchmark, we show that our system scales linearly to over 3.6 million transactions per second on 56 machines, and 6.5 million transactions with locality optimizations, which is 2 million more transactions per second than what FARM achieves on 90 machines. Note, that our total transaction throughput is even higher (14.5 million transactions per second) as TPC-C specifies to only report the new-order transactions.&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span><strong>Chiller</strong>: </span><span>While NAM-DB scales nearly linearly, for high-contented records it remains important to shorten the duration of locks on those items as they help to increase the throughput. Interestingly, this observation leads to a new distributed data-partitioning scheme: data should be partitioned onto machines in a way not to avoid distributed transactions but to minimize the lock-duration time for highly contented items. This lead to the development of Chiller, a novel data partitioning scheme which minimizes lock contention. We further showed that Chiller outperforms traditional partitioning techniques, which try to avoid distributed transactions, by up to a factor of 2 using the TPC-C benchmark and on real-world workloads.</span></p>\n</li>\n</ul>\n<p dir=\"ltr\"><span><br /></span><span>The research findings were published in over 30 papers, several of which appeared at top-tier venues such as SIGMOD, VLDB, or ICDE. Tuplex and ELSAR were open-sourced and ELSAR officially won the sortbenchmark competition. PI Kraska received the Sloan Research Fellowship in 2017, the VLDB Early Career Contribution award in 2018, and Brown's Early Career Research Achievement Award in 2017 partially for the results supported by this grant.&nbsp;</span></p>\n<p dir=\"ltr\"><span>Th grant helped to create two Data Science courses at Brown University, one undergraduate course and one course for Brown&rsquo;s new Data Science master program, and a new Systems for Data Science course at MIT. Finally, the grant directly contributed to the training of 5 PhD students; all of which successfully graduated by now.</span></p><br>\n<p>\n Last Modified: 11/21/2023<br>\nModified by: Tim&nbsp;K&nbsp;Kraska</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n \n\n\nThe major goal of this project is to investigate the design of analytical frameworks for modern enterprise clusters with fast interconnects and considerable available memory. In particular, the goal is to study the impact of the next generation of network technology and CPU capabilities for complex analytics, as well as to dramatically enhance the state-of-the-art in query compilation techniques to better take advantage of the underlying hardware.\n\n\n\n\n\nAs part of the grant we made several major contributions:\n\n\n\n\nTupleware: We developed Tupleware and with it several techniques to compile data analytics workflows into efficient programs. Our results showed that Tupleware was able to achieve 2-3 orders-of-magnitude better performance than Spark and other frameworks at that time. Eventually this work inspired the development of Spark Photon. Furthermore, an early version of Tupleware got integrated into Vizdom, an interactive visual data science platform. Vizdom eventually was commercialized as einblick.ai\n\n\n\n\nTuplex: With Tuplex we went further and developed techniques to compile Python UDF data processing functions used as part of Pandas into efficient code. We proposed the idea of hyperspecialization, which generates custom code for each Lambda function to a subset of the input to avoid sampling errors and improve overall efficiency. We showed how Tuplex is able to outperform single-threaded Python and Pandas by 5.818.7x, and parallel Spark and Dask by 5.191x. Moreover, we show how Tuplex outperforms general-purpose Python compilers by 624x, and its generated code comes within 2x of the performance of Weld and Hyper for pure query execution time, while achieving 27x faster end-to-end runtime in a realistic data analytics setting. Tuplex is available as open-source.\n\n\n\n\nLearned Sorting is a novel sorting algorithm that, unlike traditional methods, uses fast ML models to boost the sorting speed. The models learn to estimate the input's distribution based on a sample and arrange the keys in sorted order by predicting their empirical cumulative distribution function (eCDF) values. We demonstrated in our SIGMOD 2020 paper how learned sorting is able to outperform more traditional sorting algorithms. Moreover, we developed the first learned external sorting algorithm, ELSAR, which currently leads the sortbenchmark competition in the most energy efficient category (see https://sortbenchmark.org/)\n\n\n\n\nNAM-DB: We developed a scalable distributed transaction protocol with the very common Snapshot Isolation guarantee for the next generation of RDMA-enabled network technology. We further showed analytically and through experiments, that our NAM-DB architecture achieves nearly linear scale-out. Most notably, for the standard configuration of the TPC-C benchmark, we show that our system scales linearly to over 3.6 million transactions per second on 56 machines, and 6.5 million transactions with locality optimizations, which is 2 million more transactions per second than what FARM achieves on 90 machines. Note, that our total transaction throughput is even higher (14.5 million transactions per second) as TPC-C specifies to only report the new-order transactions.\n\n\n\n\nChiller: While NAM-DB scales nearly linearly, for high-contented records it remains important to shorten the duration of locks on those items as they help to increase the throughput. Interestingly, this observation leads to a new distributed data-partitioning scheme: data should be partitioned onto machines in a way not to avoid distributed transactions but to minimize the lock-duration time for highly contented items. This lead to the development of Chiller, a novel data partitioning scheme which minimizes lock contention. We further showed that Chiller outperforms traditional partitioning techniques, which try to avoid distributed transactions, by up to a factor of 2 using the TPC-C benchmark and on real-world workloads.\n\n\n\n\n\nThe research findings were published in over 30 papers, several of which appeared at top-tier venues such as SIGMOD, VLDB, or ICDE. Tuplex and ELSAR were open-sourced and ELSAR officially won the sortbenchmark competition. PI Kraska received the Sloan Research Fellowship in 2017, the VLDB Early Career Contribution award in 2018, and Brown's Early Career Research Achievement Award in 2017 partially for the results supported by this grant.\n\n\nTh grant helped to create two Data Science courses at Brown University, one undergraduate course and one course for Browns new Data Science master program, and a new Systems for Data Science course at MIT. Finally, the grant directly contributed to the training of 5 PhD students; all of which successfully graduated by now.\t\t\t\t\tLast Modified: 11/21/2023\n\n\t\t\t\t\tSubmitted by: TimKKraska\n"
 }
}