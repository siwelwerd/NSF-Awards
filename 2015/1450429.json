{
 "awd_id": "1450429",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SI2-SSI: Collaborative Proposal: Performance Application Programming Interface for Extreme-Scale Environments (PAPI-EX)",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Seung-Jong Park",
 "awd_eff_date": "2015-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 2126446.0,
 "awd_amount": 2126446.0,
 "awd_min_amd_letter_date": "2015-08-27",
 "awd_max_amd_letter_date": "2015-08-27",
 "awd_abstract_narration": "Modern High Performance Computing (HPC) systems continue to increase in size and complexity. Tools to measure application performance in these increasingly complex environments must also increase the richness of their measurements to provide insights into the increasingly intricate ways in which software and hardware interact. The PAPI performance-monitoring library has provided a clear, portable interface to the hardware performance counters available on all modern CPUs and some other components of interest (scattered across the chip and system). Widely deployed and widely used, PAPI has established itself as fundamental software infrastructure, not only for the scientific computing community, but for many industry users of HPC as well.  But the radical changes in processor and system design that have occurred over the past several years pose new challenges to PAPI and the HPC software infrastructure as a whole.  The PAPI-EX project integrates critical PAPI enhancements that flow from both governmental and industry research investments, focusing on processor and system design changes that are expected to be present in every extreme scale platform on the path to exascale computing.\r\n\r\nThe primary impact of PAPI-EX is a direct function of the importance of the PAPI library. PAPI has been in predominant use by tool developers, major national HPC centers, system vendors, and application developers for over 15 years. PAPI-EX builds on that foundation. As important research infrastructure, the PAPI-EX project allows PAPI to continue to play its essential role in the face of the revolutionary changes in the design and scale of new systems. In terms of enhancing discovery and education, the list of partners working with PAPI-EX includes NSF computing centers, major tool developers, major system vendors, and individual community leaders, and this diverse group will help facilitate training sessions, targeted workshops, and mini-symposia at national and international meetings. Finally, the active promotion of PAPI by many major system vendors means that PAPI, and therefore PAPI-EX, will continue to deliver major benefits for government and industry in many domains.\r\n\r\nPAPI-EX addresses a hardware environment in which the cores of current and future multicore CPUs share various performance-critical resources (a.k.a., 'inter-core' resources), including power management, on-chip networks, the memory hierarchy, and memory controllers between cores. Failure to manage contention for these 'inter-core' resources has already become a major drag on overall application performance. Consequently, the lack of ability to reveal the actual behavior of these resources at a low level, has become very problematic for the users of the many performance tools (e.g., TAU, HPCToolkit, Open|SpeedShop, Vampir, Scalasca, CrayPat, Active Harmony, etc.). PAPI-EX enhances and extends PAPI to solve this critical problem and prepare it to play its well-established role in HPC performance optimization. Accordingly, PAPI-EX targets the following objectives: (1) Develop shared hardware counter support that includes system-wide and inter-core measurements; (2) Provide support for data-flow based runtime systems; (3) Create a sampling interface to record streams of performance data with relevant context; (4) Combine an easy-to-use tool for text-based application performance analysis with updates to PAPI?s high-level API to create a basic, ?out of the box? instrumentation API.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jack",
   "pi_last_name": "Dongarra",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Jack J Dongarra",
   "pi_email_addr": "dongarra@icl.utk.edu",
   "nsf_id": "000299281",
   "pi_start_date": "2015-08-27",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Anthony",
   "pi_last_name": "Danalis",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Anthony Danalis",
   "pi_email_addr": "adanalis@icl.utk.edu",
   "nsf_id": "000553008",
   "pi_start_date": "2015-08-27",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Heike",
   "pi_last_name": "Jagode",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Heike Jagode",
   "pi_email_addr": "jagode@icl.utk.edu",
   "nsf_id": "000673781",
   "pi_start_date": "2015-08-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Tennessee Knoxville",
  "inst_street_address": "201 ANDY HOLT TOWER",
  "inst_street_address_2": "",
  "inst_city_name": "KNOXVILLE",
  "inst_state_code": "TN",
  "inst_state_name": "Tennessee",
  "inst_phone_num": "8659743466",
  "inst_zip_code": "379960001",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "TN02",
  "org_lgl_bus_name": "UNIVERSITY OF TENNESSEE",
  "org_prnt_uei_num": "LXG4F9K8YZK5",
  "org_uei_num": "FN2YCS2YAUW3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Tennessee Knoxville",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "TN",
  "perf_st_name": "Tennessee",
  "perf_zip_code": "379960003",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "TN02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  },
  {
   "pgm_ele_code": "808400",
   "pgm_ele_name": "CDS&E"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "8009",
   "pgm_ref_txt": "Scientifc Software Integration"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "8084",
   "pgm_ref_txt": "CDS&E"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 2126446.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Modern High-Performance Computing (HPC) systems continue to increase in size and complexity. Tools to measure application performance in these increasingly complex environments must also increase the richness of their measurements to provide insights into the increasingly intricate ways in which software and hardware interact. The PAPI performance-monitoring library has provided a clear, portable interface to the hardware performance counters available on all modern CPUs and some other components of interest, scattered across the chip and system. Widely deployed and widely used, PAPI has established itself as fundamental software infrastructure, not only for the scientific computing community, but for many industry users of HPC as well.&nbsp; But the radical changes in processor and system design that have occurred over the past several years pose continual challenges to PAPI and the HPC software infrastructure as a whole. The PAPI-EX project has integrated critical PAPI enhancements that flow from both governmental and industry research investments, focusing on processor and system design changes that are present in every extreme scale platform on the path to exascale computing.</p>\n<p>The PAPI-EX project addressed the following aspects of the problem of hardware performance counter monitoring in modern, multicore and heterogeneous architectures:</p>\n<p><strong>1. 'Shared Hardware' Counter Support:</strong> The PAPI library has been extended to address a hardware environment in which the cores of current and future multicore CPUs share various performance-critical resources (a.k.a., 'inter-core' resources), including power management, on-chip networks, the memory hierarchy, and memory controllers between cores. The newly developed 'shared hardware' performance counter support that includes system-wide measurements for Intel, AMD, and IBM provides PAPI users with the ability to reveal the actual behavior of these 'inter-core' resources at a low level.</p>\n<p><strong>2. Counter Analysis Toolkit:</strong> As part of this project's goal to test and improve the quality of PAPI when monitoring shared hardware counters that include system-wide measurements in existing multi-core architectures, a new Counter Analysis Toolkit (CAT) has been developed and added to the PAPI release. CAT assists with native performance counter disambiguation through micro-benchmarks that are used to probe different important aspects of modern CPUs, which, ultimately, aids the classification of raw performance events.</p>\n<p><strong>3. Power and Energy Management:</strong> PAPI's capabilities have been enhanced to support monitoring and capping of power usage on recent AMD GPU and NVIDIA GPU architectures. Additionally, PAPI's latest NVIDIA GPU support enables monitoring of half-precision floating-point operations (addition, multiplication, fused-multiply-add), memory throughput, NVLINK performance, fan speed, and temperature. These additional monitoring capabilities of GPU and memory performance counters aid application scientists in producing more efficient code by profiling the utilization of the latest GPU resources and diagnosing performance bottlenecks.</p>\n<p><strong>4. A new, simpler PAPI interface:</strong> The new high-level API, developed under this award, provides the ability to record performance events within instrumented code sections (called 'regions') of serial, multi-processing, and thread parallel applications. The high-level API has been developed in response to demand from the community for something simpler than PAPI's tool-focused 'low-level' API; and its main goal is to improve ease of use for application developers who wish to perform direct instrumentation of their source code. With less than a handful of functions, a user can measure performance events simply by marking code sections with specific region names. The dynamic setting of events via an environment variable and the automatic detection of components makes using the high-level API extremely simple.</p>\n<p>The PAPI interface has been widely used by HPC users for many years, drawing on its strength as a cross-platform and cross-architecture API. The extensions to the PAPI performance counter library for new hardware generations allow application and tool developers to use a familiar interface to obtain relevant performance monitoring information for achieving the best possible performance in modern computing environments.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/30/2021<br>\n\t\t\t\t\tModified by: Heike&nbsp;Jagode</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nModern High-Performance Computing (HPC) systems continue to increase in size and complexity. Tools to measure application performance in these increasingly complex environments must also increase the richness of their measurements to provide insights into the increasingly intricate ways in which software and hardware interact. The PAPI performance-monitoring library has provided a clear, portable interface to the hardware performance counters available on all modern CPUs and some other components of interest, scattered across the chip and system. Widely deployed and widely used, PAPI has established itself as fundamental software infrastructure, not only for the scientific computing community, but for many industry users of HPC as well.  But the radical changes in processor and system design that have occurred over the past several years pose continual challenges to PAPI and the HPC software infrastructure as a whole. The PAPI-EX project has integrated critical PAPI enhancements that flow from both governmental and industry research investments, focusing on processor and system design changes that are present in every extreme scale platform on the path to exascale computing.\n\nThe PAPI-EX project addressed the following aspects of the problem of hardware performance counter monitoring in modern, multicore and heterogeneous architectures:\n\n1. 'Shared Hardware' Counter Support: The PAPI library has been extended to address a hardware environment in which the cores of current and future multicore CPUs share various performance-critical resources (a.k.a., 'inter-core' resources), including power management, on-chip networks, the memory hierarchy, and memory controllers between cores. The newly developed 'shared hardware' performance counter support that includes system-wide measurements for Intel, AMD, and IBM provides PAPI users with the ability to reveal the actual behavior of these 'inter-core' resources at a low level.\n\n2. Counter Analysis Toolkit: As part of this project's goal to test and improve the quality of PAPI when monitoring shared hardware counters that include system-wide measurements in existing multi-core architectures, a new Counter Analysis Toolkit (CAT) has been developed and added to the PAPI release. CAT assists with native performance counter disambiguation through micro-benchmarks that are used to probe different important aspects of modern CPUs, which, ultimately, aids the classification of raw performance events.\n\n3. Power and Energy Management: PAPI's capabilities have been enhanced to support monitoring and capping of power usage on recent AMD GPU and NVIDIA GPU architectures. Additionally, PAPI's latest NVIDIA GPU support enables monitoring of half-precision floating-point operations (addition, multiplication, fused-multiply-add), memory throughput, NVLINK performance, fan speed, and temperature. These additional monitoring capabilities of GPU and memory performance counters aid application scientists in producing more efficient code by profiling the utilization of the latest GPU resources and diagnosing performance bottlenecks.\n\n4. A new, simpler PAPI interface: The new high-level API, developed under this award, provides the ability to record performance events within instrumented code sections (called 'regions') of serial, multi-processing, and thread parallel applications. The high-level API has been developed in response to demand from the community for something simpler than PAPI's tool-focused 'low-level' API; and its main goal is to improve ease of use for application developers who wish to perform direct instrumentation of their source code. With less than a handful of functions, a user can measure performance events simply by marking code sections with specific region names. The dynamic setting of events via an environment variable and the automatic detection of components makes using the high-level API extremely simple.\n\nThe PAPI interface has been widely used by HPC users for many years, drawing on its strength as a cross-platform and cross-architecture API. The extensions to the PAPI performance counter library for new hardware generations allow application and tool developers to use a familiar interface to obtain relevant performance monitoring information for achieving the best possible performance in modern computing environments.\n\n \n\n\t\t\t\t\tLast Modified: 11/30/2021\n\n\t\t\t\t\tSubmitted by: Heike Jagode"
 }
}