{
 "awd_id": "1551249",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Workshop on Formal Methods for Security (November 2015)",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2015-08-15",
 "awd_exp_date": "2017-01-31",
 "tot_intn_awd_amt": 88339.0,
 "awd_amount": 88339.0,
 "awd_min_amd_letter_date": "2015-08-06",
 "awd_max_amd_letter_date": "2015-08-06",
 "awd_abstract_narration": "This aim of this workshop is to identify existing successes and opportunities for applying formal methods to security problems, and raise awareness of these opportunities in relevant communities, including academia, industry, and government research labs. The workshop will bring together researchers from academia, industry, and government research labs that are working in the areas of security and formal methods, and researchers currently applying formal methods to security problems. Workshop participants will identify current and forthcoming computer security challenges, and identify opportunities to apply formal methods to meet these challenges. The main deliverable of the workshop will be a report summarizing the discussions and findings of the workshop, which will be publicly available. \r\n\r\nBy enabling leading researchers to engage with security problems using a richer palette of formal methods, the workshop will promote more robust security across a wide range of socially central types of system. It should stimulate development of better ways to design and implement future secure systems; better ways to determine whether existing systems are vulnerable; and better ways to assess the consequences of existing vulnerabilities. The workshop will also enrich the experience of graduate students who can participate and also assist by taking notes and providing materials for the report. Early career researchers such as post-docs will also be included.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Stephen",
   "pi_last_name": "Chong",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Stephen Chong",
   "pi_email_addr": "chong@seas.harvard.edu",
   "nsf_id": "000535045",
   "pi_start_date": "2015-08-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Harvard University",
  "inst_street_address": "1033 MASSACHUSETTS AVE STE 3",
  "inst_street_address_2": "",
  "inst_city_name": "CAMBRIDGE",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6174955501",
  "inst_zip_code": "021385366",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "MA05",
  "org_lgl_bus_name": "PRESIDENT AND FELLOWS OF HARVARD COLLEGE",
  "org_prnt_uei_num": "",
  "org_uei_num": "LN53LCFJFL45"
 },
 "perf_inst": {
  "perf_inst_name": "Harvard SEAS",
  "perf_str_addr": "33 Oxford Street",
  "perf_city_name": "Cambridge",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021382933",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "MA05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  },
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7556",
   "pgm_ref_txt": "CONFERENCE AND WORKSHOPS"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 88339.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Cybersecurity is everyone's problem. The target may be the electric grid, government systems storing sensitive personnel data, intellectual property in the defense industrial base, or banks and the financial system. Adversaries range from small-time criminals to nation states and other determined opponents who will explore an ingenious range of attack strategies. And the damage may be tallied in dollars, in strategic advantage, or in human lives. Systematic, secure system design is urgently needed, and we believe that rigorous <em>formal methods</em> are essential for substantial improvements.<br /><br />Formal methods enable reasoning from logical or mathematical specifications of the behaviors of computing devices or processes; they offer rigorous proofs that all system behaviors meet some desirable property. They are crucial for security goals, because they can show that no attack strategy in a class of strategies will cause a system to misbehave. Without requiring piecemeal enumeration, they rule out a range of attacks. They offer other benefits too: Formal specifications tell an implementer unambiguously what to produce, and they tell the subsequent user or integrator of a component what to rely on it to do. Since many vulnerabilities arise from misunderstandings and mismatches as components are integrated, the payoff from rigorous interface specifications is large.<br /><br />Adoption of formal methods in various areas (including verification of hardware and embedded systems, and analysis and testing of software) has dramatically improved the quality of computer systems. We anticipate that formal methods can provide similar improvement in the security of computer systems.<br /><br />Moreover, formal methods are in a period of rapid development and significantly broadening practical applications. While formal methods have long been associated with cybersecurityapplications, new techniques offer deeper evidence for security goals across a wider range of components, and for the systems built from them.<br /><br />Without broad use of formal methods, security will always remain fragile. Attackers have a clear advantage in what is currently a match between the cleverness of the attacker and the vigilance of the defender. Formal methods provide guidance for gapless construction, and for checking that an artifact has no points of entry for the adversary. Formal methods always use models, and thus can exclude only gaps that are expressible in those models. However, each model has specific, well-defined assumptions, which help focus a security analyst's attention on whether the actual system satisfies these properties.<br /><br />The NSF workshop on Security and Formal Methods, held 19-20 November 2015, brought together developers of formal methods, researchers exploring how to apply formal methods to various kinds of systems, and people familiar with the security problem space. Participants were drawn from universities, industry research organizations, government, and a selected pool of scientists from foreign institutions. We explored how current research results and strategies can provide improved secure systems using contemporary formal methods, and how these goals can shape future refinements to formal methods.<br /><br />The workshop was organized into four main areas: (i) <em>Hardware architecture</em>, (ii) <em>Operating systems</em>, (iii) <em>Distributed systems</em>, and (iv) <em>Privacy</em>. Each area had an expert area chair (or pair of chairs), who guided discussion and helped to write a section of the report below. Participants were assigned to an area for part of the workshop, with whole group sessions and cross-cutting groups to consider interactions among abstraction layers. These discussions led to a number of observations, conclusions, and recommendations, including:<br /><br /></p>\n<ol>\n<li>Formal methods for security will have an enormous effect in the coming years. Recent advances now enable their use at scales that were previously impossible. The resulting security improvements will spur new investments in formal tools and techniques. This interplay will produce a virtuous circle of capital investments in the methods and increases in both the quality of secure systems and the productivity of security-minded developers.</li>\n<li>Formal methods are the only reliable way to achieve security and privacy in computer systems. Formal methods, by modeling computer systems and adversaries, can prove that a system is immune to entire classes of attacks (provided the assumptions of the models are satisfied). By ruling out entire classes of potential attacks, formal methods offer an alternative to the \"cat and mouse\" game between adversaries and defenders of computer systems.<br /><br />Formal methods can have this effect because they apply a scientific method. They provide scientific foundations in the form of precise adversary and system models, and derive cogent conclusions about the possible behaviors of the system as the adversary interacts with it. This is a central aspect of providing a science of security.</li>\n</ol>\n<p><br />Please see the workshop website (<a href=\"http://sfm.seas.harvard.edu/\" target=\"_blank\">http://sfm.seas.harvard.edu/</a>) for more information, including a link the Report on the NSF Workshop on Formal Methods for Security.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/03/2017<br>\n\t\t\t\t\tModified by: Stephen&nbsp;Chong</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nCybersecurity is everyone's problem. The target may be the electric grid, government systems storing sensitive personnel data, intellectual property in the defense industrial base, or banks and the financial system. Adversaries range from small-time criminals to nation states and other determined opponents who will explore an ingenious range of attack strategies. And the damage may be tallied in dollars, in strategic advantage, or in human lives. Systematic, secure system design is urgently needed, and we believe that rigorous formal methods are essential for substantial improvements.\n\nFormal methods enable reasoning from logical or mathematical specifications of the behaviors of computing devices or processes; they offer rigorous proofs that all system behaviors meet some desirable property. They are crucial for security goals, because they can show that no attack strategy in a class of strategies will cause a system to misbehave. Without requiring piecemeal enumeration, they rule out a range of attacks. They offer other benefits too: Formal specifications tell an implementer unambiguously what to produce, and they tell the subsequent user or integrator of a component what to rely on it to do. Since many vulnerabilities arise from misunderstandings and mismatches as components are integrated, the payoff from rigorous interface specifications is large.\n\nAdoption of formal methods in various areas (including verification of hardware and embedded systems, and analysis and testing of software) has dramatically improved the quality of computer systems. We anticipate that formal methods can provide similar improvement in the security of computer systems.\n\nMoreover, formal methods are in a period of rapid development and significantly broadening practical applications. While formal methods have long been associated with cybersecurityapplications, new techniques offer deeper evidence for security goals across a wider range of components, and for the systems built from them.\n\nWithout broad use of formal methods, security will always remain fragile. Attackers have a clear advantage in what is currently a match between the cleverness of the attacker and the vigilance of the defender. Formal methods provide guidance for gapless construction, and for checking that an artifact has no points of entry for the adversary. Formal methods always use models, and thus can exclude only gaps that are expressible in those models. However, each model has specific, well-defined assumptions, which help focus a security analyst's attention on whether the actual system satisfies these properties.\n\nThe NSF workshop on Security and Formal Methods, held 19-20 November 2015, brought together developers of formal methods, researchers exploring how to apply formal methods to various kinds of systems, and people familiar with the security problem space. Participants were drawn from universities, industry research organizations, government, and a selected pool of scientists from foreign institutions. We explored how current research results and strategies can provide improved secure systems using contemporary formal methods, and how these goals can shape future refinements to formal methods.\n\nThe workshop was organized into four main areas: (i) Hardware architecture, (ii) Operating systems, (iii) Distributed systems, and (iv) Privacy. Each area had an expert area chair (or pair of chairs), who guided discussion and helped to write a section of the report below. Participants were assigned to an area for part of the workshop, with whole group sessions and cross-cutting groups to consider interactions among abstraction layers. These discussions led to a number of observations, conclusions, and recommendations, including:\n\n\n\nFormal methods for security will have an enormous effect in the coming years. Recent advances now enable their use at scales that were previously impossible. The resulting security improvements will spur new investments in formal tools and techniques. This interplay will produce a virtuous circle of capital investments in the methods and increases in both the quality of secure systems and the productivity of security-minded developers.\nFormal methods are the only reliable way to achieve security and privacy in computer systems. Formal methods, by modeling computer systems and adversaries, can prove that a system is immune to entire classes of attacks (provided the assumptions of the models are satisfied). By ruling out entire classes of potential attacks, formal methods offer an alternative to the \"cat and mouse\" game between adversaries and defenders of computer systems.\n\nFormal methods can have this effect because they apply a scientific method. They provide scientific foundations in the form of precise adversary and system models, and derive cogent conclusions about the possible behaviors of the system as the adversary interacts with it. This is a central aspect of providing a science of security.\n\n\n\nPlease see the workshop website (http://sfm.seas.harvard.edu/) for more information, including a link the Report on the NSF Workshop on Formal Methods for Security.\n\n\t\t\t\t\tLast Modified: 02/03/2017\n\n\t\t\t\t\tSubmitted by: Stephen Chong"
 }
}