{
 "awd_id": "1548114",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: Exploring the Use of Deception to Enhance Cyber Security",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2015-08-01",
 "awd_exp_date": "2018-05-31",
 "tot_intn_awd_amt": 182299.0,
 "awd_amount": 182299.0,
 "awd_min_amd_letter_date": "2015-08-04",
 "awd_max_amd_letter_date": "2015-08-04",
 "awd_abstract_narration": "Our computing systems are constantly under attack, by everyone from pranksters to agents of hostile nations.  Many of those systems and networks make the task of the adversary easier by responding to attacks with useful information.  This is because software and protocols have been written for decades to provide informative feedback for error detection and correction.  It is precisely this behavior that enhances the chances of success by attackers, by allowing them to map networks and determine system flaws.  This research addresses the question \"Are there uses of deceptive responses that help prevent successful attacks?\"  Furthermore, the study investigates if it is possible to characterize and model the types of situations where deception may be useful. The result of this work provides cyber system designers with some new defensive measures, and guidance as to when they are useful to deploy.\r\n\r\nThe project includes two related lines of research.  The first of these is to explore some new applications of deceit in system defense. The researchers investigate presenting deceptive responses to attempts to exploit known vulnerabilities, and building a file system that \"lies\" about the creation and deletion of key files.  Each of these mechanisms should support a system's security by providing early warning of bad behavior as well as blunting attacks.  Deceitful responses to attacks can lead a perpetrator to employ ineffective attacks, thus wasting time and effort.  A deceptive file system can capture forensic data about an attempted attack while only appearing to allow the installation of malicious files.  The second line of research explores how to apply hypergame models to cyber defenses using deceptive techniques.  Hypergames are an extension of game theory that includes incorrect and uncertain information.  By constructing hypergame models we should be able to determine situations where there is a favorable result when deception is employed as a defense.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Eugene",
   "pi_last_name": "Spafford",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "Eugene H Spafford",
   "pi_email_addr": "spaf@purdue.edu",
   "nsf_id": "000148116",
   "pi_start_date": "2015-08-04",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Saurabh",
   "pi_last_name": "Bagchi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Saurabh Bagchi",
   "pi_email_addr": "sbagchi@purdue.edu",
   "nsf_id": "000309372",
   "pi_start_date": "2015-08-04",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Purdue University",
  "inst_street_address": "2550 NORTHWESTERN AVE # 1100",
  "inst_street_address_2": "",
  "inst_city_name": "WEST LAFAYETTE",
  "inst_state_code": "IN",
  "inst_state_name": "Indiana",
  "inst_phone_num": "7654941055",
  "inst_zip_code": "479061332",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IN04",
  "org_lgl_bus_name": "PURDUE UNIVERSITY",
  "org_prnt_uei_num": "YRXVL4JYCEF5",
  "org_uei_num": "YRXVL4JYCEF5"
 },
 "perf_inst": {
  "perf_inst_name": "Purdue University",
  "perf_str_addr": "656 Oval Dr",
  "perf_city_name": "West Lafayette",
  "perf_st_code": "IN",
  "perf_st_name": "Indiana",
  "perf_zip_code": "479072086",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "IN04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 182299.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project was devoted to the exploration of how deception could be used to add to the defenses of computer and network systems (\"cyber\"). &nbsp;Most current computing systems provide helpful error messages and feedback for purposes of debugging and enhanced user experience, but&nbsp;that same feedback may assist attackers in exploiting weaknesses.<br /><br /><br />Our project examined how providing false information and decoys could be used to slow, mislead, or expose attackers. &nbsp;Our efforts involved four separate but related efforts, described below.<br /><br /><br />The first effort was to develop a formal taxonomy of deceptive practices, including masking, decoys, and providing misleading information. &nbsp;This effort resulted in a published, comprehensive model that can be used to classify every known form of cyber deception.<br /><br /><br />The second effort was to explore the effectiveness of providing false information in patches for security problems. &nbsp;Patching is widely used to fix flaws and functionality, but the patches may be reverse-engineering to find attack points. &nbsp;We explored methods of obfuscating the patches and&nbsp;providing false patches (\"ghost patches\") to slow or confuse attackers. &nbsp;An extensive analysis and experiments with prototypes showed this had some minor promise, but would not be highly effective against sophisticated attackers.<br /><br />&nbsp;<br />We concluded that providing new instances of the entire software artifact using existing methods of obfuscation and confusion would likely be more effective in slowing reverse engineering analysis and attack than would be releasing \"ghost\" patches. &nbsp;We determined there might be more involved methods of&nbsp;building false and illusory patches, but we did not fully explore them; we determined that complicated false patching would make legitimate maintenance and debugging more difficult, and thus would be of questionable value.<br /><br /><br />Our third effort was to explore how to provide a misleading view of secondary memory (disk) to an attacker. &nbsp;Attackers often delete system resources, alter logs, and remove malware traces to hide malicious activity. &nbsp;If those alterations and deleted items were available to the&nbsp;system defenders, it would provide an advantage in both recovery and forensics. However, it is essential to let the attacker believe that the alterations and deletions are occurring so that countermeasures are not taken, or to ensure that the attacker does not terminate the attack before sufficient evidence is collected.<br /><br /><br />We constructed two prototype systems that collect the state of artifacts that an attacker might change or delete yet are not visible to the end user. &nbsp;One of these was part of a running OS, and the other was a modified virtual machine monitor. &nbsp;In each case, we explored making the capture&nbsp;of data undetectable to the user, yet of sufficient fidelity to allow reconstruction of the system before the attack, and capture of any uploads. &nbsp;We found that our final system, R2D2, worked well enough that it was also able to detect and counter ransomware attacks that would attempt to&nbsp;encrypt vast portions of the disk -- we were able to recover the entire disc contents after such an attack. We determined how to use a user-specified parameter to trade off the amount of extra storage used and the level of protection.&nbsp;<br /><br /><br />Our fourth effort was to explore the use of an extension to game theory using incomplete information -- hypergames -- to model the deployment and use of deception. &nbsp;Our goal was to explore if hypergames might be used to determine when deception was appropriate to use, and when it&nbsp;might not be effective. &nbsp;We constructed some simple models using single rounds of deception and found that using deception mechanisms were effective in cases where the attacker suspected deception was present. &nbsp; As of the end of this portion of the project, we have yet to explore more&nbsp;complex hypergames models of deception, such as, through multiple rounds of &ldquo;games&rdquo; between the attacker and the defender.&nbsp;<br /><br /><br />In addition to 15 publications on our research results in conferences and journals, we also produced several software prototypes that are available for further experimentation by others. &nbsp;Three students completed their Ph.D. degrees while working on this project, and several other graduate&nbsp;and undergraduate students obtained practical training in systems development and defense.<br /><br /><br />Both principal investigators on this project are planning on future research in the issues raised during the effort. &nbsp;They are also exploring technology transfer opportunities to employ some of the lessons learned in real-world products.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/06/2018<br>\n\t\t\t\t\tModified by: Eugene&nbsp;H&nbsp;Spafford</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project was devoted to the exploration of how deception could be used to add to the defenses of computer and network systems (\"cyber\").  Most current computing systems provide helpful error messages and feedback for purposes of debugging and enhanced user experience, but that same feedback may assist attackers in exploiting weaknesses.\n\n\nOur project examined how providing false information and decoys could be used to slow, mislead, or expose attackers.  Our efforts involved four separate but related efforts, described below.\n\n\nThe first effort was to develop a formal taxonomy of deceptive practices, including masking, decoys, and providing misleading information.  This effort resulted in a published, comprehensive model that can be used to classify every known form of cyber deception.\n\n\nThe second effort was to explore the effectiveness of providing false information in patches for security problems.  Patching is widely used to fix flaws and functionality, but the patches may be reverse-engineering to find attack points.  We explored methods of obfuscating the patches and providing false patches (\"ghost patches\") to slow or confuse attackers.  An extensive analysis and experiments with prototypes showed this had some minor promise, but would not be highly effective against sophisticated attackers.\n\n \nWe concluded that providing new instances of the entire software artifact using existing methods of obfuscation and confusion would likely be more effective in slowing reverse engineering analysis and attack than would be releasing \"ghost\" patches.  We determined there might be more involved methods of building false and illusory patches, but we did not fully explore them; we determined that complicated false patching would make legitimate maintenance and debugging more difficult, and thus would be of questionable value.\n\n\nOur third effort was to explore how to provide a misleading view of secondary memory (disk) to an attacker.  Attackers often delete system resources, alter logs, and remove malware traces to hide malicious activity.  If those alterations and deleted items were available to the system defenders, it would provide an advantage in both recovery and forensics. However, it is essential to let the attacker believe that the alterations and deletions are occurring so that countermeasures are not taken, or to ensure that the attacker does not terminate the attack before sufficient evidence is collected.\n\n\nWe constructed two prototype systems that collect the state of artifacts that an attacker might change or delete yet are not visible to the end user.  One of these was part of a running OS, and the other was a modified virtual machine monitor.  In each case, we explored making the capture of data undetectable to the user, yet of sufficient fidelity to allow reconstruction of the system before the attack, and capture of any uploads.  We found that our final system, R2D2, worked well enough that it was also able to detect and counter ransomware attacks that would attempt to encrypt vast portions of the disk -- we were able to recover the entire disc contents after such an attack. We determined how to use a user-specified parameter to trade off the amount of extra storage used and the level of protection. \n\n\nOur fourth effort was to explore the use of an extension to game theory using incomplete information -- hypergames -- to model the deployment and use of deception.  Our goal was to explore if hypergames might be used to determine when deception was appropriate to use, and when it might not be effective.  We constructed some simple models using single rounds of deception and found that using deception mechanisms were effective in cases where the attacker suspected deception was present.   As of the end of this portion of the project, we have yet to explore more complex hypergames models of deception, such as, through multiple rounds of \"games\" between the attacker and the defender. \n\n\nIn addition to 15 publications on our research results in conferences and journals, we also produced several software prototypes that are available for further experimentation by others.  Three students completed their Ph.D. degrees while working on this project, and several other graduate and undergraduate students obtained practical training in systems development and defense.\n\n\nBoth principal investigators on this project are planning on future research in the issues raised during the effort.  They are also exploring technology transfer opportunities to employ some of the lessons learned in real-world products.\n\n \n\n\t\t\t\t\tLast Modified: 07/06/2018\n\n\t\t\t\t\tSubmitted by: Eugene H Spafford"
 }
}