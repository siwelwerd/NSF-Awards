{
 "awd_id": "1547411",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CICI: Secure Data Architecture: Collaborative Research: Assured Mission Delivery Network Framework for Secure Scientific Collaboration",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Rob Beverly",
 "awd_eff_date": "2016-01-01",
 "awd_exp_date": "2021-09-30",
 "tot_intn_awd_amt": 139999.0,
 "awd_amount": 139999.0,
 "awd_min_amd_letter_date": "2015-08-31",
 "awd_max_amd_letter_date": "2020-12-28",
 "awd_abstract_narration": "Collaborative, multi-disciplinary and multi-institutional research projects require secure and resilient cyberinfrastructure in order to efficiently support data sharing, access to remote scientific instruments, video-conferencing and on-line discussions. The underlying network plays a crucial role in supporting these needs in that it must provide assurance about the security of data and collaborative activities. This project addresses such requirement by designing and developing a network architecture to securely share data among groups of scientists. A community of scientists sharing a common interest and supporting resources is called a mission. This project will design and prototype the architecture of the Assured Mission Delivery Network (AMDN), which will enable collaboration among scientific communities involving multiple independent organizations with varying levels of trust.  \r\n\r\nThey novelty of AMDN lies in the notion of network-level Mission Assurance Services (MAS); these services allows mission directors to specify actions to be taken by the network to deal with attacks and anomalies and to quickly reconfigure the network to best assure the successful completion of the mission. Security is the key part of the AMDN design, and addresses essential functionality such as authentication, integrity, accountability and privacy. AMDN also includes Collective Anomaly Detection, in which intra- and inter-cloud networking alarms and anomalies indicative of attacks are combined and used for mission assurance strategies. The detected anomalies and alarms are correlated over the whole system in order to detect sophisticated attacks that might be undetectable at the single node level. The security of the entire system is flexible and programmable depending on the nature of collaborations, computing resources needed, and various requirements of scientists. In addition to scientific use, AMDN can be used for commercial applications such as financial data sharing among banks or health data sharing among hospitals and between critical infrastructures such as Smart Grids. Although AMDN is primarily designed for wide-area network usage, it can be used for services and clients residing inside a single cloud or data center.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Arjan",
   "pi_last_name": "Durresi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Arjan Durresi",
   "pi_email_addr": "adurresi@iu.edu",
   "nsf_id": "000280559",
   "pi_start_date": "2015-08-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Indiana University",
  "inst_street_address": "107 S INDIANA AVE",
  "inst_street_address_2": "",
  "inst_city_name": "BLOOMINGTON",
  "inst_state_code": "IN",
  "inst_state_name": "Indiana",
  "inst_phone_num": "3172783473",
  "inst_zip_code": "474057000",
  "inst_country_name": "United States",
  "cong_dist_code": "09",
  "st_cong_dist_code": "IN09",
  "org_lgl_bus_name": "TRUSTEES OF INDIANA UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "YH86RTW2YVJ4"
 },
 "perf_inst": {
  "perf_inst_name": "Indiana University-Purdue University at Indianapolis",
  "perf_str_addr": "980 Indiana Avenue, RM. 2232",
  "perf_city_name": "Indianapolis",
  "perf_st_code": "IN",
  "perf_st_name": "Indiana",
  "perf_zip_code": "462022915",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "IN07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "802700",
   "pgm_ele_name": "Cybersecurity Innovation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 139999.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>In today&rsquo;s cloud computing platforms, more and more users are working or collaborating in the multi-cloud environment, in which collaborators, clouds, computing nodes may belong to different institutions or organizations. Those various organizations might have their policies. Security is still a big concern in cloud computing. To help cloud vendors and customers to detect and prevent from being affected by potential attacks, we have proposed a trust management framework for cloud computing systems.</p>\n<p>On the one hand, in cloud computing systems, a single task might be distributed over multiple computing nodes. For example, one computing node pre-processes the data. The second computing node does the data mining tasks. Moreover, the third one visualizes the results to the end-users. On the other hand, a single computing node may be shared by multiple tasks. In such cases, tasks may be shared with some other untrustworthy tasks on the same node. Faced with such new challenges, the old security model that consists of defending the perimeter of the system is no longer valid. We have to assume that whatever defense mechanisms are deployed in the system will be breached by attackers sooner or later. We have to design systems that can survive various attacks, with a calculated and acceptable performance degradation by using additional resources planned for such conditions. Therefore, besides traditional security measures, such as cryptography, access control policies, and so on, more measures should be taken in cloud computing platforms. For example, when multiple cloud computing platforms are involved, not only load balance and redundancy should be taken into account, but also the trustworthiness of computing nodes, groups of nodes, tasks, and cloud computing platforms, should be taken into account.</p>\n<p>Based on our measurement theory-based trust management, we developed a trust framework for cloud computing platforms that addresses three levels of trust measurement: flow level, node-level, and task level. Both the node level trust and the task level trust are dependent on the flow level trust.</p>\n<p>We showed that using our trust metrics &mdash; trustworthiness and confidence- can help cloud vendors and customers estimate the trust of both computing nodes and tasks. Furthermore, we demonstrated with testbed experiments that trust could help to detect attacks. Our trust framework can help cloud administrators migrate tasks from suspect nodes to trustworthy nodes.&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/30/2021<br>\n\t\t\t\t\tModified by: Arjan&nbsp;Durresi</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIn today\u2019s cloud computing platforms, more and more users are working or collaborating in the multi-cloud environment, in which collaborators, clouds, computing nodes may belong to different institutions or organizations. Those various organizations might have their policies. Security is still a big concern in cloud computing. To help cloud vendors and customers to detect and prevent from being affected by potential attacks, we have proposed a trust management framework for cloud computing systems.\n\nOn the one hand, in cloud computing systems, a single task might be distributed over multiple computing nodes. For example, one computing node pre-processes the data. The second computing node does the data mining tasks. Moreover, the third one visualizes the results to the end-users. On the other hand, a single computing node may be shared by multiple tasks. In such cases, tasks may be shared with some other untrustworthy tasks on the same node. Faced with such new challenges, the old security model that consists of defending the perimeter of the system is no longer valid. We have to assume that whatever defense mechanisms are deployed in the system will be breached by attackers sooner or later. We have to design systems that can survive various attacks, with a calculated and acceptable performance degradation by using additional resources planned for such conditions. Therefore, besides traditional security measures, such as cryptography, access control policies, and so on, more measures should be taken in cloud computing platforms. For example, when multiple cloud computing platforms are involved, not only load balance and redundancy should be taken into account, but also the trustworthiness of computing nodes, groups of nodes, tasks, and cloud computing platforms, should be taken into account.\n\nBased on our measurement theory-based trust management, we developed a trust framework for cloud computing platforms that addresses three levels of trust measurement: flow level, node-level, and task level. Both the node level trust and the task level trust are dependent on the flow level trust.\n\nWe showed that using our trust metrics &mdash; trustworthiness and confidence- can help cloud vendors and customers estimate the trust of both computing nodes and tasks. Furthermore, we demonstrated with testbed experiments that trust could help to detect attacks. Our trust framework can help cloud administrators migrate tasks from suspect nodes to trustworthy nodes. \n\n \n\n \n\n \n\n\t\t\t\t\tLast Modified: 11/30/2021\n\n\t\t\t\t\tSubmitted by: Arjan Durresi"
 }
}