{
 "awd_id": "1528178",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TWC: Small: Oblivious Cloud Storage Systems, from Theory to Practice --- Simpler, More Efficient, More Robust",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Shannon Beck",
 "awd_eff_date": "2015-09-01",
 "awd_exp_date": "2019-08-31",
 "tot_intn_awd_amt": 498987.0,
 "awd_amount": 498987.0,
 "awd_min_amd_letter_date": "2015-07-29",
 "awd_max_amd_letter_date": "2015-07-29",
 "awd_abstract_narration": "Outsourcing storage to the cloud has become more widespread in recent years; however, cloud storage services are constantly exposed to a number of non-trivial adversarial threats. This work addresses security risks arising from the leakage of access patterns, which is the ability of an adversary to detect when the same item is accessed repeatedly on a storage server, which has been shown to substantially impact data privacy. This project develops CloudORAM, the first provably-secure fully concurrent and asynchronous oblivious storage system that relies on simple tree-based Oblivious RAM (ORAM) techniques, the state-of-the-art cryptographic solution for hiding access patterns. \r\n\r\nCloudORAM's system architecture uses a trusted proxy node processing concurrent accesses, from potentially multiple clients, to an untrusted server to hide access patterns. CloudORAM also outperforms existing systems in terms of performance, storage requirements, and scalability, while being substantially simpler to describe and deploy due to the tree-based ORAM structure.  This project develops better combinatorial techniques to reduce bandwidth consumption in ORAM-based storage solutions as well as proofs of concept for new oblivious storage systems without the need of a trusted proxy node, and presents the first comprehensive formal framework to formalize and prove security of oblivious storage systems.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Huijia",
   "pi_last_name": "Lin",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Huijia Lin",
   "pi_email_addr": "rachel@cs.washington.edu",
   "nsf_id": "000663476",
   "pi_start_date": "2015-07-29",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Amr",
   "pi_last_name": "El Abbadi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Amr El Abbadi",
   "pi_email_addr": "amr@cs.ucsb.edu",
   "nsf_id": "000188334",
   "pi_start_date": "2015-07-29",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Stefano",
   "pi_last_name": "Tessaro",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Stefano Tessaro",
   "pi_email_addr": "tessaro@cs.washington.edu",
   "nsf_id": "000660734",
   "pi_start_date": "2015-07-29",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Santa Barbara",
  "inst_street_address": "3227 CHEADLE HALL",
  "inst_street_address_2": "",
  "inst_city_name": "SANTA BARBARA",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8058934188",
  "inst_zip_code": "931060001",
  "inst_country_name": "United States",
  "cong_dist_code": "24",
  "st_cong_dist_code": "CA24",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, SANTA BARBARA",
  "org_prnt_uei_num": "",
  "org_uei_num": "G9QBQDH39DF4"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Santa Barbara",
  "perf_str_addr": "",
  "perf_city_name": "santa Babara",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "931065110",
  "perf_ctry_code": "US",
  "perf_cong_dist": "24",
  "perf_st_cong_dist": "CA24",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 498987.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>We rely fundamentally on cloud-based service providers to hold our sensitive data. For this reason, it is crucial that this data remains protected from attackers and untrusted providers. It is well known that cryptography offers a solution with encryption. However, encryption is often not sufficient by itself. Indeed, even if we encrypt some files, an attacker can still infer useful information by simply observing which encrypted files are accessed and when, without knowing for sure what these files actually are. For example, the fact that a certain encrypted file is accessed more often than any other one can help us infer what this file actually contains, especially when given additional contextual information. Similarly, the order in which files are accessed can leak important information.</p>\n<p>Oblivious RAM (ORAM) is a cryptographic mechanism that allows a client to hide its access patterns to a remote server. While ORAM has been extensively studied in theory, progress in deploying ORAM in actual systems has been limited. The main purpose of this project has been to advance our understanding of ORAM towards the goal of building viable systems that can be deployed.</p>\n<p>Our main outcome is a system, called TaoStore, which offers an architecture that enables efficient ORAM-based cloud storage. One of the main technical barriers is to enable multi-client access to the ORAM storage, and to keep its state consistent. We have released TaoStore as open source software.&nbsp;We have further extended TaoStore to be fault tolerant via replication.&nbsp;&nbsp;</p>\n<p>This project has combined the expertise of PIs from both cryptography and databases, and has helped building a bridge between the two communities. For example, by providing demos to the database communities highlighting the risks of attacks based on access patterns.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/20/2020<br>\n\t\t\t\t\tModified by: Stefano&nbsp;Tessaro</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nWe rely fundamentally on cloud-based service providers to hold our sensitive data. For this reason, it is crucial that this data remains protected from attackers and untrusted providers. It is well known that cryptography offers a solution with encryption. However, encryption is often not sufficient by itself. Indeed, even if we encrypt some files, an attacker can still infer useful information by simply observing which encrypted files are accessed and when, without knowing for sure what these files actually are. For example, the fact that a certain encrypted file is accessed more often than any other one can help us infer what this file actually contains, especially when given additional contextual information. Similarly, the order in which files are accessed can leak important information.\n\nOblivious RAM (ORAM) is a cryptographic mechanism that allows a client to hide its access patterns to a remote server. While ORAM has been extensively studied in theory, progress in deploying ORAM in actual systems has been limited. The main purpose of this project has been to advance our understanding of ORAM towards the goal of building viable systems that can be deployed.\n\nOur main outcome is a system, called TaoStore, which offers an architecture that enables efficient ORAM-based cloud storage. One of the main technical barriers is to enable multi-client access to the ORAM storage, and to keep its state consistent. We have released TaoStore as open source software. We have further extended TaoStore to be fault tolerant via replication.  \n\nThis project has combined the expertise of PIs from both cryptography and databases, and has helped building a bridge between the two communities. For example, by providing demos to the database communities highlighting the risks of attacks based on access patterns.\n\n\t\t\t\t\tLast Modified: 02/20/2020\n\n\t\t\t\t\tSubmitted by: Stefano Tessaro"
 }
}