{
 "awd_id": "1513797",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TWC: Medium: Language-Hardware Co-Design for Practical and Verifiable Information Flow Control",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Jeremy Epstein",
 "awd_eff_date": "2015-07-01",
 "awd_exp_date": "2021-06-30",
 "tot_intn_awd_amt": 1200000.0,
 "awd_amount": 1200000.0,
 "awd_min_amd_letter_date": "2015-06-25",
 "awd_max_amd_letter_date": "2015-06-25",
 "awd_abstract_narration": "Current cloud computing platforms, mobile computing devices, and embedded devices all have the security weakness that they permit information flows that violate the confidentiality or integrity of information. This project explores an integrated approach in which software and hardware are co-designed with strong, comprehensive, verifiable security assurance. The goal is to develop a methodology for designing systems in which all forms of information flow are tracked, at both the hardware and software levels, and between these levels. This can have a significant impact on how computing systems are designed, and could make the next generation of computing devices and platforms inherently more secure.\r\n\r\nThe project investigates a novel hardware description language, that allows information flow and timing channels to be soundly tracked at the hardware level, while permitting fine-grained sharing and reuse of hardware resources across multiple security levels. The practicality of this approach will be demonstrated on a high-performance microprocessor with verified-secure information flow which is designed as part of the project. The project explores novel techniques for identifying information flows that must be communicated between the software and hardware levels in order for the hardware to enforce security, and operating-system mechanisms for automatically virtualizing rich language-level security policies onto the more limited palette of security levels representable in hardware. The project uses rigorous verification of the new language-level and hardware-level techniques to demonstrate that applications and hardware developed according to the new methodology provably enforce secure information flow throughout the computing system.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Gookwon",
   "pi_last_name": "Suh",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Gookwon E Suh",
   "pi_email_addr": "gs272@cornell.edu",
   "nsf_id": "000104889",
   "pi_start_date": "2015-06-25",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Andrew",
   "pi_last_name": "Myers",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "Andrew C Myers",
   "pi_email_addr": "andru@cs.cornell.edu",
   "nsf_id": "000385587",
   "pi_start_date": "2015-06-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148533801",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 1200000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-40fe2840-7fff-d484-d76f-81dc72abfef0\"> </span></p>\n<p dir=\"ltr\"><span>Today's cloud computing platforms, mobile computing devices, and embedded devices all have the security weaknesses. In particular, recent security attacks on modern microprocessors showed that vulnerabilities in hardware can allow information flows that violate the confidentiality or integrity of information even if software has no security vulnerability. Unfortunately, there exists no practical tool that hardware designers can use today to verify security of complex hardware designs. In industry, security evaluations are often based on manual reviews and ad-hoc tests.&nbsp;</span></p>\n<p dir=\"ltr\"><span>This project investigated an integrated approach in which software and hardware are co-designed with strong, comprehensive, verifiable security assurance. In order to enable strong security assurance in modern computer hardware, this project developed and released the secure variants of two widely-used hardware description languages (HDLs), Verilog and Chisel. The project developed prototype processors using the secure HDL, and showed that it is possible to build an efficient processor with full OS support while ensuring strong information flow security guarantees. In order to provide a system-level security guarantee including protection against information leak through timing of computer operations, the project also developed a new security contract between hardware and software, which enables designing the two separately while still providing strong timing-sensitive information flow security. The new secure hardware description languages, SecVerilog and ChiselFlow, and a hardware-software contract have a potential to enable formal security validation for practical computer system designs. For example, this new architecture and tools have the potential to enable sharing of physical systems such as the cloud computing infrastructures yet with the strong security assurance offered by running on physically separate hardware. Similarly, the formal security assurance can be used to provide stronger protection for safety-critical systems such as self-driving cars.</span></p>\n<p dir=\"ltr\"><span>In addition to the intellectual contributions, this project trained multiple graduate and undergraduate students through research activities, and developed new course modules for secure hardware designs. In particular, the collaboration between two distinct research groups enabled training next-generation researchers in an interdisciplinary manner covering computer architecture, security, and programming languages.</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/26/2021<br>\n\t\t\t\t\tModified by: Gookwon&nbsp;E&nbsp;Suh</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nToday's cloud computing platforms, mobile computing devices, and embedded devices all have the security weaknesses. In particular, recent security attacks on modern microprocessors showed that vulnerabilities in hardware can allow information flows that violate the confidentiality or integrity of information even if software has no security vulnerability. Unfortunately, there exists no practical tool that hardware designers can use today to verify security of complex hardware designs. In industry, security evaluations are often based on manual reviews and ad-hoc tests. \nThis project investigated an integrated approach in which software and hardware are co-designed with strong, comprehensive, verifiable security assurance. In order to enable strong security assurance in modern computer hardware, this project developed and released the secure variants of two widely-used hardware description languages (HDLs), Verilog and Chisel. The project developed prototype processors using the secure HDL, and showed that it is possible to build an efficient processor with full OS support while ensuring strong information flow security guarantees. In order to provide a system-level security guarantee including protection against information leak through timing of computer operations, the project also developed a new security contract between hardware and software, which enables designing the two separately while still providing strong timing-sensitive information flow security. The new secure hardware description languages, SecVerilog and ChiselFlow, and a hardware-software contract have a potential to enable formal security validation for practical computer system designs. For example, this new architecture and tools have the potential to enable sharing of physical systems such as the cloud computing infrastructures yet with the strong security assurance offered by running on physically separate hardware. Similarly, the formal security assurance can be used to provide stronger protection for safety-critical systems such as self-driving cars.\nIn addition to the intellectual contributions, this project trained multiple graduate and undergraduate students through research activities, and developed new course modules for secure hardware designs. In particular, the collaboration between two distinct research groups enabled training next-generation researchers in an interdisciplinary manner covering computer architecture, security, and programming languages.\n\n\t\t\t\t\tLast Modified: 09/26/2021\n\n\t\t\t\t\tSubmitted by: Gookwon E Suh"
 }
}