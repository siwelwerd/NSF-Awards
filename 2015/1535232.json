{
 "awd_id": "1535232",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SI2-SSE: EASE: Improving Research Accountability through Artifact Evaluation",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": "7032928235",
 "po_email": "bmihaila@nsf.gov",
 "po_sign_block_name": "Bogdan Mihaila",
 "awd_eff_date": "2015-09-01",
 "awd_exp_date": "2019-08-31",
 "tot_intn_awd_amt": 499515.0,
 "awd_amount": 499515.0,
 "awd_min_amd_letter_date": "2015-06-16",
 "awd_max_amd_letter_date": "2015-06-16",
 "awd_abstract_narration": "Research in computer systems, particularly in the first stages of creating a new innovation, relies almost exclusively on software prototypes, simulators, benchmarks, and data sets to understand the benefits and costs of new ideas in computers, ranging from consumer devices to exascale systems. These artifacts are used to evaluate new capabilities, algorithms, bottlenecks and trade-offs. Empirical study is behind the rapid pace of innovation in creating faster, lower energy and more reliable systems. This experimental approach lies at the core of development that fuels the nation's information economy.  Given the critical importance of experimental study to developing new computer systems, several efforts are underway to curate experimental results through accountable research.  One effort, Artifact Evaluation (AE), is being adopted to promote high quality artifacts  and experimentation, including making public the experimental information necessary for reproducibility. However, the rapid adoption of AE is hampered by technical challenges that create a high barrier to the process: there is no consistent or simple environment, or mechanism, to package and reproduce experiments for AE. Authors rely on their own approaches, leading to much time consumed, as well as considerable variability in the ways materials are prepared and evaluated, unnecessarily obstructing the AE process.  \r\n\r\nTo overcome the technical challenges with AE, and to more broadly encourage adoption of AE in computer science and engineering research, this project is developing a software infrastructure, Experiment and Artifact System for Evaluation (EASE), to create and run experiments specifically for AE, in which authors create, conduct and share artifacts and experiments. It allows for repeating,  modifying, and extending experiments. Authors may also use EASE to  package and upload their experiments for archival storage in a digital library. EASE is being developed and deployed for two use cases, namely compilers and real-time systems, keeping the project tractable to address specific needs. These communities have overlapping but also distinct requirements, helping to ensure EASE can also be extended and\r\nused by other computer systems research communities as well.\r\n\r\nEASE will be release as open source software, based on an Experiment Management System (EMS) previously developed by the project investigator in a project call Open Curation for Computer Architecture Modeling (OCCAM), used to define and conduct experiments using computer architecture simulators. Using EMS as a starting point, EASE will provide AE support, by: 1) separating EMS from OCCAM's repository and hardware services, transforming the EMS infrastructure into EASE, a fully standalone, sustainable, and extensible platform for AE; 2) supporting record and replay (for repeating and reproducing results, as well as provenance) of artifacts and experiments as part of normal development and experimental practice to ease participation in AE by authors and evaluators; 3) supporting artifacts,workflows of artifacts and experiments that run directly on a machine, including specialized hardware and software, and run indirectly on a simulator or emulator; 4) allowing both user-level (artifacts and experiments as user processes) and system-level (artifacts and experiments involving kernel changes) innovations; 5) providing consistent/uniform access, whether locally or remotely, to artifacts and experiments; 6) simplifying viewing, running, modifying, and comparing experiments by innovators (i.e., during innovation development), artifact evaluators (during AE), and archive users (after publication); 7) enabling indexing (object locators and search tags) and packaging of artifacts and experiments for AE and for archival deployment (e.g., to ACM?s or IEEE?s Digital Library); and 8) refining, expanding, generalizing, and documenting EASE to ensure it is robust, maintainable and extensible, and that it can be used and sustained by different CSR communities (starting with real-time and compilers, given their different artifacts, data and methods).",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Bruce",
   "pi_last_name": "Childers",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Bruce Childers",
   "pi_email_addr": "childers@cs.pitt.edu",
   "nsf_id": "000245880",
   "pi_start_date": "2015-06-16",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Daniel",
   "pi_last_name": "Mosse",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Daniel Mosse",
   "pi_email_addr": "mosse@cs.pitt.edu",
   "nsf_id": "000229674",
   "pi_start_date": "2015-06-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Pittsburgh",
  "inst_street_address": "4200 FIFTH AVENUE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4126247400",
  "inst_zip_code": "152600001",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "UNIVERSITY OF PITTSBURGH - OF THE COMMONWEALTH SYSTEM OF HIGHER EDUCATION",
  "org_prnt_uei_num": "",
  "org_uei_num": "MKAGLD59JRL1"
 },
 "perf_inst": {
  "perf_inst_name": "University of Pittsburgh",
  "perf_str_addr": "123 University Club",
  "perf_city_name": "Pittsburgh",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152132303",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "8005",
   "pgm_ref_txt": "Scientific Software Elements"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 499515.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Research in computer systems, particularly in the first stages of creating a new innovation, relies on simulators, benchmarks, and data sets to analyze the benefits and costs of new ideas in computers. These artifacts are used to evaluate capabilities, algorithms, bottlenecks and trade-offs through empirical study. Given the critical importance of experimental study to developing new computer systems, several efforts are underway to curate experimental results. One effort, Artifact Evaluation (AE), promotes high quality artifacts and experimentation, including making public the experimental information necessary for reproducibility. However, AE has been hampered by technical challenges that create a high barrier to the process: there are few consistent or simple mechanisms to package and reproduce experiments for AE. Authors often use their own approaches, leading to much time consumed and variability in the ways materials are prepared and evaluated.</p>\n<p>To overcome these challenges and to encourage adoption of AE, this project developed a software infrastructure, Experiment and Artifact System for Evaluation (EASE), to create and run experiments specifically for peer review of experimental artifacts. Using this software infrastructure, authors can create, conduct and share artifacts and experiments for AE. Peer evaluators can repeat, modify, and extend experiments for AE. The EASE project levaraged and significantly built on the base OCCAM software by fully redesigning and refactoring the original system to make it standalone, sustainable and extensible for AE. The user interface was redesigned to simplify describing and running experiments by authors, and sharing them with evaluators for artifact evaluation. The interface was designed to ease the effort required by evaluators to conduct peer review of experiments. Social capabilities to comment on experiments and share the comments between authors and evaluators were examined to facilitate interactivity to simplify evaluation of experiments. Functionality to better control access to experiments, required for AE, was also incorporated. The software is open source and publicly available, with continued development and maintenance by a core set of developers.</p>\n<p>As a result of this project, we found that the computer systems community is gradual in moving to using workflow systems, like EASE, for artifact evaluation. Although the need for standardization is well recognized and many researchers have commented that EASE and similar tools are beneficial, simple, and powerful, the community tends to \"roll their own\" with packaging technologies, like virtual machines (VMs) and containers, to share artifacts for AE. This may be partly due to tradition -- after all, this is the very community that developed these lower-level technologies and is most familiar with them. Advances in VM and container technologies over the last few years (driven largely by requirements for cloud computing) have made these technologies easier to use for AE.&nbsp;Other shortcomings of AE include the disparity in languages used with respect to the implementations and proprietary software.</p>\n<p>Although moving to standard tools for AE is gradual, there is much interest in adopting end-to-end workflow software, like EASE, to support Artifact Evaluation. Interestingly, scientific communities that are less familiar with VM and container technologies are more quickly moving toward using workflow systems for reproducibility, reuse and supporting peer review of experiments, data and software artifacts. Indeed, through this project, we found that science communities outside of computer systems, such as world modeling and epidemiology, are eager to adopt EASE and similar tools for these purposes.&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/11/2020<br>\n\t\t\t\t\tModified by: Bruce&nbsp;Childers</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nResearch in computer systems, particularly in the first stages of creating a new innovation, relies on simulators, benchmarks, and data sets to analyze the benefits and costs of new ideas in computers. These artifacts are used to evaluate capabilities, algorithms, bottlenecks and trade-offs through empirical study. Given the critical importance of experimental study to developing new computer systems, several efforts are underway to curate experimental results. One effort, Artifact Evaluation (AE), promotes high quality artifacts and experimentation, including making public the experimental information necessary for reproducibility. However, AE has been hampered by technical challenges that create a high barrier to the process: there are few consistent or simple mechanisms to package and reproduce experiments for AE. Authors often use their own approaches, leading to much time consumed and variability in the ways materials are prepared and evaluated.\n\nTo overcome these challenges and to encourage adoption of AE, this project developed a software infrastructure, Experiment and Artifact System for Evaluation (EASE), to create and run experiments specifically for peer review of experimental artifacts. Using this software infrastructure, authors can create, conduct and share artifacts and experiments for AE. Peer evaluators can repeat, modify, and extend experiments for AE. The EASE project levaraged and significantly built on the base OCCAM software by fully redesigning and refactoring the original system to make it standalone, sustainable and extensible for AE. The user interface was redesigned to simplify describing and running experiments by authors, and sharing them with evaluators for artifact evaluation. The interface was designed to ease the effort required by evaluators to conduct peer review of experiments. Social capabilities to comment on experiments and share the comments between authors and evaluators were examined to facilitate interactivity to simplify evaluation of experiments. Functionality to better control access to experiments, required for AE, was also incorporated. The software is open source and publicly available, with continued development and maintenance by a core set of developers.\n\nAs a result of this project, we found that the computer systems community is gradual in moving to using workflow systems, like EASE, for artifact evaluation. Although the need for standardization is well recognized and many researchers have commented that EASE and similar tools are beneficial, simple, and powerful, the community tends to \"roll their own\" with packaging technologies, like virtual machines (VMs) and containers, to share artifacts for AE. This may be partly due to tradition -- after all, this is the very community that developed these lower-level technologies and is most familiar with them. Advances in VM and container technologies over the last few years (driven largely by requirements for cloud computing) have made these technologies easier to use for AE. Other shortcomings of AE include the disparity in languages used with respect to the implementations and proprietary software.\n\nAlthough moving to standard tools for AE is gradual, there is much interest in adopting end-to-end workflow software, like EASE, to support Artifact Evaluation. Interestingly, scientific communities that are less familiar with VM and container technologies are more quickly moving toward using workflow systems for reproducibility, reuse and supporting peer review of experiments, data and software artifacts. Indeed, through this project, we found that science communities outside of computer systems, such as world modeling and epidemiology, are eager to adopt EASE and similar tools for these purposes. \n\n \n\n \n\n\t\t\t\t\tLast Modified: 01/11/2020\n\n\t\t\t\t\tSubmitted by: Bruce Childers"
 }
}