{
 "awd_id": "1464061",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CRII: CHS: Scalable Webcam Eyetracking by Learning from User Interactions",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Ephraim Glinert",
 "awd_eff_date": "2015-04-01",
 "awd_exp_date": "2019-03-31",
 "tot_intn_awd_amt": 175000.0,
 "awd_amount": 175000.0,
 "awd_min_amd_letter_date": "2015-03-06",
 "awd_max_amd_letter_date": "2015-09-18",
 "awd_abstract_narration": "Eye tracking technology is very useful for a variety of applications including human-computer interaction studies, usability testing, medical research, and experiments in psychology, to name just a few.  But the devices are highly specialized and costly equipment that is difficult to calibrate and use, so they remain available for the most part in the lab only.  In this project the PI will build on his prior work to establish a research program to investigate a new approach to eye tracking based on the webcams commonly present in today's laptops and mobile devices, with the goal of making the technology viable for a broader range of applications as part of the natural experience of everyday users and so no longer restricted to laboratories and highly controlled studies.  Of course, webcams are less accurate than specialized eye tracking equipment for estimating where a user is looking on the screen.  The PI's approach to overcoming this drawback is to improve the accuracy by exploiting user interactions to continuously calibrate the webcam-as-eye tracker during regular usage, and to do this online without the need to install additional software.  Project outcomes will ultimately include a real-time online eye tracking system using the typical webcam available in laptops and mobile devices, along with an evaluation of its performance.  The PI will also conduct research into how user interactions such as cursor clicks and text entry and touches can be used to automatically train the eye tracking algorithms.  The new technology will democratize eye tracking, releasing it from the confines of the lab; the PI will disseminate source code along with eye tracking demos to allow other researchers and developers to apply his technology in their work.\r\n\r\nThe PI's prior work has shown that when a user clicks on a web page, they will first look where they intend to click.  Furthermore, psychology studies have shown that the eye is likely to be 2-4 characters to the right of the last typed character on the screen.  Webcam images during these user interactions can be collected by the website to use as cues to what a given user's pupil looks like when s/he is interacting with a particular location.  Future observations of the pupil can then be matched to past instances with similar-looking pupils as the system collects mappings of pupil features to eye-gaze locations on the page, allowing the model to infer the eye-gaze location even when the user is not interacting.  The pupil data can be collected during the entire time that a user interacts with a website and without disrupting the user experience, including at the beginning of a computer usage session to provide model training data that better matches the local environment in terms of ambient lighting, user sitting position, and background environment.  By enabling eye tracking to be accessible from a typical web browser and by continuously improving the tracking accuracy as a user visits a website, eye tracking becomes a reality for many potential applications such as large-scale naturalistic user studies, online gaming, or enabling people to perform hands-free navigation of websites.  This eye tracking procedure is opt-in as browsers request access to the webcam, and the website is able to capture this data if the user agrees.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jeff",
   "pi_last_name": "Huang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Jeff Huang",
   "pi_email_addr": "Jeff_Huang@brown.edu",
   "nsf_id": "000651625",
   "pi_start_date": "2015-03-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Brown University",
  "inst_street_address": "1 PROSPECT ST",
  "inst_street_address_2": "",
  "inst_city_name": "PROVIDENCE",
  "inst_state_code": "RI",
  "inst_state_name": "Rhode Island",
  "inst_phone_num": "4018632777",
  "inst_zip_code": "029129100",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "RI01",
  "org_lgl_bus_name": "BROWN UNIVERSITY",
  "org_prnt_uei_num": "E3FDXZ6TBHW3",
  "org_uei_num": "E3FDXZ6TBHW3"
 },
 "perf_inst": {
  "perf_inst_name": "Brown University",
  "perf_str_addr": "Office of Sponsored Projects",
  "perf_city_name": "Providence",
  "perf_st_code": "RI",
  "perf_st_name": "Rhode Island",
  "perf_zip_code": "029129093",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "RI01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "736700",
   "pgm_ele_name": "HCC-Human-Centered Computing"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7367",
   "pgm_ref_txt": "Cyber-Human Systems"
  },
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 175000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This research investigates how to infer user attention using subtle forms of interaction, especially applied to remote usability testing to improve interfaces. While eye tracking is a nearly ubiquitous form of usability testing, typical equipment costs tens of thousands of dollars, requires scheduled time and travel for both the experimenter and participant, and sessions can only occur one at a time. My students and I developed WebGazer.js [https://webgazer.cs.brown.edu/], an eye tracking library that uses common webcams (like those already on a laptop) to infer the eye-gaze locations of web visitors on a web page in real time. The eye tracking model we developed will self-calibrate as users who are web visitors interact with the web page by training a mapping between the features of the eye and positions on the screen.</p>\n<p>WebGazer observes user interactions on web pages to continuously calibrate the eye tracker during regular activity: for example, when a user clicks on a page they first look where they intend to click, or they look a bit ahead of the caret during touch typing. Webcam images during these user interactions are collected to use as cues for what the user's pupil looks like when that user interacts with a particular location. So future observations of the pupil can be matched to past instances with similar-looking pupils as WebGazer collects mappings of pupil features to eye-gaze locations on the page, allowing it to infer the eye-gaze location even when the user is not interacting. We built WebGazer purely in JavaScript without any need to install any software to easily scale and democratize eye tracking; anyone can then use their eyes to interact with web pages without having to use their hands. Meanwhile, usability testers and web designers can identify which items on the page are attended, for how long, and in what order, to improve the user experience. The library runs entirely in the client browser, so to preserve user privacy, no video data needs to be sent to a server.</p>\n<p>The website and GitHub repository for the WebGazer software has had over 250,000 unique visitors; over 2,200 people bookmarked the source code, 265 forks of the software exist (people who build on top of the released software). We have open sourced the software and there are startup companies who use it as their core technology to enable remote usability testing; for example, RealEye is a startup we recently discovered using WebGazer claiming \"Identify exactly what people focus on with the power of webcam eye-tracking. Test your design hypothesis and make decisions based on numbers not on what looks better\" and reports having 500 registered companies and 15,000 testers. Additionally, we have shown that WebGazer can be used to replicate seminal papers in information retrieval, showing similar results but through online remote studies instead of in-person eye tracking studies. Because eye tracking happens differently each time a user sits down, we have released video, screen, and interaction data for over 50 participants for future researchers to use.</p>\n<div class=\"page\" title=\"Page 2\">\n<div class=\"section\">\n<div class=\"layoutArea\">\n<div class=\"column\">\n<p><span>We have conducted multiple evaluations of our research, which is published in peer-reviewed computer science conferences (IJCAI 2016, CHIIR 2017, and ETRA 2018).&nbsp;</span>The first publication at IJCAI already has 65 citations, many of which are people who have tested WebGazer for themselves for their own applications.&nbsp;The&nbsp;paper at CHIIR was nominated for a best paper award. Our research has been reported in the popular press, such as The Register and PC World.</p>\n<p>Other disciplines like psychology and cognitive science have started assessing WebGazer for their experimental paradigms. In total, 4 graduate students and 2 undergraduate students worked on this research at Brown University. Three of these students were women, and underrepresented group in computer science. Two of the students working on this project are now Ph.D. students at computer science programs elsewhere.</p>\n</div>\n</div>\n</div>\n</div><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/30/2019<br>\n\t\t\t\t\tModified by: Jeff&nbsp;Huang</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis research investigates how to infer user attention using subtle forms of interaction, especially applied to remote usability testing to improve interfaces. While eye tracking is a nearly ubiquitous form of usability testing, typical equipment costs tens of thousands of dollars, requires scheduled time and travel for both the experimenter and participant, and sessions can only occur one at a time. My students and I developed WebGazer.js [https://webgazer.cs.brown.edu/], an eye tracking library that uses common webcams (like those already on a laptop) to infer the eye-gaze locations of web visitors on a web page in real time. The eye tracking model we developed will self-calibrate as users who are web visitors interact with the web page by training a mapping between the features of the eye and positions on the screen.\n\nWebGazer observes user interactions on web pages to continuously calibrate the eye tracker during regular activity: for example, when a user clicks on a page they first look where they intend to click, or they look a bit ahead of the caret during touch typing. Webcam images during these user interactions are collected to use as cues for what the user's pupil looks like when that user interacts with a particular location. So future observations of the pupil can be matched to past instances with similar-looking pupils as WebGazer collects mappings of pupil features to eye-gaze locations on the page, allowing it to infer the eye-gaze location even when the user is not interacting. We built WebGazer purely in JavaScript without any need to install any software to easily scale and democratize eye tracking; anyone can then use their eyes to interact with web pages without having to use their hands. Meanwhile, usability testers and web designers can identify which items on the page are attended, for how long, and in what order, to improve the user experience. The library runs entirely in the client browser, so to preserve user privacy, no video data needs to be sent to a server.\n\nThe website and GitHub repository for the WebGazer software has had over 250,000 unique visitors; over 2,200 people bookmarked the source code, 265 forks of the software exist (people who build on top of the released software). We have open sourced the software and there are startup companies who use it as their core technology to enable remote usability testing; for example, RealEye is a startup we recently discovered using WebGazer claiming \"Identify exactly what people focus on with the power of webcam eye-tracking. Test your design hypothesis and make decisions based on numbers not on what looks better\" and reports having 500 registered companies and 15,000 testers. Additionally, we have shown that WebGazer can be used to replicate seminal papers in information retrieval, showing similar results but through online remote studies instead of in-person eye tracking studies. Because eye tracking happens differently each time a user sits down, we have released video, screen, and interaction data for over 50 participants for future researchers to use.\n\n\n\n\n\nWe have conducted multiple evaluations of our research, which is published in peer-reviewed computer science conferences (IJCAI 2016, CHIIR 2017, and ETRA 2018). The first publication at IJCAI already has 65 citations, many of which are people who have tested WebGazer for themselves for their own applications. The paper at CHIIR was nominated for a best paper award. Our research has been reported in the popular press, such as The Register and PC World.\n\nOther disciplines like psychology and cognitive science have started assessing WebGazer for their experimental paradigms. In total, 4 graduate students and 2 undergraduate students worked on this research at Brown University. Three of these students were women, and underrepresented group in computer science. Two of the students working on this project are now Ph.D. students at computer science programs elsewhere.\n\n\n\n\n\n\t\t\t\t\tLast Modified: 06/30/2019\n\n\t\t\t\t\tSubmitted by: Jeff Huang"
 }
}