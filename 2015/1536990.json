{
 "awd_id": "1536990",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Queueing Systems with Server Synchronization",
 "cfda_num": "47.041",
 "org_code": "07030000",
 "po_phone": "7032922443",
 "po_email": "gaklutke@nsf.gov",
 "po_sign_block_name": "Georgia-Ann Klutke",
 "awd_eff_date": "2015-07-15",
 "awd_exp_date": "2020-06-30",
 "tot_intn_awd_amt": 350000.0,
 "awd_amount": 350000.0,
 "awd_min_amd_letter_date": "2015-07-23",
 "awd_max_amd_letter_date": "2015-07-23",
 "awd_abstract_narration": "This project is concerned with improving business operations through the development of enhanced workforce management techniques.  The goal is to determine how workers should be assigned dynamically to tasks in the presence of uncertain demand and processing requirements for various products and services.  The main novelty is the incorporation of synchronization constraints on worker assignment.  For example, the completion of certain tasks may require a team of workers, whereas other tasks require one worker at a time.  In both cases, workers must synchronize their schedules in that they must be simultaneously at either the same or different tasks.  This project involves the development of easily implementable, robust, and dynamic policies for assigning workers to tasks in real time, taking into account such synchronization constraints on worker assignment.  Potential application areas include health care delivery, job shop scheduling, call centers, project management, and parallel computing.  If successful, this award will yield valuable insights and concrete guidelines for how the performance of a large class of production and service systems can be improved at low cost by better utilizing the available workers and other resources.\r\n\r\nThe planned research involves modeling businesses as queueing networks and workers as servers.  The research objectives will be achieved through sample-path analysis, Markov decision processes, fluid limit analysis, computer simulation, and linear programming. In particular, for networks with general topologies and infinite buffers, fluid limit analysis will be used to identify what fraction of time the servers should spend in the various possible server configurations.  Then dynamic server allocation policies that come arbitrarily close to being optimal will be developed. On the other hand, systems with finite buffers will be analyzed using Markov decision process techniques, where there will be constraints on server assignments.  The proposed research involves the rigorous analysis and control of queueing systems with flexible, heterogeneous servers when the schedules of different servers must be synchronized (e.g., to account for needed collaboration or non-collaboration).  The focus is on maximizing system capacity (throughput), but other performance measures will also be considered, including holding costs.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "ENG",
 "org_dir_long_name": "Directorate for Engineering",
 "div_abbr": "CMMI",
 "org_div_long_name": "Division of Civil, Mechanical, and Manufacturing Innovation",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Sigrun",
   "pi_last_name": "Andradottir",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Sigrun Andradottir",
   "pi_email_addr": "sa@gatech.edu",
   "nsf_id": "000451668",
   "pi_start_date": "2015-07-23",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Hayriye",
   "pi_last_name": "Ayhan",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Hayriye Ayhan",
   "pi_email_addr": "hayhan@isye.gatech.edu",
   "nsf_id": "000492378",
   "pi_start_date": "2015-07-23",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Georgia Tech Research Corporation",
  "inst_street_address": "926 DALNEY ST NW",
  "inst_street_address_2": "",
  "inst_city_name": "ATLANTA",
  "inst_state_code": "GA",
  "inst_state_name": "Georgia",
  "inst_phone_num": "4048944819",
  "inst_zip_code": "303186395",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "GA05",
  "org_lgl_bus_name": "GEORGIA TECH RESEARCH CORP",
  "org_prnt_uei_num": "EMW9FC8J3HN4",
  "org_uei_num": "EMW9FC8J3HN4"
 },
 "perf_inst": {
  "perf_inst_name": "Georgia Institute of Technology",
  "perf_str_addr": "225 North Avenue, NW",
  "perf_city_name": "Atlanta",
  "perf_st_code": "GA",
  "perf_st_name": "Georgia",
  "perf_zip_code": "303320002",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "GA05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "006Y00",
   "pgm_ele_name": "OE Operations Engineering"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "072E",
   "pgm_ref_txt": "NETWORKS & QUEUING SYSTEMS"
  },
  {
   "pgm_ref_code": "073E",
   "pgm_ref_txt": "OPTIMIZATION & DECISION MAKING"
  },
  {
   "pgm_ref_code": "077E",
   "pgm_ref_txt": "SIMULATION MODELS"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 350000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p class=\"xmsonormal\">The objective of this project was to improve business operations through the development of enhanced workforce management techniques. We considered how workers should be assigned dynamically to tasks in the presence of stochastic demand and processing requirements for various products and services. Our focus was on maximizing system capacity (throughput), but we also considered other performance measures such as long-run average profit. The main novelty of our work involved incorporating synchronization constraints on worker assignment. For example, the completion of certain tasks may require a team of workers, whereas other tasks require one worker at a time.&nbsp; In both cases, workers must synchronize their schedules in that they must be simultaneously at either the same or different tasks.</p>\n<p class=\"xmsonormal\">We introduced the notion of a configuration to model the synchronous assignment of servers. This notion allows for a unified approach to optimize systems with server synchronization. We showed that the maximal capacity of the system is given by the solution of a linear programming problem and constructed policies that have capacity arbitrarily close to the maximal capacity.&nbsp; Our results provided a framework for solving a large class of problems that could not be solved before (due to the needed server synchronization).&nbsp; Even for problems without server synchronization, we showed that our viewpoint leads to (significantly) fewer combinations of server allocations, which is desirable from an implementation point of view.</p>\n<p class=\"xmsonormal\">We also&nbsp;developed&nbsp; a distribution-dependent metric for ranking flexibility structures. &nbsp;This allowed us to construct partial rankings that appear to be relatively insensitive to the underlying distributions. We found that an important issue in evaluating flexibility is that one cannot separately consider the design of a flexibility structure and the choice of a server scheduling policy, and we proposed a policy that provides a useful basis for comparisons.</p>\n<p class=\"xmsonormal\">Another focus of our research was to study and compare different forms of server collaboration.&nbsp; In task assignment, each server is assigned a subtask and jobs are completed when all servers have completed their assigned subtasks.&nbsp; We considered several versions of task assignment that differ when some servers have completed their assigned subtasks.&nbsp; We identified the task assignment policy that maximizes the long-run average throughput and compared task assignment with other forms of server collaboration (i.e., teamwork and non-collaboration) to determine when and how servers should collaborate.&nbsp; We showed that task assignment is best when the servers are highly specialized; otherwise, teamwork or non-collaboration are preferable depending on whether the synergy level among the servers is high or not.</p>\n<p class=\"xmsonormal\">We also studied the dynamic assignment of flexible servers to stations in the presence of defects. We completely characterized the optimal policy for two stations and two servers and provided near-optimal heuristics for longer lines.&nbsp; Furthermore, we determined how to dynamically assign servers to stations in tandem lines when the servers work in teams and the team service rates are general. We first provided sufficient criteria that eliminate the inferior teams and then identified the optimal assignment policy among the remaining teams.&nbsp; We have also determined the optimal dynamic server assignment for two-station, two-server systems when the customers are impatient.</p>\n<p class=\"xmsonormal\">Health care delivery is a specific area that requires server synchronization (e.g., residents and attending physicians).&nbsp; We considered the problem of dynamically assigning an attending physician between his own responsibilities and consultations with his residents with the goal of maximizing the long-run average reward.&nbsp; Then we generalized this interaction problem to the case with multiple attending physicians and patient abandonments. We showed that both with and without patient abandonments, only two policies can be optimal.&nbsp; In particular, the attending physician should always prioritize either his consultations with residents or his own responsibilities.&nbsp; Moreover, the optimal policy can be determined by a simple threshold on the system parameters. Finally, we proved that pooling multiple attending physicians (to share the workload associated with supervising a larger group of residents) improves the long-run average reward.</p>\n<p class=\"xmsonormal\">On the education side, this project formed the basis of the dissertation of a female PhD student and the grant funded her PhD studies. Thus, this project provided the means for the education of a PhD student in operations research. The former PhD student is currently working as a postdoctoral fellow on a health care delivery project at the University of Toronto.&nbsp; Our results were published in various refereed journal papers and presented at conferences and in invited talks.</p>\n<p>Finally, to facilitate technology transfer, we have developed a web page for evaluating flexibility structures both with and without synchronization constraints on server assignment.&nbsp; Data on the flexibility structures can be entered either directly in the tool or uploaded from a spreadsheet.&nbsp; Support is given for visualization of the flexibility structure. The tool has been developed using Python, JavaScript, and modern web deployment technology. The web page is available to the public at</p>\n<p><a href=\"https://flextool.isye.gatech.edu/\">https://flextool.isye.gatech.edu/</a>.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/29/2020<br>\n\t\t\t\t\tModified by: Sigrun&nbsp;Andradottir</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "The objective of this project was to improve business operations through the development of enhanced workforce management techniques. We considered how workers should be assigned dynamically to tasks in the presence of stochastic demand and processing requirements for various products and services. Our focus was on maximizing system capacity (throughput), but we also considered other performance measures such as long-run average profit. The main novelty of our work involved incorporating synchronization constraints on worker assignment. For example, the completion of certain tasks may require a team of workers, whereas other tasks require one worker at a time.  In both cases, workers must synchronize their schedules in that they must be simultaneously at either the same or different tasks.\nWe introduced the notion of a configuration to model the synchronous assignment of servers. This notion allows for a unified approach to optimize systems with server synchronization. We showed that the maximal capacity of the system is given by the solution of a linear programming problem and constructed policies that have capacity arbitrarily close to the maximal capacity.  Our results provided a framework for solving a large class of problems that could not be solved before (due to the needed server synchronization).  Even for problems without server synchronization, we showed that our viewpoint leads to (significantly) fewer combinations of server allocations, which is desirable from an implementation point of view.\nWe also developed  a distribution-dependent metric for ranking flexibility structures.  This allowed us to construct partial rankings that appear to be relatively insensitive to the underlying distributions. We found that an important issue in evaluating flexibility is that one cannot separately consider the design of a flexibility structure and the choice of a server scheduling policy, and we proposed a policy that provides a useful basis for comparisons.\nAnother focus of our research was to study and compare different forms of server collaboration.  In task assignment, each server is assigned a subtask and jobs are completed when all servers have completed their assigned subtasks.  We considered several versions of task assignment that differ when some servers have completed their assigned subtasks.  We identified the task assignment policy that maximizes the long-run average throughput and compared task assignment with other forms of server collaboration (i.e., teamwork and non-collaboration) to determine when and how servers should collaborate.  We showed that task assignment is best when the servers are highly specialized; otherwise, teamwork or non-collaboration are preferable depending on whether the synergy level among the servers is high or not.\nWe also studied the dynamic assignment of flexible servers to stations in the presence of defects. We completely characterized the optimal policy for two stations and two servers and provided near-optimal heuristics for longer lines.  Furthermore, we determined how to dynamically assign servers to stations in tandem lines when the servers work in teams and the team service rates are general. We first provided sufficient criteria that eliminate the inferior teams and then identified the optimal assignment policy among the remaining teams.  We have also determined the optimal dynamic server assignment for two-station, two-server systems when the customers are impatient.\nHealth care delivery is a specific area that requires server synchronization (e.g., residents and attending physicians).  We considered the problem of dynamically assigning an attending physician between his own responsibilities and consultations with his residents with the goal of maximizing the long-run average reward.  Then we generalized this interaction problem to the case with multiple attending physicians and patient abandonments. We showed that both with and without patient abandonments, only two policies can be optimal.  In particular, the attending physician should always prioritize either his consultations with residents or his own responsibilities.  Moreover, the optimal policy can be determined by a simple threshold on the system parameters. Finally, we proved that pooling multiple attending physicians (to share the workload associated with supervising a larger group of residents) improves the long-run average reward.\nOn the education side, this project formed the basis of the dissertation of a female PhD student and the grant funded her PhD studies. Thus, this project provided the means for the education of a PhD student in operations research. The former PhD student is currently working as a postdoctoral fellow on a health care delivery project at the University of Toronto.  Our results were published in various refereed journal papers and presented at conferences and in invited talks.\n\nFinally, to facilitate technology transfer, we have developed a web page for evaluating flexibility structures both with and without synchronization constraints on server assignment.  Data on the flexibility structures can be entered either directly in the tool or uploaded from a spreadsheet.  Support is given for visualization of the flexibility structure. The tool has been developed using Python, JavaScript, and modern web deployment technology. The web page is available to the public at\n\nhttps://flextool.isye.gatech.edu/.\n\n\t\t\t\t\tLast Modified: 09/29/2020\n\n\t\t\t\t\tSubmitted by: Sigrun Andradottir"
 }
}