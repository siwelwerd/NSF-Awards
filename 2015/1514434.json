{
 "awd_id": "1514434",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Medium: Collaborative Research: Information Compression in Algorithm Design and Statistical Physics",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Tracy Kimbrel",
 "awd_eff_date": "2015-06-15",
 "awd_exp_date": "2019-05-31",
 "tot_intn_awd_amt": 286298.0,
 "awd_amount": 286298.0,
 "awd_min_amd_letter_date": "2015-06-08",
 "awd_max_amd_letter_date": "2015-06-08",
 "awd_abstract_narration": "The existence of connections between probabilistic algorithms, statistical physics and information theory has been known for decades and has yielded a number of unexpected breakthroughs. Recent discoveries of the PIs and other researchers give clear indications that these connections go much deeper than previously thought. A key new idea is the realization that stochastic local search algorithms can be judged by their capacity to compress the randomness they consume, with convergence following as a consequence of compressibility. Further exploration of this idea is expected to have significant impact, both conceptual and technical, in multiple scientific fields. This includes algorithm design by information theoretic methods, the study of phase transitions in statistical mechanical systems based on information bottleneck arguments, and non-constructive proofs of existence of combinatorial objects. The project will offer a wide range of research opportunities at various levels of sophistication for graduate and undergraduate students in three state universities.\r\n\r\nInformation compression arguments have recently found striking applications in computer science and combinatorics. A glowing example is Moser's proof of the algorithmic Lovasz Local Lemma, which suggested an entirely new way of reasoning about randomized algorithms. Inspired by the work of Moser, one of the PIs with a collaborator has very recently created a general framework for analyzing stochastic local search algorithms using information compression. The framework is purely algorithmic, completely bypassing the Probabilistic Method. Besides helping to analyze the running times of existing algorithms it can also be used as a powerful new tool for designing novel, non-obvious randomized algorithms. The proposed research further develops this framework with the aim of unearthing completely new applications in computer science and combinatorics, while establishing mathematically rigorous connections to statistical physics. Concrete examples of such applications to be investigated include new tools for bounding the mixing time of Markov chains and algebraic connections between randomized algorithms and the classical theory of phase transitions in statistical physics.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Alistair",
   "pi_last_name": "Sinclair",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Alistair Sinclair",
   "pi_email_addr": "sinclair@cs.berkeley.edu",
   "nsf_id": "000486367",
   "pi_start_date": "2015-06-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Berkeley",
  "inst_street_address": "1608 4TH ST STE 201",
  "inst_street_address_2": "",
  "inst_city_name": "BERKELEY",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "5106433891",
  "inst_zip_code": "947101749",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "CA12",
  "org_lgl_bus_name": "REGENTS OF THE UNIVERSITY OF CALIFORNIA, THE",
  "org_prnt_uei_num": "",
  "org_uei_num": "GS3YEVSS12N6"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Berkeley",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "947045940",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "CA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 286298.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Many real-world problems can be viewed as finding a <em>solution</em> that satisfies a set of <em>constraints</em>.&nbsp; One representative example is finding a schedule for airline personnel so that all flights are staffed and each person&rsquo;s schedule is realistic (i.e., respects limits on number of hours worked per day, etc.)&nbsp; The first question to ask when confronted with such a problem is whether any solution actually exists.&nbsp; (The constraints may be so severe that it&rsquo;s not possible to satisfy all of them simultaneously.)&nbsp; A celebrated mathematical theorem called the <em>Lov&aacute;sz Local Lemma</em> (named after the Hungarian combinatorialist L&aacute;szl&oacute; Lov&aacute;sz, and usually abbreviated as <em>LLL</em>) gives us a very useful condition that guarantees that a solution exists: essentially, it says that the constraints should be not too restrictive, or &ldquo;dense&rdquo;.&nbsp; But unfortunately the LLL doesn&rsquo;t give us any way to actually <em>find</em> a solution, even when we know it exists!&nbsp; The main goal of this project was to design algorithms that efficiently find a solution whenever the LLL guarantees that one exists.&nbsp; The principal project personnel were PI Prof. Alistair Sinclair and PhD student Fotis Iliopoulos at the University of California, Berkeley, in collaboration with co-PI Dimitris Achlioptas at the University of California, Santa Cruz.<br /><br />The type of algorithms we consider are so-called &ldquo;local search algorithms.&rdquo;&nbsp; These algorithms start with some imperfect candidate solution (e.g., a schedule with some flights un-staffed, or some personnel having unrealistic individual schedules) and try to improve it at each step by fixing one of the imperfections (e.g., staffing a new flight, or fixing one person's schedule).&nbsp; Of course, fixing (e.g.) one individual&rsquo;s schedule may create further imperfections elsewhere, but one may hope that, on average, the algorithm makes progress towards a valid solution if the constraints are not too dense.&nbsp; Building on, and extending, ground-breaking recent work in this area, we have been able to design local search algorithms that find a solution whenever the LLL guarantees that one exists, even for the most powerful versions of the LLL that had not previously been amenable to algorithms.&nbsp; <br /><br />The key to analyzing the new algorithms is to bring in tools from linear algebra, specifically matrix analysis.&nbsp; This allowed us to build a new framework that unifies and replaces a range of existing tools, and makes the design and analysis of local search algorithms more systematic.&nbsp; Among the concrete examples we have been able to address with this new framework are edge coloring of multigraphs (which encodes a variety of problems such as bandwidth allocation in broadcasting and packet switching in networks) and vertex coloring of graphs (a slightly simplified model of the airline scheduling problem mentioned above).&nbsp; We have also been able to show that, under natural additional conditions, our algorithms actually find a rich class of solutions rather than just a single solution.&nbsp; We are confident that our framework will find further applications in the future.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/14/2019<br>\n\t\t\t\t\tModified by: Alistair&nbsp;Sinclair</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nMany real-world problems can be viewed as finding a solution that satisfies a set of constraints.  One representative example is finding a schedule for airline personnel so that all flights are staffed and each person?s schedule is realistic (i.e., respects limits on number of hours worked per day, etc.)  The first question to ask when confronted with such a problem is whether any solution actually exists.  (The constraints may be so severe that it?s not possible to satisfy all of them simultaneously.)  A celebrated mathematical theorem called the Lov&aacute;sz Local Lemma (named after the Hungarian combinatorialist L&aacute;szl&oacute; Lov&aacute;sz, and usually abbreviated as LLL) gives us a very useful condition that guarantees that a solution exists: essentially, it says that the constraints should be not too restrictive, or \"dense\".  But unfortunately the LLL doesn?t give us any way to actually find a solution, even when we know it exists!  The main goal of this project was to design algorithms that efficiently find a solution whenever the LLL guarantees that one exists.  The principal project personnel were PI Prof. Alistair Sinclair and PhD student Fotis Iliopoulos at the University of California, Berkeley, in collaboration with co-PI Dimitris Achlioptas at the University of California, Santa Cruz.\n\nThe type of algorithms we consider are so-called \"local search algorithms.\"  These algorithms start with some imperfect candidate solution (e.g., a schedule with some flights un-staffed, or some personnel having unrealistic individual schedules) and try to improve it at each step by fixing one of the imperfections (e.g., staffing a new flight, or fixing one person's schedule).  Of course, fixing (e.g.) one individual?s schedule may create further imperfections elsewhere, but one may hope that, on average, the algorithm makes progress towards a valid solution if the constraints are not too dense.  Building on, and extending, ground-breaking recent work in this area, we have been able to design local search algorithms that find a solution whenever the LLL guarantees that one exists, even for the most powerful versions of the LLL that had not previously been amenable to algorithms.  \n\nThe key to analyzing the new algorithms is to bring in tools from linear algebra, specifically matrix analysis.  This allowed us to build a new framework that unifies and replaces a range of existing tools, and makes the design and analysis of local search algorithms more systematic.  Among the concrete examples we have been able to address with this new framework are edge coloring of multigraphs (which encodes a variety of problems such as bandwidth allocation in broadcasting and packet switching in networks) and vertex coloring of graphs (a slightly simplified model of the airline scheduling problem mentioned above).  We have also been able to show that, under natural additional conditions, our algorithms actually find a rich class of solutions rather than just a single solution.  We are confident that our framework will find further applications in the future.\n\n\t\t\t\t\tLast Modified: 08/14/2019\n\n\t\t\t\t\tSubmitted by: Alistair Sinclair"
 }
}