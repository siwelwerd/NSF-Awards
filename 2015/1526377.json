{
 "awd_id": "1526377",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TWC: Small: Understanding the Complexity of Concurrent Security",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Jeremy Epstein",
 "awd_eff_date": "2015-10-01",
 "awd_exp_date": "2019-09-30",
 "tot_intn_awd_amt": 463922.0,
 "awd_amount": 483922.0,
 "awd_min_amd_letter_date": "2015-07-31",
 "awd_max_amd_letter_date": "2016-05-04",
 "awd_abstract_narration": "A key property of modern day network environments such as the Internet is the possibility of multiple processes running simultaneously, concurrently and unaware of each other. However, the same property also allows an attacker for a coordinated attack in which an adversary controls many parties, interleaving the executions of the various protocol instances and creating rogue interactions between protocols. With changing network environments and new-emerging paradigms such as cloud computing, we need to assess the threat model in order to capture a broader class of attacks. This research project identifies strong notions of security to capture previously unforeseen threats and the intrinsic cryptographic complexity of constructing protocols that are secure against such threats. \r\n\r\nThis project focuses on a strong form of corruption model referred to as adaptive corruption, which considers an adversary that can hijack a host anytime during the course of computation. This models hacking attacks where an external attacker breaks into parties' machines in the midst of a protocol execution, and captures additional threats. This research identifies the minimal cryptographic assumptions to design protocols that are secure against adaptive corruption in the concurrent setting with and without setup. The research focuses on black-box construction wherever possible and relies on non-black-box constructions as a stepping stone towards establishing feasibility. The project bridges the gap between theory and practice, by creating a wiki that will enable a web-based interaction to retrieve relevant information regarding current techniques for cryptographic constructions and security notions associated with these constructions.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Muthuramakrishn",
   "pi_last_name": "Venkitasubramaniam",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Muthuramakrishn Venkitasubramaniam",
   "pi_email_addr": "muthuv@cs.rochester.edu",
   "nsf_id": "000595451",
   "pi_start_date": "2015-07-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Rochester",
  "inst_street_address": "910 GENESEE ST",
  "inst_street_address_2": "STE 200",
  "inst_city_name": "ROCHESTER",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "5852754031",
  "inst_zip_code": "146113847",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "NY25",
  "org_lgl_bus_name": "UNIVERSITY OF ROCHESTER",
  "org_prnt_uei_num": "",
  "org_uei_num": "F27KDXZMF9Y8"
 },
 "perf_inst": {
  "perf_inst_name": "University of Rochester",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "146270140",
  "perf_ctry_code": "US",
  "perf_cong_dist": "25",
  "perf_st_cong_dist": "NY25",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 463922.0
  },
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 20000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-b6837d7d-7fff-12b8-6702-cc5dd43a5c47\"> </span></p>\n<p dir=\"ltr\"><span>A key feature of modern-day network environments such as the Internet is the possibility of multiple processes running simultaneously, or concurrently, unaware of each other. However, the same feature also allows an attacker to carry out a coordinated attack in which an adversary controls many parties, interleaving the executions of the various protocol instances and creating rogue interactions between protocols. Any security notion must guarantee correctness and privacy for the target protocol in the presence of arbitrary network environments. In general, security in the stand-alone setting does not imply security in the concurrent setting.</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>The main question investigated under this grant was identifying feasibility of achieving concurrent security under minimal assumptions. The first bottleneck in achieving concurrent security is that no meaningful task can be accomplished with some trusted setup. Two popular setup models are 1) the common reference string model (CRS) where a trusted party is required to sample from a public distribution once and make it available before protocol execution (but, erase the random coins used to sample) and 2) tamper-proof model where parties can create hardware ?tokens? that can be embedded with some functionality and will enable only input-output access (i.e., the description of the functionality remains hidden even if tampered with). In a sequence of works, developed under this grant, we showed how to design concurrently secure protocols in the CRS model under minimal cryptographic assumptions (so-called extractable commitments) where the underlying primitives were used in a black-box way. In the case of tamper proof model, we put forth a definition that captured the full capability of the adversary and designed concurrently security protocols under the minimal assumption of one-way functions.&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>Another aspect explored in this grant was protection against adaptive corruptions. Most works in the field have typically considered static corruptions which restrict the adversary to choose which parties to corrupt before protocol execution starts. Adaptive corruptions on the other hand captures the capability of an adversary to decide which party to corrupt on-the-fly (i.e. during the computation). Under this grant, we demonstrated a concurrently secure protocol in the CRS model and tamper-proof model that remains secure against adaptive corruptions. A significant result established under this grant resolves a 30 year old problem of designing constant-round secure computation protocol against adaptive corruption under the minimal assumption of existence of adaptively secure oblivious-transfer protocol.&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>Overall, the research under this grant has essentially resolved the question of minimal setup and minimal cryptographic hardness assumptions required to design concurrently secure protocol in a modular (i.e. black-box) way. Moreover, we provide a unified framework that can be used to demonstrate feasibility for any new setup model that might arise in the future.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/29/2020<br>\n\t\t\t\t\tModified by: Muthuramakrishn&nbsp;Venkitasubramaniam</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nA key feature of modern-day network environments such as the Internet is the possibility of multiple processes running simultaneously, or concurrently, unaware of each other. However, the same feature also allows an attacker to carry out a coordinated attack in which an adversary controls many parties, interleaving the executions of the various protocol instances and creating rogue interactions between protocols. Any security notion must guarantee correctness and privacy for the target protocol in the presence of arbitrary network environments. In general, security in the stand-alone setting does not imply security in the concurrent setting.\n\n \nThe main question investigated under this grant was identifying feasibility of achieving concurrent security under minimal assumptions. The first bottleneck in achieving concurrent security is that no meaningful task can be accomplished with some trusted setup. Two popular setup models are 1) the common reference string model (CRS) where a trusted party is required to sample from a public distribution once and make it available before protocol execution (but, erase the random coins used to sample) and 2) tamper-proof model where parties can create hardware ?tokens? that can be embedded with some functionality and will enable only input-output access (i.e., the description of the functionality remains hidden even if tampered with). In a sequence of works, developed under this grant, we showed how to design concurrently secure protocols in the CRS model under minimal cryptographic assumptions (so-called extractable commitments) where the underlying primitives were used in a black-box way. In the case of tamper proof model, we put forth a definition that captured the full capability of the adversary and designed concurrently security protocols under the minimal assumption of one-way functions. \n\n \nAnother aspect explored in this grant was protection against adaptive corruptions. Most works in the field have typically considered static corruptions which restrict the adversary to choose which parties to corrupt before protocol execution starts. Adaptive corruptions on the other hand captures the capability of an adversary to decide which party to corrupt on-the-fly (i.e. during the computation). Under this grant, we demonstrated a concurrently secure protocol in the CRS model and tamper-proof model that remains secure against adaptive corruptions. A significant result established under this grant resolves a 30 year old problem of designing constant-round secure computation protocol against adaptive corruption under the minimal assumption of existence of adaptively secure oblivious-transfer protocol. \n\n \nOverall, the research under this grant has essentially resolved the question of minimal setup and minimal cryptographic hardness assumptions required to design concurrently secure protocol in a modular (i.e. black-box) way. Moreover, we provide a unified framework that can be used to demonstrate feasibility for any new setup model that might arise in the future.\n\n \n\n\t\t\t\t\tLast Modified: 07/29/2020\n\n\t\t\t\t\tSubmitted by: Muthuramakrishn Venkitasubramaniam"
 }
}