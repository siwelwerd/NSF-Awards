{
 "awd_id": "1528133",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Compiler Validation via Equivalence Modulo Inputs",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2015-09-01",
 "awd_exp_date": "2018-08-31",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 516000.0,
 "awd_min_amd_letter_date": "2015-07-13",
 "awd_max_amd_letter_date": "2016-05-10",
 "awd_abstract_narration": "Title: SHF:Small:Compiler Validation via Equivalence Modulo Input\r\n\r\nCompilers are among the most widely-used and complex software systems ever written; they are the trusted foundation for building other software. Perhaps less known is that production compilers also frequently contain bugs, which frustrate programmers and may lead to mysterious program failures and disasters. Compiler validation is both scientifically and technically challenging. The intellectual merits of this project are novel methodologies and practical techniques for validating production compilers. The project's broader significance and importance are improved reliability and usability of modern compilers. It also indirectly improves the quality of every piece of software upon which society increasingly depends.\r\n\r\nTechnically, this project is centered around equivalent modulo input (EMI), a general concept and approach for validating compilers. A basic realization of EMI is effective and has discovered more than a hundred important bugs in widely-used compilers. This project builds on that success and focuses on three main directions: develop advanced strategies to realize EMI's full potential, test a compiler's diagnostic support and performance, and generalize techniques toward testing C++ and OpenMP compilers. The project aims to significantly advance our knowledge and state-of-the-art practices on validating and engineering reliable and usable compilers.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Zhendong",
   "pi_last_name": "Su",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhendong Su",
   "pi_email_addr": "su@cs.ucdavis.edu",
   "nsf_id": "000336300",
   "pi_start_date": "2015-07-13",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Chengnian",
   "pi_last_name": "sun",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Chengnian sun",
   "pi_email_addr": "cnsun@ucdavis.edu",
   "nsf_id": "000690458",
   "pi_start_date": "2015-07-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Davis",
  "inst_street_address": "1850 RESEARCH PARK DR STE 300",
  "inst_street_address_2": "",
  "inst_city_name": "DAVIS",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "5307547700",
  "inst_zip_code": "956186153",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "CA04",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, DAVIS",
  "org_prnt_uei_num": "",
  "org_uei_num": "TX2DAGQPENZ5"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Davis",
  "perf_str_addr": "",
  "perf_city_name": "Davis",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "956165270",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "CA04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7943",
   "pgm_ref_txt": "PROGRAMMING LANGUAGES"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 500000.0
  },
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>For the duration of this NSF project, we, the principal investigators and graduate students, have developed new concepts, techniques, and tools for testing production compilers. This project is centered around equivalent modulo input (EMI), a general concept and approach introduced by the PI and his students for validating compilers. Abasic realization of EMI is effective and has discovered more than a hundred important bugs in widely-used compilers. This project built on that success and focused on developing advanced strategies to realizeEMI's full potential, testing a compiler's diagnostic support and performance, and generalizing techniques toward testing other compilers and critical software tools. The conducted research and educational activities have advanced the state-of-the-art knowledge and practice on validating and engineering reliable and usable compilers, and helped train next generation researchers and engineers. More specifically,</p>\n<p>- We have, through a continuous and extensive testing effort, found and reported more than 1,600 bugs in many of the most widely-used compilers (such as GCC, Clang/LLVM, ICC, Scala, Rust, and JVMs), of which more than 1,000 have already been fixed by compiler developers.</p>\n<p>- We have received best paper awards, industrial research awards,&nbsp; keynote speech invitations, and public acknowledgments and appreciations from the LLVM and GCC communities for our research from this NSF project.</p>\n<p>- We have disseminated our research results through publications in top outlets such as highly-competitive conferences, tool distributions and research exchanges.</p>\n<p>- We have successfully trained the next generation computer scientists through postdoctoral scholar and graduate student advising, and engineers through undergraduate and graduate level education.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/10/2019<br>\n\t\t\t\t\tModified by: Zhendong&nbsp;Su</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nFor the duration of this NSF project, we, the principal investigators and graduate students, have developed new concepts, techniques, and tools for testing production compilers. This project is centered around equivalent modulo input (EMI), a general concept and approach introduced by the PI and his students for validating compilers. Abasic realization of EMI is effective and has discovered more than a hundred important bugs in widely-used compilers. This project built on that success and focused on developing advanced strategies to realizeEMI's full potential, testing a compiler's diagnostic support and performance, and generalizing techniques toward testing other compilers and critical software tools. The conducted research and educational activities have advanced the state-of-the-art knowledge and practice on validating and engineering reliable and usable compilers, and helped train next generation researchers and engineers. More specifically,\n\n- We have, through a continuous and extensive testing effort, found and reported more than 1,600 bugs in many of the most widely-used compilers (such as GCC, Clang/LLVM, ICC, Scala, Rust, and JVMs), of which more than 1,000 have already been fixed by compiler developers.\n\n- We have received best paper awards, industrial research awards,  keynote speech invitations, and public acknowledgments and appreciations from the LLVM and GCC communities for our research from this NSF project.\n\n- We have disseminated our research results through publications in top outlets such as highly-competitive conferences, tool distributions and research exchanges.\n\n- We have successfully trained the next generation computer scientists through postdoctoral scholar and graduate student advising, and engineers through undergraduate and graduate level education.\n\n\t\t\t\t\tLast Modified: 03/10/2019\n\n\t\t\t\t\tSubmitted by: Zhendong Su"
 }
}