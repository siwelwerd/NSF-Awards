{
 "awd_id": "1527541",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "III: Small: Real-Time Detection of Structures from a Massive Graph Stream",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032927347",
 "po_email": "sspengle@nsf.gov",
 "po_sign_block_name": "Sylvia Spengler",
 "awd_eff_date": "2015-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 499896.0,
 "awd_amount": 515896.0,
 "awd_min_amd_letter_date": "2015-08-21",
 "awd_max_amd_letter_date": "2019-11-27",
 "awd_abstract_narration": "There is an urgent need to quickly derive actionable intelligence from increasingly large volumes of data. In many domains, including social media analytics and cybersecurity, data contains relationships between entities that can be modeled using a graph, and a question on detecting patterns in data can be transformed into questions on detecting emerging structures in appropriately derived graphs. The goal of this project is to develop algorithms and software for finding significant structures from dynamic graphs in real-time. The project will develop algorithms that are efficient in their use of CPU and memory, and whose performance can be quantified in a mathematically rigorous way. The project will also develop implementations that are expected to process data at a high\r\nthroughput and can identify emerging structures much faster than current methods. The availability of these methods and implementations will impact the domains of cybersecurity and social network analytics. Software developed will be released as a toolkit of operators that can be used with current stream processing systems. The project will lead to new instructional material in existing courses as well as new courses in data analytics, involve individuals from underrepresented groups, and forge research collaborations with industrial research labs.\r\n\r\nThe project will consider data that contains an evolving dynamic graph, and develop methods for detecting and enumerating change in the set of (1) dense combinatorial structures such as maximal cliques, quasi-cliques, maximal bicliques and quasi-bicliques in a graph, and (2) temporal structures such as temporal paths and temporal cliques in a time-stamped graph.  While there has been significant progress in methods for detecting structures in a massive static graph, the same is not true for a dynamic graph, and often, the state-of-the-art for a dynamic graph is to repeatedly execute a method designed for a static graph. For enumerating the change in the set of structures, the project will take a novel approach of developing change-sensitive algorithms whose processing cost is proportional to the magnitude of change in the set of structures. It will use techniques from the area of approximation algorithms in designing (space and time) efficient methods for enumerating temporal structures from a graph stream. \r\n\r\nFor further information, see the project web site at: http://www.ece.iastate.edu/~snt/nsf-iis2015/",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Goce",
   "pi_last_name": "Trajcevski",
   "pi_mid_init": "P",
   "pi_sufx_name": "",
   "pi_full_name": "Goce P Trajcevski",
   "pi_email_addr": "gocet25@iastate.edu",
   "nsf_id": "000304901",
   "pi_start_date": "2019-11-27",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Srikanta",
   "pi_last_name": "Tirthapura",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Srikanta Tirthapura",
   "pi_email_addr": "snt@iastate.edu",
   "nsf_id": "000111060",
   "pi_start_date": "2015-08-21",
   "pi_end_date": "2019-11-27"
  }
 ],
 "inst": {
  "inst_name": "Iowa State University",
  "inst_street_address": "1350 BEARDSHEAR HALL",
  "inst_street_address_2": "515 MORRILL ROAD",
  "inst_city_name": "AMES",
  "inst_state_code": "IA",
  "inst_state_name": "Iowa",
  "inst_phone_num": "5152945225",
  "inst_zip_code": "500112103",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IA04",
  "org_lgl_bus_name": "IOWA STATE UNIVERSITY OF SCIENCE AND TECHNOLOGY",
  "org_prnt_uei_num": "DQDBM7FGJPC5",
  "org_uei_num": "DQDBM7FGJPC5"
 },
 "perf_inst": {
  "perf_inst_name": "Iowa State University",
  "perf_str_addr": "1138 Pearson Hall",
  "perf_city_name": "Ames",
  "perf_st_code": "IA",
  "perf_st_name": "Iowa",
  "perf_zip_code": "500112207",
  "perf_ctry_code": "US",
  "perf_cong_dist": null,
  "perf_st_cong_dist": "IA",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736400",
   "pgm_ele_name": "Info Integration & Informatics"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7364",
   "pgm_ref_txt": "INFO INTEGRATION & INFORMATICS"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 499896.0
  },
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The main objective of this project was to develop algorithms and software for real-time mining of dense structures (subgraphs) from a massive graph stream.&nbsp;Dense subgraphs are groups of tightly interconnected vertices that reveal the underlying structure of communities in a graph. Many of today's big data applications need to identify dense structures in a streaming setting &ndash; including real-time identification of &ldquo;breaking news&rdquo; from social media, real-time identification of communities within microblogging platforms, and so on. However, the methods used so far are all designed for static graphs and do not apply directly to dynamic graphs. Identifying dense substructures in a graph is a critical component of other mining tasks, such as identifying groups of closely linked people in social network analysis, identifying web communities, and in constructing the Phylogenetic Tree of Life.&nbsp;</p>\n<p>From a foundational perspective, identifying dense structures in a graph has been a problem of long-standing interest in computer science, but even many of the basic questions have remained unanswered in the context of dynamic graphs. We considered real-time enumeration of dense structures within an evolving graph, and commonly used definitions of dense structures, such as maximal cliques, maximal bicliques, quasi-cliques and quasi-bicliques, and related structures. The project focused on designing algorithms with provable properties of correctness and efficiency with respect to space and time as well as efficient implementations.</p>\n<p>One specific setting that we considered was designing and evaluating algorithms for counting subgraphs within large bipartite graphs, such as ones used to represent user-product or author-publication networks. As it turns out, the significant substructures in a bipartite graph are quite different from those encountered in a non-bipartite graph, and we considered algorithms that were specialized for the case of bipartite graphs.&nbsp;</p>\n<p>We considered quasi-cliques which, unlike maximal cliques which are complete dense structures in a graph, are incomplete structures, and allow the absence of edges between a (controlled number of) pairs of vertices in the structure. We analyzed the algorithms using the traditional methods of worst-case time and space-complexity to derive an estimate of the runtime of the algorithms. We also considered hardness results for problems related to quasi-clique enumeration, and found that there are significant obstacles to developing worst-case efficient algorithms for these problems</p>\n<p>We also worked on parallelizing solutions to substructure enumeration. Along this direction, we observed that the lack of methods that can exploit shared memory parallelism, and set out to close this gap.</p>\n<p>Five graduate students were exposed to, and participated in, the research topics addressed in this project. In addition, part of the findings from this project were used in the course ECE 419 (Software Tools for Large-Scale Data Analysis) at Iowa State University. &nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/25/2021<br>\n\t\t\t\t\tModified by: Goce&nbsp;P&nbsp;Trajcevski</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe main objective of this project was to develop algorithms and software for real-time mining of dense structures (subgraphs) from a massive graph stream. Dense subgraphs are groups of tightly interconnected vertices that reveal the underlying structure of communities in a graph. Many of today's big data applications need to identify dense structures in a streaming setting &ndash; including real-time identification of \"breaking news\" from social media, real-time identification of communities within microblogging platforms, and so on. However, the methods used so far are all designed for static graphs and do not apply directly to dynamic graphs. Identifying dense substructures in a graph is a critical component of other mining tasks, such as identifying groups of closely linked people in social network analysis, identifying web communities, and in constructing the Phylogenetic Tree of Life. \n\nFrom a foundational perspective, identifying dense structures in a graph has been a problem of long-standing interest in computer science, but even many of the basic questions have remained unanswered in the context of dynamic graphs. We considered real-time enumeration of dense structures within an evolving graph, and commonly used definitions of dense structures, such as maximal cliques, maximal bicliques, quasi-cliques and quasi-bicliques, and related structures. The project focused on designing algorithms with provable properties of correctness and efficiency with respect to space and time as well as efficient implementations.\n\nOne specific setting that we considered was designing and evaluating algorithms for counting subgraphs within large bipartite graphs, such as ones used to represent user-product or author-publication networks. As it turns out, the significant substructures in a bipartite graph are quite different from those encountered in a non-bipartite graph, and we considered algorithms that were specialized for the case of bipartite graphs. \n\nWe considered quasi-cliques which, unlike maximal cliques which are complete dense structures in a graph, are incomplete structures, and allow the absence of edges between a (controlled number of) pairs of vertices in the structure. We analyzed the algorithms using the traditional methods of worst-case time and space-complexity to derive an estimate of the runtime of the algorithms. We also considered hardness results for problems related to quasi-clique enumeration, and found that there are significant obstacles to developing worst-case efficient algorithms for these problems\n\nWe also worked on parallelizing solutions to substructure enumeration. Along this direction, we observed that the lack of methods that can exploit shared memory parallelism, and set out to close this gap.\n\nFive graduate students were exposed to, and participated in, the research topics addressed in this project. In addition, part of the findings from this project were used in the course ECE 419 (Software Tools for Large-Scale Data Analysis) at Iowa State University.  \n\n \n\n\t\t\t\t\tLast Modified: 01/25/2021\n\n\t\t\t\t\tSubmitted by: Goce P Trajcevski"
 }
}