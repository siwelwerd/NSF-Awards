{
 "awd_id": "1448012",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SBIR Phase I:    A Cloud Client Service for Next Generation of Mobile Computing, Leveraging Low Latency Video Encoder Algorithms",
 "cfda_num": "47.084",
 "org_code": "15030000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Steven Konsek",
 "awd_eff_date": "2015-01-01",
 "awd_exp_date": "2015-12-31",
 "tot_intn_awd_amt": 150000.0,
 "awd_amount": 150000.0,
 "awd_min_amd_letter_date": "2014-12-05",
 "awd_max_amd_letter_date": "2014-12-05",
 "awd_abstract_narration": "The broader impact/commercial potential of this Small Business Innovation Research (SBIR) Phase I project will be to enable various low latency video applications that are not possible today.  One of the most interesting is in the area of cloud computing, in which a server in a data center somewhere on the Internet runs a client's application remotely, and delivers the frame-by-frame video to the client's viewer.  This allows for a very cheap client device, consisting of just a video decoder and an input such as a mouse pad, while graphic or compute intensive tasks run on powerful servers in the cloud that can be leased to the client on an as-needed basis.  This server-client model could also be used internally at a company or school, greatly simplifying IT requirements.  And for high security applications there is also an advantage, as all data is stored remotely.  There is nothing local on the user's device to be compromised.  Cloud computing services such as these are already coming on line, but the range of applications they can run is limited by the lack of good low latency video encoding.  Solving this problem opens up a whole new paradigm of how people purchase, maintain and use personal computers and software.\r\n\r\nThis Small Business Innovation Research (SBIR) Phase I project investigates techniques for real-time ultra low latency video compression.  The goal of the research is to enable the encoding and transmission of video over a communications medium such as the Internet, cell phone network, satellite network, etc. such that the video may be viewed at the receiving end with no more than 1 frame of latency from when it was encoded at the source.  The best and newest industry-standard video compression specification, called H.265, will be used as a framework such that the resulting compressed video can be readily decoded by widely available software or hardware.  Framework tools and techniques to monitor and adjust the bit rate of the compressed video will be developed and tested to achieve the low latency goals while maintaining high visual quality of the compressed video.  The result of this research will be a set of algorithms that can be used in the design of an H.265 video encoder that will achieve the low latency goal, as well as a characterization of the limitations of these algorithms such that their applicability to various real-world opportunities can be assessed.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "TIP",
 "org_dir_long_name": "Directorate for Technology, Innovation, and Partnerships",
 "div_abbr": "TI",
 "org_div_long_name": "Translational Impacts",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Adam",
   "pi_last_name": "Malamy",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Adam Malamy",
   "pi_email_addr": "Adam.Malamy@NGCodec.com",
   "nsf_id": "000669665",
   "pi_start_date": "2014-12-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "NGCodec Inc.",
  "inst_street_address": "1145 Mariposa Ave.",
  "inst_street_address_2": "Suite 100",
  "inst_city_name": "San Jose",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "4086603189",
  "inst_zip_code": "951262620",
  "inst_country_name": "United States",
  "cong_dist_code": "17",
  "st_cong_dist_code": "CA17",
  "org_lgl_bus_name": null,
  "org_prnt_uei_num": null,
  "org_uei_num": "SQUSR62LLT17"
 },
 "perf_inst": {
  "perf_inst_name": "NGCodec Inc.",
  "perf_str_addr": "1145 Mariposa Av., Suite 100",
  "perf_city_name": "San Jose",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "951262620",
  "perf_ctry_code": "US",
  "perf_cong_dist": "17",
  "perf_st_cong_dist": "CA17",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "537100",
   "pgm_ele_name": "SBIR Phase I"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "5371",
   "pgm_ref_txt": "SMALL BUSINESS PHASE I"
  },
  {
   "pgm_ref_code": "8028",
   "pgm_ref_txt": "Sensor Technology"
  },
  {
   "pgm_ref_code": "8034",
   "pgm_ref_txt": "Hardware Components"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 150000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Cloud computing is the concept of using a simple, inexpensive keyboard and display device to connect via the Internet to powerful computing resources that can be leased or cost-shared among many users. &nbsp;A problem with many use cases of cloud computing is that to be effective, there must be an extremely small end-to-end delay between the user sending a command to the remote computer, and the results being visible on the local display. &nbsp;For example, when&nbsp;manipulating a 3D object, or playing a video game, a very low latency is essential. &nbsp;This is because there is a feedback loop where the user's next response is dependent on seeing the result from the previous command.</p>\n<p>One significant contributor to the latency is the fact that the screen content of the remote computer must be compressed and transmitted to the user as a video. The compression time itself is not large, but aspects of the compressed video do contribute to latency.</p>\n<p>Assume that the user has access to a 3 mbps (3 mega-bits-per-second) Internet service. &nbsp;The video stream from the remote computer must not exceed 3 mbps, or there will be a lag in the received video. &nbsp;So, the compression bit rate on the remote service is adjusted to 3 mbps, and everything is fine, right? &nbsp;No, not quite. &nbsp;Unfortunately compressed video has the following characteristic - it is either non-uniformly compressed, or it has very bad quality. &nbsp;Non-uniformly compressed means that although the average bit rate may be 3 mbps, sometimes the bit rate will be higher, and sometimes it will be lower. &nbsp;If it is constrained to be absolutely fixed, the quality will suffer, partially because video encoders are not very good at maintaining an absolutely constant bit rate (known in the industry as CBR).</p>\n<p>The project supported by this SBIR Phase I grant involved devising algorithms to optimize the compressed video quality while achieving close to CBR. &nbsp;In addition to cloud computing, such an algorithm is very useful for other applications as well, including video conferencing, wireless cameras, wireless laptop docking stations, etc. &nbsp;The company supported via this grant, NGCodec, is working to productize hardware video encoders using the latest HEVC/H.265 video compression standard that incorporate this extremely low latency feature.</p>\n<p>The work to develop the low latency video algorithms involved several steps. We first created a C model of an encoder in which we implemented the algorithms, and also a testbench to measure the effectiveness of the algorithms. &nbsp;We worked on creating the algorithms themselves, and then we analyzed the effectiveness of various rate control algorithms using the tools we created. &nbsp;The following paragraphs describe the results of these steps in more detail</p>\n<p><strong>C Model of Encoder</strong>:&nbsp; From the ground up, our encoder is designed to minimize latency by dividing the encoding task into discrete, deterministic steps. &nbsp;We developed a model that is able to support the low latency rate control algorithms. Although not part of the grant, we also created a hardware version of this encoder that matches the behavior of the C model.</p>\n<p><strong>Testbench</strong>:&nbsp; We created an analysis tool that analyzes the compressed bitstream generated by our encoder, and produces statistics on what end-to-end latency is achieved with the bitstream, and also what is the quality of the encoded video. &nbsp;This latter is measured using Peak Signal to Noise Ratio (PSNR) computations, which is an accepted way of measuring the deviance of an encoded video from the original source.</p>\n<p><strong>Algorithms</strong>: We generated a variety of rate control algorithms. &nbsp;We experimented with the complexity of the algorithms (how much processing power is required to execute the algorithm) vs. the effectiveness. &nbsp;We expe...",
  "por_txt_cntn": "\nCloud computing is the concept of using a simple, inexpensive keyboard and display device to connect via the Internet to powerful computing resources that can be leased or cost-shared among many users.  A problem with many use cases of cloud computing is that to be effective, there must be an extremely small end-to-end delay between the user sending a command to the remote computer, and the results being visible on the local display.  For example, when manipulating a 3D object, or playing a video game, a very low latency is essential.  This is because there is a feedback loop where the user's next response is dependent on seeing the result from the previous command.\n\nOne significant contributor to the latency is the fact that the screen content of the remote computer must be compressed and transmitted to the user as a video. The compression time itself is not large, but aspects of the compressed video do contribute to latency.\n\nAssume that the user has access to a 3 mbps (3 mega-bits-per-second) Internet service.  The video stream from the remote computer must not exceed 3 mbps, or there will be a lag in the received video.  So, the compression bit rate on the remote service is adjusted to 3 mbps, and everything is fine, right?  No, not quite.  Unfortunately compressed video has the following characteristic - it is either non-uniformly compressed, or it has very bad quality.  Non-uniformly compressed means that although the average bit rate may be 3 mbps, sometimes the bit rate will be higher, and sometimes it will be lower.  If it is constrained to be absolutely fixed, the quality will suffer, partially because video encoders are not very good at maintaining an absolutely constant bit rate (known in the industry as CBR).\n\nThe project supported by this SBIR Phase I grant involved devising algorithms to optimize the compressed video quality while achieving close to CBR.  In addition to cloud computing, such an algorithm is very useful for other applications as well, including video conferencing, wireless cameras, wireless laptop docking stations, etc.  The company supported via this grant, NGCodec, is working to productize hardware video encoders using the latest HEVC/H.265 video compression standard that incorporate this extremely low latency feature.\n\nThe work to develop the low latency video algorithms involved several steps. We first created a C model of an encoder in which we implemented the algorithms, and also a testbench to measure the effectiveness of the algorithms.  We worked on creating the algorithms themselves, and then we analyzed the effectiveness of various rate control algorithms using the tools we created.  The following paragraphs describe the results of these steps in more detail\n\nC Model of Encoder:  From the ground up, our encoder is designed to minimize latency by dividing the encoding task into discrete, deterministic steps.  We developed a model that is able to support the low latency rate control algorithms. Although not part of the grant, we also created a hardware version of this encoder that matches the behavior of the C model.\n\nTestbench:  We created an analysis tool that analyzes the compressed bitstream generated by our encoder, and produces statistics on what end-to-end latency is achieved with the bitstream, and also what is the quality of the encoded video.  This latter is measured using Peak Signal to Noise Ratio (PSNR) computations, which is an accepted way of measuring the deviance of an encoded video from the original source.\n\nAlgorithms: We generated a variety of rate control algorithms.  We experimented with the complexity of the algorithms (how much processing power is required to execute the algorithm) vs. the effectiveness.  We experimented first with non-constant bit rate (known in the industry as VBR for variable bit rate) and then with CBR.\n\nAnalysis: Using our testbench we analyzed and iterated on the algorithms.  We submitted graphical data in our final report that shows the be..."
 }
}