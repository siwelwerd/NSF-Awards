{
 "awd_id": "1527821",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF:  Small: Rethinking CAD for System-Level Design via Interactivity, Learning, and Collaboration",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927843",
 "po_email": "sabasu@nsf.gov",
 "po_sign_block_name": "Sankar Basu",
 "awd_eff_date": "2015-06-15",
 "awd_exp_date": "2020-05-31",
 "tot_intn_awd_amt": 450000.0,
 "awd_amount": 450000.0,
 "awd_min_amd_letter_date": "2015-06-15",
 "awd_max_amd_letter_date": "2015-06-15",
 "awd_abstract_narration": "In a zeal to pack more transistors into a single integrated circuit, the semiconductor industry has produced many generations of electronic products that are increasingly more powerful and less expensive resulting in massive expansion of information and communication technologies with economic benefits that are estimated as a large part of global productivity growth during the recent decades. A continuous stream of innovations across the three main semiconductor technology areas lies at the root of this success story: (i) device and manufacturing, (ii) circuits and architectures, and (iii) Computer-Aided Design (CAD) methodologies and tools. Recent innovations in the first two areas make it possible to envision new generations of products that are stronger in computational power and richer in functional capabilities.  The research enabled by this project, attempts to undertake corresponding innovations in the third area mentioned above.  A core part of this program is the development of a new senior-level undergraduate course that will engage the students in working together on a semester-long project with the infrastructure support for collaborative engineering provided by the new CAD environment.  \r\n\r\nCurrent effort of designing state-of-the-art integrated circuits, suffers from shortcomings that characterize current CAD flows, e.g., the lack of support for exploring the design space across its hardware and software components in search of better solutions; the limited capabilities in optimizing simultaneously multiple components at the system level; and the big learning curve and long execution times that many tools require. This project will investigate a new generation of CAD methodologies and tools. Specifically, the research team will develop a new environment for System-Level Design that is highly interactive, exalts the designers' experience, inspires their creativity, and promotes continuous collaboration across the engineering team. The proposed approach leverages recent work on supervised and compositional design-space exploration, and the application of learning methods to assist designers in the use of advanced high-level synthesis tools.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Luca",
   "pi_last_name": "Carloni",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Luca Carloni",
   "pi_email_addr": "luca@cs.columbia.edu",
   "nsf_id": "000490797",
   "pi_start_date": "2015-06-15",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Columbia University",
  "inst_street_address": "615 W 131ST ST",
  "inst_street_address_2": "MC 8741",
  "inst_city_name": "NEW YORK",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "2128546851",
  "inst_zip_code": "100277922",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "NY13",
  "org_lgl_bus_name": "THE TRUSTEES OF COLUMBIA UNIVERSITY IN THE CITY OF NEW YORK",
  "org_prnt_uei_num": "",
  "org_uei_num": "F4N1QNPB95M4"
 },
 "perf_inst": {
  "perf_inst_name": "Columbia University",
  "perf_str_addr": "1214 Amsterdam Avenue",
  "perf_city_name": "New York",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "100277003",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "NY13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7945",
   "pgm_ref_txt": "DES AUTO FOR MICRO & NANO SYST"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 450000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The design of modern integrated circuits is a quest to optimally tune and balance multiple objectives, including performance, power dissipation, implementation costs, and reliability, among others. &nbsp;The complexity of these chips continues to rise despite time-to-market pressures and the desire for cost savings via smaller design teams. The coupling of increasing complexity of modern designs and multiple design objectives leads to the rise of difficult optimization problems beyond what even experienced designers can manage manually.&nbsp; These challenges are causing an industry shift from custom circuit-level design techniques towards system-level design methodologies for design-space exploration. These methodologies rely heavily on computer-aided design (CAD) tools for the automatic synthesis and optimizations of circuits from specifications given in higher-level programming languages in order to boost the productivity of the designers. However, the high flexibility and sophistication of advanced CAD tools for high-level, logic, and physical synthesis increase their complexity and make often their use non-intuitive for their users. In the case of tools for logic and physical synthesis (LPS), the number of configuration parameters that are available to users can be in the thousands. Since a run of such tools may take several hours or even days, the execution of multiple runs with exhaustive tuning of these parameters is typically infeasible. Furthermore, designers often need to consider many more metrics, sometimes dozens, when evaluating the quality of a synthesis scenario. &nbsp;High-level synthesis (HLS) tools come with a more limited number of configuration parameters, known as knobs, which however can be applied in many ways. These knobs allow designers to explore the multi-objective design space in search of Pareto-optimal implementations. The total number of knob configurations grows exponentially with increasing number of knobs. Hence, it can be costly, impractical, or infeasible to run HLS flows with all possible configurations.</p>\n<p>&nbsp;</p>\n<p>In summary, efficient use of advanced synthesis tools is increasingly challenging for even experienced professional designers and daunting for novice designers. To address this problem, the PI and his collaborators have pursued a multipronged strategy to advance the state of the art in CAD methodologies in a way that increases tool interactivity, fosters engineering collaboration and leverages machine learning. &nbsp;</p>\n<p>&nbsp;</p>\n<p>Among the main contributions of this project, they developed SynTunSys, the first self-evolving and autonomous system for tuning the input parameters of LPS tools. By taking over the process of tuning the input parameters and by learning automatically from the information of previous synthesis runs, SynTunSys realizes a new level of abstraction where the human designer offloads part of the task of design-space exploration to automated tools.</p>\n<p>As chip-design challenges continue to require strides in quality of results and design efficiency, they augmented the first version of SynTunSys with a novel learning-based algorithm for synthesis parameter optimization that employs adaptive online learning methods. Additionally, they addressed the challenge of tuning multiple macros to achieve the best return-on-investment (ROI) given limited compute resources by developing a scheduler that can manage many SynTunSys tuning runs to maximize the ROI of parameter tuning across multiple design macros.</p>\n<p>&nbsp;</p>\n<p>Industrial impact is one of the highlights of broader impact activities of this project. SynTunSys has been used to provide timing and power improvements for industrial high-performance processors, e.g., the IBM z13 high-performance server chip. During this major chip design, SynTunSys provided significant savings in human design effort and achieved a quality of results beyond what human designers alone could achieve, yielding on average a 36% improvement in a key performance metrics and a 7% reduction in power dissipation.</p>\n<p>&nbsp;</p>\n<p>In another effort, the PI and his collaborators have tackled the problem that current HLS tools are not ready yet to handle the complexity of specialized hardware accelerators, an increasingly importance class of circuits. They have developed COSMOS, a new automatic methodology for the design-space exploration of a complex accelerator that coordinates both HLS and memory optimization tools in a compositional way. A typical accelerator is too complex to be synthesized by state-of-the-art HLS tools without being partitioned first into several components to be synthesized and explored efficiently. COSMOS optimizes an accelerator by considering the relationship among its components, while taking also into account the unpredictability of current HLS tools and considering the private local memory of an accelerator as an essential part of the process of design-space exploration. First, it characterizes the components to define the regions of the design space that contain Pareto-optimal implementations. Then, it exploits a linear programming formulation to find the Pareto-optimal solutions at the system level. Finally, it identifies the knobs for each component that can be used to obtain the corresponding implementations. When applied to the system-level design of an accelerator for wide-area motion imagery, COSMOS explores the design space as completely as an exhaustive search, but it reduces the number of runs of the HLS tool by almost fifteen times.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/27/2020<br>\n\t\t\t\t\tModified by: Luca&nbsp;Carloni</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe design of modern integrated circuits is a quest to optimally tune and balance multiple objectives, including performance, power dissipation, implementation costs, and reliability, among others.  The complexity of these chips continues to rise despite time-to-market pressures and the desire for cost savings via smaller design teams. The coupling of increasing complexity of modern designs and multiple design objectives leads to the rise of difficult optimization problems beyond what even experienced designers can manage manually.  These challenges are causing an industry shift from custom circuit-level design techniques towards system-level design methodologies for design-space exploration. These methodologies rely heavily on computer-aided design (CAD) tools for the automatic synthesis and optimizations of circuits from specifications given in higher-level programming languages in order to boost the productivity of the designers. However, the high flexibility and sophistication of advanced CAD tools for high-level, logic, and physical synthesis increase their complexity and make often their use non-intuitive for their users. In the case of tools for logic and physical synthesis (LPS), the number of configuration parameters that are available to users can be in the thousands. Since a run of such tools may take several hours or even days, the execution of multiple runs with exhaustive tuning of these parameters is typically infeasible. Furthermore, designers often need to consider many more metrics, sometimes dozens, when evaluating the quality of a synthesis scenario.  High-level synthesis (HLS) tools come with a more limited number of configuration parameters, known as knobs, which however can be applied in many ways. These knobs allow designers to explore the multi-objective design space in search of Pareto-optimal implementations. The total number of knob configurations grows exponentially with increasing number of knobs. Hence, it can be costly, impractical, or infeasible to run HLS flows with all possible configurations.\n\n \n\nIn summary, efficient use of advanced synthesis tools is increasingly challenging for even experienced professional designers and daunting for novice designers. To address this problem, the PI and his collaborators have pursued a multipronged strategy to advance the state of the art in CAD methodologies in a way that increases tool interactivity, fosters engineering collaboration and leverages machine learning.  \n\n \n\nAmong the main contributions of this project, they developed SynTunSys, the first self-evolving and autonomous system for tuning the input parameters of LPS tools. By taking over the process of tuning the input parameters and by learning automatically from the information of previous synthesis runs, SynTunSys realizes a new level of abstraction where the human designer offloads part of the task of design-space exploration to automated tools.\n\nAs chip-design challenges continue to require strides in quality of results and design efficiency, they augmented the first version of SynTunSys with a novel learning-based algorithm for synthesis parameter optimization that employs adaptive online learning methods. Additionally, they addressed the challenge of tuning multiple macros to achieve the best return-on-investment (ROI) given limited compute resources by developing a scheduler that can manage many SynTunSys tuning runs to maximize the ROI of parameter tuning across multiple design macros.\n\n \n\nIndustrial impact is one of the highlights of broader impact activities of this project. SynTunSys has been used to provide timing and power improvements for industrial high-performance processors, e.g., the IBM z13 high-performance server chip. During this major chip design, SynTunSys provided significant savings in human design effort and achieved a quality of results beyond what human designers alone could achieve, yielding on average a 36% improvement in a key performance metrics and a 7% reduction in power dissipation.\n\n \n\nIn another effort, the PI and his collaborators have tackled the problem that current HLS tools are not ready yet to handle the complexity of specialized hardware accelerators, an increasingly importance class of circuits. They have developed COSMOS, a new automatic methodology for the design-space exploration of a complex accelerator that coordinates both HLS and memory optimization tools in a compositional way. A typical accelerator is too complex to be synthesized by state-of-the-art HLS tools without being partitioned first into several components to be synthesized and explored efficiently. COSMOS optimizes an accelerator by considering the relationship among its components, while taking also into account the unpredictability of current HLS tools and considering the private local memory of an accelerator as an essential part of the process of design-space exploration. First, it characterizes the components to define the regions of the design space that contain Pareto-optimal implementations. Then, it exploits a linear programming formulation to find the Pareto-optimal solutions at the system level. Finally, it identifies the knobs for each component that can be used to obtain the corresponding implementations. When applied to the system-level design of an accelerator for wide-area motion imagery, COSMOS explores the design space as completely as an exhaustive search, but it reduces the number of runs of the HLS tool by almost fifteen times.\n\n\t\t\t\t\tLast Modified: 08/27/2020\n\n\t\t\t\t\tSubmitted by: Luca Carloni"
 }
}