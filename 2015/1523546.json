{
 "awd_id": "1523546",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "NeTS: Small: Low Latency Scheduling for Data Centers",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Darleen Fisher",
 "awd_eff_date": "2015-10-01",
 "awd_exp_date": "2021-09-30",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 500000.0,
 "awd_min_amd_letter_date": "2015-08-24",
 "awd_max_amd_letter_date": "2020-08-14",
 "awd_abstract_narration": "A data center is the backbone of any modern computational infrastructure. Therefore, it is of utmost importance to operate data center at high resource utilization and low latency to build a high-performance computation system. The primary goal of this project is to develop such a data center.\r\n\r\nHistorically, the data center architecture has been inspired by congestion control in the Internet, where decisions are made at the end-points in a distributed manner. This has led to robust, scalable architecture for data center, but suffers from high latency and low resource utilization. In contrast to the Internet congestion control, scheduling in a switch ? core of modern high-bandwidth Internet router ? fundamentally relies on the ability to exercise centralized control. Over the past two decades, much progress has been made in the context of switch scheduling resulting into algorithm with high resource utilization and extremely low latency. Therefore, by applying design principles from switch scheduling, there is a potential to achieve data center architecture that has high resource utilization and low latency. In summary, there is a massive opportunity for developing extremely low-latency, high-performance scheduling architecture for data center by deriving design principles from Internet routers rather than Internet congestion control. This is precisely the focal point of this project. \r\n\r\nThere are two major challenges in achieving this goal. First, developing an implementable and high-performance solution for switch scheduling. The existing theoretically optimal solutions, recently developed by PI, are too complex to implement. Therefore, developing a simple implementation of such a solution is required. This project will achieve this goal by utilizing randomization (a la Markov Chain Monte Carlo) and mean-field approximations from spin glass theory in Statistical Physics. Second, transforming a scheduling algorithm for a switch to a scheduling algorithm for data center is challenging. This project shall develop an emulation framework that will allow for such a transformation in a seamless manner. This will be achieved by utilizing connections between flow-level scheduling with packet-level scheduling inspired by reversible queuing networks.\r\n\r\nIntellectual Merit: This project will advance the design and analysis of implementable scheduling algorithms for communication networks. Intellectually, this will advance theory of randomized approximation algorithm, approximation techniques from statistical physics and emulation approaches from queuing network. The successful outcome of this project will suggest that it is better to architect a data center using principles behind the design of classical telephone network and ATM network rather than that of Internet congestion control. \r\n\r\nBroader Impacts: The successful outcome of this project will pave way for the development of low latency and efficient data centers. This, in turn, will allow for developing computational infrastructures that were not feasible before. Given the central importance of high-performance computational infrastructure across disciplines, successful outcome of this project will have a broad impact. This work will be of interest to currently vibrant networking industry where start-ups and big organizations alike are trying to develop the next generation data center riding on the software defined networking philosophy. In a sense, this work will provide a path to achieve their end goal. The proposed research will be disseminated to the community via publications in journals, conferences and workshops. The research outcome is also likely to be integrated in the graduate networking course that PI regularly teaches at MIT.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Devavrat",
   "pi_last_name": "Shah",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Devavrat Shah",
   "pi_email_addr": "devavrat@mit.edu",
   "nsf_id": "000488392",
   "pi_start_date": "2015-08-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Massachusetts Institute of Technology",
  "inst_street_address": "77 MASSACHUSETTS AVE",
  "inst_street_address_2": "",
  "inst_city_name": "CAMBRIDGE",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6172531000",
  "inst_zip_code": "021394301",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "E2NYLCDML6V1",
  "org_uei_num": "E2NYLCDML6V1"
 },
 "perf_inst": {
  "perf_inst_name": "Massachusetts Institute of Technology",
  "perf_str_addr": "77 Massachusetts Avenue",
  "perf_city_name": "Cambridge",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021394307",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736300",
   "pgm_ele_name": "Networking Technology and Syst"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 500000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The primary goal of the project has been developing ``optimal centralized&rsquo;&rsquo; scheduling algorithm for data centers. Such centralized scheduling mechanisms have been successful in developing architecture for switches or routers. However, developing such a centralized scheduling architecture for entire data center involves few key intellectual challenges: First, establishing feasibility of centralized scheduling for data center at packet and flow level simultaneously since the data center is a large network and scheduling at packet or flow network ought to take time that is much smaller than the transportation time. Second, assuming that such centralized architecture is feasible, it is still a challenge to develop an optimal centralized scheduling algorithm.&nbsp;</p>\n<p>In this project, answer to both of the above intellectual challenges have been provided in an affirmative. First, feasibility of centralized scheduling algorithm for both packet level and flow level scheduling in data center with software implementation has been demonstration by building such systems. Second, the optimal scheduling algorithm in data center requires simultaneously scheduling of packets within flows as well as that of flows across data center. And to begin with understanding what is \"optimal\". To define notion of \"optimality\", a notion of ``baseline performance'' has been introduced. In effect, it suggests that certain equivalent unconstrained network's performance is the surrogage for optimal performance. Given such notion, the project introduce an \"emulation\" method that emulates the behavior of the candidate optimal unconstrained network to achieve the optimal performance. Remarkably, the algorithm associated with the emultation is extremely simple and can be implemented as \"line speeds\" in software based centralized scheduling of the data center.&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/15/2022<br>\n\t\t\t\t\tModified by: Devavrat&nbsp;Shah</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe primary goal of the project has been developing ``optimal centralized\u2019\u2019 scheduling algorithm for data centers. Such centralized scheduling mechanisms have been successful in developing architecture for switches or routers. However, developing such a centralized scheduling architecture for entire data center involves few key intellectual challenges: First, establishing feasibility of centralized scheduling for data center at packet and flow level simultaneously since the data center is a large network and scheduling at packet or flow network ought to take time that is much smaller than the transportation time. Second, assuming that such centralized architecture is feasible, it is still a challenge to develop an optimal centralized scheduling algorithm. \n\nIn this project, answer to both of the above intellectual challenges have been provided in an affirmative. First, feasibility of centralized scheduling algorithm for both packet level and flow level scheduling in data center with software implementation has been demonstration by building such systems. Second, the optimal scheduling algorithm in data center requires simultaneously scheduling of packets within flows as well as that of flows across data center. And to begin with understanding what is \"optimal\". To define notion of \"optimality\", a notion of ``baseline performance'' has been introduced. In effect, it suggests that certain equivalent unconstrained network's performance is the surrogage for optimal performance. Given such notion, the project introduce an \"emulation\" method that emulates the behavior of the candidate optimal unconstrained network to achieve the optimal performance. Remarkably, the algorithm associated with the emultation is extremely simple and can be implemented as \"line speeds\" in software based centralized scheduling of the data center. \n\n \n\n\t\t\t\t\tLast Modified: 01/15/2022\n\n\t\t\t\t\tSubmitted by: Devavrat Shah"
 }
}