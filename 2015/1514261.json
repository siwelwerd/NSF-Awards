{
 "awd_id": "1514261",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TWC: Medium: Apollo: An Architecture for Scalable Verifiable Computing",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Jeremy Epstein",
 "awd_eff_date": "2015-07-01",
 "awd_exp_date": "2020-06-30",
 "tot_intn_awd_amt": 1162868.0,
 "awd_amount": 1162868.0,
 "awd_min_amd_letter_date": "2015-07-06",
 "awd_max_amd_letter_date": "2015-10-22",
 "awd_abstract_narration": "Cloud computing enables computationally limited parties to outsource the storage of, and computation on, massive amounts of data. Such outsourced computations, however, might be performed incorrectly, due to implementation errors or malicious behavior. Protocols for verifiable computation allow an untrusted server performing such computations to also provide succinct proofs that the returned results are correct. Drawing on expertise from cryptography, programming languages, databases, and systems, this project develops a novel architecture (Apollo) for automatically producing scalable verifiable-computation protocols. Apollo has the potential to speed up verifiable computations by orders of magnitude while at the same time scaling to large datasets.\r\n\r\nThis research focuses on cryptographic \"gadgets\" suited for verifiable computation in different settings, as well as programming languages and type systems for easily expressing verifiable computation in terms of these lower-level gadgets. A major goal of the project is to develop a working prototype of a verifiable SQL database.  Results of this research will be disseminated to a wide audience through publications and open-source implementations, and will be integrated into a graduate course on cloud computing security at the University of Maryland.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Charalampos",
   "pi_last_name": "Papamanthou",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Charalampos Papamanthou",
   "pi_email_addr": "cpap@umd.edu",
   "nsf_id": "000654890",
   "pi_start_date": "2015-07-06",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Jonathan",
   "pi_last_name": "Katz",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Jonathan Katz",
   "pi_email_addr": "jkatz@cs.umd.edu",
   "nsf_id": "000148714",
   "pi_start_date": "2015-07-06",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Amol",
   "pi_last_name": "Deshpande",
   "pi_mid_init": "V",
   "pi_sufx_name": "",
   "pi_full_name": "Amol V Deshpande",
   "pi_email_addr": "amol@cs.umd.edu",
   "nsf_id": "000486255",
   "pi_start_date": "2015-07-06",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Elaine",
   "pi_last_name": "Shi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Elaine Shi",
   "pi_email_addr": "runting@cs.cmu.edu",
   "nsf_id": "000624210",
   "pi_start_date": "2015-07-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Maryland, College Park",
  "inst_street_address": "3112 LEE BUILDING",
  "inst_street_address_2": "",
  "inst_city_name": "COLLEGE PARK",
  "inst_state_code": "MD",
  "inst_state_name": "Maryland",
  "inst_phone_num": "3014056269",
  "inst_zip_code": "207425100",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "MD04",
  "org_lgl_bus_name": "UNIVERSITY OF MARYLAND, COLLEGE PARK",
  "org_prnt_uei_num": "NPU8ULVAAS23",
  "org_uei_num": "NPU8ULVAAS23"
 },
 "perf_inst": {
  "perf_inst_name": "University of Maryland College Park",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "MD",
  "perf_st_name": "Maryland",
  "perf_zip_code": "207425141",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "MD04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 1162868.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-c55a4895-7fff-5c01-2ebc-3d76cc7dfb37\">\n<p dir=\"ltr\"><span>The project focused on the problem of verifying computation that is executed by untrusted servers, without re-executing the computation from scratch. While there are cryptographic protocols that apply to all types of computations, these are not known to be practical. The main goal of the project was to achieve practicality for widely-used classes of computations, and in particular for databases, by developing custom protocols.&nbsp;</span></p>\n<p dir=\"ltr\"><span>The first direction considered was the one of developing verifiable computation protocols for small pieces of computation with the goal of reusing those in larger applications. New cryptographic primitives such as verifiable nested set operations, efficient authenticated data structures, as well as expressive set accumulators were invented. Such primitives enabled small-scale optimizations to be reused by multiple large-scale verifiable computation applications, such as integriDB, an efficient verifiable database system that supported several SQL queries.</span></p>\n<p dir=\"ltr\"><span>The second direction focused on the interplay of programming languages and verifiable computation. Programmers and database practitioners that wish to add verifiability to their applications are not necessarily cryptography experts. We provided languages that allow a developer to write code without any knowledge about the verifiable computation backends that could be used. We also developed compilers that automatically output optimized verifiable programs. We integrated the language and compiler into a single system, xjSNARK, which is open sourced and has been used by the community.&nbsp;</span></p>\n<p dir=\"ltr\"><span>In our third direction we focused on building real-world verifiable database systems. To support general-purpose SQL, we combined previously introduced argument systems with simpler primitives such as polynomial commitments. We executed experiments on datasets that are used by the database community and showed that our approaches are reasonably scalable. Along the way, we came up with new fundamental contributions in the space of zero-knowledge proof systems.&nbsp;</span></p>\n<p dir=\"ltr\"><span>The project supported the doctoral dissertations of Ahmed Kosba and Yupeng Zhang. After completing their PhD work at Maryland, both Kosba and Zhang spent one year as postdocs at UC Berkeley and went on to become faculty members at Alexandria University (Egypt) and Texas A&amp;M University respectively. The project also supported the MSc thesis work of Ciara Lynton, who went on to become systems engineer at Boeing.&nbsp;&nbsp;</span></p>\n<p dir=\"ltr\">&nbsp;</p>\n</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/10/2020<br>\n\t\t\t\t\tModified by: Charalampos&nbsp;Papamanthou</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nThe project focused on the problem of verifying computation that is executed by untrusted servers, without re-executing the computation from scratch. While there are cryptographic protocols that apply to all types of computations, these are not known to be practical. The main goal of the project was to achieve practicality for widely-used classes of computations, and in particular for databases, by developing custom protocols. \nThe first direction considered was the one of developing verifiable computation protocols for small pieces of computation with the goal of reusing those in larger applications. New cryptographic primitives such as verifiable nested set operations, efficient authenticated data structures, as well as expressive set accumulators were invented. Such primitives enabled small-scale optimizations to be reused by multiple large-scale verifiable computation applications, such as integriDB, an efficient verifiable database system that supported several SQL queries.\nThe second direction focused on the interplay of programming languages and verifiable computation. Programmers and database practitioners that wish to add verifiability to their applications are not necessarily cryptography experts. We provided languages that allow a developer to write code without any knowledge about the verifiable computation backends that could be used. We also developed compilers that automatically output optimized verifiable programs. We integrated the language and compiler into a single system, xjSNARK, which is open sourced and has been used by the community. \nIn our third direction we focused on building real-world verifiable database systems. To support general-purpose SQL, we combined previously introduced argument systems with simpler primitives such as polynomial commitments. We executed experiments on datasets that are used by the database community and showed that our approaches are reasonably scalable. Along the way, we came up with new fundamental contributions in the space of zero-knowledge proof systems. \nThe project supported the doctoral dissertations of Ahmed Kosba and Yupeng Zhang. After completing their PhD work at Maryland, both Kosba and Zhang spent one year as postdocs at UC Berkeley and went on to become faculty members at Alexandria University (Egypt) and Texas A&amp;M University respectively. The project also supported the MSc thesis work of Ciara Lynton, who went on to become systems engineer at Boeing.  \n \n\n\n \n\n\t\t\t\t\tLast Modified: 08/10/2020\n\n\t\t\t\t\tSubmitted by: Charalampos Papamanthou"
 }
}