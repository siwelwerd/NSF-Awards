{
 "awd_id": "1464239",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII: AF: New Approaches to Graph Spanners",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Tracy Kimbrel",
 "awd_eff_date": "2015-02-01",
 "awd_exp_date": "2019-01-31",
 "tot_intn_awd_amt": 174999.0,
 "awd_amount": 185029.0,
 "awd_min_amd_letter_date": "2015-01-23",
 "awd_max_amd_letter_date": "2015-04-27",
 "awd_abstract_narration": "This project is focused on research and educational activities related to graph spanners.  In many applications it is important to \"compress\" distance information: if we are given pairwise distances between points, is there any way of storing them (possibly with some loss) other than storing all pairwise distances?  This basic question, possibly with different definitions of \"distances\", arises in problems as diverse as property testing of mathematical functions, routing in computer networks, biomedical image segmentation, and many others.\r\n\r\nOne standard way of doing this is through a graph spanner, in which we store only a small subset of the distances and then use those distances to (approximately) infer the ones that we did not store. Spanners have been studied extensively over the past 20 years, and we now have very good characterizations of what the tradeoffs are between the amount of information stored and the quality of the distance estimation.  In this project the PI will take a different, more algorithmically-focused point of view: given points and distances, can we develop efficient algorithms that find the best possible spanner (or close to it)?\r\n\r\nThe development of such algorithms would be a significant step forward from a theoretical point of view, as spanners seem to give mathematically difficult optimization problems.  They are also related to many other problems in network design, and better algorithms for spanners will hopefully lead to better algorithms for a wide variety of related problems as well.  Such algorithms would also be a step towards making spanners more practical, as they could be used to do \"the best that we can\" on any particular input, thus bypassing many of the known impossibility results which state only that some inputs cannot be compressed.\r\n\r\nThis project also has a significant educational component.  The PI will develop and refine classes on algorithms for distance spaces and approximation algorithms.  The PI will also supervise research projects related to this project performed by undergraduates from Johns Hopkins and from other institutions.  Finally, the PI will work with talented high school students in Baltimore on appropriate projects.\r\n\r\nMore formally, graph spanners are subgraphs which preserve distances, and are a basic algorithmic building block that is used widely throughout theoretical computer science.  The vast majority of research on spanners has been in the form of existential questions.  For example, what types of spanners exist?  What are sufficient conditions or necessary conditions to achieve certain parameters?  What tradeoffs between various parameters are possible?\r\n\r\nWhile these are all extremely interesting questions, the related optimization questions have received much less attention.  For example, if we are given a graph, is there an efficient algorithm to find the best (or close-to-best) spanner?  This and other related questions move graph spanners from the realm of graph theory into the realm of algorithms.  In this project the PI will study these optimization problems through the lens of approximation algorithms.  More specifically, in this project the PI will extend the existing linear programming-based techniques and develop new techniques based on other convex relaxations in order to design approximation algorithms for graph spanners.  These algorithms will be based on relaxation-based techniques (in particular the Sherali-Adam LP hierarchy and the Lasserre SDP hierarchy).  In parallel to this, the PI will design improved lower bounds including both hardness results (through novel reductions from 2-player 1-round proof systems) and integrality gaps for convex relaxations.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Michael",
   "pi_last_name": "Dinitz",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Michael Dinitz",
   "pi_email_addr": "mdinitz@cs.jhu.edu",
   "nsf_id": "000662685",
   "pi_start_date": "2015-01-23",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Johns Hopkins University",
  "inst_street_address": "3400 N CHARLES ST",
  "inst_street_address_2": "",
  "inst_city_name": "BALTIMORE",
  "inst_state_code": "MD",
  "inst_state_name": "Maryland",
  "inst_phone_num": "4439971898",
  "inst_zip_code": "212182608",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MD07",
  "org_lgl_bus_name": "THE JOHNS HOPKINS UNIVERSITY",
  "org_prnt_uei_num": "GS4PNKTRNKL3",
  "org_uei_num": "FTMTDMBR29C7"
 },
 "perf_inst": {
  "perf_inst_name": "Johns Hopkins University",
  "perf_str_addr": "3400 N CHARLES ST",
  "perf_city_name": "BALTIMORE",
  "perf_st_code": "MD",
  "perf_st_name": "Maryland",
  "perf_zip_code": "212182608",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MD07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  },
  {
   "pgm_ref_code": "8552",
   "pgm_ref_txt": "CRII"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 185029.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project was focused on new algorithms and approaches for graph spanners: combinatorial objects that are widely used throughout computer science to compress data while approximately preserving distance information.&nbsp; Graph spanners have been studied for decades, but this project was focused on viewing spanners from points of view that have not yet received as much attention as more \"traditional\" points of view.&nbsp; In particular, we proposed studying spanners from an optimization point of view, where we design algorithms to find the best spanner for a particular input, rather than the more traditional approach of designing algorithms with guarantees that are independent of the actual input dataset.&nbsp; We also proposed studying variants of spanners that are important in particular applications, such as fault-tolerant spanners (important for applications in distributed computing and computer networking).&nbsp; Finally, we proposed studying new definitions of spanners, as well as related objects.</p>\n<p>The results of this project included a variety of new algorithms and mathematical results that lend insight into graph spanners.&nbsp; This includes new (and optimal) constructions of fault-tolerant spanners [SODA 2018], resolving a decade-old open problem.&nbsp; This also includes improved optimization results for a few different spanner problems, including 4-spanners [SODA 2016] and pairwise spanners [SODA 2017].&nbsp; It also includes new results demonstrating the limits of current techniques, and in particular giving formal mathematical proofs that the dominant current techniques are simply not powerful enough to make more significant progress [SODA 2016].</p>\n<p>Moreover, the results of this project include new definitions, and results utilizing those definitions.&nbsp; For example, we introduced a new measure of the \"cost\" of a spanner which generalized two different previous measures, and gave algorithms for constructing spanners that optimized this new cost [ICALP 2019].&nbsp; We also introduced new definitions of what it means to optimize related objects such as \"distance oracles\", which had never been considered from an optimization point of view [ITCS 2017].&nbsp; These new definitions have opened up the door to a wide variety of new problems, which we believe will have lasting impact within the study of algorithms.</p>\n<p>Finally, this project has already impacted research in computer systems.&nbsp; We used ideas related to spanners to design next-generation datacenter topologies [CoNEXT 2016], as well as to design highly-reliable overlay systems [ICDCS 2017].&nbsp; While these systems did not directly use spanners, they both used insights from the spanner algorithms that we developed to design algorithms for related objects (expanders and shallow-light Steiner networks, respectively).&nbsp;&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 04/20/2019<br>\n\t\t\t\t\tModified by: Michael&nbsp;Dinitz</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project was focused on new algorithms and approaches for graph spanners: combinatorial objects that are widely used throughout computer science to compress data while approximately preserving distance information.  Graph spanners have been studied for decades, but this project was focused on viewing spanners from points of view that have not yet received as much attention as more \"traditional\" points of view.  In particular, we proposed studying spanners from an optimization point of view, where we design algorithms to find the best spanner for a particular input, rather than the more traditional approach of designing algorithms with guarantees that are independent of the actual input dataset.  We also proposed studying variants of spanners that are important in particular applications, such as fault-tolerant spanners (important for applications in distributed computing and computer networking).  Finally, we proposed studying new definitions of spanners, as well as related objects.\n\nThe results of this project included a variety of new algorithms and mathematical results that lend insight into graph spanners.  This includes new (and optimal) constructions of fault-tolerant spanners [SODA 2018], resolving a decade-old open problem.  This also includes improved optimization results for a few different spanner problems, including 4-spanners [SODA 2016] and pairwise spanners [SODA 2017].  It also includes new results demonstrating the limits of current techniques, and in particular giving formal mathematical proofs that the dominant current techniques are simply not powerful enough to make more significant progress [SODA 2016].\n\nMoreover, the results of this project include new definitions, and results utilizing those definitions.  For example, we introduced a new measure of the \"cost\" of a spanner which generalized two different previous measures, and gave algorithms for constructing spanners that optimized this new cost [ICALP 2019].  We also introduced new definitions of what it means to optimize related objects such as \"distance oracles\", which had never been considered from an optimization point of view [ITCS 2017].  These new definitions have opened up the door to a wide variety of new problems, which we believe will have lasting impact within the study of algorithms.\n\nFinally, this project has already impacted research in computer systems.  We used ideas related to spanners to design next-generation datacenter topologies [CoNEXT 2016], as well as to design highly-reliable overlay systems [ICDCS 2017].  While these systems did not directly use spanners, they both used insights from the spanner algorithms that we developed to design algorithms for related objects (expanders and shallow-light Steiner networks, respectively).  \n\n \n\n\t\t\t\t\tLast Modified: 04/20/2019\n\n\t\t\t\t\tSubmitted by: Michael Dinitz"
 }
}