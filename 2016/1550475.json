{
 "awd_id": "1550475",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: SI2-SSI: Swift/E: Integrating Parallel Scripted Workflow into the Scientific Software Ecosystem",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Rob Beverly",
 "awd_eff_date": "2016-10-01",
 "awd_exp_date": "2019-09-30",
 "tot_intn_awd_amt": 50000.0,
 "awd_amount": 50000.0,
 "awd_min_amd_letter_date": "2016-09-13",
 "awd_max_amd_letter_date": "2016-09-13",
 "awd_abstract_narration": "Science and engineering research increasingly relies on repeated execution of a complex series of steps (i.e., workflows) to form hypotheses; conduct experiments; analyze results; and refine theory.   Computation is often essential throughout the workflow and in this case, software can improve productivity by managing the computational and data workflow.  Swift is one such open-source workflow system that has been developed and widely used in diverse areas ranging from materials simulations and climate modeling to neuroscience and genomics. This project extends the capabilities of Swift by integrating it with other software systems that enable collaboration, usability, maintainability, and productivity. The new ecosystem, Swift/E, will enable scientists and engineers to more productively create and run computational workflow campaigns of larger scale, and debug, execute, adapt, and disseminate them faster and easier than has been possible to date. These workflows embody and communicate the computational methods specific to each domain of scientific inquiry. Swift/E achieves community engagement and extensive productivity benefits for a large user community through an integrated program of research, education, and software dissemination. The project engages and serves science and engineering communities by creating patterns of practice for building and sharing reusable workflow libraries, and by training students, educators, and researchers in their use.  To advance the education of the next generation of computationally trained scientists, Swift/E powers a network of NSF-supported \"e-Labs\" that teach the concepts of collaborative parallel computational science at high school and undergraduate levels, reaching over a thousand students annually.\r\n\r\nThe open-source Swift/E \"ecosystem\" integrates Swift with several scientific software elements that play a major role in the national and global cyberinfrastructure of today. These elements are: Swift for the parallel scripting of scientific workflow; Globus for data cataloging, management, and high-speed wide-area transport; the Web-based Galaxy workflow portal for workflow composition, execution, and collaborative sharing; Jupyter for the interactive development, testing, debugging, and assembly of high level programming and workflow languages; Python and R for productively expressing high-level computational logic; and \"git\" and related tools and Web portals for revision control, code dissemination and sharing, and for the collaborative engagement of developers.  Swift's implicitly parallel programming language is minimal and compact.  Swift provides a facility for embedding other scripting languages (currently Python, R, Julia and Tcl) into its runtime environment.  This project merges newer extreme-scale \"Swift/T\" capabilities with the flexible and portable original \"Swift/K\" version to make the core Swift/E software element more powerful and flexible while lowering it?s ongoing support cost. Swift/E enhances usability by extending Swift's troubleshooting and inter-language integration facilities.  And with enhanced and innovative workflow sharing archives, new training materials, and a sustained program for user support and self-sustaining and expanding community engagement, the Swift/E project engages, supports, and sustains a large global science and engineering user base.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Martin",
   "pi_last_name": "McCullagh",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Martin McCullagh",
   "pi_email_addr": "martin.mccullagh@okstate.edu",
   "nsf_id": "000699193",
   "pi_start_date": "2016-09-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Colorado State University",
  "inst_street_address": "601 S HOWES ST",
  "inst_street_address_2": "",
  "inst_city_name": "FORT COLLINS",
  "inst_state_code": "CO",
  "inst_state_name": "Colorado",
  "inst_phone_num": "9704916355",
  "inst_zip_code": "805212807",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "CO02",
  "org_lgl_bus_name": "COLORADO STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "LT9CXX8L19G1"
 },
 "perf_inst": {
  "perf_inst_name": "Colorado State University",
  "perf_str_addr": "200 W. Lake St",
  "perf_city_name": "Fort Collins",
  "perf_st_code": "CO",
  "perf_st_name": "Colorado",
  "perf_zip_code": "805214593",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "CO02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "8004",
   "pgm_ref_txt": "Software Institutes"
  },
  {
   "pgm_ref_code": "8009",
   "pgm_ref_txt": "Scientifc Software Integration"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 50000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Research in computational chemistry and biophysics often requires the use of multistep computational workflows.&nbsp; This can include running a simulation to generate data, initial processing of the data, and various subsequent analyses of the data.&nbsp; The ability to streamline this process makes it both more user friendly and more reproducible.&nbsp; Swift (now Parsl) is an open source software that enables users to readily streamline their computational workflows.&nbsp; The improved workflow and data provenance provided by Swift fits well with recent efforts by NSF and other funding agencies to improve reproducibility of results.&nbsp; Additionally, Swift&rsquo;s recent effort in a network of NSF-support e-Labs that teach the concepts of research computing to high school students help further the educational mission of NSF.&nbsp;</p>\n<p>&nbsp;</p>\n<p>The Swift/E ecosystem integrates Swift with several other useful tools including Globus for data transfer and Jupyter for interactive code development and testing.&nbsp; Additionally, new functionality allows for coding in both R and python as well as synergizes the use of git repos for code repositories.&nbsp; These new additions will make Swift/E even more useful to computational researchers as this field continues to develop.&nbsp;</p>\n<p>&nbsp;</p>\n<p>We have used Swift to streamline a protein-ligand binding workflow (<a href=\"https://github.com/mccullaghlab/Parslized-DbDock\">https://github.com/mccullaghlab/Parslized-DbDock</a>).&nbsp; The ability for automatic parallelization as well as the ease of using multiple high performance computing resources through Swift aided in the efficiency of producing results in this project.&nbsp; Additionally, this project helped train one undergraduate student and one graduate student in the best practices for computational research and coding.&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/07/2022<br>\n\t\t\t\t\tModified by: Martin&nbsp;Mccullagh</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nResearch in computational chemistry and biophysics often requires the use of multistep computational workflows.  This can include running a simulation to generate data, initial processing of the data, and various subsequent analyses of the data.  The ability to streamline this process makes it both more user friendly and more reproducible.  Swift (now Parsl) is an open source software that enables users to readily streamline their computational workflows.  The improved workflow and data provenance provided by Swift fits well with recent efforts by NSF and other funding agencies to improve reproducibility of results.  Additionally, Swift\u2019s recent effort in a network of NSF-support e-Labs that teach the concepts of research computing to high school students help further the educational mission of NSF. \n\n \n\nThe Swift/E ecosystem integrates Swift with several other useful tools including Globus for data transfer and Jupyter for interactive code development and testing.  Additionally, new functionality allows for coding in both R and python as well as synergizes the use of git repos for code repositories.  These new additions will make Swift/E even more useful to computational researchers as this field continues to develop. \n\n \n\nWe have used Swift to streamline a protein-ligand binding workflow (https://github.com/mccullaghlab/Parslized-DbDock).  The ability for automatic parallelization as well as the ease of using multiple high performance computing resources through Swift aided in the efficiency of producing results in this project.  Additionally, this project helped train one undergraduate student and one graduate student in the best practices for computational research and coding. \n\n \n\n\t\t\t\t\tLast Modified: 12/07/2022\n\n\t\t\t\t\tSubmitted by: Martin Mccullagh"
 }
}