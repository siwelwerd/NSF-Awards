{
 "awd_id": "1649448",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Asked and Answered: Intelligent Data Science for Software Projects",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2020-05-31",
 "tot_intn_awd_amt": 515902.0,
 "awd_amount": 515902.0,
 "awd_min_amd_letter_date": "2016-07-21",
 "awd_max_amd_letter_date": "2016-07-21",
 "awd_abstract_narration": "Software and systems engineering projects accrue large amounts of development data including requirements, design, code, test cases, and fault logs. When combined with the power of software analytics this data could be used to provide actionable intelligence to project stakeholders. For example, a developer might ask to view all \"safety-related code which is likely to exhibit runtime faults.\" The proposed work will deliver a solution named Asked and Answered for Software Intensive Projects (AA) and will support a broad range of analytic queries.   To foster the transition of AA to practice, the researchers will partner with industry collaborators throughout the project and develop an open-source framework facilitating the deployment of AA technology into an industrial environment. A series of natural language Query Challenges will be designed and disseminated and used to train Software Engineering students in a broad spectrum of software analytics.\r\n \r\nDelivering the AA solution requires several non-trivial challenges to be addressed. First, a natural language (NL) query interface will be developed allowing stakeholders to issue queries in their own words and from their own perspective on the project. These queries will then be transformed into a structured, executable format. Heuristics and statistical inferencing techniques will be adopted and interactive mechanisms will be designed to seek clarification from the user when the query cannot be disambiguated automatically. Software analytics will be integrated into the query mechanism so that AA can respond to a wide range of analytical questions. AA will support the dynamic composition of primitive functions into execution flows in order to service a wide range of analytical queries. Finally, AA will deliver a query engine capable of generating optimized query execution plans which take into account the nuances of the domain - namely its heterogeneous data formats, distributed tools, and the dynamic runtime requirements of analytic functions.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jane",
   "pi_last_name": "Huang",
   "pi_mid_init": "L",
   "pi_sufx_name": "",
   "pi_full_name": "Jane L Huang",
   "pi_email_addr": "JaneClelandHuang@nd.edu",
   "nsf_id": "000304869",
   "pi_start_date": "2016-07-21",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Notre Dame",
  "inst_street_address": "940 GRACE HALL",
  "inst_street_address_2": "",
  "inst_city_name": "NOTRE DAME",
  "inst_state_code": "IN",
  "inst_state_name": "Indiana",
  "inst_phone_num": "5746317432",
  "inst_zip_code": "465565708",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "IN02",
  "org_lgl_bus_name": "UNIVERSITY OF NOTRE DAME DU LAC",
  "org_prnt_uei_num": "FPU6XGFXMBE9",
  "org_uei_num": "FPU6XGFXMBE9"
 },
 "perf_inst": {
  "perf_inst_name": "University of Notre Dame",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "IN",
  "perf_st_name": "Indiana",
  "perf_zip_code": "465565708",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "IN02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 515902.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Software and Systems engineering projects accumulate large quantities of data in the form of requirements, feature lists, architectural design documents, source code, and documentation. This research sought to deliver <strong>actionable intelligence into the hands of project stakeholders through enabling project-wide natural language queries</strong>. Providing accurate query results is challenging for several reasons including the prevalence of technical, domain-specific terminology, and the fact that useful project level queries tend to traverse multiple artifacts. For example, an engineer might ask \"which regulatory codes related to the onboard motor are not yet fully tested?\", requiring a query that minimally traverses regulatory codes, requirements, acceptance tests, and test results.</p>\n<p>The challenge of achieving project-level queries was addressed in two primary ways. First, the TiQi framework was developed to allow users to either specify their queries in spoken or written natural language, or to model them using a visual modeling language.&nbsp; The user's query was transformed into Structured Query Language (SQL) , which was executed against the underlying project data.&nbsp; The work delivered query optimization techniques in the presence of user defined predicates, which were shown to improve query execution times and to enable faster, more responsive query results. A series of user studies were conducted which revealed that due to the complexity of many project-level queries, users preferred to write or model queries rather than to express them verbally.&nbsp;</p>\n<p>Second, attention was focused on improving the underlying connections between artifacts, referred to as trace links. &nbsp;Accurate trace links are needed to facilitate the execution of project-level queries. &nbsp;For example, cyber-physical systems, such as airplanes and medical devices must comply to regulatory codes which create constraints upon the system.&nbsp; Each relevant regulatory code should be linked to one or more requirements specifying that the system meets the regulation. In turn each requirement is linked to design artifacts which describe how the system will realize the requirement, and so on, until an interconnected tree of trace links has been created, connecting all parts of the software system that contribute to satisfying the regulatory code. &nbsp;Unfortunately, in practice, trace links are frequently incomplete and inaccurate. The project therefore also investigated algorithmic solutions for dynamically generating trace links between artifacts in order to support complex project-level queries. The need for fast and accurate trace link generation is an open Software Engineering challenge; however, significant advances in the accuracy of automated trace link generation were achieved under this project's funding, through the application of deep learning techniques based on pre-trained language models. These language models provided a rich semantic base which was leveraged to deliver trace links at far higher degrees of accuracy than had previously been experienced. These improved techniques are currently being incorporated into project-query mechanisms such as TiQi to provide support for project-level natural language queries.</p>\n<p>This project provided research opportunities for numerous undergraduate and graduate students through academic year and summer research projects.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/27/2020<br>\n\t\t\t\t\tModified by: Jane&nbsp;L&nbsp;Huang</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601220930992_NSF-Tiqi1b--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601220930992_NSF-Tiqi1b--rgov-800width.jpg\" title=\"RegulatoryCodeQuery\"><img src=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601220930992_NSF-Tiqi1b--rgov-66x44.jpg\" alt=\"RegulatoryCodeQuery\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Project stakeholders issue diverse queries against project data.  This example focuses on queries about project compliance to regulatory codes.</div>\n<div class=\"imageCredit\">Jane Cleland-Huang</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Jane&nbsp;L&nbsp;Huang</div>\n<div class=\"imageTitle\">RegulatoryCodeQuery</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601221034516_NSF-Tiqi2--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601221034516_NSF-Tiqi2--rgov-800width.jpg\" title=\"QueryTransformation\"><img src=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601221034516_NSF-Tiqi2--rgov-66x44.jpg\" alt=\"QueryTransformation\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Queries are transformed into structured query language (SQL) and executed against the project level artifacts.</div>\n<div class=\"imageCredit\">Jane Cleland-Huang</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Jane&nbsp;L&nbsp;Huang</div>\n<div class=\"imageTitle\">QueryTransformation</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601221195930_NSF-tiqi3--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601221195930_NSF-tiqi3--rgov-800width.jpg\" title=\"User Query\"><img src=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601221195930_NSF-tiqi3--rgov-66x44.jpg\" alt=\"User Query\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The software project schema, often referred to as a Traceability Information Model (TIM), provides a framework for constructing a natural language query.</div>\n<div class=\"imageCredit\">Jane Cleland-Huang</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Jane&nbsp;L&nbsp;Huang</div>\n<div class=\"imageTitle\">User Query</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601221691610_Tiqi4--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601221691610_Tiqi4--rgov-800width.jpg\" title=\"QueryInWorldVista\"><img src=\"/por/images/Reports/POR/2020/1649448/1649448_10425607_1601221691610_Tiqi4--rgov-66x44.jpg\" alt=\"QueryInWorldVista\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Query results can be presented in multiple formats.  In this case, we visualize query results for tracing source code containing security concepts back to their associated requirements.</div>\n<div class=\"imageCredit\">Jinfeng Lin</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Jane&nbsp;L&nbsp;Huang</div>\n<div class=\"imageTitle\">QueryInWorldVista</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\nSoftware and Systems engineering projects accumulate large quantities of data in the form of requirements, feature lists, architectural design documents, source code, and documentation. This research sought to deliver actionable intelligence into the hands of project stakeholders through enabling project-wide natural language queries. Providing accurate query results is challenging for several reasons including the prevalence of technical, domain-specific terminology, and the fact that useful project level queries tend to traverse multiple artifacts. For example, an engineer might ask \"which regulatory codes related to the onboard motor are not yet fully tested?\", requiring a query that minimally traverses regulatory codes, requirements, acceptance tests, and test results.\n\nThe challenge of achieving project-level queries was addressed in two primary ways. First, the TiQi framework was developed to allow users to either specify their queries in spoken or written natural language, or to model them using a visual modeling language.  The user's query was transformed into Structured Query Language (SQL) , which was executed against the underlying project data.  The work delivered query optimization techniques in the presence of user defined predicates, which were shown to improve query execution times and to enable faster, more responsive query results. A series of user studies were conducted which revealed that due to the complexity of many project-level queries, users preferred to write or model queries rather than to express them verbally. \n\nSecond, attention was focused on improving the underlying connections between artifacts, referred to as trace links.  Accurate trace links are needed to facilitate the execution of project-level queries.  For example, cyber-physical systems, such as airplanes and medical devices must comply to regulatory codes which create constraints upon the system.  Each relevant regulatory code should be linked to one or more requirements specifying that the system meets the regulation. In turn each requirement is linked to design artifacts which describe how the system will realize the requirement, and so on, until an interconnected tree of trace links has been created, connecting all parts of the software system that contribute to satisfying the regulatory code.  Unfortunately, in practice, trace links are frequently incomplete and inaccurate. The project therefore also investigated algorithmic solutions for dynamically generating trace links between artifacts in order to support complex project-level queries. The need for fast and accurate trace link generation is an open Software Engineering challenge; however, significant advances in the accuracy of automated trace link generation were achieved under this project's funding, through the application of deep learning techniques based on pre-trained language models. These language models provided a rich semantic base which was leveraged to deliver trace links at far higher degrees of accuracy than had previously been experienced. These improved techniques are currently being incorporated into project-query mechanisms such as TiQi to provide support for project-level natural language queries.\n\nThis project provided research opportunities for numerous undergraduate and graduate students through academic year and summer research projects.\n\n\t\t\t\t\tLast Modified: 09/27/2020\n\n\t\t\t\t\tSubmitted by: Jane L Huang"
 }
}