{
 "awd_id": "1566015",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII: SHF: Optimal Interpolation for Efficient Proof Synthesis",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2020-01-31",
 "tot_intn_awd_amt": 175000.0,
 "awd_amount": 175000.0,
 "awd_min_amd_letter_date": "2016-02-16",
 "awd_max_amd_letter_date": "2016-02-16",
 "awd_abstract_narration": "Software now dominates almost every aspect of our life: from wrist watches to the stock markets, and from thermostats to surgeons. And this proliferation is unlikely to slow down any time soon; in fact, it appears that we are merely witnessing the very beginning of the software revolution. Society is ever more reliant on highly complex and interconnected software systems, and this has made software safety, security, and privacy a first-class societal concern.\r\n\r\nTo formally and mathematically reason about complex software systems, automated verification and program analysis techniques have proven powerful over the past decade, thanks to a plethora of advances in the area. However, most non-trivial programs and correctness properties of interest remain out of reach for automated verification techniques. The project investigates new automated software verification techniques and tools, that are more efficient and applicable to a wider range of programs and properties. Specifically, the project develops novel techniques for computing Craig interpolants, which are logical means for synthesizing proofs of correctness. The emphasis is on exploring the question of computing optimal interpolants---the simplest possible ones. The work is motivated by the observation that simpler interpolants are more likely to generalize to a proof of correctness. The goal of the project is to develop an algorithmic foundation for efficient verification of complex programs and correctness properties, thus expanding the applicability of formal verification techniques.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Aws",
   "pi_last_name": "Albarghouthi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Aws Albarghouthi",
   "pi_email_addr": "aws@cs.wisc.edu",
   "nsf_id": "000682630",
   "pi_start_date": "2016-02-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Wisconsin-Madison",
  "inst_street_address": "21 N PARK ST STE 6301",
  "inst_street_address_2": "",
  "inst_city_name": "MADISON",
  "inst_state_code": "WI",
  "inst_state_name": "Wisconsin",
  "inst_phone_num": "6082623822",
  "inst_zip_code": "537151218",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "WI02",
  "org_lgl_bus_name": "UNIVERSITY OF WISCONSIN SYSTEM",
  "org_prnt_uei_num": "",
  "org_uei_num": "LCLSJAGTNZQ7"
 },
 "perf_inst": {
  "perf_inst_name": "University of Wisconsin-Madison",
  "perf_str_addr": "21 North Park Street, Suite 6401",
  "perf_city_name": "Madison",
  "perf_st_code": "WI",
  "perf_st_name": "Wisconsin",
  "perf_zip_code": "537151218",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "WI02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "026Y00",
   "pgm_ele_name": "CRII CISE Research Initiation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7798",
   "pgm_ref_txt": "SOFTWARE & HARDWARE FOUNDATION"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  },
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 175000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Our personal life and our economies run on software. Software is complex and it is bound to crash, leak our personal information, be susceptible to attackers, etc. The field of software verification aims to develop tools to help programmers identify and fix issues in the software they develop. As part of this generous award from the NSF, we developed new software-verification techniques that addressed many problems afflicting modern software.</p>\n<p>For example, we looked at data-analysis programs that are meant to preserve privacy of your information, e.g., your medical records. These programs are hard to get right. So we came up with ways to ensure that these programs indeed do not leak user information, and help programmers correctly develop such programs. Additionally, we developed techniques for analyzing decision-making programs that affect people's lives, say a program that decides whether you are eligible for a loan. We developed techniques that allow a person to ask \"what can I do to receive a loan?\" and receive actionable feedback. This problem is incredibly important in an increasingly automated world, where many decisions are performed by software.</p>\n<p>This award has funded a number of successful graduate students, two of whom have recently graduated and are now in academia and industry.&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/15/2020<br>\n\t\t\t\t\tModified by: Aws&nbsp;Albarghouthi</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nOur personal life and our economies run on software. Software is complex and it is bound to crash, leak our personal information, be susceptible to attackers, etc. The field of software verification aims to develop tools to help programmers identify and fix issues in the software they develop. As part of this generous award from the NSF, we developed new software-verification techniques that addressed many problems afflicting modern software.\n\nFor example, we looked at data-analysis programs that are meant to preserve privacy of your information, e.g., your medical records. These programs are hard to get right. So we came up with ways to ensure that these programs indeed do not leak user information, and help programmers correctly develop such programs. Additionally, we developed techniques for analyzing decision-making programs that affect people's lives, say a program that decides whether you are eligible for a loan. We developed techniques that allow a person to ask \"what can I do to receive a loan?\" and receive actionable feedback. This problem is incredibly important in an increasingly automated world, where many decisions are performed by software.\n\nThis award has funded a number of successful graduate students, two of whom have recently graduated and are now in academia and industry. \n\n \n\n\t\t\t\t\tLast Modified: 07/15/2020\n\n\t\t\t\t\tSubmitted by: Aws Albarghouthi"
 }
}