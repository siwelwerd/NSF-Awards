{
 "awd_id": "1637458",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AitF: Collaborative Reserach:  Theory and Implementation of Dynamic Data Structures for the GPU",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 349409.0,
 "awd_amount": 365409.0,
 "awd_min_amd_letter_date": "2016-08-15",
 "awd_max_amd_letter_date": "2017-05-09",
 "awd_abstract_narration": "Computers organize data in \"data structures,\" which are designed to allow certain operations on data such as looking up all items that match a particular set of criteria, or adding new items to an existing data set.  Computer scientists strive to build data structures that can perform these operations quickly and efficiently.  One way to make data structure operations faster is to use not just one but many processors, operating in parallel, to perform a given operation.  However, many of today's parallel data structures support only a limited set of operations and, notably, do not allow operations that modify these data structures instead of rebuilding an entire structure from scratch when only part of the data is updated.  In this project the PIs bring together expertise in data structures and parallel computing to design, build, and evaluate dynamic data structures that allow update operations.  This work targets the high-performance, highly-parallel graphics processing unit (GPU) and will significantly broaden the class of applications that the GPU can address.  The PIs will release their results as freely-available open-source software and will work with industrial partner NVIDIA to incorporate the research and educational outcomes of this project into NVIDIA's broad educational efforts.\r\n\r\nIn this project the PIs propose to build dynamic, high-performance data structures for manycore (GPU) computing.  Today's GPU data structures are rarely constructed on the GPU but instead are built on the CPU and copied to the GPU, and today's GPU data structures cannot be updated dynamically on the GPU but instead must be rebuilt from scratch.  This project targets dynamic dictionary data structures with point and range queries, lists, and approximate membership and range query structures.  The PIs will implement these data structures as high-performance, flexible, open-source software and use these data structures to develop a theoretical model, targeted at the GPU, for use by theorists and practitioners in manycore computing.  The project will also focus on numerous cross-cutting issues in data structure design, implementation, modeling, and evaluation that have the potential for significant practical impact on manycore computing.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Martin",
   "pi_last_name": "Farach-Colton",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Martin Farach-Colton",
   "pi_email_addr": "mlf9579@nyu.edu",
   "nsf_id": "000255442",
   "pi_start_date": "2016-08-15",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Rutgers University New Brunswick",
  "inst_street_address": "3 RUTGERS PLZ",
  "inst_street_address_2": "",
  "inst_city_name": "NEW BRUNSWICK",
  "inst_state_code": "NJ",
  "inst_state_name": "New Jersey",
  "inst_phone_num": "8489320150",
  "inst_zip_code": "089018559",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "NJ12",
  "org_lgl_bus_name": "RUTGERS, THE STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "M1LVPE5GLSD9"
 },
 "perf_inst": {
  "perf_inst_name": "Rutgers University New Brunswick",
  "perf_str_addr": "110 Frelinghuysen Rd.",
  "perf_city_name": "Piscataway",
  "perf_st_code": "NJ",
  "perf_st_name": "New Jersey",
  "perf_zip_code": "088548072",
  "perf_ctry_code": "US",
  "perf_cong_dist": "06",
  "perf_st_cong_dist": "NJ06",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "723900",
   "pgm_ele_name": "Algorithms in the Field"
  },
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 349409.0
  },
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>GPUs are computer chips orginally designed to render graphics more quickly on a computer screen. &nbsp;They achieve their high speed by being highly parallel, which means that the chip can performe many operations at the same time. &nbsp;Since their origins as graphic co-processors, they have found more an more use in many applications that require parallelism, most notably in speeding up machine learning algorithms.</p>\n<p>Data structures are the way that data is organanize in a computer so that data can be updated and queried. &nbsp;As applications of GPUs have diversified, the data structural requirements of GPUs have also diversified, but the available GPU data structures are quite limited. &nbsp;For example, there were no known methods for updating a data structure on a GPU, which is necessary when the data itself changes. &nbsp;Instead, all known data structures required being rebuilt from scratch whenever it was necessary to change them.</p>\n<p>In our work, we show how to modify GPU data structures. &nbsp;Our main results are a set of dyanmically modifyable GPU data structures that cover the most widely used data structures: B-trees, Log-structured Merge Trees, Filters and Hash Tables.</p>\n<p>Going forward, we hope that our results will significantly expand the set of computational tasks that can be accelerated by GPUs. &nbsp;Our publications in this area are already attracting significant attention in the form of citations.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/05/2021<br>\n\t\t\t\t\tModified by: Martin&nbsp;Farach-Colton</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nGPUs are computer chips orginally designed to render graphics more quickly on a computer screen.  They achieve their high speed by being highly parallel, which means that the chip can performe many operations at the same time.  Since their origins as graphic co-processors, they have found more an more use in many applications that require parallelism, most notably in speeding up machine learning algorithms.\n\nData structures are the way that data is organanize in a computer so that data can be updated and queried.  As applications of GPUs have diversified, the data structural requirements of GPUs have also diversified, but the available GPU data structures are quite limited.  For example, there were no known methods for updating a data structure on a GPU, which is necessary when the data itself changes.  Instead, all known data structures required being rebuilt from scratch whenever it was necessary to change them.\n\nIn our work, we show how to modify GPU data structures.  Our main results are a set of dyanmically modifyable GPU data structures that cover the most widely used data structures: B-trees, Log-structured Merge Trees, Filters and Hash Tables.\n\nGoing forward, we hope that our results will significantly expand the set of computational tasks that can be accelerated by GPUs.  Our publications in this area are already attracting significant attention in the form of citations.\n\n\t\t\t\t\tLast Modified: 01/05/2021\n\n\t\t\t\t\tSubmitted by: Martin Farach-Colton"
 }
}