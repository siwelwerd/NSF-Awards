{
 "awd_id": "1552481",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: Checking Dynamic Policies in Stateful Next-Generation Networks",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Darleen Fisher",
 "awd_eff_date": "2016-04-15",
 "awd_exp_date": "2022-03-31",
 "tot_intn_awd_amt": 612563.0,
 "awd_amount": 612563.0,
 "awd_min_amd_letter_date": "2016-04-22",
 "awd_max_amd_letter_date": "2020-04-22",
 "awd_abstract_narration": "The security, performance, and availability of our critical network infrastructures relies on the correct implementation of different policy goals. Network operators realize these goals by composing and configuring diverse network appliances such as routers, firewalls, intrusion prevention systems, and web proxies. Unfortunately, this process of managing networks is extremely challenging, error-prone, and entails significant manual effort and operational costs. Configuration and implementation errors could have significant consequences as it can degrade network performance, induce downtime for critical infrastructures, and cause violations of key security postures. Systematically identifying and diagnosing potential violations has been, and continues to be, a fundamental challenge. This project will develop a principled framework to check if a network setup correctly implements a given suite of policies and to help operators proactively and automatically diagnose and localize the sources of policy violations. \r\n\t\t\t\t\r\nChecking policy violations is hard even for simple reachability properties (e.g., can A talk to B) in today's networks.  Furthermore, next-generation technologies such as software-defined networking and network functions virtualization are poised to enable richer dynamic policies (e.g., if a host generates too many connections, subject it to deeper inspection) and also introduce new sources of complexity (e.g., elastic scaling, software bugs). Existing approaches in network testing and verification have fundamental expressiveness and scalability challenges in tackling dynamic policies and stateful elements. To address these challenges, the research will include developing a model-based testing framework that will lead to fundamental advances in network semantics, modeling, testing, and diagnosis.  To this end, the project will design: (1) new formal semantics to express dynamic policies over stateful networks; (2) expressive-yet-efficient abstractions for modeling the behavior of advanced network functions; (3) techniques to synthesize models of network functions; (4) scalable symbolic execution algorithms to generate test cases; and (5) efficient diagnosis algorithms to validate tests and localize violations. \t\t\t\t\t\r\n\r\nBroader Impacts: The proposed research and education activities will develop testing tools and abstractions, which is a new capability that bolsters networking education, research, and practice. The project will inspire future educators and practitioners to apply systematic network testing as an integral part of their workflow to guarantee the security, performance, and availability our critical infrastructures. The project will develop new educational modules that will be integrated into the research with undergraduate and graduate-level classes and undergraduate capstone classes. The research and education efforts will engage undergraduates and underrepresented communities. The project will create unique opportunities for interdisciplinary training of the future workforce across the domains of networking, security, programming languages, and formal verification.  The project will also design novel security games and education modules for K-12 students and teachers to highlight the importance of network testing for securing our critical infrastructures. Finally, the project deliverables (code, models, and education modules) will be released under open-source licenses as enablers for other researchers and educators, and to help transition the ideas from research to practice.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Vyas",
   "pi_last_name": "Sekar",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Vyas Sekar",
   "pi_email_addr": "vsekar@andrew.cmu.edu",
   "nsf_id": "000654046",
   "pi_start_date": "2016-04-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "5000 Forbes Avenue",
  "perf_city_name": "Pittsburgh",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133815",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736300",
   "pgm_ele_name": "Networking Technology and Syst"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 109769.0
  },
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 112921.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 122197.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 131930.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 135746.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-c8fd4d6b-7fff-f361-99d4-e79d6523d81b\">\n<p dir=\"ltr\"><span>The security, performance, and availability of networks relies on the correct implementation of critical policy goals. Violations of these goals could result in significant degradation in network performance and security posture. Network operators realize these goals by composing and configuring network appliances including simple routers and more complex middleboxes (e.g., firewalls, load balancers, intrusion prevention systems, proxies).</span><span><span> </span></span><span><span> </span></span><span><span> </span></span><span><span> </span></span></p>\n<p dir=\"ltr\"><span>Unfortunately, ensuring that the network correctly implements a given policy is challenging, error-prone, and entails significant manual effort and operational costs. Checking for violations is hard even for sim- ple reachability goals (e.g., can A talk to B) in existing networks. Next-generation technologies such as software-defined networking and network functions virtualization are poised to enable richer dynamic poli- cies over stateful networks (e.g., if A generates too many connections, subject it to deeper inspection). At the same time, they also introduce new sources of complexity (e.g., elastic scaling of network functions) and errors (e.g., buggy software implementations).</span></p>\n<p dir=\"ltr\"><span>To address these challenges, this project developed a principled model-based testing&nbsp; and verification framework and&nbsp; open-source tools for checking dynamic policies in stateful networks and for localizing sources of policy violations.&nbsp;</span></p>\n<p dir=\"ltr\"><span>More concretely, the research focused on the following key thrusts and outcomes:</span></p>\n<ul>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Model inference capabilities for stateful network functions: &nbsp; Network testing and verification needs high-fidelity models of network functions (NFs) for correct operation. Today, such tools rely on handwritten models, which is both tedious and error</span><span><br /></span><span>prone. To address this gap, this project developed novel algorithms and workflows to&nbsp; automatically infer a behavioral model of a black-box NF implementation for a given configuration (e.g., Alembic, NSDI).</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Testing and verification tools for network data planes:&nbsp; Network operators need to test</span><span><br /></span><span>ensembles of network policies using a combination of native and third-party tools in practical. Unfortunately, existing approaches for running tests do not work well for stateful functions for ensembles of network policies on stateful networks. To this end, the project developed novel model-based testing workflows for both single policies (Buzz, NSDI) and for improving the efficiency for running an ensemble of tests in parallel (Mikado, NSDI). Looking beyond testing, the project also developed novel symbolic model checking frameworks for providing stronger verification guarantees (NetSMC, NSDI). The project also developed novel capabilities for uncovering subtle semantic bugs in firewall implementations that can be potentially exploited by future attacks.&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Testing and verification tools for network control planes: In addition to stateful operations in the &ldquo;data plane&rdquo;, networks also entail stateful complex operations in the management software and configuration interfaces. To this end, the project developed novel capabilities for verifying the configurations of routing protocols (ERA, OSDI) as well as automatically uncovering stateful performance issues in software-defined network controller software implementations.&nbsp;</span></p>\n</li>\n</ul>\n<p dir=\"ltr\"><span>The project also had a substantial industry and academic outreach component, through presentations at numerous workshops and industry engagements. The project also led to the development of new curriculum material for classes at CMU, multiple collaborative publications at leading networking and systems conferences, and the mentoring of multiple graduate students</span></p>\n<div><span><br /></span></div>\n</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/13/2022<br>\n\t\t\t\t\tModified by: Vyas&nbsp;Sekar</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nThe security, performance, and availability of networks relies on the correct implementation of critical policy goals. Violations of these goals could result in significant degradation in network performance and security posture. Network operators realize these goals by composing and configuring network appliances including simple routers and more complex middleboxes (e.g., firewalls, load balancers, intrusion prevention systems, proxies).    \nUnfortunately, ensuring that the network correctly implements a given policy is challenging, error-prone, and entails significant manual effort and operational costs. Checking for violations is hard even for sim- ple reachability goals (e.g., can A talk to B) in existing networks. Next-generation technologies such as software-defined networking and network functions virtualization are poised to enable richer dynamic poli- cies over stateful networks (e.g., if A generates too many connections, subject it to deeper inspection). At the same time, they also introduce new sources of complexity (e.g., elastic scaling of network functions) and errors (e.g., buggy software implementations).\nTo address these challenges, this project developed a principled model-based testing  and verification framework and  open-source tools for checking dynamic policies in stateful networks and for localizing sources of policy violations. \nMore concretely, the research focused on the following key thrusts and outcomes:\n\n\nModel inference capabilities for stateful network functions:   Network testing and verification needs high-fidelity models of network functions (NFs) for correct operation. Today, such tools rely on handwritten models, which is both tedious and error\nprone. To address this gap, this project developed novel algorithms and workflows to  automatically infer a behavioral model of a black-box NF implementation for a given configuration (e.g., Alembic, NSDI).\n\n\nTesting and verification tools for network data planes:  Network operators need to test\nensembles of network policies using a combination of native and third-party tools in practical. Unfortunately, existing approaches for running tests do not work well for stateful functions for ensembles of network policies on stateful networks. To this end, the project developed novel model-based testing workflows for both single policies (Buzz, NSDI) and for improving the efficiency for running an ensemble of tests in parallel (Mikado, NSDI). Looking beyond testing, the project also developed novel symbolic model checking frameworks for providing stronger verification guarantees (NetSMC, NSDI). The project also developed novel capabilities for uncovering subtle semantic bugs in firewall implementations that can be potentially exploited by future attacks. \n\n\nTesting and verification tools for network control planes: In addition to stateful operations in the \"data plane\", networks also entail stateful complex operations in the management software and configuration interfaces. To this end, the project developed novel capabilities for verifying the configurations of routing protocols (ERA, OSDI) as well as automatically uncovering stateful performance issues in software-defined network controller software implementations. \n\n\nThe project also had a substantial industry and academic outreach component, through presentations at numerous workshops and industry engagements. The project also led to the development of new curriculum material for classes at CMU, multiple collaborative publications at leading networking and systems conferences, and the mentoring of multiple graduate students\n\n\n\n\n \n\n\t\t\t\t\tLast Modified: 08/13/2022\n\n\t\t\t\t\tSubmitted by: Vyas Sekar"
 }
}