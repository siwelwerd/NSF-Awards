{
 "awd_id": "1650000",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: Securing Smartphone Applications Against Rapidly Expanding Accessibility-Based Attacks",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2016-08-01",
 "awd_exp_date": "2017-07-31",
 "tot_intn_awd_amt": 97080.0,
 "awd_amount": 97080.0,
 "awd_min_amd_letter_date": "2016-08-16",
 "awd_max_amd_letter_date": "2016-08-16",
 "awd_abstract_narration": "The project will study graphical user interface (GUI) applications that are difficult for users with disabilities such as vision, movement, remembering, hearing, communicating, etc..  Currently, mobile assistive applications provide enhancement services using specialized accessibility technologies that are fundamentally insecure, thus exposing users to a variety of attacks.  These attacks are showing up in the press and are of great concern.  Accessibility applications are prime examples of \"usable security\" issues, often being used in college courses to illustrate the tradeoffs between enabling needed functionality versus keeping devices secure from attack.  Typically, the method of keeping users safe is to warned them to not use certain functionality that they need, thus users are safe but not able to fully function.  \r\n\r\nThe exploratory project will study a body of software to better understand how security issues affect users with disabilities.  It will use this new knowledge to explore new abstractions and algorithms that guide analyses of the software. A prototype security testing tool will be developed that demonstrates how to avoid violation of security constraints while enabling accessibility. A deeper understanding of mobile assistive applications may open up new research directions for usable security in ubiquitous devices.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Mark",
   "pi_last_name": "Grechanik",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Mark Grechanik",
   "pi_email_addr": "drmark@uic.edu",
   "nsf_id": "000516683",
   "pi_start_date": "2016-08-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Illinois at Chicago",
  "inst_street_address": "809 S MARSHFIELD AVE M/C 551",
  "inst_street_address_2": "",
  "inst_city_name": "CHICAGO",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "3129962862",
  "inst_zip_code": "606124305",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "IL07",
  "org_lgl_bus_name": "UNIVERSITY OF ILLINOIS",
  "org_prnt_uei_num": "",
  "org_uei_num": "W8XEAJDKMXH3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Illinois at Chicago",
  "perf_str_addr": "809 S Marshfield",
  "perf_city_name": "Chicago",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "606124305",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "IL07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 97080.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>All major operating systems on smartphones provide the accessibility service for creating \\emph{Mobile Assistive APplications (MA2Ps) for Users With Disabities (UWDs). Since there are hundreds of disabilities that impair people in vision, movement, thinking, remembering, learning, communicating, and hearing, UWDs need assistance in using \\emph{Graphical User Interface (GUI)-based APplications (GAPs)} by enhancing their GUIs, and MA2Ps provide these enhancement services. There are thousands of MA2Ps on the Google Play store that request permissions for AccessibilityService, and two of them have been downloaded by more than ten million users combined and they are rated 4.3 out of 5 stars . Making GAPs accessible for UWDs is extremely important nowadays, since GAPs are ubiquitous, both in business and personal use and they are deployed on diverse software and hardware platforms including TVs and cars.&nbsp;&nbsp; Making GAPs accessible for users with various types of disabilities is&nbsp; legally required, and a large MA$^2$P marketplace exists where there is no control over how applications use accessibility services.<br /><br />On the 4th of March 2016, it was announced that an evolutionary malware that exploits the accessibility service using \\emph{clickjacking} impacted more than half a billion Android devices globally. A report at the annual cyber-security RSA conference stated: ``this very modern mobile malware had the capability to not be detected in scanner detection, which is usually based on signatures, static and dynamic analysis approaches.'' The malware can steal all sensitive information and take automated actions using other applications and even the operating system. On the $5^{th}$ of May, Symantec announced that Android banking malware tricks users into turning on the accessibility service, so that it can steal sensitive information from \\textit{all users}, not just from UWDs \\cite{Attack1}. Moreover, security researchers from Symantec reported that the protection that Google released in May was not fool proof \\cite{Attack2}. As of the $18^{th}$ of May it is confirmed that the attack is not limited to older versions of Android and over 95\\% of Android devices are under this rapidly expanding threat \\cite{Attack8}. Different attacks that use accessibility services were reported as early as in November last year \\cite{Attack12} although security weaknesses of the accessiblity services were discussed as early as 2014 \\cite{Kraunelis2014}, and these attacks are expanding on a massive scale. If accessibility services are enabled, then applications with accessibility permissions are allowed to interact with GUIs on behalf of the user and do almost anything that the user can do. Currently, there is no protection against this attack.<br /><br />As a result of the work on this EAGER award, we established a platform for investigating this emerging and rapidly expanding security threat and for researching mitigating solutions. We defined a novel abstraction for creating application-specific security models automatically. We abstract<br />MA2Ps and GAPs as relations that map their I/O endpoints using information flow that is computed and controlled via placing restrictions on dataflow paths automatically that connect the mapped I/O endpoints. Using these security models, we will show that it is possible to create a security analysis framework that will determine if MA2Ps can reveal sensitive information of its UWDs. Next, we create the SATURDAI framework that uses obtained security models to pinpoint security violations<br />that can be caused by using accessibility API calls in MA2Ps with a high degree of precision and to create and apply remedial actions to prevent release of UWDs&rsquo; sensitive information. We performed the initial set of experiments and case studies to evaluate the SATURDAI framework that show a significant promise of our approach.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/07/2017<br>\n\t\t\t\t\tModified by: Mark&nbsp;Grechanik</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nAll major operating systems on smartphones provide the accessibility service for creating \\emph{Mobile Assistive APplications (MA2Ps) for Users With Disabities (UWDs). Since there are hundreds of disabilities that impair people in vision, movement, thinking, remembering, learning, communicating, and hearing, UWDs need assistance in using \\emph{Graphical User Interface (GUI)-based APplications (GAPs)} by enhancing their GUIs, and MA2Ps provide these enhancement services. There are thousands of MA2Ps on the Google Play store that request permissions for AccessibilityService, and two of them have been downloaded by more than ten million users combined and they are rated 4.3 out of 5 stars . Making GAPs accessible for UWDs is extremely important nowadays, since GAPs are ubiquitous, both in business and personal use and they are deployed on diverse software and hardware platforms including TVs and cars.   Making GAPs accessible for users with various types of disabilities is  legally required, and a large MA$^2$P marketplace exists where there is no control over how applications use accessibility services.\n\nOn the 4th of March 2016, it was announced that an evolutionary malware that exploits the accessibility service using \\emph{clickjacking} impacted more than half a billion Android devices globally. A report at the annual cyber-security RSA conference stated: ``this very modern mobile malware had the capability to not be detected in scanner detection, which is usually based on signatures, static and dynamic analysis approaches.'' The malware can steal all sensitive information and take automated actions using other applications and even the operating system. On the $5^{th}$ of May, Symantec announced that Android banking malware tricks users into turning on the accessibility service, so that it can steal sensitive information from \\textit{all users}, not just from UWDs \\cite{Attack1}. Moreover, security researchers from Symantec reported that the protection that Google released in May was not fool proof \\cite{Attack2}. As of the $18^{th}$ of May it is confirmed that the attack is not limited to older versions of Android and over 95\\% of Android devices are under this rapidly expanding threat \\cite{Attack8}. Different attacks that use accessibility services were reported as early as in November last year \\cite{Attack12} although security weaknesses of the accessiblity services were discussed as early as 2014 \\cite{Kraunelis2014}, and these attacks are expanding on a massive scale. If accessibility services are enabled, then applications with accessibility permissions are allowed to interact with GUIs on behalf of the user and do almost anything that the user can do. Currently, there is no protection against this attack.\n\nAs a result of the work on this EAGER award, we established a platform for investigating this emerging and rapidly expanding security threat and for researching mitigating solutions. We defined a novel abstraction for creating application-specific security models automatically. We abstract\nMA2Ps and GAPs as relations that map their I/O endpoints using information flow that is computed and controlled via placing restrictions on dataflow paths automatically that connect the mapped I/O endpoints. Using these security models, we will show that it is possible to create a security analysis framework that will determine if MA2Ps can reveal sensitive information of its UWDs. Next, we create the SATURDAI framework that uses obtained security models to pinpoint security violations\nthat can be caused by using accessibility API calls in MA2Ps with a high degree of precision and to create and apply remedial actions to prevent release of UWDs? sensitive information. We performed the initial set of experiments and case studies to evaluate the SATURDAI framework that show a significant promise of our approach.\n\n\t\t\t\t\tLast Modified: 08/07/2017\n\n\t\t\t\t\tSubmitted by: Mark Grechanik"
 }
}