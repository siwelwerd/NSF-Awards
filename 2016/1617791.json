{
 "awd_id": "1617791",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: DNA Circuits for Analog Computations",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032928649",
 "po_email": "mbasu@nsf.gov",
 "po_sign_block_name": "Mitra Basu",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2019-06-30",
 "tot_intn_awd_amt": 308001.0,
 "awd_amount": 308001.0,
 "awd_min_amd_letter_date": "2016-06-30",
 "awd_max_amd_letter_date": "2016-06-30",
 "awd_abstract_narration": "Analog devices have potential advantages over Boolean circuits, particularly for performing numerical computations, and analog circuits are often much more compact and require less resources. These advances are enhanced at molecular scales, where resources are scarce and compact designs are crucial. PI proposes extension of DNA computation from Boolean to analog computation. The analog DNA circuits can be used to control a wide variety of molecular devices. The central goals of this project are (i) to develop (design, simulate, and experimentally test) two architectures for analog DNA circuits, (ii) develop DNA-based methods for digital-to-analog and analog-to-digital conversions to allow hybrid analog-digital DNA circuits, and (iii) to provide demonstrations of applications of analog DNA circuits.\r\n\r\nThe work will involve students at all levels: the graduates students, undergraduates, and high school students. Females and minority students will especially be recruited. Students working on this project will receive training at Duke Univ. in computer science, chemistry, and DNA-based nanoscience. In addition, there are also opportunities for summer internships for undergraduates and high school students. Analog DNA circuits have many important potential applications such as analog control devices, where real values are sensed and analog computations provide controlling output. Prior devices for control of chemical reactions systems that provide for molecular species sensing and response have been limited to finite-state control; analog DNA circuits will allow much more sophisticated analog processing and control. DNA-based molecular robotics have allowed devices to operate autonomously (e.g., to walk on a nanostructure) but have been limited to finite-state control, and analog DNA circuits will allow molecular robotics to include real-time analog control circuits to provide much more sophisticated control, e.g. for control articulated joints of a molecular robot?s limb. Many systems that dynamically learn (e.g., neural networks and probabilistic inference) require analog computation, and analog DNA circuits can be used for back-propagation computation of neural nets and Bayesian inference computation of probabilistic inference systems.\r\n\r\nThe project introduces two architectures for molecular-scale analog computation. In both, the input and outputs of analog gates are directly encoded by relative concentrations of input and output strands respectively, without requiring thresholds for converting to Boolean signals. The 1st architecture has 3 gates: addition, subtraction, and multiplication. Analog circuits constructed from these gates can compute polynomials as well as approximate inverse, and division. The 2nd proposed architecture provides a novel DNA-based method to compute analytic functions such as sqrt(x), ln(x), and exp(x) using multiple DNA-based autocatalytic reaction systems working together. The project also introduces DNA analog-to-digital (A/D) and digital-to-analog (D/A) converters that enable the communication between analog and digital DNA circuits. The project includes full-scale designs, simulations, and experimental demonstrations of the two architectures, demonstrations of hybrid analog-digital DNA circuits, and a small-scale demonstration of an application of analog DNA circuits for control of a chemical reaction system: sensing input concentrations of molecules and controlling output of concentrations of molecules.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Reif",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "John H Reif",
   "pi_email_addr": "reif@cs.duke.edu",
   "nsf_id": "000097280",
   "pi_start_date": "2016-06-30",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Duke University",
  "inst_street_address": "2200 W MAIN ST",
  "inst_street_address_2": "",
  "inst_city_name": "DURHAM",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9196843030",
  "inst_zip_code": "277054640",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "NC04",
  "org_lgl_bus_name": "DUKE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "TP7EK8DZV6N5"
 },
 "perf_inst": {
  "perf_inst_name": "Duke University",
  "perf_str_addr": "Dept CS Box 90129, 308 Research",
  "perf_city_name": "Durham",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "277080129",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "NC04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7946",
   "pgm_ref_txt": "BIO COMPUTING"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 308001.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><strong>Project &nbsp;Outcomes&shy;&shy;&shy;</strong>:</p>\n<p>The project introduced two architectures for molecular-scale analog computation. In both, the input and outputs of analog gates were directly encoded by relative concentrations of input and output strands respectively, without requiring thresholds for converting to Boolean signals.</p>\n<p>The 1st architecture had 3 elementary gates: addition, subtraction, and multiplication. Analog circuits constructed from these gates can compute polynomials as well as approximate functions beyond the scope of polynomials such as sqrt(x), inverse, and division.</p>\n<p>Summary of Part 1 Outcomes:</p>\n<ul>\n<li>Design, Simulation, and Demonstration of the three      elementary analog DNA gates in the first molecular-scale analog      architecture.</li>\n<li>Design, Simulation, and Demonstration of DNA circuits      based on the three gates in the first molecular-scale analog architecture      that compute polynomial functions.</li>\n<li>Publication of these results in ACS Journal of      Synthetic Biology.</li>\n</ul>\n<p>The 2nd architecture provided an elegant novel DNA-based method to directly compute functions such as sqrt(x), ln(x), and exp(x). It uses multiple DNA-based autocatalytic reaction systems working together to compute these functions. The project also introduced DNA analog-to-digital (A/D) and digital-to-analog (D/A) converters that enable the communication between analog and digital DNA circuits. The work included full-scale designs, simulations, and experimental demonstrations of the two architectures.</p>\n<p>Summary of Part 2 Outcomes:</p>\n<ul>\n<li>Design and Simulation of the autocatalytic amplifier in      the second molecular-scale analog architecture.</li>\n<li>Design and Simulation of DNA circuits by the second      molecular-scale analog architecture that&nbsp;compute&nbsp;sqrt(x), ln(x),      and exp(x).</li>\n</ul>\n<ul>\n<li>Publication of these results in another paper in ACS&nbsp;Journal      of Synthetic Biology.</li>\n</ul>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/09/2019<br>\n\t\t\t\t\tModified by: John&nbsp;H&nbsp;Reif</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nProject  Outcomes&shy;&shy;&shy;:\n\nThe project introduced two architectures for molecular-scale analog computation. In both, the input and outputs of analog gates were directly encoded by relative concentrations of input and output strands respectively, without requiring thresholds for converting to Boolean signals.\n\nThe 1st architecture had 3 elementary gates: addition, subtraction, and multiplication. Analog circuits constructed from these gates can compute polynomials as well as approximate functions beyond the scope of polynomials such as sqrt(x), inverse, and division.\n\nSummary of Part 1 Outcomes:\n\nDesign, Simulation, and Demonstration of the three      elementary analog DNA gates in the first molecular-scale analog      architecture.\nDesign, Simulation, and Demonstration of DNA circuits      based on the three gates in the first molecular-scale analog architecture      that compute polynomial functions.\nPublication of these results in ACS Journal of      Synthetic Biology.\n\n\nThe 2nd architecture provided an elegant novel DNA-based method to directly compute functions such as sqrt(x), ln(x), and exp(x). It uses multiple DNA-based autocatalytic reaction systems working together to compute these functions. The project also introduced DNA analog-to-digital (A/D) and digital-to-analog (D/A) converters that enable the communication between analog and digital DNA circuits. The work included full-scale designs, simulations, and experimental demonstrations of the two architectures.\n\nSummary of Part 2 Outcomes:\n\nDesign and Simulation of the autocatalytic amplifier in      the second molecular-scale analog architecture.\nDesign and Simulation of DNA circuits by the second      molecular-scale analog architecture that compute sqrt(x), ln(x),      and exp(x).\n\n\nPublication of these results in another paper in ACS Journal      of Synthetic Biology.\n\n\n \n\n \n\n\t\t\t\t\tLast Modified: 09/09/2019\n\n\t\t\t\t\tSubmitted by: John H Reif"
 }
}