{
 "awd_id": "1618536",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: SMALL: Collaborative Research: Improving Reliability of In-Memory Storage",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Danella Zhao",
 "awd_eff_date": "2016-08-01",
 "awd_exp_date": "2022-07-31",
 "tot_intn_awd_amt": 213575.0,
 "awd_amount": 213575.0,
 "awd_min_amd_letter_date": "2016-07-25",
 "awd_max_amd_letter_date": "2021-05-07",
 "awd_abstract_narration": "Emerging nonvolatile memory (NVM) technologies, such as PCM, STT-RAM, and memristors, provide not only byte-addressability, low-latency reads and writes comparable to DRAM, but also persistent writes and potentially large storage capacity like an SSD. These advantages make NVM likely to be next-generation fast persistent storage for massive data, referred to as in-memory storage. Yet, NVM-based storage has two challenges: (1) Memory cells have limited write endurance (i.e., the total number of program/erase cycles per cell); (2) NVM has to remain in a consistent state in the event of a system crash or power loss. The goal of this project is to develop an efficient in-memory storage framework that addresses these two challenges. This project involves undergraduate and graduate students. All software artifacts and tools will be made available to the wider research community. The work has broader industrial and economic impact since it will help improve the reliability of data storage systems for data centers and HPC applications. \r\n\r\nThis project will take a holistic approach, spanning from low-level architecture design to high-level OS management, to optimize the reliability, performance, and manageability of in-memory storage. The technical approach will involve understanding the implication and impact of the write endurance issue when cutting-edge NVM is adopted into storage systems. The improved understanding will motivate and aid the design of cost-effective methods to improve the life-time of in-memory storage and to achieve efficient and reliable consistence maintenance.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Yifeng",
   "pi_last_name": "Zhu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Yifeng Zhu",
   "pi_email_addr": "zhu@eece.maine.edu",
   "nsf_id": "000396103",
   "pi_start_date": "2016-07-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Maine",
  "inst_street_address": "5717 CORBETT HALL",
  "inst_street_address_2": "",
  "inst_city_name": "ORONO",
  "inst_state_code": "ME",
  "inst_state_name": "Maine",
  "inst_phone_num": "2075811484",
  "inst_zip_code": "044695717",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "ME02",
  "org_lgl_bus_name": "UNIVERSITY OF MAINE SYSTEM",
  "org_prnt_uei_num": "",
  "org_uei_num": "PB3AJE5ZEJ59"
 },
 "perf_inst": {
  "perf_inst_name": "University of Maine",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "ME",
  "perf_st_name": "Maine",
  "perf_zip_code": "044695717",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "ME02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7941",
   "pgm_ref_txt": "COMPUTER ARCHITECTURE"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 213575.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Based on emerging nonvolatile memory (NVM) technologies, persistent memory (PM) successfully bridges the gap between DRAM and storage: it provides not only byte-addressability, low-latency reads and writes comparable to DRAM, but also persistent writes and potentially large storage capacity like an SSD.&nbsp; Persistent memory has two challenges: (1) Memory cells have limited write endurance (i.e., the total number of program/erase cycles per cell); (2) NVM has to remain in a consistent state in the event of a system crash or power loss. This project has successfully developed an efficient in-memory storage framework that addresses these two challenges.</p>\n<p>We propose a novel log entry allocation scheme (LALEA) that overcomes the two largest weaknesses of conventional logging has two weaknesses: (1) load imbalance among memory banks and (2) constraints of intra-record ordering. Overloaded memory banks may significantly prolong the waiting time of log requests targeting these banks. LALEA reshapes the traffic distribution over PM banks to address these weaknesses. In addition, the intra-record ordering between a header and its log entries decreases the degree of parallelism in log operations. We design a log metadata buffering scheme (BLOM) that eliminates the intra-record ordering constraints. We also designed a new transaction execution scheme called two-stage transaction execution, which allows the write requests of a transaction to be in both the ADR buffer and the staging SRAM buffer. This successfully removes unnecessary log operations for some transactions by using Asynchronous DRAM Refresh (ADR) buffer without affecting crash consistency. Leveraging emerging 3D DRAM, we have also designed a novel DRAM cache organization to achieve a good hit rate and shorter latency simultaneously.</p>\n<p>Shadow paging can guarantee crash consistency for PM. However, shadow paging requires the use of an address mapping table to track shadow pages, and frequent access to this table introduces significant performance overhead. In addition, maintaining crash consistency at the granularity level of a page causes a large amount of unnecessary write traffic. We propose a novel hardware-assisted fine-grained out-place-update scheme at the granularity level of a cacheline to efficiently support crash consistency for PM. Our design fully leverages the Address Indirection Table (AIT) available in commodity PM to implement remapping. To ensure the atomicity and durability of AIT updates, we design two policies: eager persisting and lazy persisting. We also employ an overflow log to handle the eviction of speculative AIT cache entries upon overflowing in the AIT cache.</p>\n<p>Maintaining both crash consistency and security for PM is challenging for the system design and programmers. To address this issue, we propose a hardware-assisted data persistent and secure PM system using counter mode memory encryption, requiring minimal programming efforts. We propose a novel Log-Aware Memory Encryption (LAME) scheme to reduce encryption/decryption operations without compromising data security.&nbsp;&nbsp;Specifically, LAME encrypts the updated data block with its security metadata and stores the ciphertext in the log entry, avoiding encryption/decryption operations of log data blocks in the process of in-place updating log entries. Furthermore, to mitigate the persistent overhead of encryption metadata in log records, we design a novel compact log record layout for logging encryption metadata efficiently.</p>\n<p>This project has successfully trained three graduates (including one minority) and one undergraduate at the University of Maine (UMaine) and two graduates and two undergraduates at Michigan Tech University (MTU). The work has a broader industrial and economic impact since it helps improve the reliability of data storage systems for data centers and HPC applications. The technical approach involves understanding the implication and impact of the write endurance issue when cutting-edge NVM is adopted into storage systems. The research results have successfully been integrated into undergraduate and graduate courses at both institutes, impacting over 70 at UMaine and 15 students at MTU annually.&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/13/2022<br>\n\t\t\t\t\tModified by: Yifeng&nbsp;Zhu</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nBased on emerging nonvolatile memory (NVM) technologies, persistent memory (PM) successfully bridges the gap between DRAM and storage: it provides not only byte-addressability, low-latency reads and writes comparable to DRAM, but also persistent writes and potentially large storage capacity like an SSD.  Persistent memory has two challenges: (1) Memory cells have limited write endurance (i.e., the total number of program/erase cycles per cell); (2) NVM has to remain in a consistent state in the event of a system crash or power loss. This project has successfully developed an efficient in-memory storage framework that addresses these two challenges.\n\nWe propose a novel log entry allocation scheme (LALEA) that overcomes the two largest weaknesses of conventional logging has two weaknesses: (1) load imbalance among memory banks and (2) constraints of intra-record ordering. Overloaded memory banks may significantly prolong the waiting time of log requests targeting these banks. LALEA reshapes the traffic distribution over PM banks to address these weaknesses. In addition, the intra-record ordering between a header and its log entries decreases the degree of parallelism in log operations. We design a log metadata buffering scheme (BLOM) that eliminates the intra-record ordering constraints. We also designed a new transaction execution scheme called two-stage transaction execution, which allows the write requests of a transaction to be in both the ADR buffer and the staging SRAM buffer. This successfully removes unnecessary log operations for some transactions by using Asynchronous DRAM Refresh (ADR) buffer without affecting crash consistency. Leveraging emerging 3D DRAM, we have also designed a novel DRAM cache organization to achieve a good hit rate and shorter latency simultaneously.\n\nShadow paging can guarantee crash consistency for PM. However, shadow paging requires the use of an address mapping table to track shadow pages, and frequent access to this table introduces significant performance overhead. In addition, maintaining crash consistency at the granularity level of a page causes a large amount of unnecessary write traffic. We propose a novel hardware-assisted fine-grained out-place-update scheme at the granularity level of a cacheline to efficiently support crash consistency for PM. Our design fully leverages the Address Indirection Table (AIT) available in commodity PM to implement remapping. To ensure the atomicity and durability of AIT updates, we design two policies: eager persisting and lazy persisting. We also employ an overflow log to handle the eviction of speculative AIT cache entries upon overflowing in the AIT cache.\n\nMaintaining both crash consistency and security for PM is challenging for the system design and programmers. To address this issue, we propose a hardware-assisted data persistent and secure PM system using counter mode memory encryption, requiring minimal programming efforts. We propose a novel Log-Aware Memory Encryption (LAME) scheme to reduce encryption/decryption operations without compromising data security.  Specifically, LAME encrypts the updated data block with its security metadata and stores the ciphertext in the log entry, avoiding encryption/decryption operations of log data blocks in the process of in-place updating log entries. Furthermore, to mitigate the persistent overhead of encryption metadata in log records, we design a novel compact log record layout for logging encryption metadata efficiently.\n\nThis project has successfully trained three graduates (including one minority) and one undergraduate at the University of Maine (UMaine) and two graduates and two undergraduates at Michigan Tech University (MTU). The work has a broader industrial and economic impact since it helps improve the reliability of data storage systems for data centers and HPC applications. The technical approach involves understanding the implication and impact of the write endurance issue when cutting-edge NVM is adopted into storage systems. The research results have successfully been integrated into undergraduate and graduate courses at both institutes, impacting over 70 at UMaine and 15 students at MTU annually. \n\n \n\n\t\t\t\t\tLast Modified: 12/13/2022\n\n\t\t\t\t\tSubmitted by: Yifeng Zhu"
 }
}