{
 "awd_id": "1617584",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TWC: Small: Collaborative: Improving Android Security with Dynamic Slicing",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 249780.0,
 "awd_amount": 249780.0,
 "awd_min_amd_letter_date": "2016-06-03",
 "awd_max_amd_letter_date": "2016-06-03",
 "awd_abstract_narration": "Mobile devices have been very successful and continue to expand their user base.  However, the very features that have made these devices successful, e.g., rich sensor inputs (GPS, camera, microphone) and continuous Internet connectivity, have also made the devices a favorite target for attackers.  Attacks can have many negative consequences, from stealing users' secrets to spying on the users or installing viruses that render devices inoperable.  This project will develop dynamic slicing techniques so that developers and researchers will be able to gain effective insights into device and app behavior, including malicious apps; this will make it easier to construct secure apps and to find/eliminate malicious behavior, which in turn will benefit mobile device users. Undergraduate and graduate students will be introduced to new approaches to smartphone security, which will make students better equipped for tackling emerging software research and development challenges.\r\n\r\nDynamic slicing (analyzing an execution to identify relevant code and data dependences) is a particularly effective technique for addressing a wide range of security problems. This project will develop a dynamic slicer for Android and then use the slicer, as well as its integration with other existing tools, for three main security applications.  First, improving dynamic taint analysis via efficient, effective, integrated control/data slicing. Second, finding relevant parts in the input to identity which sensor stream and part thereof are responsible for security-relevant behavior, e.g., attack, crash, botnet operation, or use of anti-detection techniques. Third,  Undo Computing, in particular combining slicing with record-and-replay to support undo computing on Android.  These lines of work are expected to lead to advances in: security, e.g., precise and effective dynamic taint tracking, finding leaks due to control dependences, understanding botnet behavior, principled discovery of anti-detection techniques, separating benign from malicious state changes; and program analysis, e.g., slicing programs that are event-oriented or rely heavily on inter-process communication; computing input/data/code interdependences in the presence of high-throughput event streams.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Iulian",
   "pi_last_name": "Neamtiu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Iulian Neamtiu",
   "pi_email_addr": "ineamtiu@njit.edu",
   "nsf_id": "000537180",
   "pi_start_date": "2016-06-03",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "New Jersey Institute of Technology",
  "inst_street_address": "323 DR MARTIN LUTHER KING JR BLVD",
  "inst_street_address_2": "",
  "inst_city_name": "NEWARK",
  "inst_state_code": "NJ",
  "inst_state_name": "New Jersey",
  "inst_phone_num": "9735965275",
  "inst_zip_code": "071021824",
  "inst_country_name": "United States",
  "cong_dist_code": "10",
  "st_cong_dist_code": "NJ10",
  "org_lgl_bus_name": "NEW JERSEY INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "",
  "org_uei_num": "SGBMHQ7VXNH5"
 },
 "perf_inst": {
  "perf_inst_name": "New Jersey Institute of Technology",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NJ",
  "perf_st_name": "New Jersey",
  "perf_zip_code": "071021982",
  "perf_ctry_code": "US",
  "perf_cong_dist": "10",
  "perf_st_cong_dist": "NJ10",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 249780.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><strong>Project Goals</strong></p>\n<p>&nbsp;</p>\n<p>Mobile operating systems such as Android have been extremely</p>\n<p>successful as they enable the construction of rich contextual</p>\n<p>applications (\"apps\") that use physical sensors such as</p>\n<p>accelerometer or GPS. However the factors that have made the mobile</p>\n<p>platforms popular are also responsible for a host of problems.&nbsp; The</p>\n<p>data collected by sensors can be used nefarious purposes, e.g., users'</p>\n<p>geographical position and physical activities can be subject to</p>\n<p>constant monitoring or revealed to attackers. The convenience</p>\n<p>introduced by rich processing and storage capabilities also make it</p>\n<p>more likely that phones and tablets store and process sensitive</p>\n<p>documents, e.g., tax returns or bank statements.</p>\n<p>&nbsp;</p>\n<p>This project's research goal was to develop a multi-purpose</p>\n<p>analysis tool called a \"slicer\" for the Android OS and Android apps</p>\n<p>and use the slicer to uncover security and reliability issues in the</p>\n<p>Android ecosystem.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>Research Achievements</strong></p>\n<p>&nbsp;</p>\n<p>The project has made fundamental contributions to the research and</p>\n<p>practice of app security and app analysis, as well as the security and</p>\n<p>privacy of mobile user data. The project has led to eight</p>\n<p>publications, most of them in premier conferences such as</p>\n<p><em>International Conference on Software Engineering</em>&nbsp;and</p>\n<p><em>IEEE Symposium on Security and Privacy</em>.</p>\n<p>&nbsp;</p>\n<p>The first-ever dynamic slicer for Android, named AndroidSlicer, was</p>\n<p>developed and released as open-source, at https://github.com/archer29m/AndroidSlicer</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>Since inception, AndroidSlicer has proven effective at solving app</p>\n<p>security and reliability issues such as finding and tracking input</p>\n<p>parts responsible for an app crash and optimizing testing so it can be</p>\n<p>performed faster yet with increased effectiveness.</p>\n<p>&nbsp;</p>\n<p>AndroidSlicer's multi-year development has facilitated and spurred</p>\n<p>many other security applications, as detailed next.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>Apps that conceal their activities are fundamentally deceptive; app</p>\n<p>marketplaces and end-users should treat such apps as</p>\n<p>suspicious. However, due to its nature and intent, activity concealing</p>\n<p>is not disclosed up-front, which puts users at risk. We characterized</p>\n<p>and detected such techniques, e.g., hiding the app or removing traces,</p>\n<p>which we call \"self hiding behavior\" (SHB). We show that SHB ranges</p>\n<p>from hiding the app&rsquo;s presence or activity to covering an app&rsquo;s</p>\n<p>traces, e.g., by blocking phone calls/text messages or removing calls</p>\n<p>and messages from logs. Our approach has revealed that malicious apps</p>\n<p>employ 1.5 SHBs per app on average. Surprisingly, SH behavior is also</p>\n<p>employed by legitimate (&ldquo;benign&rdquo;) apps, which can affect users</p>\n<p>negatively in multiple ways.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>Another security project pursued within this grant entailed uncovering</p>\n<p>malicious apps that abuse a certain Android feature, \"Device</p>\n<p>Administrator\", to create ransomware or lock users out.&nbsp; Device</p>\n<p>Administrator (DA) capabilities for mobile devices, e.g., remote</p>\n<p>locking/wiping, or enforcing password strength, were originally</p>\n<p>introduced to help organizations manage phone fleets or enable</p>\n<p>parental control. However, DA capabilities have been subverted and</p>\n<p>abused: malicious apps have used DA to create ransomware or lock users</p>\n<p>out, while benign apps have used DA to prevent or hinder</p>\n<p>uninstallation; in certain cases the only remedy is to factory-reset</p>\n<p>the phone. We studied DA abuse in 4,135 apps and found 578 DA</p>\n<p>confirmed cases, including apps currently on Google Play, which we</p>\n<p>reported to Google. Many apps have since been removed.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>Another security project pursued within this grant entailed</p>\n<p>identifying apps that abuse private information about user accounts.</p>\n<p>We analyzed 678 apps that ask for user information during sign-up to</p>\n<p>answer questions such as: Can accounts be deleted at all? Following</p>\n<p>account deletion, will user data remain on the app&rsquo;s servers? If so,</p>\n<p>for how long? Do apps keep their promise to remove data? We found that</p>\n<p>64.45% of apps do not offer any means for users to delete accounts;</p>\n<p>2.5% of apps still keep account data on app servers even after</p>\n<p>accounts are deleted by users. Only 5% of apps specify a</p>\n<p>retention period; some of these apps violate their own policy</p>\n<p>by still retaining data months after the period has ended.</p>\n<p>These findings have been reported, to be fixed, to app developers.</p>\n<p>&nbsp;</p>\n<p><strong>Outreach and support for minorities and underrepresented groups</strong></p>\n<p>&nbsp;</p>\n<p>The project has provided funds for training three PhD students, including</p>\n<p>two women, and two undergraduate students including one</p>\n<p>Fulbright scholar.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/30/2021<br>\n\t\t\t\t\tModified by: Iulian&nbsp;Neamtiu</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nProject Goals\n\n \n\nMobile operating systems such as Android have been extremely\n\nsuccessful as they enable the construction of rich contextual\n\napplications (\"apps\") that use physical sensors such as\n\naccelerometer or GPS. However the factors that have made the mobile\n\nplatforms popular are also responsible for a host of problems.  The\n\ndata collected by sensors can be used nefarious purposes, e.g., users'\n\ngeographical position and physical activities can be subject to\n\nconstant monitoring or revealed to attackers. The convenience\n\nintroduced by rich processing and storage capabilities also make it\n\nmore likely that phones and tablets store and process sensitive\n\ndocuments, e.g., tax returns or bank statements.\n\n \n\nThis project's research goal was to develop a multi-purpose\n\nanalysis tool called a \"slicer\" for the Android OS and Android apps\n\nand use the slicer to uncover security and reliability issues in the\n\nAndroid ecosystem.\n\n \n\n \n\nResearch Achievements\n\n \n\nThe project has made fundamental contributions to the research and\n\npractice of app security and app analysis, as well as the security and\n\nprivacy of mobile user data. The project has led to eight\n\npublications, most of them in premier conferences such as\n\nInternational Conference on Software Engineering and\n\nIEEE Symposium on Security and Privacy.\n\n \n\nThe first-ever dynamic slicer for Android, named AndroidSlicer, was\n\ndeveloped and released as open-source, at https://github.com/archer29m/AndroidSlicer\n\n \n\n \n\nSince inception, AndroidSlicer has proven effective at solving app\n\nsecurity and reliability issues such as finding and tracking input\n\nparts responsible for an app crash and optimizing testing so it can be\n\nperformed faster yet with increased effectiveness.\n\n \n\nAndroidSlicer's multi-year development has facilitated and spurred\n\nmany other security applications, as detailed next.\n\n \n\n \n\nApps that conceal their activities are fundamentally deceptive; app\n\nmarketplaces and end-users should treat such apps as\n\nsuspicious. However, due to its nature and intent, activity concealing\n\nis not disclosed up-front, which puts users at risk. We characterized\n\nand detected such techniques, e.g., hiding the app or removing traces,\n\nwhich we call \"self hiding behavior\" (SHB). We show that SHB ranges\n\nfrom hiding the app\u2019s presence or activity to covering an app\u2019s\n\ntraces, e.g., by blocking phone calls/text messages or removing calls\n\nand messages from logs. Our approach has revealed that malicious apps\n\nemploy 1.5 SHBs per app on average. Surprisingly, SH behavior is also\n\nemployed by legitimate (\"benign\") apps, which can affect users\n\nnegatively in multiple ways.\n\n \n\n \n\nAnother security project pursued within this grant entailed uncovering\n\nmalicious apps that abuse a certain Android feature, \"Device\n\nAdministrator\", to create ransomware or lock users out.  Device\n\nAdministrator (DA) capabilities for mobile devices, e.g., remote\n\nlocking/wiping, or enforcing password strength, were originally\n\nintroduced to help organizations manage phone fleets or enable\n\nparental control. However, DA capabilities have been subverted and\n\nabused: malicious apps have used DA to create ransomware or lock users\n\nout, while benign apps have used DA to prevent or hinder\n\nuninstallation; in certain cases the only remedy is to factory-reset\n\nthe phone. We studied DA abuse in 4,135 apps and found 578 DA\n\nconfirmed cases, including apps currently on Google Play, which we\n\nreported to Google. Many apps have since been removed.\n\n \n\n \n\nAnother security project pursued within this grant entailed\n\nidentifying apps that abuse private information about user accounts.\n\nWe analyzed 678 apps that ask for user information during sign-up to\n\nanswer questions such as: Can accounts be deleted at all? Following\n\naccount deletion, will user data remain on the app\u2019s servers? If so,\n\nfor how long? Do apps keep their promise to remove data? We found that\n\n64.45% of apps do not offer any means for users to delete accounts;\n\n2.5% of apps still keep account data on app servers even after\n\naccounts are deleted by users. Only 5% of apps specify a\n\nretention period; some of these apps violate their own policy\n\nby still retaining data months after the period has ended.\n\nThese findings have been reported, to be fixed, to app developers.\n\n \n\nOutreach and support for minorities and underrepresented groups\n\n \n\nThe project has provided funds for training three PhD students, including\n\ntwo women, and two undergraduate students including one\n\nFulbright scholar.\n\n \n\n \n\n\t\t\t\t\tLast Modified: 09/30/2021\n\n\t\t\t\t\tSubmitted by: Iulian Neamtiu"
 }
}