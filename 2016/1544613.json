{
 "awd_id": "1544613",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CPS: TTP Option: Frontiers:  Collaborative Research: Software Defined Control  for Smart Manufacturing Systems",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032928950",
 "po_email": "rwachter@nsf.gov",
 "po_sign_block_name": "Ralph Wachter",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2019-08-31",
 "tot_intn_awd_amt": 512508.0,
 "awd_amount": 302820.0,
 "awd_min_amd_letter_date": "2016-08-23",
 "awd_max_amd_letter_date": "2019-08-23",
 "awd_abstract_narration": "Software-Defined Control (SDC) is a revolutionary methodology for controlling manufacturing systems that uses a global view of the entire manufacturing system, including all of the physical components (machines, robots, and parts to be processed) as well as the cyber components (logic controllers, RFID readers, and networks). As manufacturing systems become more complex and more connected, they become more susceptible to small faults that could cascade into major failures or even cyber-attacks that enter the plant, such as, through the internet.  In this project, models of both the cyber and physical components will be used to predict the expected behavior of the manufacturing system. Since the components of the manufacturing system are tightly coupled in both time and space, such a temporal-physical coupling, together with high-fidelity models of the system, allows any fault or attack that changes the behavior of the system to be detected and classified. Once detected and identified, the system will compute new routes for the physical parts through the plant, thus avoiding the affected locations. These new routes will be directly downloaded to the low-level controllers that communicate with the machines and robots, and will keep production operating (albeit at a reduced level), even in the face of an otherwise catastrophic fault. These algorithms will be inspired by the successful approach of Software-Defined Networking.  Anomaly detection methods will be developed that can ascertain the difference between the expected (modeled) behavior of the system and the observed behavior (from sensors). Anomalies will be detected both at short time-scales, using high-fidelity models, and longer time-scales, using machine learning and statistical-based methods. The detection and classification of anomalies, whether they be random faults or cyber-attacks, will represent a significant contribution, and enable the re-programming of the control systems (through re-routing the parts) to continue production.\r\n\r\nThe manufacturing industry represents a significant fraction of the US GDP, and each manufacturing plant represents a large capital investment. The ability to keep these plants running in the face of inevitable faults and even malicious attacks can improve productivity -- keeping costs low for both manufacturers and consumers. Importantly, these same algorithms can be used to redefine the production routes (and machine programs) when a new part is introduced, or the desired production volume is changed, to maximize profitability for the manufacturing operation  .",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Elaine",
   "pi_last_name": "Shi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Elaine Shi",
   "pi_email_addr": "runting@cs.cmu.edu",
   "nsf_id": "000624210",
   "pi_start_date": "2016-08-23",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "373 Pine Tree Rd.",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148502820",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "791800",
   "pgm_ele_name": "CPS-Cyber-Physical Systems"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7918",
   "pgm_ref_txt": "CYBER-PHYSICAL SYSTEMS (CPS)"
  },
  {
   "pgm_ref_code": "8236",
   "pgm_ref_txt": "CPS- Frontier"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 201352.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 101468.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>\n<div>The outcome of our project includes new scientific findings, a novel software system, design and implementation of manufacturing scenarios for systematic evaluation, and runtime data collected from physical manufacturing testbeds.</div>\n<div></div>\n<div>1) We identified novel attack vectors in smart manufacturing systems. Particularly, through systematic study of two&nbsp;real-world manufacturing testbeds (SMART testbed at University of Michigan and Fischertechnik at UIUC), we discovered timing-related new vulnerabilities in real-life PLC code&nbsp;which can be triggered by well-crafted timing-aware machine/sensor event sequences.&nbsp;</div>\n<div></div>\n<div>2) To automatically detect these vulnerabilities, we developed a novel vetting system, VetPLC, that can automatically generate timed event sequences to trigger such hidden defects in fuzz testing. To do so, we first conducted static program analysis on PLC code to extract the qualitative causal relations among PLC events, and then mine temporal invariants from data traces collected in our testbeds to quantitatively gauge temporal dependencies that are constrained by machine operations. Our VetPLC prototype has been implemented in 15K lines of code, and our experiments show that VetPLC outperforms state-of-the-art techniques and can generate event sequences that can be used to automatically detect hidden safety violations. This work has been published in the proceedings of IEEE Symposium on Security and Privacy 2019.</div>\n<div></div>\n<div>3) To evaluate VetPLC in real ICS environments, we designed, implemented and documented 10 real-world manufacturing scenarios based upon our two physical testbeds. These 10 scenarios cover five typical safety hazards on the factory floor including 1) physical collision, 2) item overflow, 3) item underflow, 4) critical machines not being separated from manufacturing workers and 5) machines running out of safety zones.&nbsp;</div>\n<div></div>\n<div>4) To infer temporal invariants among PLC events from physical testbeds, we collected runtime data traces from physical testbeds via the industrial protocol, Open Platform Communications (OPC). A data trace contains a list of data items, each of which records the&nbsp;name, value and collection timestamp of a PLC variable used in the testbed. Specifically, we ran each testbed 20 times and collect 10 positive and 10 negative data traces. Each run takes approximately 25 minutes. Eventually, we obtained 1.2 GB data in 10 hours from each testbed that runs logic code containing 35 variables.</div>\n</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/07/2019<br>\n\t\t\t\t\tModified by: Elaine&nbsp;Shi</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nThe outcome of our project includes new scientific findings, a novel software system, design and implementation of manufacturing scenarios for systematic evaluation, and runtime data collected from physical manufacturing testbeds.\n\n1) We identified novel attack vectors in smart manufacturing systems. Particularly, through systematic study of two real-world manufacturing testbeds (SMART testbed at University of Michigan and Fischertechnik at UIUC), we discovered timing-related new vulnerabilities in real-life PLC code which can be triggered by well-crafted timing-aware machine/sensor event sequences. \n\n2) To automatically detect these vulnerabilities, we developed a novel vetting system, VetPLC, that can automatically generate timed event sequences to trigger such hidden defects in fuzz testing. To do so, we first conducted static program analysis on PLC code to extract the qualitative causal relations among PLC events, and then mine temporal invariants from data traces collected in our testbeds to quantitatively gauge temporal dependencies that are constrained by machine operations. Our VetPLC prototype has been implemented in 15K lines of code, and our experiments show that VetPLC outperforms state-of-the-art techniques and can generate event sequences that can be used to automatically detect hidden safety violations. This work has been published in the proceedings of IEEE Symposium on Security and Privacy 2019.\n\n3) To evaluate VetPLC in real ICS environments, we designed, implemented and documented 10 real-world manufacturing scenarios based upon our two physical testbeds. These 10 scenarios cover five typical safety hazards on the factory floor including 1) physical collision, 2) item overflow, 3) item underflow, 4) critical machines not being separated from manufacturing workers and 5) machines running out of safety zones. \n\n4) To infer temporal invariants among PLC events from physical testbeds, we collected runtime data traces from physical testbeds via the industrial protocol, Open Platform Communications (OPC). A data trace contains a list of data items, each of which records the name, value and collection timestamp of a PLC variable used in the testbed. Specifically, we ran each testbed 20 times and collect 10 positive and 10 negative data traces. Each run takes approximately 25 minutes. Eventually, we obtained 1.2 GB data in 10 hours from each testbed that runs logic code containing 35 variables.\n\n\n\t\t\t\t\tLast Modified: 10/07/2019\n\n\t\t\t\t\tSubmitted by: Elaine Shi"
 }
}