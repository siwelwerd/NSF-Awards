{
 "awd_id": "1621544",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SBIR Phase I:  A Programming Language-Driven Approach to Building IoT, Mobile and Web Applications",
 "cfda_num": "47.084",
 "org_code": "15030000",
 "po_phone": "7032928772",
 "po_email": "patherto@nsf.gov",
 "po_sign_block_name": "Peter Atherton",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2018-04-30",
 "tot_intn_awd_amt": 225000.0,
 "awd_amount": 225000.0,
 "awd_min_amd_letter_date": "2016-06-24",
 "awd_max_amd_letter_date": "2017-12-18",
 "awd_abstract_narration": "The broader impact/commercial potential of this Small Business Innovation Research (SBIR) Phase I project involves Web, Mobile and IoT applications, which generate significant economic value for society. IoT applications alone will add about $2T in economic value over the next 10 years. However, in order to fully realize the economic potential, high value applications will need to be created and brought to the market at low cost and quickly. This project will develop products that will significantly reduce development cost, improve quality, and bring these applications to market faster. The proposed project will also have significant impact on computer science education. Given the growing interest in programming at high school and college levels, the project will produce software tools and educational material that students can use to build novel applications without needing to learn a wide variety of languages and tools to experiment with different mobile and IoT devices. Further, interest in IoT has given rise to the maker movement, where low cost software and hardware tools are being used to build smart objects. Tools produced by this project will further lower the barrier of entry for the maker community. \r\n\r\nThis Small Business Innovation Research Phase I project addresses the problem of developing IoT, Mobile and Web applications. Developing these applications is extremely challenging because of the differences in device capabilities, platform support (iOS vs. Android vs. Windows), and resources (memory, CPU, power). Building such applications often has meant rewriting a large percentage of the application code using different programming languages, tools, libraries and platform support. This has resulted in high development and management costs, inconsistent and poor product experience across platforms, and low software quality. This project addresses the problem by using a language-driven approach. In this approach, a new language is designed specifically to provide abstractions for the various forms of heterogeneity (including hardware, capability, resource and abstraction heterogeneities). Compilers and code generators use the semantic properties of the abstractions to generate code customized for each device. The Phase 1 project will develop tools and libraries for targeting the language for several mobile and IoT platforms. The outcome of Phase 1 will be a set of tools, which when given a program and a description of devices, will generate code for each device, distribute and install the binaries on each device, and manage the binaries for the devices.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "TIP",
 "org_dir_long_name": "Directorate for Technology, Innovation, and Partnerships",
 "div_abbr": "TI",
 "org_div_long_name": "Translational Impacts",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Raju",
   "pi_last_name": "Pandey",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Raju Pandey",
   "pi_email_addr": "pandey@gmail.com",
   "nsf_id": "000660266",
   "pi_start_date": "2016-06-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Thinking Books, LLC",
  "inst_street_address": "3054 Carmelo Lane",
  "inst_street_address_2": "",
  "inst_city_name": "Davis",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "5306010911",
  "inst_zip_code": "956180655",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "CA04",
  "org_lgl_bus_name": null,
  "org_prnt_uei_num": null,
  "org_uei_num": "UD5JQKKC2GK8"
 },
 "perf_inst": {
  "perf_inst_name": "Thinking Books, LLC",
  "perf_str_addr": "3054 Carmelo Lane",
  "perf_city_name": "Davis",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "956186555",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "CA04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "537100",
   "pgm_ele_name": "SBIR Phase I"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "5371",
   "pgm_ref_txt": "SMALL BUSINESS PHASE I"
  },
  {
   "pgm_ref_code": "8032",
   "pgm_ref_txt": "Software Services and Applications"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 225000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project is aimed at developing software tools that help build Web, Mobile, and IoT applications. T<span>he development and management of these applications is extremely challenging: there is significant heterogeneity among devices.&nbsp;</span><span>Mobile devices differ in hardware as well as in the platform support. IoT devices vary significantly in the amount of resources (memory, power, CPU), and often require special low-level development tools. Building an application for a wide spectrum of devices often means rewriting a large percentage of the application code using different programming languages (C, Java, Objective-C, HTML, JavaScript), tools, libraries, and platform support. This results in high development and management cost, inconsistent and poor product experience across devices, and low software quality.&nbsp;</span></p>\n<p>Thinking Books products solve the problem of heterogeneity and complexity of managing diversity for IoT, Mobile, and Web applications. The key innovations lie in (i) a new programming language,&nbsp;<strong>Ankur</strong>, &nbsp;(ii) a set of semantic analysis, code generator, code distribution, and application management tools that map the abstractions back to devices, and (iii) a &nbsp;software development methodology that promotes &nbsp;\"build for one, extend to any\" approach.&nbsp;</p>\n<p>Ankur runs on a wide variety of desktop and mobile devices. The language is unique in that it defines a number of abstractions that are specifically designed to address heterogeneity. Compilers analyze an Ankur application to generate different code for different devices. The generated code is highly specialized and optimized for each device. It matches the resources, capabilities, and abstractions of the underlying device. In addition, Ankur development tools manage code across multiple devices, manage resources on these devices, and ensure integration and communication among the devices. The Ankur runtime system manages system level differences by providing both common and differentiating services. This approach to application development allows developers to capture both common code and platform specific code using a common set of abstractions. The Ankur tools then manage code generation, code deployment, execution, and change management.&nbsp;</p>\n<p>The above language-driven approach to application development eliminates the need for managing and duplicating code across multiple devices that typical IoT and Mobile applications will contain. The approach also enables development of tools that automate the process of generating, distributing, and managing code for different devices. The approach helps significantly reduce development cost, improve product quality, bring products quicker to the market, and make it easier to make changes and propagate the changes transparently to devices. Further, the approach will significantly alleviate the challenge of finding the diverse talents required to build IoT and mobile applications using traditional approaches.</p>\n<p>Given the growing interest in programming at the high school and college level, Ankur will be an ideal modern programming language for both college and K-12 students to learn. The students will not only learn about programming, but can alsou use the language to build interesting applications on the devices that they already have access to. Further, interest in IoT has given rise to the maker movement, where low cost software and hardware tools are being used to build smart objects. Ankur-based software development tools will further lower the barrier of entry for the maker community.</p>\n<p><span><br /></span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 04/27/2018<br>\n\t\t\t\t\tModified by: Raju&nbsp;Pandey</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project is aimed at developing software tools that help build Web, Mobile, and IoT applications. The development and management of these applications is extremely challenging: there is significant heterogeneity among devices. Mobile devices differ in hardware as well as in the platform support. IoT devices vary significantly in the amount of resources (memory, power, CPU), and often require special low-level development tools. Building an application for a wide spectrum of devices often means rewriting a large percentage of the application code using different programming languages (C, Java, Objective-C, HTML, JavaScript), tools, libraries, and platform support. This results in high development and management cost, inconsistent and poor product experience across devices, and low software quality. \n\nThinking Books products solve the problem of heterogeneity and complexity of managing diversity for IoT, Mobile, and Web applications. The key innovations lie in (i) a new programming language, Ankur,  (ii) a set of semantic analysis, code generator, code distribution, and application management tools that map the abstractions back to devices, and (iii) a  software development methodology that promotes  \"build for one, extend to any\" approach. \n\nAnkur runs on a wide variety of desktop and mobile devices. The language is unique in that it defines a number of abstractions that are specifically designed to address heterogeneity. Compilers analyze an Ankur application to generate different code for different devices. The generated code is highly specialized and optimized for each device. It matches the resources, capabilities, and abstractions of the underlying device. In addition, Ankur development tools manage code across multiple devices, manage resources on these devices, and ensure integration and communication among the devices. The Ankur runtime system manages system level differences by providing both common and differentiating services. This approach to application development allows developers to capture both common code and platform specific code using a common set of abstractions. The Ankur tools then manage code generation, code deployment, execution, and change management. \n\nThe above language-driven approach to application development eliminates the need for managing and duplicating code across multiple devices that typical IoT and Mobile applications will contain. The approach also enables development of tools that automate the process of generating, distributing, and managing code for different devices. The approach helps significantly reduce development cost, improve product quality, bring products quicker to the market, and make it easier to make changes and propagate the changes transparently to devices. Further, the approach will significantly alleviate the challenge of finding the diverse talents required to build IoT and mobile applications using traditional approaches.\n\nGiven the growing interest in programming at the high school and college level, Ankur will be an ideal modern programming language for both college and K-12 students to learn. The students will not only learn about programming, but can alsou use the language to build interesting applications on the devices that they already have access to. Further, interest in IoT has given rise to the maker movement, where low cost software and hardware tools are being used to build smart objects. Ankur-based software development tools will further lower the barrier of entry for the maker community.\n\n\n\n\n\t\t\t\t\tLast Modified: 04/27/2018\n\n\t\t\t\t\tSubmitted by: Raju Pandey"
 }
}