{
 "awd_id": "1618104",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Enhancing Memory System Dependability by Integrity Checking",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Yuanyuan Yang",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2021-06-30",
 "tot_intn_awd_amt": 438500.0,
 "awd_amount": 443500.0,
 "awd_min_amd_letter_date": "2016-06-30",
 "awd_max_amd_letter_date": "2017-05-15",
 "awd_abstract_narration": "Memory system dependability is increasingly a concern as memory cell density and total capacity continue to increase. Recent field studies have shown that memory error rates are rising and memory errors have demonstrated correlation patterns. With these two trends, current memory error protection schemes are no longer sufficient for server computers. This project explores a unique error protection scheme called MemGuard, which is based on memory integrity checking, to enhance memory error protections for server computers as well as to provide a cost- and energy-efficient solution for personal and mobile computers. The research may significantly improve the dependability of computer systems without incurring high cost or energy overhead. The education and outreach activities will encourage minority and women students to get involved in the research, and will include interactions with middle/high school students and teachers.\r\n\r\nThe MemGuard scheme checks the consistency between memory reads and memory writes using hash-based signatures to detect memory errors.  It can detect memory cell errors with a negligible rate of false negative. Compared to SECDED (single error correcting double error detection) ECC and SDDC (single data device correction) schemes, it is much stronger in multi-bit error detection and with negligible cost and energy overhead. It does not correct errors immediately as the other two schemes do; instead, it may reply on OS checkpointing or program restarting for error recovery. The project will fully investigate the design of MemGuard, evaluate the strength of MemGuard with realistic DRAM error modes, extend it to multiprocessors and I/O rich environments, develop a similar integrity-based scheme for processor/memory communication error protection, and combine MemGuard with existing error protection schemes. The project will also optimize the design and implementation of the hash functions of MemGuard, combine MemGuard with selection error protection, and explore efficient checkpointing strategies for improved efficiency.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Arun",
   "pi_last_name": "Somani",
   "pi_mid_init": "K",
   "pi_sufx_name": "",
   "pi_full_name": "Arun K Somani",
   "pi_email_addr": "arun@iastate.edu",
   "nsf_id": "000429780",
   "pi_start_date": "2016-06-30",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Zhao",
   "pi_last_name": "Zhang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhao Zhang",
   "pi_email_addr": "zhangz@uic.edu",
   "nsf_id": "000243180",
   "pi_start_date": "2016-06-30",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Iowa State University",
  "inst_street_address": "1350 BEARDSHEAR HALL",
  "inst_street_address_2": "515 MORRILL ROAD",
  "inst_city_name": "AMES",
  "inst_state_code": "IA",
  "inst_state_name": "Iowa",
  "inst_phone_num": "5152945225",
  "inst_zip_code": "500112103",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IA04",
  "org_lgl_bus_name": "IOWA STATE UNIVERSITY OF SCIENCE AND TECHNOLOGY",
  "org_prnt_uei_num": "DQDBM7FGJPC5",
  "org_uei_num": "DQDBM7FGJPC5"
 },
 "perf_inst": {
  "perf_inst_name": "Iowa State University",
  "perf_str_addr": "368 Durham, Iowa State Univ",
  "perf_city_name": "Ames",
  "perf_st_code": "IA",
  "perf_st_name": "Iowa",
  "perf_zip_code": "500112207",
  "perf_ctry_code": "US",
  "perf_cong_dist": null,
  "perf_st_cong_dist": "IA",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7941",
   "pgm_ref_txt": "COMPUTER ARCHITECTURE"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 438500.0
  },
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 5000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The Problem</p>\n<p>The memory system plays an important role in a computing system. Since it affects the performance of the whole computation process, data stored in memory should be error free. Also, memory latency is an important consideration. Thus, all efforts are made in the design of computer systems to streamline reliable data delivery to the processor system. Memory systems are error-prone, and any error may impact the integrity of the whole computation. Making systems reliable is an important area of research.</p>\n<p>The project addressed the problem of growing severity of soft errors, in particular the possibility of multi-bit errors caused due to a variety of reasons like correlated errors including common row or column or row-hammering attack to trigger such errors. <br /> <br /> Solution and Key Technical Results</p>\n<p>We developed solutions to detect and overcome the effects of multi-bit errors in&nbsp;memory system. The key characteristics of our solutions have been high energy efficiency and low performance impact to keep them deployable in high performance memory systems.</p>\n<ol>\n<li>We evaluated the strength of MemGuard scheme developed by us and extend the MemGuard technique for system of multiple writers and integrate it with existing error protection schemes. This scheme is further developed with efficient checkpointing schemes that are customized to work with MemGuard to recover from when errors are detected.<br /> <br /> </li>\n<li>We developed integrity-checking scheme to enhance the error detection/correction within the memory systems and processor-memory&nbsp;communication to tolerate multiple bits errors within single chip or multiple chips that affects a single read operation by using more complex error detection and correction codes.<br /> <br /> </li>\n<li>We designed a more robust error detection schemes by combining Single Symbol Correction - Multi-Symbol Detection (SSC-MSD) Error Correcting Codes (ECC) and hash functions. We also optimized the design to reduce hardware complexity and improve energy efficiency. We considered different ways to combine hash and SSC-MSD Reed Solomon (RS) ECCs.<br /> <br /> </li>\n<li>We evaluated and analyzed the effectiveness of various Reed Solomon encoders and decoders and different non-cryptographic hash functions in our designs for effective use for multi-symbol errors detection and correction in high performance computing memories. We improved the decoder design to ensure the impact on read latency is negligible. We also included address protection within our schemes.<br /> <br /> </li>\n<li>Finally, to proactively remove multiple bit errors in ECC-protected memory entities efficiently, we developed a two-stage scrubbing. The goal was to address the errors that occur due to a single disturbance affecting a complete row and column of a memory array. Our two-stage memory scrubbing scheme reduces the overall probability of multiple bit errors in a single coded entity. The scheme also allows for the scrubbing rate to be reduced without affecting the memory reliability.<br /><br /></li>\n<li>We addressed the problem of      disturbance correlation in chipkill correct memories, which makes the      memories vulnerable to row-hammering attacks and allows a single      successful attack to cause double- and multi-errors in ECC words. We      developed a novel solution that uses a simple, XOR-based row remapping to      break the disturbance correlation for chipkill correct memories with      register chips, drastically improving the security and reliability of the computer      using these memories.<br /><br /> </li>\n<li>We developed a new design called      Discreet-PARA. It is a hybrid design&nbsp;that combines counters and cache      storage with PARA, a probabilistic row-hammer&nbsp;defense mechanism with relatively      high run-time overhead, to reduce its performance&nbsp;overhead without      lowering its defense strength. Because of its hybrid&nbsp;nature, discreet-PARA      requires much less storage than other counter-based&nbsp;row-hammer      defense mechanisms. Thus, it delivers improved performance-      and&nbsp;energy-efficiency.<br /> <br /> </li>\n</ol>\n<p>Broader Impact and Future Potential</p>\n<p>The project mentored and trained seven students who have joined or are joining the workforces. This includes two undergraduate students and five graduate students.</p>\n<p>The research also resulted in multiple theses/dissertations, conference and journals publications and technical report which will be eventually published in relevant high-quality conferences and open access journals.</p>\n<p>In the future, we expect that the project will directly impact the design of memory systems when the system is operating in electrically noisy environments and at higher frequencies. The methods we developed provide reliability without introducing high overhead or impacting the critical path.&nbsp;</p>\n<p>Reliable computing impacts all fields, scientific and business computing where failure leads to incorrect results and conclusions, applications where incorrect computing may lead to disastrous accidents, and society in general who depends on the reliable computing.</p>\n<p>The outcome of this project is inside the internals of computing systems and only supports development of reliable computing systems. Thus, measuring the impact of this project on other fields is not as simple.&nbsp;<br /> <br /></p>\n<p>Workforce Development and Education</p>\n<p>The project supported seven students and supported them through their degree program and/or prepared them for further studies.</p>\n<p>The research results were used in a class he teaches on fault tolerant computing to cover the topic of memory system reliability and use of coding schemes.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/28/2021<br>\n\t\t\t\t\tModified by: Arun&nbsp;K&nbsp;Somani</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327377925_hash-encode-decode--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327377925_hash-encode-decode--rgov-800width.jpg\" title=\"Hash and SSC Encoding-Decoding\"><img src=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327377925_hash-encode-decode--rgov-66x44.jpg\" alt=\"Hash and SSC Encoding-Decoding\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Three different ways to use Single Symbol Correction (SSC) codes and Hash combination for memory protection: (a) Hash on data and SSC on both; (b) Hash and SSC on data separately; or (c) SSC on data and then Hash on coded word. The first one performs the best for implementation and read efficiency.</div>\n<div class=\"imageCredit\">Arun Somani and Ravikiran Yelaswarapu</div>\n<div class=\"imagePermisssions\">Royalty-free (unrestricted use)</div>\n<div class=\"imageSubmitted\">Arun&nbsp;K&nbsp;Somani</div>\n<div class=\"imageTitle\">Hash and SSC Encoding-Decoding</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327264452_Discrete-Para--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327264452_Discrete-Para--rgov-800width.jpg\" title=\"The internal organization of discreet-PARA\"><img src=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327264452_Discrete-Para--rgov-66x44.jpg\" alt=\"The internal organization of discreet-PARA\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">DBC detects if there is a risk of row-hammer attack and enables or disables PARA accordingly. PARA-cache filters out repetitive target refreshes generated by PARA. Discreet-PARA guarantees the same protection strength as the original PARA but drastically reduces its performance and energy overheads.</div>\n<div class=\"imageCredit\">Zhao Zhang</div>\n<div class=\"imagePermisssions\">Royalty-free (unrestricted use)</div>\n<div class=\"imageSubmitted\">Arun&nbsp;K&nbsp;Somani</div>\n<div class=\"imageTitle\">The internal organization of discreet-PARA</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327442107_WRITE-32-bithash--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327442107_WRITE-32-bithash--rgov-800width.jpg\" title=\"Storing Hashed-SSC-Encoded Data\"><img src=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327442107_WRITE-32-bithash--rgov-66x44.jpg\" alt=\"Storing Hashed-SSC-Encoded Data\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">A 64-byte cache line is divided into four 16-byte chunks, each is appended with one byte of 4-bytes hash and each 17-bytes chunk is encoded using RS (19, 17, 8) Reed Solomon encoding. A total of 76 bytes stored for every 64-bytes data entity is justified for much improved error detection capability.</div>\n<div class=\"imageCredit\">Ravikiran Yelaswarapu</div>\n<div class=\"imagePermisssions\">Royalty-free (unrestricted use)</div>\n<div class=\"imageSubmitted\">Arun&nbsp;K&nbsp;Somani</div>\n<div class=\"imageTitle\">Storing Hashed-SSC-Encoded Data</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327199683_ECCMapping-For-Breakng_Row_Hammer--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327199683_ECCMapping-For-Breakng_Row_Hammer--rgov-800width.jpg\" title=\"ECC Mapping For Breaking Correlation\"><img src=\"/por/images/Reports/POR/2021/1618104/1618104_10437021_1632327199683_ECCMapping-For-Breakng_Row_Hammer--rgov-66x44.jpg\" alt=\"ECC Mapping For Breaking Correlation\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">A design of an XOR-based address mapping to break DRAM disturbance correlation within ECC words for Chipkill-Correct memory. Modified register chip of memory module and the logic function for address pins A'[16:11] shown in upper right and connection from register file to DRAM chips shown at bottom.</div>\n<div class=\"imageCredit\">Zhao Zhang</div>\n<div class=\"imagePermisssions\">Royalty-free (unrestricted use)</div>\n<div class=\"imageSubmitted\">Arun&nbsp;K&nbsp;Somani</div>\n<div class=\"imageTitle\">ECC Mapping For Breaking Correlation</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\nThe Problem\n\nThe memory system plays an important role in a computing system. Since it affects the performance of the whole computation process, data stored in memory should be error free. Also, memory latency is an important consideration. Thus, all efforts are made in the design of computer systems to streamline reliable data delivery to the processor system. Memory systems are error-prone, and any error may impact the integrity of the whole computation. Making systems reliable is an important area of research.\n\nThe project addressed the problem of growing severity of soft errors, in particular the possibility of multi-bit errors caused due to a variety of reasons like correlated errors including common row or column or row-hammering attack to trigger such errors. \n \n Solution and Key Technical Results\n\nWe developed solutions to detect and overcome the effects of multi-bit errors in memory system. The key characteristics of our solutions have been high energy efficiency and low performance impact to keep them deployable in high performance memory systems.\n\nWe evaluated the strength of MemGuard scheme developed by us and extend the MemGuard technique for system of multiple writers and integrate it with existing error protection schemes. This scheme is further developed with efficient checkpointing schemes that are customized to work with MemGuard to recover from when errors are detected.\n \n \nWe developed integrity-checking scheme to enhance the error detection/correction within the memory systems and processor-memory communication to tolerate multiple bits errors within single chip or multiple chips that affects a single read operation by using more complex error detection and correction codes.\n \n \nWe designed a more robust error detection schemes by combining Single Symbol Correction - Multi-Symbol Detection (SSC-MSD) Error Correcting Codes (ECC) and hash functions. We also optimized the design to reduce hardware complexity and improve energy efficiency. We considered different ways to combine hash and SSC-MSD Reed Solomon (RS) ECCs.\n \n \nWe evaluated and analyzed the effectiveness of various Reed Solomon encoders and decoders and different non-cryptographic hash functions in our designs for effective use for multi-symbol errors detection and correction in high performance computing memories. We improved the decoder design to ensure the impact on read latency is negligible. We also included address protection within our schemes.\n \n \nFinally, to proactively remove multiple bit errors in ECC-protected memory entities efficiently, we developed a two-stage scrubbing. The goal was to address the errors that occur due to a single disturbance affecting a complete row and column of a memory array. Our two-stage memory scrubbing scheme reduces the overall probability of multiple bit errors in a single coded entity. The scheme also allows for the scrubbing rate to be reduced without affecting the memory reliability.\n\n\nWe addressed the problem of      disturbance correlation in chipkill correct memories, which makes the      memories vulnerable to row-hammering attacks and allows a single      successful attack to cause double- and multi-errors in ECC words. We      developed a novel solution that uses a simple, XOR-based row remapping to      break the disturbance correlation for chipkill correct memories with      register chips, drastically improving the security and reliability of the computer      using these memories.\n\n \nWe developed a new design called      Discreet-PARA. It is a hybrid design that combines counters and cache      storage with PARA, a probabilistic row-hammer defense mechanism with relatively      high run-time overhead, to reduce its performance overhead without      lowering its defense strength. Because of its hybrid nature, discreet-PARA      requires much less storage than other counter-based row-hammer      defense mechanisms. Thus, it delivers improved performance-      and energy-efficiency.\n \n \n\n\nBroader Impact and Future Potential\n\nThe project mentored and trained seven students who have joined or are joining the workforces. This includes two undergraduate students and five graduate students.\n\nThe research also resulted in multiple theses/dissertations, conference and journals publications and technical report which will be eventually published in relevant high-quality conferences and open access journals.\n\nIn the future, we expect that the project will directly impact the design of memory systems when the system is operating in electrically noisy environments and at higher frequencies. The methods we developed provide reliability without introducing high overhead or impacting the critical path. \n\nReliable computing impacts all fields, scientific and business computing where failure leads to incorrect results and conclusions, applications where incorrect computing may lead to disastrous accidents, and society in general who depends on the reliable computing.\n\nThe outcome of this project is inside the internals of computing systems and only supports development of reliable computing systems. Thus, measuring the impact of this project on other fields is not as simple. \n \n\n\nWorkforce Development and Education\n\nThe project supported seven students and supported them through their degree program and/or prepared them for further studies.\n\nThe research results were used in a class he teaches on fault tolerant computing to cover the topic of memory system reliability and use of coding schemes.\n\n \n\n\t\t\t\t\tLast Modified: 09/28/2021\n\n\t\t\t\t\tSubmitted by: Arun K Somani"
 }
}