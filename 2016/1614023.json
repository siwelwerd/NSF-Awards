{
 "awd_id": "1614023",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Small: Rare Events - New Probabilistic and Algorithmic Techniques",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2020-06-30",
 "tot_intn_awd_amt": 450000.0,
 "awd_amount": 450000.0,
 "awd_min_amd_letter_date": "2016-05-18",
 "awd_max_amd_letter_date": "2016-05-18",
 "awd_abstract_narration": "Randomness is a powerful tool in mathematics and computer science. In mathematics, it underlies the \"probabilistic method,\" a method to prove that certain mathematical objects with desired properties exist, by simply picking an object at random, and arguing that with a positive probability, the object has the required properties. In computer science, randomness is a powerful tool in algorithm design. Randomized algorithms are often simpler or perform better than their deterministic counterparts, and have found applications in many fields such as graph algorithms, linear programming, routing algorithms, coding theory, communication protocols, approximation algorithms, cryptography, and many more.\r\n\r\nOne of the main reasons that randomness is ubiquitous in algorithm design, is that typically the probabilistic method shows that the desired events, which control the success of the algorithm, not only occur with a positive probability (which would be sufficient to prove existence), but that they in fact occur with overwhelming probability. As such, it immediately lends itself to the design of randomized algorithms.\r\n\r\nThe focus of this project is on regimes where this is not the case. There are several probabilistic techniques which can prove the existence of \"rare events.\" That is, they show that the desired events occur with a positive (yet tiny) probability. Although we do not have many such techniques, they have proven to be extremely valuable, with applications in many domains: combinatorial optimization, learning theory, approximation algorithms, distributed algorithms, computational geometry, numerical analysis, and more. The main reason is that such techniques, and more importantly, their algorithmic realizations, provide algorithm designers with new sets of tools that they can apply that go beyond \"vanilla\" probabilistic techniques.\r\n\r\nThis project will focus both on the development of new mathematical and algorithmic tools and techniques, as well as on their assimilation by students and researchers. This involves mentoring students, creating and teaching relevant classes, writing expository surveys, and organizing workshops.\r\n\r\nOn the technical side, the project focuses on two main domains. The first is discrepancy theory. Discrepancy theory studies irregularities within distributions, and has intimate relations with rounding techniques for integer programs, and more generally with combinatorial optimization. There are several important open problems in discrepancy theory (most notably the Komlos conjecture), which this project sets a concrete plan to resolve.\r\n\r\nThe second domain is pseudo-randomness. Pseudo-randomness is the study of deterministic objects which attain certain properties satisfied by random objects. As such, this is a wide area of study, with many applications both in mathematics and computer science. In this project, we focus on pseudorandom objects which, for some bounded family of tests, behave exactly like random objects. While in some settings such objects are deeply understood and widely applied (for example, k-wise independence, which has applications in coding theory, data structures, de-randomization, and more), in many other settings they are much less understood. This project explores new approaches to better understand such objects and to develop new algorithmic applications of them.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Shachar",
   "pi_last_name": "Lovett",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Shachar Lovett",
   "pi_email_addr": "slovett@ucsd.edu",
   "nsf_id": "000633060",
   "pi_start_date": "2016-05-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-San Diego",
  "inst_street_address": "9500 GILMAN DR",
  "inst_street_address_2": "",
  "inst_city_name": "LA JOLLA",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8585344896",
  "inst_zip_code": "920930021",
  "inst_country_name": "United States",
  "cong_dist_code": "50",
  "st_cong_dist_code": "CA50",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, SAN DIEGO",
  "org_prnt_uei_num": "",
  "org_uei_num": "UYTTZT6G9DT1"
 },
 "perf_inst": {
  "perf_inst_name": "University of California, San Diego",
  "perf_str_addr": "9500 Gilman Drive",
  "perf_city_name": "La Jolla",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "920930404",
  "perf_ctry_code": "US",
  "perf_cong_dist": "50",
  "perf_st_cong_dist": "CA50",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 450000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Randomness is a powerful tool in mathematics and computer science. In mathematics, it underlies the \"probabilistic method\", a method to prove that certain mathematical objects with desired properties exist, by simply picking an object at random, and arguing that with a positive probability, the object has the required properties. In computer science, randomness is a powerful tool in algorithm design. Randomized algorithms are often simpler or better than their deterministic counterparts, and have found applications in many fields, such as graph algorithms, linear programming, routing algorithms, coding theory, communication protocols, approximation algorithms, cryptography, and many more.<br /><br />One of the main reasons that randomness is ubiquitous in algorithm design, is that typically the probabilistic method shows that the desired events, which control the success of the algorithm, not only occur with a positive probability (which would be sufficient to prove existence), but that they in fact occur with overwhelming probability. As such, it immediately lends itself to the design of randomized algorithms.<br /><br />The focus of this project is on regimes where this is not the case. There are several probabilistic techniques which can prove the existence of &ldquo;rare events&rdquo;. That is, they show that the desired events occur with a positive (yet tiny) probability. Although we do not have many such techniques, they have proven to be extremely valuable, with applications in many domains: combinatorial optimization, learning theory, approximation algorithms, distributed algorithms, computational geometry, numerical analysis, and more. The main reason is that such techniques, and more importantly, their algorithmic realizations, provide algorithm designers with new sets of tools that they can apply that go beyond &ldquo;vanilla&rdquo; probabilistic techniques.<br /><br />This award has led to the discovery of several new algorithms for rare events, as well as new mathematical techniques to find and analyze such rare events. The first is an algorithm for a powerful technique in discrepancy theory, called \"Banaszczyk theorem\". This theorem has applications in various fields, including combinatorial optimization and machine learning, however until our work, the only proof of it was existential. That is, we could prove that there are good solutions, but we did not know how to find them efficiently. In a sequence in works we completely resolved the problem - we developed a new algorithmic technique that finds such a solution efficiently. This has led to several follow up works using this algorithm in surprisng ways; for example, to better control errors in group testing.<br /><br />Another couple of applications were to problems arising in coding theory. The question there is whether there exist very efficient codes in various settings; and if they exist, how can we construct them efficiently. In particular, my focus was on error correcting codes aimed for distributed storage, where the landscape is much lesss understood compared to classical coding theory. In a couple of works we resolved two outstanding problems in the field, using techniques related to ones used to study rare events. We showed that in some scenarious, efficient codes of a certain type cannot exist, as the alphabet size they would need would be exponential; but in another well studied scenario, we proved existence of every efficient codes (and along the way proved the GM-MDS conjecture that speculated their existence).<br /><br />Finally, in a sequence of works, we were able to greatly improve the so-called \"sunflower conjecure\", a famous open problem in combinatorics, that has resisted attacks for close to 60 years. Using these techniques, as well as novel connections to theoretical computer science, we were able to greatly improve our understanding of the problem.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/02/2020<br>\n\t\t\t\t\tModified by: Shachar&nbsp;Lovett</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nRandomness is a powerful tool in mathematics and computer science. In mathematics, it underlies the \"probabilistic method\", a method to prove that certain mathematical objects with desired properties exist, by simply picking an object at random, and arguing that with a positive probability, the object has the required properties. In computer science, randomness is a powerful tool in algorithm design. Randomized algorithms are often simpler or better than their deterministic counterparts, and have found applications in many fields, such as graph algorithms, linear programming, routing algorithms, coding theory, communication protocols, approximation algorithms, cryptography, and many more.\n\nOne of the main reasons that randomness is ubiquitous in algorithm design, is that typically the probabilistic method shows that the desired events, which control the success of the algorithm, not only occur with a positive probability (which would be sufficient to prove existence), but that they in fact occur with overwhelming probability. As such, it immediately lends itself to the design of randomized algorithms.\n\nThe focus of this project is on regimes where this is not the case. There are several probabilistic techniques which can prove the existence of \"rare events\". That is, they show that the desired events occur with a positive (yet tiny) probability. Although we do not have many such techniques, they have proven to be extremely valuable, with applications in many domains: combinatorial optimization, learning theory, approximation algorithms, distributed algorithms, computational geometry, numerical analysis, and more. The main reason is that such techniques, and more importantly, their algorithmic realizations, provide algorithm designers with new sets of tools that they can apply that go beyond \"vanilla\" probabilistic techniques.\n\nThis award has led to the discovery of several new algorithms for rare events, as well as new mathematical techniques to find and analyze such rare events. The first is an algorithm for a powerful technique in discrepancy theory, called \"Banaszczyk theorem\". This theorem has applications in various fields, including combinatorial optimization and machine learning, however until our work, the only proof of it was existential. That is, we could prove that there are good solutions, but we did not know how to find them efficiently. In a sequence in works we completely resolved the problem - we developed a new algorithmic technique that finds such a solution efficiently. This has led to several follow up works using this algorithm in surprisng ways; for example, to better control errors in group testing.\n\nAnother couple of applications were to problems arising in coding theory. The question there is whether there exist very efficient codes in various settings; and if they exist, how can we construct them efficiently. In particular, my focus was on error correcting codes aimed for distributed storage, where the landscape is much lesss understood compared to classical coding theory. In a couple of works we resolved two outstanding problems in the field, using techniques related to ones used to study rare events. We showed that in some scenarious, efficient codes of a certain type cannot exist, as the alphabet size they would need would be exponential; but in another well studied scenario, we proved existence of every efficient codes (and along the way proved the GM-MDS conjecture that speculated their existence).\n\nFinally, in a sequence of works, we were able to greatly improve the so-called \"sunflower conjecure\", a famous open problem in combinatorics, that has resisted attacks for close to 60 years. Using these techniques, as well as novel connections to theoretical computer science, we were able to greatly improve our understanding of the problem.\n\n\t\t\t\t\tLast Modified: 07/02/2020\n\n\t\t\t\t\tSubmitted by: Shachar Lovett"
 }
}