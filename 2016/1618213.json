{
 "awd_id": "1618213",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TWC: Small: Thwarting Kernel-Level Malware with Secure Virtual Architecture",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 475074.0,
 "awd_amount": 475074.0,
 "awd_min_amd_letter_date": "2016-06-10",
 "awd_max_amd_letter_date": "2016-06-10",
 "awd_abstract_narration": "Modern computer operating systems are designed to adapt to new needs by enabling extensions that can add new features or fix flaws.  However, attackers can take advantage of this flexibility by hijacking extension mechanisms to insert malicious code into software; this malicious code steals secrets, corrupts data, and hides malicious activities.  At present, these attacks are nearly impossible to detect and prevent.  Without methods to prevent or detect such attacks, computer operating systems will be untrustworthy.  This project is addressing the challenge of safe extensibility of the operating system kernel.\r\n\r\nThe researcher are investigating the use of both static and dynamic analysis to automatically generate security policies.  These policies dictate which data structure fields can be read and modified by each extension in order to that limit the damage that malicious kernel extensions can cause. The project is also exploring methods of statically validating that kernel extensions follow these policies.  Since static analysis may, conservatively, mark benign extensions as potentially malicious, the researchers are enhancing existing operating system kernels to prevent kernel extensions from hiding malicious computations.  This is accomplished by inserting code into extensions to enforce the aforementioned security policies at run-time.  To minimize run-time overheads, the researchers are also investigating the use of sophisticated compiler optimizations.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Criswell",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "John Criswell",
   "pi_email_addr": "criswell@cs.rochester.edu",
   "nsf_id": "000677886",
   "pi_start_date": "2016-06-10",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Rochester",
  "inst_street_address": "910 GENESEE ST",
  "inst_street_address_2": "STE 200",
  "inst_city_name": "ROCHESTER",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "5852754031",
  "inst_zip_code": "146113847",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "NY25",
  "org_lgl_bus_name": "UNIVERSITY OF ROCHESTER",
  "org_prnt_uei_num": "",
  "org_uei_num": "F27KDXZMF9Y8"
 },
 "perf_inst": {
  "perf_inst_name": "University of Rochester",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "146270140",
  "perf_ctry_code": "US",
  "perf_cong_dist": "25",
  "perf_st_cong_dist": "NY25",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 475074.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Our modern world increasingly relies upon technology, making daily activities and important business transactions vulnerable to cybersecurity attacks.&nbsp; Sadly, much of the critical software upon which we rely today is written using tools that do not catch errors well.&nbsp; Consequently, this critical software is vulnerable to attack when programmers make mistakes.&nbsp; Our work under this award has developed techniques for efficiently protecting critical software from attack on both the x86 platform (used in desktop and server machines) and the ARM platform (used in IoT devices).</p>\n<p>&nbsp;</p>\n<p>We have developed techniques that leverage new hardware on Intel&rsquo;s x86 processor to provide efficient protection.&nbsp; We developed a system named Hodor which efficiently isolates code and data within a single running program; furthermore, Hodor allows a single unit of code and data to be safely shared among multiple distrusting applications.&nbsp; This enables us to create efficient storage and networking routines that can be shared safely by all programs running on a system; this sharing is more efficient than the schemes used in existing systems today.&nbsp; No longer must large-scale systems that perform massive amounts of input and output choose between security or efficiency; they can now have both with Hodor.</p>\n<p>&nbsp;</p>\n<p>We also developed a system named IskiOS which protects an operating system kernel from attack.&nbsp; To make IskiOS efficient, we developed some clever techniques to make Intel&rsquo;s memory protection key mechanism work on operating system kernel code, and we developed further clever techniques to make them work as efficiently as possible.&nbsp; IskiOS protects the foundation of modern software systems from advanced code reuse attacks.&nbsp; This is critical because exploitation of this foundation causes nearly all other security defenses on a computer to fail, leaving a system as wide open to attack as a house with all its doors and windows open.</p>\n<p>&nbsp;</p>\n<p>Finally, we developed a system named Silhouette that hardens the software in IoT devices from advanced code reuse attacks.&nbsp; IoT devices have different hardware that provides both challenges and opportunities for enforcing security.&nbsp; We leveraged those opportunities to create the fastest control flow protection for ARM micro-controllers of which we know.</p>\n<p>&nbsp;</p>\n<p>We have released Hodor, IskiOS, and Silhouette as open-source software so that anyone can use them for free in both research projects and within commercial software.&nbsp; Our hope is that software developers will use our freely available tools to make more secure software products, allowing the public to place greater trust in desktop, server, and IoT computing devices.&nbsp; We also hope that researchers will use our techniques and software to create even better security defenses for new threats as they arise.&nbsp; Finally, we have trained undergraduate and graduate students in performing scientific research and given them highly technical software development skills that most programmers lack.&nbsp; This will allow them to build more sophisticated and secure computing systems and to teach others what they have learned while students at the University of Rochester.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/03/2022<br>\n\t\t\t\t\tModified by: John&nbsp;Criswell</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nOur modern world increasingly relies upon technology, making daily activities and important business transactions vulnerable to cybersecurity attacks.  Sadly, much of the critical software upon which we rely today is written using tools that do not catch errors well.  Consequently, this critical software is vulnerable to attack when programmers make mistakes.  Our work under this award has developed techniques for efficiently protecting critical software from attack on both the x86 platform (used in desktop and server machines) and the ARM platform (used in IoT devices).\n\n \n\nWe have developed techniques that leverage new hardware on Intel\u2019s x86 processor to provide efficient protection.  We developed a system named Hodor which efficiently isolates code and data within a single running program; furthermore, Hodor allows a single unit of code and data to be safely shared among multiple distrusting applications.  This enables us to create efficient storage and networking routines that can be shared safely by all programs running on a system; this sharing is more efficient than the schemes used in existing systems today.  No longer must large-scale systems that perform massive amounts of input and output choose between security or efficiency; they can now have both with Hodor.\n\n \n\nWe also developed a system named IskiOS which protects an operating system kernel from attack.  To make IskiOS efficient, we developed some clever techniques to make Intel\u2019s memory protection key mechanism work on operating system kernel code, and we developed further clever techniques to make them work as efficiently as possible.  IskiOS protects the foundation of modern software systems from advanced code reuse attacks.  This is critical because exploitation of this foundation causes nearly all other security defenses on a computer to fail, leaving a system as wide open to attack as a house with all its doors and windows open.\n\n \n\nFinally, we developed a system named Silhouette that hardens the software in IoT devices from advanced code reuse attacks.  IoT devices have different hardware that provides both challenges and opportunities for enforcing security.  We leveraged those opportunities to create the fastest control flow protection for ARM micro-controllers of which we know.\n\n \n\nWe have released Hodor, IskiOS, and Silhouette as open-source software so that anyone can use them for free in both research projects and within commercial software.  Our hope is that software developers will use our freely available tools to make more secure software products, allowing the public to place greater trust in desktop, server, and IoT computing devices.  We also hope that researchers will use our techniques and software to create even better security defenses for new threats as they arise.  Finally, we have trained undergraduate and graduate students in performing scientific research and given them highly technical software development skills that most programmers lack.  This will allow them to build more sophisticated and secure computing systems and to teach others what they have learned while students at the University of Rochester.\n\n \n\n\t\t\t\t\tLast Modified: 03/03/2022\n\n\t\t\t\t\tSubmitted by: John Criswell"
 }
}