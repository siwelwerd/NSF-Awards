{
 "awd_id": "1564274",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CSR: Medium: Augmenting Logs with Static Analysis and Symbolic Execution",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2016-08-01",
 "awd_exp_date": "2021-07-31",
 "tot_intn_awd_amt": 900000.0,
 "awd_amount": 932000.0,
 "awd_min_amd_letter_date": "2016-04-25",
 "awd_max_amd_letter_date": "2019-06-14",
 "awd_abstract_narration": "Internet services such as Facebook, Amazon, Gmail, iTunes, or Office 360 are a backbone of the modern economy, and include millions of consumer applications and business services provided by large, medium-sized and small businesses. All these services are essentially organized as complex distributed software systems.  When such a system encounters a failure (a service outage or an unexpected performance problem), the potential costs of the failure can quickly reach millions of dollars in lost revenue or lost productivity.  Diagnosing the root causes of the problem quickly and restoring the service as soon as possible are both critical.\r\n\r\nThe basic approach to this problem is to record (or \"log\") information frequently as system components execute and interact, and then to analyze these logs after a failure in attempting to diagnose the root causes.  While these analyses use increasingly sophisticated statistical and machine-learning based techniques, they are limited by the information gathered in the logs: the state-of-the-art approaches today record limited information pertaining to major events so that they do not slow down the services significantly during normal operation.  In particular, these systems do not record detailed internal information within components or detailed network traffic between components that can be enormously useful in diagnosing failures more quickly.\r\n\r\nThis project develops new techniques that make it possible to reconstruct this missing information by leveraging recent advances in program analysis and automated testing.  Moreover, the project develops a new strategy that breaks down the reconstruction task into small steps that will allow the analysis to scale to very large distributed services.  The project also develops new, more sophisticated analysis techniques for individual components that go beyond the current state-of-the-art, by tailoring them to the specific problems faced in this work.  The project engages industrial partners to evaluate the techniques on their systems, and makes the resulting software solutions available in open source form to the research community as well as the industrial partners. Together, these techniques have the potential to result in large cost-savings for a wide range of Internet services.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Vikram",
   "pi_last_name": "Adve",
   "pi_mid_init": "S",
   "pi_sufx_name": "",
   "pi_full_name": "Vikram S Adve",
   "pi_email_addr": "vadve@cs.uiuc.edu",
   "nsf_id": "000334755",
   "pi_start_date": "2016-04-25",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Tao",
   "pi_last_name": "Xie",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Tao Xie",
   "pi_email_addr": "taoxie@illinois.edu",
   "nsf_id": "000430850",
   "pi_start_date": "2016-04-25",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Swarup",
   "pi_last_name": "Sahoo",
   "pi_mid_init": "K",
   "pi_sufx_name": "",
   "pi_full_name": "Swarup K Sahoo",
   "pi_email_addr": "swarup.sahoo@gmail.com",
   "nsf_id": "000690614",
   "pi_start_date": "2016-04-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Illinois at Urbana-Champaign",
  "inst_street_address": "506 S WRIGHT ST",
  "inst_street_address_2": "",
  "inst_city_name": "URBANA",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "2173332187",
  "inst_zip_code": "618013620",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "IL13",
  "org_lgl_bus_name": "UNIVERSITY OF ILLINOIS",
  "org_prnt_uei_num": "V2PHZ2CSCH63",
  "org_uei_num": "Y8CWNJRCNN91"
 },
 "perf_inst": {
  "perf_inst_name": "University of Illinois at Urbana-Champaign",
  "perf_str_addr": "1901 South First Street",
  "perf_city_name": "Urbana",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "618207473",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "IL13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 297100.0
  },
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 555752.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 47148.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 32000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>As Internet services grow more complex, understanding their behavior and responding to performance or failure incidents becomes increasingly challenging. The broad goal of this project is to dramatically reduce the time to diagnose a failure incident, while incurring far lower costs in terms of human resources, and yet providing far more detailed, actionable insights to maintenance teams and developers. One outcome of the work is a debugging approach for Internet services based on microservices which is scalable and efficient.&nbsp; A second outcome is a detailed study of logging behavior in 20 open-source and industrial projects, which revealed key findings about logging practices and quality.&nbsp; A third outcome is a novel program optimization system called the Bitcode Database, which provides a unified interface for storing, analyzing, optimizing, and maintaining all software on a system, replacing ordinary binary program and library files. &nbsp;The next two outcomes can both optionally leverage this Bitcode Database to become even more effective. Fourth is a new technique called Guided Linking for optimizing modern programs which enables program optimization to be applied to cases that were not previously supported in any compiler system but are used widely for Internet services, specifically, dynamically linked&nbsp;modules and plugins. A fifth outcome is a new approach to reducing code duplication within modern software, called Semantic Outlining, which reduces software size and improves performance.&nbsp; An example of the importance of code size is that modern phone apps for Apple mobile phones face serious performance degradation above a certain hard size limit, and major apps like Uber and Facebook must go to great lengths to stay below this limit. Semantic Outlining combines with and improves upon existing code size reduction technique to achieve greater overall reduction in code size. Moreover, combining Semantic Outlining with Guided Linking enables these techniques to be applied jointly to applicaiton code and dynamically loaded libraries.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/26/2021<br>\n\t\t\t\t\tModified by: Vikram&nbsp;S&nbsp;Adve</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nAs Internet services grow more complex, understanding their behavior and responding to performance or failure incidents becomes increasingly challenging. The broad goal of this project is to dramatically reduce the time to diagnose a failure incident, while incurring far lower costs in terms of human resources, and yet providing far more detailed, actionable insights to maintenance teams and developers. One outcome of the work is a debugging approach for Internet services based on microservices which is scalable and efficient.  A second outcome is a detailed study of logging behavior in 20 open-source and industrial projects, which revealed key findings about logging practices and quality.  A third outcome is a novel program optimization system called the Bitcode Database, which provides a unified interface for storing, analyzing, optimizing, and maintaining all software on a system, replacing ordinary binary program and library files.  The next two outcomes can both optionally leverage this Bitcode Database to become even more effective. Fourth is a new technique called Guided Linking for optimizing modern programs which enables program optimization to be applied to cases that were not previously supported in any compiler system but are used widely for Internet services, specifically, dynamically linked modules and plugins. A fifth outcome is a new approach to reducing code duplication within modern software, called Semantic Outlining, which reduces software size and improves performance.  An example of the importance of code size is that modern phone apps for Apple mobile phones face serious performance degradation above a certain hard size limit, and major apps like Uber and Facebook must go to great lengths to stay below this limit. Semantic Outlining combines with and improves upon existing code size reduction technique to achieve greater overall reduction in code size. Moreover, combining Semantic Outlining with Guided Linking enables these techniques to be applied jointly to applicaiton code and dynamically loaded libraries.\n\n\t\t\t\t\tLast Modified: 12/26/2021\n\n\t\t\t\t\tSubmitted by: Vikram S Adve"
 }
}