{
 "awd_id": "1618497",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Collaborative Research: Instruction Address Translation Revisited",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Matt Mutka",
 "awd_eff_date": "2016-10-01",
 "awd_exp_date": "2019-09-30",
 "tot_intn_awd_amt": 250000.0,
 "awd_amount": 250000.0,
 "awd_min_amd_letter_date": "2016-08-11",
 "awd_max_amd_letter_date": "2016-08-11",
 "awd_abstract_narration": "Applications continue to grow both in the size of their code and in the amount\r\nof data they access.  Whether on mobile, desktop, or server platforms,\r\napplications are written in a modular fashion, relying heavily on common\r\nfunctionality provided by a large number of libraries.  Modern operating\r\nsystems leverage this commonality by sharing libraries across applications to\r\navoid duplicate copies of instructions in memory.  However, operating systems\r\nstill maintain independent memory management (address translation) data\r\nfor each process, consuming memory resources proportional to the number of\r\nsimultaneously executing processes.  The goal of this project is to enhance\r\nthe efficiency of memory system access and management for shared code\r\nlibraries.  The success of these efforts will contribute to the long-term\r\nsustainability of the world's fast evolving digital economy and society,\r\nreducing computational waste and improving responsiveness.  The education\r\ncomponent will include improving classroom instruction by contributing new\r\ncourse modules as well as training graduate students in the importance of\r\nefficient sharing.\r\n\r\nThis project involves designing novel hardware and software to promote\r\nefficient access to shared code in a multi-tasking environment, including: 1)\r\nnew operating system memory management mechanisms and policies to eliminate\r\nduplication and minimize cache and translation lookaside buffer (TLB)\r\nfootprint, examining the tradeoffs between the use of variable segments and\r\nhierarchical page tables; 2) reexamining the need for caching translations\r\nwhen utilizing emerging low-latency persistent memory; and 3) using available\r\nprotection support for safe translation sharing in modern TLBs in addition to\r\ndesigning new hardware support to improve efficiency.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Sandhya",
   "pi_last_name": "Dwarkadas",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Sandhya Dwarkadas",
   "pi_email_addr": "sandhya@virginia.edu",
   "nsf_id": "000368396",
   "pi_start_date": "2016-08-11",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Rochester",
  "inst_street_address": "910 GENESEE ST",
  "inst_street_address_2": "STE 200",
  "inst_city_name": "ROCHESTER",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "5852754031",
  "inst_zip_code": "146113847",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "NY25",
  "org_lgl_bus_name": "UNIVERSITY OF ROCHESTER",
  "org_prnt_uei_num": "",
  "org_uei_num": "F27KDXZMF9Y8"
 },
 "perf_inst": {
  "perf_inst_name": "University of Rochester",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "146270140",
  "perf_ctry_code": "US",
  "perf_cong_dist": "25",
  "perf_st_cong_dist": "NY25",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 250000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><br />As applications continue to grow both in the size of code and in the amount<br />of data accessed, virtual memory support, which provides applications with<br />an abstract view of physical memory and enables portability, has become<br />a bottleneck to efficiency and scalability.<br />Research supported by this grant has developed <br />combined hardware and software techniques to improve the efficiency of <br />address translation.<br />Specifically, leveraging the characteristics of modern<br />applications, which increasingly have large code bases and<br />rely on shared library code,<br />this research shows that with appropriate hardware and <br />software modifications, address translation memory and hardware requirements can be reduced.<br />The result is improvements in speed and resource efficiency for<br />mobile, desktop, and commercial workloads.&nbsp; <br />The supported research <br />1) developed new operating system memory management policies that use<br />large pages for code, <br />eliminate duplicate translations in the presence of sharing,<br />and minimize the footprint of translations in  the cache and translation lookaside buffer (TLB);<br />2) made the case against a recent trend of dropping  some hardware mechanisms that can be used to support safe sharing of  translations in TLBs among applications;<br />3) developed virtual memory management techniques to defend against page table<br />side channel attacks with low overhead;<br />4) demonstrated the subtle interactions of translation hardware with the<br />processor pipeline, pointing to the need for more careful design of the core processor pipeline.<br />The results from this project contribute to the<br />long-term sustainability of the world's fast evolving digital economy and<br />society, reducing computational waste and improving responsiveness.<br /><br /><br /></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/29/2020<br>\n\t\t\t\t\tModified by: Sandhya&nbsp;Dwarkadas</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nAs applications continue to grow both in the size of code and in the amount\nof data accessed, virtual memory support, which provides applications with\nan abstract view of physical memory and enables portability, has become\na bottleneck to efficiency and scalability.\nResearch supported by this grant has developed \ncombined hardware and software techniques to improve the efficiency of \naddress translation.\nSpecifically, leveraging the characteristics of modern\napplications, which increasingly have large code bases and\nrely on shared library code,\nthis research shows that with appropriate hardware and \nsoftware modifications, address translation memory and hardware requirements can be reduced.\nThe result is improvements in speed and resource efficiency for\nmobile, desktop, and commercial workloads.  \nThe supported research \n1) developed new operating system memory management policies that use\nlarge pages for code, \neliminate duplicate translations in the presence of sharing,\nand minimize the footprint of translations in  the cache and translation lookaside buffer (TLB);\n2) made the case against a recent trend of dropping  some hardware mechanisms that can be used to support safe sharing of  translations in TLBs among applications;\n3) developed virtual memory management techniques to defend against page table\nside channel attacks with low overhead;\n4) demonstrated the subtle interactions of translation hardware with the\nprocessor pipeline, pointing to the need for more careful design of the core processor pipeline.\nThe results from this project contribute to the\nlong-term sustainability of the world's fast evolving digital economy and\nsociety, reducing computational waste and improving responsiveness.\n\n\n\n\n\t\t\t\t\tLast Modified: 03/29/2020\n\n\t\t\t\t\tSubmitted by: Sandhya Dwarkadas"
 }
}