{
 "awd_id": "1623470",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EXP: Data-Driven Support for Novice Programmers",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032925126",
 "po_email": "abaylor@nsf.gov",
 "po_sign_block_name": "Amy Baylor",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 549874.0,
 "awd_amount": 549874.0,
 "awd_min_amd_letter_date": "2016-08-31",
 "awd_max_amd_letter_date": "2016-08-31",
 "awd_abstract_narration": "The researchers in this project will study fully data-driven systems to  provide both scalable and individualized support for learners. Open-ended, media-rich visual programming environments such as Scratch and Snap represent the next-generation genre for engaging and inspiring students to learn programming. However, solving open-ended programming problems is a particularly challenging area for data-driven support due to the extremely large potential solution spaces and the very creative embellishments that make them attractive. This project integrates intelligent student support that is derived from data into the media-rich, open-ended problem solving in the Snap programming environment.\r\n\r\nMore specifically, the researchers will build and evaluate data-driven methods to provide hints, worked examples, and proactive positive feedback while students work on media-rich, open-ended programs that can interest and motivate diverse students. The researchers will conduct 6 studies in a cycle of iterative refinement to integrate data-driven hints, examples, and feedback for open-ended problems into the Snap programming environment. This enables the study of the combined impact of a media-rich environment with individualized support, and the structures that are created for adaptive support will provide insight into how novices learn to program. Snap is representative of novice programming environments, and is almost identical to Scratch, a popular programming language. More importantly, the techniques used are based on generic properties of computer programs and could be applied to many programming environments and problems, and the research questions addressed have general applicability across problem solving domains.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Tiffany",
   "pi_last_name": "Barnes",
   "pi_mid_init": "M",
   "pi_sufx_name": "",
   "pi_full_name": "Tiffany M Barnes",
   "pi_email_addr": "tiffany.barnes@gmail.com",
   "nsf_id": "000253072",
   "pi_start_date": "2016-08-31",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Min",
   "pi_last_name": "Chi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Min Chi",
   "pi_email_addr": "mchi@ncsu.edu",
   "nsf_id": "000561303",
   "pi_start_date": "2016-08-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "North Carolina State University",
  "inst_street_address": "2601 WOLF VILLAGE WAY",
  "inst_street_address_2": "",
  "inst_city_name": "RALEIGH",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9195152444",
  "inst_zip_code": "276950001",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "NC02",
  "org_lgl_bus_name": "NORTH CAROLINA STATE UNIVERSITY",
  "org_prnt_uei_num": "U3NVH931QJJ3",
  "org_uei_num": "U3NVH931QJJ3"
 },
 "perf_inst": {
  "perf_inst_name": "North Carolina State University",
  "perf_str_addr": "",
  "perf_city_name": "Raleigh",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "276958206",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "NC02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "005Y00",
   "pgm_ele_name": "STEM + Computing (STEM+C) Part"
  },
  {
   "pgm_ele_code": "802000",
   "pgm_ele_name": "Cyberlearn & Future Learn Tech"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "8045",
   "pgm_ref_txt": "Cyberlearn & Future Learn Tech"
  },
  {
   "pgm_ref_code": "8244",
   "pgm_ref_txt": "EHR CL Opportunities (NSF 14-302)"
  },
  {
   "pgm_ref_code": "8841",
   "pgm_ref_txt": "Exploration Projects"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0416",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001617DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 549874.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Fully data driven systems represent the next generation genre for learning technologies that can provide scalable but individualized support for learners. Open-ended, media-rich visual programming environments like Scratch and Snap represent the next generation genre for engaging and inspiring students to learn programming, especially students from underrepresented groups. However, solving open ended programming problems is a particularly challenging domain for data driven support due to its extremely large potential solution spaces and the very creative embellishments that make them attractive. This project integrated intelligent supports, derived from data, into the media rich, open ended problem solving in the Snap programming environment. Specifically, we have built and evaluated data driven methods to provide hints, worked examples, and proactive positive feedback while students work on media-rich, open ended programs and investigated their impacts on students.</p>\n<p>Intellectual Merit: The intellectual merit of this project lies in its innovations of new models for data driven hint generation for programming, discovery of data-driven features from student work, adaptive immediate feedback on data-driven features, and new techniques that use machine learning and student data to determine when interventions might be needed for student struggle. Our results have shed light on novice programmer help-seeking behaviors, which differ greatly between use of human and computer tutors. We developed algorithms to use student data to generate examples to demonstrate the addition of a single new feature. We conducted experiments showing the impact of providing students with Parson&rsquo;s problems (programming puzzles) instead of requiring them to work from scratch can save them time while not reducing learning. We developed a data-driven adaptive immediate feedback system that shows students their progress while they program, and demonstrated that it improves student performance and time, and helps them find and avoid programming mistakes. &nbsp;We have also applied machine learning to our novice programming data showing that we can learn when a student might need an intervention within one minute of them starting a specific learning task. We have further refined these machine learning models to allow us to do better student modeling in Snap by leveraging by time and data collected in other programming environments. We also developed data-driven classifiers to identify struggling versus progressing moments during programming and explored expert reasons for giving interventions when a struggling moment was detected using case studies and discussed possible automatic interventions to address each of the cases.</p>\n<p>Broader Impacts: Our data-driven iSnap environment combines the pedagogical effectiveness of intelligent tutoring systems with the broad appeal of novice environments and creative, open-ended programming tasks. These improvements &nbsp;have been added to Snap, a tool used by hundreds of high school and college students in the AP CS Principles course each year. Additionally, the techniques we have developed are explicitly designed to be domain agnostic, meaning they can be applied to a variety of programming problems and environments. Our research has also helped us better understand how students are learning in block-based programming environments.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/04/2022<br>\n\t\t\t\t\tModified by: Tiffany&nbsp;M&nbsp;Barnes</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nFully data driven systems represent the next generation genre for learning technologies that can provide scalable but individualized support for learners. Open-ended, media-rich visual programming environments like Scratch and Snap represent the next generation genre for engaging and inspiring students to learn programming, especially students from underrepresented groups. However, solving open ended programming problems is a particularly challenging domain for data driven support due to its extremely large potential solution spaces and the very creative embellishments that make them attractive. This project integrated intelligent supports, derived from data, into the media rich, open ended problem solving in the Snap programming environment. Specifically, we have built and evaluated data driven methods to provide hints, worked examples, and proactive positive feedback while students work on media-rich, open ended programs and investigated their impacts on students.\n\nIntellectual Merit: The intellectual merit of this project lies in its innovations of new models for data driven hint generation for programming, discovery of data-driven features from student work, adaptive immediate feedback on data-driven features, and new techniques that use machine learning and student data to determine when interventions might be needed for student struggle. Our results have shed light on novice programmer help-seeking behaviors, which differ greatly between use of human and computer tutors. We developed algorithms to use student data to generate examples to demonstrate the addition of a single new feature. We conducted experiments showing the impact of providing students with Parson\u2019s problems (programming puzzles) instead of requiring them to work from scratch can save them time while not reducing learning. We developed a data-driven adaptive immediate feedback system that shows students their progress while they program, and demonstrated that it improves student performance and time, and helps them find and avoid programming mistakes.  We have also applied machine learning to our novice programming data showing that we can learn when a student might need an intervention within one minute of them starting a specific learning task. We have further refined these machine learning models to allow us to do better student modeling in Snap by leveraging by time and data collected in other programming environments. We also developed data-driven classifiers to identify struggling versus progressing moments during programming and explored expert reasons for giving interventions when a struggling moment was detected using case studies and discussed possible automatic interventions to address each of the cases.\n\nBroader Impacts: Our data-driven iSnap environment combines the pedagogical effectiveness of intelligent tutoring systems with the broad appeal of novice environments and creative, open-ended programming tasks. These improvements  have been added to Snap, a tool used by hundreds of high school and college students in the AP CS Principles course each year. Additionally, the techniques we have developed are explicitly designed to be domain agnostic, meaning they can be applied to a variety of programming problems and environments. Our research has also helped us better understand how students are learning in block-based programming environments.\n\n\t\t\t\t\tLast Modified: 02/04/2022\n\n\t\t\t\t\tSubmitted by: Tiffany M Barnes"
 }
}