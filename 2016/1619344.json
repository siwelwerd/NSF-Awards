{
 "awd_id": "1619344",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "RI: Small: Harnessing the Power of Constraint Propagation by Controlling Consistency Levels and Synthesizing Constraints",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032928074",
 "po_email": "jdonlon@nsf.gov",
 "po_sign_block_name": "James Donlon",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2020-06-30",
 "tot_intn_awd_amt": 450000.0,
 "awd_amount": 486000.0,
 "awd_min_amd_letter_date": "2016-06-10",
 "awd_max_amd_letter_date": "2018-04-13",
 "awd_abstract_narration": "Decision and optimization problems raise many challenges in daily life as well as in business, engineering, and science.  Solving them \"well\" and \"quickly\" directly benefits our life-styles and economy, and allows us to effectively manage our resources.   Many scientific disciplines have focused on formalizing and solving such difficult combinatorial problems.   Constraint Processing (CP), a subfield of Artificial Intelligence, has focused on the transparent modeling of the restrictions (i.e., constraints) that govern those problems and create their complexity.  By examining how constraints interact among themselves and how interactions propagate along the constraints, CP has developed generic mechanisms to solve a problem by ruling out forbidden decisions and combinations of decisions, gradually eliciting the acceptable solutions and the optimal choices.  To this end, CP has formalized in terms of consistency properties how constraints interact among themselves and with the possible options.   Thus, the identification of such properties and the design of algorithms for enforcing them are at the heart of CP, and constitute perhaps what best distinguishes this area from other scientific disciplines concerned with the same computational problems.  The goal of this project is to understand the tradeoffs between the effectiveness and the cost of a variety of consistency algorithms, and to control how to interleave them dynamically during problem solving to solve difficult problems and reduce computational cost.\r\n\r\nIn particular, the research will garner the most computational benefits from consistency-based techniques by dynamically (a) selecting the right level of consistency to enforce at any point during search, and (b) synthesizing new constraints over opportunistically chosen variables.  The proposed activities extend on recent practical algorithms for higher-levels consistency, and contribute to the progress of the research in fundamental aspects of CP.  The developed methods will benefit other types of graphical models such as games as well as the next generation of commercial and public-domain constraint solvers. The insight gained from this research will improve the scope and content of the introductory and advanced courses on CP both at the undergraduate and graduate levels.   The various research tasks will allow the mentoring and training of young engineers and scientists to understand the roots of complexity in problem solving and to learn how to overcome it in practice.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Berthe",
   "pi_last_name": "Choueiry",
   "pi_mid_init": "Y",
   "pi_sufx_name": "",
   "pi_full_name": "Berthe Y Choueiry",
   "pi_email_addr": "choueiry@cse.unl.edu",
   "nsf_id": "000090924",
   "pi_start_date": "2016-06-10",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Nebraska-Lincoln",
  "inst_street_address": "2200 VINE ST # 830861",
  "inst_street_address_2": "",
  "inst_city_name": "LINCOLN",
  "inst_state_code": "NE",
  "inst_state_name": "Nebraska",
  "inst_phone_num": "4024723171",
  "inst_zip_code": "685032427",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "NE01",
  "org_lgl_bus_name": "BOARD OF REGENTS OF THE UNIVERSITY OF NEBRASKA",
  "org_prnt_uei_num": "",
  "org_uei_num": "HTQ6K6NJFHA6"
 },
 "perf_inst": {
  "perf_inst_name": "University of Nebraska-Lincoln",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NE",
  "perf_st_name": "Nebraska",
  "perf_zip_code": "685031435",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "NE01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "749500",
   "pgm_ele_name": "Robust Intelligence"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7495",
   "pgm_ref_txt": "ROBUST INTELLIGENCE"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 450000.0
  },
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 18000.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 18000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Constraint Processing (CP) is a subarea of Artificial Intelligence useful for modeling and solving combinatorial decision problems.&nbsp; Examples include whimsical puzzles such as Sudoku, scientific design problems such as hardware and software verification, and industrial applications such as scheduling and resource allocation.&nbsp; The two aspects most distinguish CP from other disciplines that study the same computational problems are:</p>\n<ol>\n<li>The explicit representation of the constraints as arbitrary relations, thus, directly reflecting the user's understanding (in contrast to linear inequalities as in Operations Research).</li>\n<li>The development of inference algorithms, called consistency algorithms, and interleaving them with the search process in order to reduce the size of the search space.</li>\n</ol>\n<p>This project focused on the study of the effectiveness of enforcing consistency during search, that is, finding an appropriate balance between, on the one hand, reducing the size of the search by enforcing consistency (the higher the consistency, the smaller the search space) and, on the other hand, the cost of these consistency algorithms (which increases with the level of consistency enforced).&nbsp; This project yielded the following results:</p>\n<ol>\n<li>New algorithms for enforcing higher-level consistency</li>\n<li>New reactive strategies to enforce the appropriate level of consistency at any point during search according to the rationale &ldquo;<em>when</em>, <em>where</em>, and <em>how much</em>&rdquo;</li>\n<li>Strategies for opportunistically (surgically) adding constraints to the constraint network in order to enhance constraint propagation</li>\n<li>An academic constraint solver, STAMPEDE, that can enforce different consistency algorithms on overlapping subproblems in a flexible and transparent manner</li>\n<li>Visualizations of search performance and summarizations of the temporal evolution of search as a history of regimes in order to explain the impact of the above algorithms on the effectiveness of problem solving</li>\n</ol>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/12/2021<br>\n\t\t\t\t\tModified by: Berthe&nbsp;Y&nbsp;Choueiry</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nConstraint Processing (CP) is a subarea of Artificial Intelligence useful for modeling and solving combinatorial decision problems.  Examples include whimsical puzzles such as Sudoku, scientific design problems such as hardware and software verification, and industrial applications such as scheduling and resource allocation.  The two aspects most distinguish CP from other disciplines that study the same computational problems are:\n\nThe explicit representation of the constraints as arbitrary relations, thus, directly reflecting the user's understanding (in contrast to linear inequalities as in Operations Research).\nThe development of inference algorithms, called consistency algorithms, and interleaving them with the search process in order to reduce the size of the search space.\n\n\nThis project focused on the study of the effectiveness of enforcing consistency during search, that is, finding an appropriate balance between, on the one hand, reducing the size of the search by enforcing consistency (the higher the consistency, the smaller the search space) and, on the other hand, the cost of these consistency algorithms (which increases with the level of consistency enforced).  This project yielded the following results:\n\nNew algorithms for enforcing higher-level consistency\nNew reactive strategies to enforce the appropriate level of consistency at any point during search according to the rationale \"when, where, and how much\"\nStrategies for opportunistically (surgically) adding constraints to the constraint network in order to enhance constraint propagation\nAn academic constraint solver, STAMPEDE, that can enforce different consistency algorithms on overlapping subproblems in a flexible and transparent manner\nVisualizations of search performance and summarizations of the temporal evolution of search as a history of regimes in order to explain the impact of the above algorithms on the effectiveness of problem solving\n\n\n \n\n \n\n\t\t\t\t\tLast Modified: 06/12/2021\n\n\t\t\t\t\tSubmitted by: Berthe Y Choueiry"
 }
}