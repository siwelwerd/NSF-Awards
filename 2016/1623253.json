{
 "awd_id": "1623253",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EDU: Automated Platform for Cyber Security Learning and Experimentation (AutoCUE)",
 "cfda_num": "47.076",
 "org_code": "11010001",
 "po_phone": "7032922677",
 "po_email": "liyang@nsf.gov",
 "po_sign_block_name": "Li Yang",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2019-06-30",
 "tot_intn_awd_amt": 299977.0,
 "awd_amount": 299977.0,
 "awd_min_amd_letter_date": "2016-07-18",
 "awd_max_amd_letter_date": "2016-07-18",
 "awd_abstract_narration": "One of the main obstacles in providing extensive hands-on experience in cybersecurity classes is the substantial amount of manual work involved in creating and grading the exercise. Combined with the frequent need to update the exercises, this obstacle effectively limits that amount of hands-on work that gets incorporated into cybersecurity education. This project seeks to eliminate such barriers, and to greatly improve the efficiency of the educational process by automating the most time-consuming tasks. \r\n\r\nThis project makes two main contributions to cybersecurity education: the development of a specification-driven, dynamic environment for implementing realistic cyber defense and forensic analysis exercises; and the advanced support for class management and automated evaluation. The platform, AutoCUE, provides a high-level specification language, and an execution runtime that enable instructors to easily and efficiently run realistic scenarios that result in customized  environments; based on the same methods, the system also be used to automatically create of realistic experimental data sets. The infrastructure provides an automated class management component, which consists of: a) deployment automation module, which guarantees consistent student lab environment, and central control by the instructor; b) scenario personalization module, which can generate customized exercises for each student (for evaluation purposes); and c) automated grading module, which combines ideas from capture-the-flag competitions and environment sensors to track student progress and automate the grading process. The project also provides ready-to-use seed content for two classes: digital forensics and network penetration testing.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DGE",
 "org_div_long_name": "Division Of Graduate Education",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Vassil",
   "pi_last_name": "Roussev",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Vassil Roussev",
   "pi_email_addr": "vassil@cs.uno.edu",
   "nsf_id": "000063484",
   "pi_start_date": "2016-07-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of New Orleans",
  "inst_street_address": "2000 LAKESHORE DR",
  "inst_street_address_2": "",
  "inst_city_name": "NEW ORLEANS",
  "inst_state_code": "LA",
  "inst_state_name": "Louisiana",
  "inst_phone_num": "5042806836",
  "inst_zip_code": "701483520",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "LA02",
  "org_lgl_bus_name": "UNIVERSITY OF NEW ORLEANS",
  "org_prnt_uei_num": "",
  "org_uei_num": "CL8JHK1LN291"
 },
 "perf_inst": {
  "perf_inst_name": "University of New Orleans",
  "perf_str_addr": "2000 Lakeshore Dr",
  "perf_city_name": "New Orleans",
  "perf_st_code": "LA",
  "perf_st_name": "Louisiana",
  "perf_zip_code": "701480001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "LA02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7254",
   "pgm_ref_txt": "CYBER SECURITY ACT PROPOSALS"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9179",
   "pgm_ref_txt": "GRADUATE INVOLVEMENT"
  },
  {
   "pgm_ref_code": "SMET",
   "pgm_ref_txt": "SCIENCE, MATH, ENG & TECH EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0416",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001617DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 299977.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>In accordance with the main objectives, our work yielded significant outcomes across three key areas:<br /><br />1. Development of Prototype System for Base VM/Container Image Management:<br />Our foremost achievement involved the creation of a prototype system tailored for constructing and managing base VM/container images alongside virtual networks. Leveraging a combination of Docker, Ansible, and Python, this system demonstrated proficiency in delivering fundamental specification-driven automation functionalities. Its primary focus lay in facilitating the seamless construction of container images designed specifically for cybersecurity applications, encompassing realms such as penetration testing and digital forensics.<br /><br />2. Initial Prototype for Simulating System and User Activities:<br />Another pivotal accomplishment was the inception of an initial prototype geared towards simulating both system and user activities, aligning with our overarching objective of automating the generation of realistic scenarios. This prototype was meticulously crafted, leveraging Sikuli for simulating GUI-driven user interactions and incorporating a systematic approach for generating schedules tailored for the cron system utility. These schedules were instrumental in orchestrating a wide array of system events, including installations, system updates, and the simulation of background network traffic, thus contributing to the creation of lifelike scenarios.<br /><br />3. Limited Prototype for Container Image Deployment Automation:<br />Furthermore, our efforts culminated in the development of a limited prototype dedicated to automating the deployment of container images within the framework of automated lab management. This prototype was meticulously crafted using parameterized Ansible scripts, which facilitated automation in the context of lab deployment within our private virtualized environment. Though limited in scope, this prototype laid the groundwork for future advancements in the realm of container image deployment automation, marking a significant step towards enhancing operational efficiency within laboratory environments.<br /><br /></p><br>\n<p>\n Last Modified: 02/19/2024<br>\nModified by: Vassil&nbsp;Roussev</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nIn accordance with the main objectives, our work yielded significant outcomes across three key areas:\n\n1. Development of Prototype System for Base VM/Container Image Management:\nOur foremost achievement involved the creation of a prototype system tailored for constructing and managing base VM/container images alongside virtual networks. Leveraging a combination of Docker, Ansible, and Python, this system demonstrated proficiency in delivering fundamental specification-driven automation functionalities. Its primary focus lay in facilitating the seamless construction of container images designed specifically for cybersecurity applications, encompassing realms such as penetration testing and digital forensics.\n\n2. Initial Prototype for Simulating System and User Activities:\nAnother pivotal accomplishment was the inception of an initial prototype geared towards simulating both system and user activities, aligning with our overarching objective of automating the generation of realistic scenarios. This prototype was meticulously crafted, leveraging Sikuli for simulating GUI-driven user interactions and incorporating a systematic approach for generating schedules tailored for the cron system utility. These schedules were instrumental in orchestrating a wide array of system events, including installations, system updates, and the simulation of background network traffic, thus contributing to the creation of lifelike scenarios.\n\n3. Limited Prototype for Container Image Deployment Automation:\nFurthermore, our efforts culminated in the development of a limited prototype dedicated to automating the deployment of container images within the framework of automated lab management. This prototype was meticulously crafted using parameterized Ansible scripts, which facilitated automation in the context of lab deployment within our private virtualized environment. Though limited in scope, this prototype laid the groundwork for future advancements in the realm of container image deployment automation, marking a significant step towards enhancing operational efficiency within laboratory environments.\n\n\t\t\t\t\tLast Modified: 02/19/2024\n\n\t\t\t\t\tSubmitted by: VassilRoussev\n"
 }
}