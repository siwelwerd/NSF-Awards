{
 "awd_id": "1561216",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: Fine-Grained Software Power Prediction and Its Application on Power Management of Heterogeneous Multicore Systems",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927498",
 "po_email": "achtchel@nsf.gov",
 "po_sign_block_name": "Almadena Chtchelkanova",
 "awd_eff_date": "2016-02-01",
 "awd_exp_date": "2019-07-31",
 "tot_intn_awd_amt": 299928.0,
 "awd_amount": 299928.0,
 "awd_min_amd_letter_date": "2016-01-29",
 "awd_max_amd_letter_date": "2016-01-29",
 "awd_abstract_narration": "Power dissipation and energy consumption are major cost considerations across modern computer systems including data center design, enterprise level server design, battery life management on a smart phone, and circuit layout on a microprocessor. There are numerous approaches that address the hardware aspect of the problem. However, software-behavior-driven power management is not well addressed and understood.\r\n\r\nSPONGE, a fine-grained function level software power prediction mechanism, is proposed to dynamically apply proper power saving mechanisms to improve power efficiency and schedule suitable workloads to heterogeneous cores. The PI is proposing a new metric, Power Efficiency of Function (PEF), to evaluate the power efficiency of software at fine granularity. Based on PEF, a software-behavior-driven power management scheme is introduced to improve system power efficiency at runtime. The power management scheme applies power saving mechanisms including thread mapping and voltage and frequency scaling, driven by program characteristics based on the software power prediction of the target platform. PEF enables a quantitative measurement of the ratio of useful work done to resources utilized. By involving software in the loop of power management, it is possible to provide a fine-grained power management scheme with a seamless connection between software and operating systems, especially for power-aware scheduling on heterogeneous multicore architectures.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Weisong",
   "pi_last_name": "Shi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Weisong Shi",
   "pi_email_addr": "weisong@udel.edu",
   "nsf_id": "000119930",
   "pi_start_date": "2016-01-29",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Wayne State University",
  "inst_street_address": "5700 CASS AVE STE 4900",
  "inst_street_address_2": "",
  "inst_city_name": "DETROIT",
  "inst_state_code": "MI",
  "inst_state_name": "Michigan",
  "inst_phone_num": "3135772424",
  "inst_zip_code": "482023692",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "MI13",
  "org_lgl_bus_name": "WAYNE STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "M6K6NTJ2MNE5"
 },
 "perf_inst": {
  "perf_inst_name": "Wayne State University",
  "perf_str_addr": "5057 Woodward Ave",
  "perf_city_name": "Detroit",
  "perf_st_code": "MI",
  "perf_st_name": "Michigan",
  "perf_zip_code": "482024050",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "MI13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "7942",
   "pgm_ref_txt": "HIGH-PERFORMANCE COMPUTING"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 299928.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The failure of Dennard scaling leads to the dark silicon phenomenon where power dissipation and energy consumption are key factors. The ideal solution is improving power efficiency and making the \"dark\" part useful. Different from performance metric, power dissipation is not easy to measure because hardware instrumentation is usually required. Yet as an indispensable component of a computer system, software becomes a major factor affecting power dissipation. We propose SPONGE, a fine-grained function level software power prediction mechanism to capture the challenges and complexities of software power dissipation and to make them available to operating systems, applications, and third parties. With function level power information exposed to operating systems, the system can dynamically apply proper power saving mechanisms to improve power efficiency and schedule suitable workloads to heterogeneous cores.</p>\n<p>In this project, we aim to improve the energy efficiency of software and computer systems by leveraging fine-grained function level software power prediction mechanism to capture the challenges and complexities of software power dissipation and to make them available to operating systems, applications, and third parties. With function level power information exposed to operating systems, the system can dynamically apply proper power saving mechanisms to improve power efficiency and schedule suitable workloads to heterogeneous cores. At the language level, we have designed and implemented JEPO, a Java Energy Profiler and Optimizer, at the Software level, we have designed and implemented SPAN, a software power analyzer, at the Systems level, we have designed and implemented Pelican, a power-scheduling for large-scale datacenters with heterogeneous workloads.&nbsp; &nbsp;JEPO and SPAN are open-sourced to the community, and others are all published in peer-reviewed conferences and journals, such as EuroSys, IGSC, IEEE Transactions on Cloud Computing.&nbsp; Four Ph.D. students include two female, have graduated during the period of this project.&nbsp; More information can be found at the project web site at&nbsp;<a href=\"http://codegreen.cs.wayne.edu/SPONGE/\">http://codegreen.cs.wayne.edu/SPONGE/</a>.&nbsp;</p>\n<p>This Project Outcomes Report for the General Public is displayed verbatim as submitted by the Principal Investigator (PI) for this award. Any opinions, findings, and conclusions or recommendations expressed in this Report are those of the PI and do not necessarily reflect the views of the National Science Foundation; NSF has not approved or endorsed its content.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/19/2019<br>\n\t\t\t\t\tModified by: Weisong&nbsp;Shi</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe failure of Dennard scaling leads to the dark silicon phenomenon where power dissipation and energy consumption are key factors. The ideal solution is improving power efficiency and making the \"dark\" part useful. Different from performance metric, power dissipation is not easy to measure because hardware instrumentation is usually required. Yet as an indispensable component of a computer system, software becomes a major factor affecting power dissipation. We propose SPONGE, a fine-grained function level software power prediction mechanism to capture the challenges and complexities of software power dissipation and to make them available to operating systems, applications, and third parties. With function level power information exposed to operating systems, the system can dynamically apply proper power saving mechanisms to improve power efficiency and schedule suitable workloads to heterogeneous cores.\n\nIn this project, we aim to improve the energy efficiency of software and computer systems by leveraging fine-grained function level software power prediction mechanism to capture the challenges and complexities of software power dissipation and to make them available to operating systems, applications, and third parties. With function level power information exposed to operating systems, the system can dynamically apply proper power saving mechanisms to improve power efficiency and schedule suitable workloads to heterogeneous cores. At the language level, we have designed and implemented JEPO, a Java Energy Profiler and Optimizer, at the Software level, we have designed and implemented SPAN, a software power analyzer, at the Systems level, we have designed and implemented Pelican, a power-scheduling for large-scale datacenters with heterogeneous workloads.   JEPO and SPAN are open-sourced to the community, and others are all published in peer-reviewed conferences and journals, such as EuroSys, IGSC, IEEE Transactions on Cloud Computing.  Four Ph.D. students include two female, have graduated during the period of this project.  More information can be found at the project web site at http://codegreen.cs.wayne.edu/SPONGE/. \n\nThis Project Outcomes Report for the General Public is displayed verbatim as submitted by the Principal Investigator (PI) for this award. Any opinions, findings, and conclusions or recommendations expressed in this Report are those of the PI and do not necessarily reflect the views of the National Science Foundation; NSF has not approved or endorsed its content.\n\n \n\n\t\t\t\t\tLast Modified: 10/19/2019\n\n\t\t\t\t\tSubmitted by: Weisong Shi"
 }
}