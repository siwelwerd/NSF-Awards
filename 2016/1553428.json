{
 "awd_id": "1553428",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: Fast Graph Algorithms and Continuous Optimization",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922182",
 "po_email": "pbrass@nsf.gov",
 "po_sign_block_name": "Peter Brass",
 "awd_eff_date": "2016-01-01",
 "awd_exp_date": "2022-12-31",
 "tot_intn_awd_amt": 550000.0,
 "awd_amount": 550000.0,
 "awd_min_amd_letter_date": "2015-12-18",
 "awd_max_amd_letter_date": "2021-12-28",
 "awd_abstract_narration": "Graphs are at the heart of computer science and many other fields. They model various complex systems, such as the structure of web links, social networks, road systems, protein interactions, and the brain. Also, many elements of our everyday life, such as web search, driving directions, online advertising and parcel delivery, crucially rely upon graph algorithms. Despite this central role and extensive research on graphs, however, some of the most prominent questions in algorithmic graph theory remain unresolved. Additionally, in the era of big data, the graphs that we have to deal with are often massive - they have hundreds of billions of edges - which renders many classic graph algorithms completely infeasible.\r\n\r\nThe goal of this project is to address these challenges by augmenting our traditional graph-algorithmic techniques with methods borrowed from continuous optimization. In particular, the PI aims to forge a unified toolkit that is powerful enough to make progress on a variety of fundamental graph problems. An integral part of this effort will be to broadly disseminate the acquired insights. Dissemination will encompass undergraduate and graduate curriculum development, production of freely available lecture notes/survey, as well as training students, of all levels, to equip them with the skill set that is essential for tackling modern graph-algorithmic challenges.\r\n\r\nFrom a more technical point of view, the main focus of this project will be to combine the classic combinatorial approaches of algorithmic graph theory with core continuous-optimization primitives, such as gradient descent methods and interior-point methods, to break longstanding running time barriers for a variety of fundamental flow and matching questions. Additionally, the PI expects that this work will shed new light on one of the central challenges of mathematical programming: the convergence behavior of interior-point methods, and will also lead to novel extensions of that optimization framework.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Aleksander",
   "pi_last_name": "Madry",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Aleksander Madry",
   "pi_email_addr": "madry@MIT.EDU",
   "nsf_id": "000699850",
   "pi_start_date": "2015-12-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Massachusetts Institute of Technology",
  "inst_street_address": "77 MASSACHUSETTS AVE",
  "inst_street_address_2": "",
  "inst_city_name": "CAMBRIDGE",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6172531000",
  "inst_zip_code": "021394301",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "E2NYLCDML6V1",
  "org_uei_num": "E2NYLCDML6V1"
 },
 "perf_inst": {
  "perf_inst_name": "Massachusetts Institute of Technology",
  "perf_str_addr": "77 Massachusetts Ave.",
  "perf_city_name": "Cambridge",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021394307",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 211193.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 112245.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 226562.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project has led to development of a number of new algorithmic techniques for approaching classic graph problems, such as shortest path, flow and matching problems. These techniques tend to follow a common theme of borrowing tools and notions from continuous optimization, such as linear system solving, electrical flows, gradient descent primitive, and interior-point methods, to augment the traditional, combinatorial in nature, graph algorithms approaches.<br /><br />(Intellectual merit) The main technical contributions of this project include:<br /><br />(1) <em>Faster algorithm for the shortest path and weighted matching problems. </em>We put forth new algorithms for the general shortest path problem (i.e., a variant of this problem in which some of the arcs might have negative length), and for a variety of fundamental minimum-weight (perfect) matching problems. These results constituted at the time the first progress on the sparse-graph complexity of these problems in over two decades, and they were, in particular, the first improvement upon the classic results of Goldberg and Gabow and Tarjan.<br /><br />(2) <em>Faster and simpler maximum flow algorithm. </em>We developed a new algorithm for maximum flow problem that operates in a pure augmenting path framework and&nbsp; offered a better performance---as well as significantly simpler analysis---than the much more complicated, interior-point method--based (at that time) state-of-the-art algorithms.<br /><br />(3) <em>Faster matrix scaling and balancing problems via continuous optimization methods.</em> We developed a new algorithms for the matrix scaling and balancing--very classic problems in scientific computing. These algorithms significantly improved the previously known running time bounds for these problems and, in particular, achieved nearly-linear time for certain special cases. Additionally, the underlying toolkit of second-order robust function minimization constitutes a new way to generalize the standard Newton's method.<br /><br />(4) <em>New approach to the k-server problem.</em> We presented an O((log k)^2)- competitive randomized algorithm for the k-server problem on hierarchically separated trees (HSTs). This was the first o(k)-competitive randomized algorithm for which the competitive ratio was independent of the size of the underlying HST.<br /><br />(5) <em>Improved massively parallel computation of maximum matchings.</em> We put forth the first algorithm for the massively parallel computation setting that computes a constant factor-approximation to the maximum matching problem in an n-vertex graph in less than O(log n) rounds. Specifically, our algorithm constitutes an almost exponential improvement over the previously-known best bound: it delivers a (2 + delta)-approximation to maximum matching, for any fixed constant delta &gt;0, in O((log logn)^2) rounds.<br /><br />(Broader impacts) In the course of this project, the PI gave a number of plenary talks that provided an introduction to the cutting-edge research in the field of graph algorithms to junior researchers and general public. He also developed a number of new lectures in the MIT?s undergraduate algorithms curriculum as well as a graduate course that helped students get an in-depth knowledge of the field of graph algorithms.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/13/2023<br>\n\t\t\t\t\tModified by: Aleksander&nbsp;Madry</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project has led to development of a number of new algorithmic techniques for approaching classic graph problems, such as shortest path, flow and matching problems. These techniques tend to follow a common theme of borrowing tools and notions from continuous optimization, such as linear system solving, electrical flows, gradient descent primitive, and interior-point methods, to augment the traditional, combinatorial in nature, graph algorithms approaches.\n\n(Intellectual merit) The main technical contributions of this project include:\n\n(1) Faster algorithm for the shortest path and weighted matching problems. We put forth new algorithms for the general shortest path problem (i.e., a variant of this problem in which some of the arcs might have negative length), and for a variety of fundamental minimum-weight (perfect) matching problems. These results constituted at the time the first progress on the sparse-graph complexity of these problems in over two decades, and they were, in particular, the first improvement upon the classic results of Goldberg and Gabow and Tarjan.\n\n(2) Faster and simpler maximum flow algorithm. We developed a new algorithm for maximum flow problem that operates in a pure augmenting path framework and  offered a better performance---as well as significantly simpler analysis---than the much more complicated, interior-point method--based (at that time) state-of-the-art algorithms.\n\n(3) Faster matrix scaling and balancing problems via continuous optimization methods. We developed a new algorithms for the matrix scaling and balancing--very classic problems in scientific computing. These algorithms significantly improved the previously known running time bounds for these problems and, in particular, achieved nearly-linear time for certain special cases. Additionally, the underlying toolkit of second-order robust function minimization constitutes a new way to generalize the standard Newton's method.\n\n(4) New approach to the k-server problem. We presented an O((log k)^2)- competitive randomized algorithm for the k-server problem on hierarchically separated trees (HSTs). This was the first o(k)-competitive randomized algorithm for which the competitive ratio was independent of the size of the underlying HST.\n\n(5) Improved massively parallel computation of maximum matchings. We put forth the first algorithm for the massively parallel computation setting that computes a constant factor-approximation to the maximum matching problem in an n-vertex graph in less than O(log n) rounds. Specifically, our algorithm constitutes an almost exponential improvement over the previously-known best bound: it delivers a (2 + delta)-approximation to maximum matching, for any fixed constant delta &gt;0, in O((log logn)^2) rounds.\n\n(Broader impacts) In the course of this project, the PI gave a number of plenary talks that provided an introduction to the cutting-edge research in the field of graph algorithms to junior researchers and general public. He also developed a number of new lectures in the MIT?s undergraduate algorithms curriculum as well as a graduate course that helped students get an in-depth knowledge of the field of graph algorithms.\n\n\t\t\t\t\tLast Modified: 08/13/2023\n\n\t\t\t\t\tSubmitted by: Aleksander Madry"
 }
}