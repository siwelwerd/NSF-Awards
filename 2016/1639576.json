{
 "awd_id": "1639576",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Investigating the Effects of Computational Thinking Games on Mathematical and Scientific Practices",
 "cfda_num": "47.076",
 "org_code": "11090000",
 "po_phone": "7032927593",
 "po_email": "wuhe@nsf.gov",
 "po_sign_block_name": "Wu He",
 "awd_eff_date": "2016-09-15",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 2500000.0,
 "awd_amount": 2500000.0,
 "awd_min_amd_letter_date": "2016-09-14",
 "awd_max_amd_letter_date": "2016-09-14",
 "awd_abstract_narration": "The STEM + Computing Partnership (STEM+C) program seeks to advance multidisciplinary integration of computing in STEM teaching and learning through applied research and development across one or more domains. This project aims at investigating the connections between computational thinking and mathematical and scientific practices as outlined in the Common Core State Standards (CCSS) and the Next Generation Science Standards (NGSS) through large-scale deployment of an online curriculum for development of computational thinking. The computational skills will be delivered to elementary, middle, and high-school students through three separate age- and grade-appropriate game-based computational thinking curriculum using an adaptive educational platform focused on developing higher-order skills that are likely transferable to mathematics and science learning. Two research questions will guide the research and development activities: (1) Can the game-based computational thinking curriculum lead to improvement in students' mathematics and science practices, as well as their computing skills?; and (2) What are the optimal characteristics of curriculum materials and teacher enactment that would lead to greatest outcomes at different grade levels? To answer these questions, the project will: (1) develop computational thinking problem-based learning experiences with a focus on computational thinking embedded in three age-appropriate instructional games for elementary, middle, and high school students; (2) provide scaffolded teacher support for delivering the learning experience that does not require any computational background for teachers; (3) develop valid measures towards assessing acquisition of shared practices; (4) implement the curricula and evaluate their effects through large-scale statewide in three states with over 3,000 teachers and over 90,000 students; (5) connect the computational challenges with mathematics word problem solving and analyze the practice transfer; and (6) iterate the interventions and validation over multiple years with data-driven optimization towards greater transfer outcomes.\r\n\r\nThe study will adopt the notion of computational thinking as a problem-solving process that is transferable to a wide variety of situations, including practical applications in mathematics and science. Thus, the premise of this effort will be that practices at the core of computational thinking are closely related to the mathematics and science practices identified in the CCSS and NGSS. In order to demonstrate how appropriate skills are developed across grade levels, the project will develop three separate game-based interventions appropriate for elementary, middle, and high school students, including problem-based computational thinking learning experiences that will be embedded in each of these games. To facilitate the successful implementation of the game-based learning technologies and curricula, the project will integrate computational games with the Teacher Co-Pilot, a learning platform that will provide teachers with lesson plans and step-by-step processes for classroom activities, which are directly deployed on student computers. The design of the Teacher Co-Pilot assumes that teachers will learn best by doing the lesson, so the experience will be tailored towards minimum startup time. To address the two research questions, the project will investigate whether a game-based computational thinking curriculum can lead to improvement in selected aspects of students' mathematics and science practices, as well as their computing skills. This will be achieved through the refinement and deployment of the three games at scale and assessing transfer with cognitive interviews of a small sample of students and carefully developed assessments with all the participating students. Likewise, the project will investigate the optimal characteristics of curriculum materials and teacher enactment that would lead to greatest outcomes at different grade levels via integration with the Teacher Co-Pilot platform, through which the project will investigate the most effective minimal scaffolding needed for teachers. This will be accomplished through pilot studies in two iterations with a sample of 40 teachers and focus group interviews to investigate useful and optimal feedback for teachers. The key outcome of this project will be research-informed and field-tested prototypes of game-based curriculum focused on the integration of computational thinking and science and mathematics learning across grade levels, freely available to educators for implementation of adaptation beyond the duration of the project. An advisory board will conduct the formative and summative evaluation of the project.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DRL",
 "org_div_long_name": "Division of Research on Learning in Formal and Informal Settings (DRL)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Zoran",
   "pi_last_name": "Popovic",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zoran Popovic",
   "pi_email_addr": "zoran@cs.washington.edu",
   "nsf_id": "000110993",
   "pi_start_date": "2016-09-14",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Stuart",
   "pi_last_name": "Reges",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Stuart Reges",
   "pi_email_addr": "reges@cs.washington.edu",
   "nsf_id": "000417440",
   "pi_start_date": "2016-09-14",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Min",
   "pi_last_name": "Li",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Min Li",
   "pi_email_addr": "minli@u.washington.edu",
   "nsf_id": "000486022",
   "pi_start_date": "2016-09-14",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Washington",
  "inst_street_address": "4333 BROOKLYN AVE NE",
  "inst_street_address_2": "",
  "inst_city_name": "SEATTLE",
  "inst_state_code": "WA",
  "inst_state_name": "Washington",
  "inst_phone_num": "2065434043",
  "inst_zip_code": "981951016",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "WA07",
  "org_lgl_bus_name": "UNIVERSITY OF WASHINGTON",
  "org_prnt_uei_num": "",
  "org_uei_num": "HD1WMN6945W6"
 },
 "perf_inst": {
  "perf_inst_name": "University of Washington",
  "perf_str_addr": "4333 Brooklyn Ave N.E.",
  "perf_city_name": "Seattle",
  "perf_st_code": "WA",
  "perf_st_name": "Washington",
  "perf_zip_code": "981950001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "WA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "005Y00",
   "pgm_ele_name": "STEM + Computing (STEM+C) Part"
  }
 ],
 "pgm_ref": null,
 "app_fund": [
  {
   "app_code": "0416",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001617DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 2500000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project involves iterative process of developing and refining games and curriculum materials, conducting the literature review and cognitive analysis of assessment tasks that can be embedded into the games, and empirical studies on the effectiveness of those games on student learning of computing thinking skills and practices. The three educational games we continued to develop and refine are BlockStudio, Dragon Architect, and Nanocrafter, appropriate for elementary, middle, and high school, respectively. The first two were designed to develop computational thinking (CT), while Nanocrafter was designed to create a new population of nano-designers capable of discovering new synthetic biology mechanisms. At the core of Nanocrafter is the idea that DNA sequences can be thought of as computational building blocks.</p>\n<p>&nbsp;</p>\n<p>Based on content analysis, user cases, and pilot studies, we embedded problem-based CT learning experiences in each of these games while facilitating the learning transfer of CT to several mathematical practices stated in the Common Core standards as well as science practices in NGSS. For example, our approach to implementing math practice of &ldquo;Look for and make use of structure&rdquo; is as follows: Dragon Architect has puzzles where students solve difficult 3D constructions tasks (such as building a castle) by breaking it into smaller parts (walls and individual towers), constructing these parts, and then combining them to get the complete solution. Nanocrafter poses molecular puzzles where structural constraints must be satisfied (e.g., which DNA segments can pair up). BlockStudio extends the Graphical Rewrite Rules model of visual programming, by allowing direct manipulation of shapes on the screen. Via an inference engine, these changes are turned into rules that can be invoked by events (like a keypress, or a collision between two shapes). Thus, a &ldquo;loop&rdquo; can be expressed as simply as a block bouncing between two other blocks, and other behaviors can be choreographed analogously, by structured arrangements of and interactions among blocks.</p>\n<p>&nbsp;</p>\n<p>Our assessment research aims to embed authentic of various learning outcomes in games, such as mathematical modeling, coding strategies, meta-cognitive skills, and persistence. One such work addresses the research gap with respect to no known method to observe, measure, and diagnose the structure of the thinking process during mathematics problem solving.&nbsp; We partnered with Enlearn to design mathematical activities in middle school and high school math, in which we can follow a student's thinking process, understanding each micro-step student took, such as exploration techniques, decision process, backtracking.&nbsp; This is in stark contrast to most of the digital math activities that just ask for the final answer to be entered in the input box.&nbsp; Our pilot studies included teacher and student data on how teachers use this information to adjust their math instruction in terms of discussing problem solving strategies and methods.&nbsp;Findings offer important insights on digital supports for formatively marrying mathematics and computational thinking in real classrooms.</p>\n<p>&nbsp;</p>\n<p>One strand of our pilot studies addresses supports needed for empowering families facing English literacy challenges to jointly engage in introductory programming. Research suggests that parental engagement through joint media engagement is an important factor in children&rsquo;s learning for coding and programming. Unfortunately, parents with limited technology background may have difficulty supporting their children&rsquo;s access to programming. English-language learning (ELL) families from marginalized communities face particular challenges in understanding and supporting programming, as code is primarily authored using English text. BlockStudio, a programming tool for empowering ELL families to jointly engage in introductory coding, embodies two design principles, text-free and visually concrete. Our case studies sampled three community centers serving immigrant and refugee populations that speak multiple (non-English) languages (e.g., Afar, Amharic and Somali). Our findings show ELL families can jointly engage in programming without text, via co-creation and flexible roles, and can create a range of artifacts, indicating understanding of aspects of programming within this environment.</p>\n<p>&nbsp;</p>\n<p>The measured outcomes associated with the implementation of games had been collected in both classroom settings, out-of-school tutoring settings, and the high-school math remediation classes in community colleges. Our preliminary findings suggested positive impacts of game plays on students&rsquo; gain in several aspects of computing thinking. Through game playing, students become proficient at solving complex, open-ended programming problems by making conjectures about the meaning and form of the problem and solution, and planning out a solution pathway rather than resorting to trial and error. Further, benefits of following student&rsquo;s thinking process can be directly observed by changes in teacher and student behavior.&nbsp;Teachers report that their decision on what to do next is greatly changed with the additional information on how students think.&nbsp; Students themselves benefit from just-in-time feedback.&nbsp;Their engagement in math activities in some instances drastically changes, with some students spending over 6 continuous hours on continuous mathematical practice, as a direct result of diagnostic feedback that is significantly more detailed due to insights into the thinking process.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/14/2022<br>\n\t\t\t\t\tModified by: Min&nbsp;Li</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project involves iterative process of developing and refining games and curriculum materials, conducting the literature review and cognitive analysis of assessment tasks that can be embedded into the games, and empirical studies on the effectiveness of those games on student learning of computing thinking skills and practices. The three educational games we continued to develop and refine are BlockStudio, Dragon Architect, and Nanocrafter, appropriate for elementary, middle, and high school, respectively. The first two were designed to develop computational thinking (CT), while Nanocrafter was designed to create a new population of nano-designers capable of discovering new synthetic biology mechanisms. At the core of Nanocrafter is the idea that DNA sequences can be thought of as computational building blocks.\n\n \n\nBased on content analysis, user cases, and pilot studies, we embedded problem-based CT learning experiences in each of these games while facilitating the learning transfer of CT to several mathematical practices stated in the Common Core standards as well as science practices in NGSS. For example, our approach to implementing math practice of \"Look for and make use of structure\" is as follows: Dragon Architect has puzzles where students solve difficult 3D constructions tasks (such as building a castle) by breaking it into smaller parts (walls and individual towers), constructing these parts, and then combining them to get the complete solution. Nanocrafter poses molecular puzzles where structural constraints must be satisfied (e.g., which DNA segments can pair up). BlockStudio extends the Graphical Rewrite Rules model of visual programming, by allowing direct manipulation of shapes on the screen. Via an inference engine, these changes are turned into rules that can be invoked by events (like a keypress, or a collision between two shapes). Thus, a \"loop\" can be expressed as simply as a block bouncing between two other blocks, and other behaviors can be choreographed analogously, by structured arrangements of and interactions among blocks.\n\n \n\nOur assessment research aims to embed authentic of various learning outcomes in games, such as mathematical modeling, coding strategies, meta-cognitive skills, and persistence. One such work addresses the research gap with respect to no known method to observe, measure, and diagnose the structure of the thinking process during mathematics problem solving.  We partnered with Enlearn to design mathematical activities in middle school and high school math, in which we can follow a student's thinking process, understanding each micro-step student took, such as exploration techniques, decision process, backtracking.  This is in stark contrast to most of the digital math activities that just ask for the final answer to be entered in the input box.  Our pilot studies included teacher and student data on how teachers use this information to adjust their math instruction in terms of discussing problem solving strategies and methods. Findings offer important insights on digital supports for formatively marrying mathematics and computational thinking in real classrooms.\n\n \n\nOne strand of our pilot studies addresses supports needed for empowering families facing English literacy challenges to jointly engage in introductory programming. Research suggests that parental engagement through joint media engagement is an important factor in children\u2019s learning for coding and programming. Unfortunately, parents with limited technology background may have difficulty supporting their children\u2019s access to programming. English-language learning (ELL) families from marginalized communities face particular challenges in understanding and supporting programming, as code is primarily authored using English text. BlockStudio, a programming tool for empowering ELL families to jointly engage in introductory coding, embodies two design principles, text-free and visually concrete. Our case studies sampled three community centers serving immigrant and refugee populations that speak multiple (non-English) languages (e.g., Afar, Amharic and Somali). Our findings show ELL families can jointly engage in programming without text, via co-creation and flexible roles, and can create a range of artifacts, indicating understanding of aspects of programming within this environment.\n\n \n\nThe measured outcomes associated with the implementation of games had been collected in both classroom settings, out-of-school tutoring settings, and the high-school math remediation classes in community colleges. Our preliminary findings suggested positive impacts of game plays on students\u2019 gain in several aspects of computing thinking. Through game playing, students become proficient at solving complex, open-ended programming problems by making conjectures about the meaning and form of the problem and solution, and planning out a solution pathway rather than resorting to trial and error. Further, benefits of following student\u2019s thinking process can be directly observed by changes in teacher and student behavior. Teachers report that their decision on what to do next is greatly changed with the additional information on how students think.  Students themselves benefit from just-in-time feedback. Their engagement in math activities in some instances drastically changes, with some students spending over 6 continuous hours on continuous mathematical practice, as a direct result of diagnostic feedback that is significantly more detailed due to insights into the thinking process.\n\n\t\t\t\t\tLast Modified: 06/14/2022\n\n\t\t\t\t\tSubmitted by: Min Li"
 }
}