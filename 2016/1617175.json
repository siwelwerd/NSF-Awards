{
 "awd_id": "1617175",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Relaxing Soundness",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2016-07-15",
 "awd_exp_date": "2021-06-30",
 "tot_intn_awd_amt": 499577.0,
 "awd_amount": 499577.0,
 "awd_min_amd_letter_date": "2016-07-11",
 "awd_max_amd_letter_date": "2016-07-11",
 "awd_abstract_narration": "Replication is a key ingredient in achieving scalability and high availability of computer systems.  This is evident for globally distributed databases, but it is also increasingly true for individual computers, smartphones and even watches, with multiple layers of cache coordinating communication between multiple processor cores.  Where there is replication, consistency is necessarily at conflict with performance and availability. Strong notions of consistency allow simpler application development and debugging, at the cost of performance.  This project explores weaker notions of consistency, investigating the extent to which performance gains can be achieved while maintaining a relatively simple programming model.  \r\n\r\nThis project investigates abstraction, and under what circumstances can a client programmer safely reason about a data structure using its sequential specification. The project develops a common foundational framework that unites the areas of distributed data structures, relaxed memory models and concurrent data structures. The project explores foundations for languages and tools for shared-memory multi-core programming.  By improving the programming model, the project encourages better use of the resources available in current and future hardware.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "James",
   "pi_last_name": "Riely",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "James Riely",
   "pi_email_addr": "jriely@depaul.edu",
   "nsf_id": "000370148",
   "pi_start_date": "2016-07-11",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Radhakrishnan",
   "pi_last_name": "Jagadeesan",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Radhakrishnan Jagadeesan",
   "pi_email_addr": "rjagadeesan@cs.depaul.edu",
   "nsf_id": "000162095",
   "pi_start_date": "2016-07-11",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "DePaul University",
  "inst_street_address": "1 E JACKSON BLVD",
  "inst_street_address_2": "",
  "inst_city_name": "CHICAGO",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "3123627388",
  "inst_zip_code": "606042287",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "IL07",
  "org_lgl_bus_name": "DEPAUL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "MNZ8KMRWTDB6"
 },
 "perf_inst": {
  "perf_inst_name": "DePaul University",
  "perf_str_addr": "243 S Wabash Ave",
  "perf_city_name": "Chicago",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "606042287",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "IL07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7943",
   "pgm_ref_txt": "PROGRAMMING LANGUAGES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 499577.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Replication is a key ingredient in achieving scalability and high availability of computer systems, not only in globally distributed databases, but also in multicore systems. Perforce, replication leads to tradeoffs between consistency on the one hand and availability and performance on the other hand.</p>\n<p>This project explored these tradeoffs in five separate contexts:</p>\n<ul>\n<li>security implications of speculation in hardware,</li>\n<li>relaxed memory models in multicore systems,&nbsp;</li>\n<li>language-level specification of transactional memory,</li>\n<li>library specifications for concurrent applications, and</li>\n<li>eventual consistency for distributed databases.</li>\n</ul>\n<p>In each case, we investigated the circumstances under which a client programmer can safely reason about code from a library using its sequential specification.</p>\n<p>One unifying theme of our investigations is partial order methods from the theory of concurrency, establishing the beginnings of a formal methodology to underpin distributed data structures, relaxed memory models and concurrent data structures.</p>\n<p class=\"p1\">Another unifyng theme is the desire for both safety and efficiency.&nbsp; In concurrent systems, these are often at odds, yet both are important. Safety is necessary for system security---it is also necessary to have a sensible definition of programming language, serving as a guide both for compiler writers and programmers. Efficiency is important not just so that programs run fast, but also so that they consume less power and, thus, fewer of our natural resources.&nbsp; Our work has sought to define \"sweet spot\" semantics in several areas, seeking to maximize efficiency without compromising safety.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/30/2021<br>\n\t\t\t\t\tModified by: James&nbsp;Riely</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nReplication is a key ingredient in achieving scalability and high availability of computer systems, not only in globally distributed databases, but also in multicore systems. Perforce, replication leads to tradeoffs between consistency on the one hand and availability and performance on the other hand.\n\nThis project explored these tradeoffs in five separate contexts:\n\nsecurity implications of speculation in hardware,\nrelaxed memory models in multicore systems, \nlanguage-level specification of transactional memory,\nlibrary specifications for concurrent applications, and\neventual consistency for distributed databases.\n\n\nIn each case, we investigated the circumstances under which a client programmer can safely reason about code from a library using its sequential specification.\n\nOne unifying theme of our investigations is partial order methods from the theory of concurrency, establishing the beginnings of a formal methodology to underpin distributed data structures, relaxed memory models and concurrent data structures.\nAnother unifyng theme is the desire for both safety and efficiency.  In concurrent systems, these are often at odds, yet both are important. Safety is necessary for system security---it is also necessary to have a sensible definition of programming language, serving as a guide both for compiler writers and programmers. Efficiency is important not just so that programs run fast, but also so that they consume less power and, thus, fewer of our natural resources.  Our work has sought to define \"sweet spot\" semantics in several areas, seeking to maximize efficiency without compromising safety.\n\n\t\t\t\t\tLast Modified: 10/30/2021\n\n\t\t\t\t\tSubmitted by: James Riely"
 }
}