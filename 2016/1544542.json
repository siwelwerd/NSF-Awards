{
 "awd_id": "1544542",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: PROJECT DARWIN_ Towards Principled Language Evolution",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2022-06-30",
 "tot_intn_awd_amt": 1099726.0,
 "awd_amount": 1099726.0,
 "awd_min_amd_letter_date": "2016-05-25",
 "awd_max_amd_letter_date": "2021-06-21",
 "awd_abstract_narration": "R is a large language ecosystem consisting of statistical and graphical capabilities, a programming language, and all the other artifacts present in an open source programming environment. R is used by millions of scientific/engineering programmers in academia and is used heavily in business and industry.  R is hitting limits and needs major renovations if it is to keep up with, and  advance, the pace of science. This proposal proposes to modernize several aspects of the R language and to integrate new infrastructure elements. \r\n\r\nThe modernization effort will focus on  the code base of the language  implementation, the compiler and the memory subsystem. The new features will center around the addition of type annotations to improve correctness and performance of R programs as well as to assist with distributed  execution. The PI is well-connected to the R core developers, and there is a clear path to releasing versions into production. The enhancements will help R support the pace of science, as problems become more computationally complex and use rapidly growing data sets.  Scientific computations programmed in R  will run faster, be capable of processing much larger, distributed data sets, and the implementation will be easier to maintain by modernizing the language.  The experience of reimplementing a live, full-scale language like R will be interesting to the programming language research community, as well as providing a more sustainable infrastructure for science/engineering programming.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jan",
   "pi_last_name": "Vitek",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Jan Vitek",
   "pi_email_addr": "j.vitek@neu.edu",
   "nsf_id": "000290862",
   "pi_start_date": "2016-05-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Northeastern University",
  "inst_street_address": "360 HUNTINGTON AVE",
  "inst_street_address_2": "",
  "inst_city_name": "BOSTON",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6173735600",
  "inst_zip_code": "021155005",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "NORTHEASTERN UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "HLTMVS2JZBS6"
 },
 "perf_inst": {
  "perf_inst_name": "Northeastern University",
  "perf_str_addr": "360 Huntington Ave",
  "perf_city_name": "Boston",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021155005",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "116500",
   "pgm_ele_name": "ADVANCES IN BIO INFORMATICS"
  },
  {
   "pgm_ele_code": "724400",
   "pgm_ele_name": "COMPUTATIONAL PHYSICS"
  },
  {
   "pgm_ele_code": "726100",
   "pgm_ele_name": "Project & Program Evaluation"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  },
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "010Z",
   "pgm_ref_txt": "BCC (Building Community and Capacity)"
  },
  {
   "pgm_ref_code": "1206",
   "pgm_ref_txt": "THEORETICAL & COMPUTATIONAL ASTROPHYSICS"
  },
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "7569",
   "pgm_ref_txt": "CYBERINFRASTRUCTURE/SCIENCE"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "8004",
   "pgm_ref_txt": "Software Institutes"
  },
  {
   "pgm_ref_code": "8009",
   "pgm_ref_txt": "Scientifc Software Integration"
  },
  {
   "pgm_ref_code": "8084",
   "pgm_ref_txt": "CDS&E"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0416",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001617DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 1099726.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The DARWIN project explored a key question in computing, namely, how to evolve the software ecosystems that we use on a daily basis to build the next sets of scientific or commercial applications. &nbsp;Writing a program is more than just typing commands into a terminal: it involves leveraging tools such as compilers and virtual machines, reusing code packaged in libraries, and querying knowledge bases on the internet. All of these elements form what we call \"a software ecosystem\". Depending on the task at hand, developpers can pick which ecosystem to use, but once that choice is made they are tied to it by growin technical debt. DARWIN explored techniques for adding new capabilities to software ecosystem by the means of static and dynamic analysis of programs and better tooling. The project looked at the concrete example of the R ecosystem for statistical and scientific computing. The inovations that came from this work include techniques for speculative code generation in the presence of unknowns and for reverting code when the speculation failed, techniques for exploring how to change key language features without cause damage to the libraries that use that language, and for analyzing large code bases to validate that evoluation was succesful. The DARWIN project transfered some of its results to the open source R environment thus contributing to the stability of a widely used ecosystem.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/12/2022<br>\n\t\t\t\t\tModified by: Jan&nbsp;Vitek</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe DARWIN project explored a key question in computing, namely, how to evolve the software ecosystems that we use on a daily basis to build the next sets of scientific or commercial applications.  Writing a program is more than just typing commands into a terminal: it involves leveraging tools such as compilers and virtual machines, reusing code packaged in libraries, and querying knowledge bases on the internet. All of these elements form what we call \"a software ecosystem\". Depending on the task at hand, developpers can pick which ecosystem to use, but once that choice is made they are tied to it by growin technical debt. DARWIN explored techniques for adding new capabilities to software ecosystem by the means of static and dynamic analysis of programs and better tooling. The project looked at the concrete example of the R ecosystem for statistical and scientific computing. The inovations that came from this work include techniques for speculative code generation in the presence of unknowns and for reverting code when the speculation failed, techniques for exploring how to change key language features without cause damage to the libraries that use that language, and for analyzing large code bases to validate that evoluation was succesful. The DARWIN project transfered some of its results to the open source R environment thus contributing to the stability of a widely used ecosystem.\n\n\t\t\t\t\tLast Modified: 11/12/2022\n\n\t\t\t\t\tSubmitted by: Jan Vitek"
 }
}