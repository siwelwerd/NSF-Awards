{
 "awd_id": "1625908",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: PRIME: Engaging STEM Undergraduate Students in Computer Science with Intelligent Tutoring Systems",
 "cfda_num": "47.076",
 "org_code": "11040000",
 "po_phone": "7032922832",
 "po_email": "ptymann@nsf.gov",
 "po_sign_block_name": "Paul Tymann",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 499879.0,
 "awd_amount": 499879.0,
 "awd_min_amd_letter_date": "2016-08-25",
 "awd_max_amd_letter_date": "2016-08-25",
 "awd_abstract_narration": "The \"Engaging STEM Undergraduate Students in Computer Science with Intelligent Tutoring Systems\" project will see the design, development, and evaluation of the Personalized Real-time Intelligent Mentoring Environment (PRIME) system, which will provide adaptive problem-solving support and adaptive motivational support to help students learn to solve computing problems. PRIME will track each student's progress while providing real-time feedback, multiple levels of hints, and customized problem-solving advice throughout students' learning interactions.  The project will use the block programming language \"Snap!\" as it eliminates most syntax errors, freeing students to focus on concepts and logic.\r\n\r\nIntroductory computing is a required component of many STEM undergraduate curricula, and because of the fundamental importance of computing for all STEM disciplines, courses that introduce computing to STEM undergraduates hold enormous potential for shaping the way students develop computational fluency that will serve them throughout their careers.  The PRIME intelligent tutoring system will be evaluated in a large introductory computing course at North Carolina State University, which serves more than 2,000 students each year. The PRIME environment will also be evaluated at the University of Florida and at Florida A&M University, a Historically Black University. Experimental studies with PRIME will have a dual focus: investigating its impacts on helping students learn about computing (analyzing problems, creating models and abstractions, and building and refining programs) and improving students' attitudes towards computing (self-efficacy for computing and interest in computing).",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DUE",
 "org_div_long_name": "Division Of Undergraduate Education",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Kristy",
   "pi_last_name": "Boyer",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Kristy E Boyer",
   "pi_email_addr": "keboyer@cise.ufl.edu",
   "nsf_id": "000591513",
   "pi_start_date": "2016-08-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Florida",
  "inst_street_address": "1523 UNION RD RM 207",
  "inst_street_address_2": "",
  "inst_city_name": "GAINESVILLE",
  "inst_state_code": "FL",
  "inst_state_name": "Florida",
  "inst_phone_num": "3523923516",
  "inst_zip_code": "326111941",
  "inst_country_name": "United States",
  "cong_dist_code": "03",
  "st_cong_dist_code": "FL03",
  "org_lgl_bus_name": "UNIVERSITY OF FLORIDA",
  "org_prnt_uei_num": "",
  "org_uei_num": "NNFQH1JAPEP3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Florida",
  "perf_str_addr": "1 University of Florida",
  "perf_city_name": "Gainesville",
  "perf_st_code": "FL",
  "perf_st_name": "Florida",
  "perf_zip_code": "326112002",
  "perf_ctry_code": "US",
  "perf_cong_dist": "03",
  "perf_st_cong_dist": "FL03",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "199800",
   "pgm_ele_name": "IUSE"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "8209",
   "pgm_ref_txt": "Improv Undergrad STEM Ed(IUSE)"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0416",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001617DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 499879.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-8440577d-7fff-33e9-3c78-5de6b67ea8a4\"> </span></p>\n<p><span id=\"docs-internal-guid-9efb8cc2-7fff-4f6c-03fb-2fae47c36d3a\"> </span></p>\n<p dir=\"ltr\"><span>The project made significant contributions to computer science education through the creation and evaluation of an intelligent tutoring system with automated individualized feedback for undergraduate STEM students in introductory programming courses. Leveraging advances in intelligent tutoring systems, the PRIME learning environment provides adaptive problem-solving support and adaptive motivational support to help students learn to solve computing problems. Through the course of the project, PRIME has been used by over 1,300 undergraduate students from three institutions in introductory CS courses. The project has contributed novel findings on better understanding how students interact, are supported, progress, and learn in such environments, including analysis of both student computational problem solving as well as their attitudes and motivations. These findings have paved the way for other block-based programming environments to be augmented by AI.</span><span><br /></span><span> </span><span><span> </span></span><span><span> </span></span><span><span> </span></span><span><span> </span></span><span><span> </span></span><span><span> </span></span></p>\n<p dir=\"ltr\"><span>Through a series of studies on students' interactions with the learning environment, the project has yielded advances through three complementary sets of results.&nbsp;</span></p>\n<p dir=\"ltr\">1. We created the PRIME learning environment, an intelligent tutoring system for introductory computing, that has been extensively tested and demonstrates clear promise for broad deployment in introductory computing courses. The PRIME environment provides 20 block-based programming activities supporting topics typically covered in the first five weeks of a traditional introductory non-majors course. Each activity provides step-by-step instructions as the student progresses through the activity, as well as multiple hints that adapt to the current state of the student's block-based program. The hints provide differing levels of support depending on student needs. PRIME integrates seamlessly with popular learning management systems such as Moodle and Canvas, allowing for easy deployment and account management for instructors.&nbsp;A final two-condition study compared a version of PRIME without the adaptive hinting capabilities (PRIME-Baseline) to the full PRIME system (PRIME-with-Support). The PRIME-with-Support version also showed promising results for helping students with low prior knowledge, who had slightly higher learning gains and a significantly higher completion rate than similar students in the PRIME-Baseline condition.</p>\n<p dir=\"ltr\">2. Over the course of the project, the research team conducted research on student computational problem-solving behaviors in the PRIME environment designed to inform the AI learning technologies research community. These findings include early prediction models of student success in the programming activities, as well as analysis of what types of behaviors and interactions have the most predictive power. Subsequent research leveraged student cognitive models to better understand how student programming behavior could be better utilized to predict learning outcomes, as well as clustering student programming solutions as a method for identifying common misconceptions or error states. Moving beyond individual student program snapshots, the project also produced findings on analysis of students' problem-solving trajectories over time to identify patterns in students' hint requests and patterns of progression through the activities, and how these patterns persist across multiple activities. Several of the techniques presented in this work show significant potential for improving the design and implementation of AI-informed adaptive learning environments for both block-based and text-based programming.</p>\n<p><span>3. Building on our work investigating student computational problem solving, the research team also investigated how student attitudes and motivation interact with their performance in the PRIME environment. Over the course of the project, the research team incorporated feedback from students to align the PRIME experience with their interests, and to attempt to eliminate confusion and frustration related to programming. These efforts produced improved student experience measures across multiple iterations of the PRIME learning environment. Additionally, the research team used student self-reported frustration to analyze how student frustration changed as students progressed through the activities, and how this affected their block-based programming behaviors. The research team also analyzed student survey responses through the lens of cognitive load theory to better understand how and why students were struggling in the learning environment.&nbsp;</span><span><br /></span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\">&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/04/2021<br>\n\t\t\t\t\tModified by: Kristy&nbsp;E&nbsp;Boyer</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \n\n \nThe project made significant contributions to computer science education through the creation and evaluation of an intelligent tutoring system with automated individualized feedback for undergraduate STEM students in introductory programming courses. Leveraging advances in intelligent tutoring systems, the PRIME learning environment provides adaptive problem-solving support and adaptive motivational support to help students learn to solve computing problems. Through the course of the project, PRIME has been used by over 1,300 undergraduate students from three institutions in introductory CS courses. The project has contributed novel findings on better understanding how students interact, are supported, progress, and learn in such environments, including analysis of both student computational problem solving as well as their attitudes and motivations. These findings have paved the way for other block-based programming environments to be augmented by AI.\n       \nThrough a series of studies on students' interactions with the learning environment, the project has yielded advances through three complementary sets of results. \n1. We created the PRIME learning environment, an intelligent tutoring system for introductory computing, that has been extensively tested and demonstrates clear promise for broad deployment in introductory computing courses. The PRIME environment provides 20 block-based programming activities supporting topics typically covered in the first five weeks of a traditional introductory non-majors course. Each activity provides step-by-step instructions as the student progresses through the activity, as well as multiple hints that adapt to the current state of the student's block-based program. The hints provide differing levels of support depending on student needs. PRIME integrates seamlessly with popular learning management systems such as Moodle and Canvas, allowing for easy deployment and account management for instructors. A final two-condition study compared a version of PRIME without the adaptive hinting capabilities (PRIME-Baseline) to the full PRIME system (PRIME-with-Support). The PRIME-with-Support version also showed promising results for helping students with low prior knowledge, who had slightly higher learning gains and a significantly higher completion rate than similar students in the PRIME-Baseline condition.\n2. Over the course of the project, the research team conducted research on student computational problem-solving behaviors in the PRIME environment designed to inform the AI learning technologies research community. These findings include early prediction models of student success in the programming activities, as well as analysis of what types of behaviors and interactions have the most predictive power. Subsequent research leveraged student cognitive models to better understand how student programming behavior could be better utilized to predict learning outcomes, as well as clustering student programming solutions as a method for identifying common misconceptions or error states. Moving beyond individual student program snapshots, the project also produced findings on analysis of students' problem-solving trajectories over time to identify patterns in students' hint requests and patterns of progression through the activities, and how these patterns persist across multiple activities. Several of the techniques presented in this work show significant potential for improving the design and implementation of AI-informed adaptive learning environments for both block-based and text-based programming.\n\n3. Building on our work investigating student computational problem solving, the research team also investigated how student attitudes and motivation interact with their performance in the PRIME environment. Over the course of the project, the research team incorporated feedback from students to align the PRIME experience with their interests, and to attempt to eliminate confusion and frustration related to programming. These efforts produced improved student experience measures across multiple iterations of the PRIME learning environment. Additionally, the research team used student self-reported frustration to analyze how student frustration changed as students progressed through the activities, and how this affected their block-based programming behaviors. The research team also analyzed student survey responses through the lens of cognitive load theory to better understand how and why students were struggling in the learning environment. \n\n\n \n \n\n\t\t\t\t\tLast Modified: 11/04/2021\n\n\t\t\t\t\tSubmitted by: Kristy E Boyer"
 }
}