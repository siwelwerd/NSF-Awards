{
 "awd_id": "1617653",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Small: Collaborative Research: Algorithmic and Computational Frontiers of MapReduce for Big Data Analysis",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2022-06-30",
 "tot_intn_awd_amt": 247230.0,
 "awd_amount": 247230.0,
 "awd_min_amd_letter_date": "2016-05-25",
 "awd_max_amd_letter_date": "2021-04-29",
 "awd_abstract_narration": "Modern science and engineering heavily relies on processing massive data sets and the size of the data requires applications to run using distributed computing frameworks.  However, many existing methods essential to the applications are not easily adapted to work in distributed settings. This project aims to develop new efficient ways of processing large data sets in widely used distributed computing platforms. The project will reveal new methods for processing diverse and complex data sets of massive size and allow for various applications scale to large inputs. The work has the potential to fundamentally change algorithmic techniques used in distributed computing, helping to shape big data research, the computing industry, and the growing economy reliant on big data analysis. Research outcomes will be integrated with education by writing an extensive survey/tutorial on the core algorithmic ideas used in the new discoveries to make the ideas transparent to the algorithmic developers and practitioners. The PIs will make some of the discovered algorithmic ideas accessible even to undergraduate students, helping them get prepared to cope with algorithmic challenges in distributed computing for large data sets. Special efforts will be made to include women and minorities in advising and mentoring plans.\r\n\r\nThe main goal of the project is to find new ways of unlocking the underlying power of MapReduce, a popular distributed platform, through the development of new algorithmics. The developed algorithms should have provably strong guarantees and demonstrate the effectiveness via empirical experiments. Considering the increasing demand for large data analysis, establishing a solid theoretical MapReduce model and developing new algorithmic ideas will have the potential to establish faster and memory efficient algorithms for distributed computing. The PIs will consider a collection of carefully chosen problems to understand in the MapReduce setting that not only have strong connections to theoretical work but also have the potential for high impact in real world Big Data applications: Clustering, Distributed Dynamic Programming, and Limitations of MapReduce. This will be done in parallel with the attempt to better understand the currently accepted MapReduce models that have been developed and to perhaps further refine them to better connect models with practice.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Sungjin",
   "pi_last_name": "Im",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Sungjin Im",
   "pi_email_addr": "sim3@ucmerced.edu",
   "nsf_id": "000654367",
   "pi_start_date": "2016-05-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California - Merced",
  "inst_street_address": "5200 N LAKE RD",
  "inst_street_address_2": "",
  "inst_city_name": "MERCED",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "2092012039",
  "inst_zip_code": "953435001",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "CA13",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, MERCED",
  "org_prnt_uei_num": "",
  "org_uei_num": "FFM7VPAG8P92"
 },
 "perf_inst": {
  "perf_inst_name": "University of California - Merced",
  "perf_str_addr": "5200 North Lake Road",
  "perf_city_name": "Merced",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "953435001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "CA13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7934",
   "pgm_ref_txt": "PARAL/DISTRIBUTED ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 247230.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>MapReduce (or more generally massively parallel computing) is considered as the de facto standard distributed computing framework. The success of MapReduce is partially due to the following reasons: (1) it offers a simple interface to programmers while hiding technical difficulties that arise in distributed computing; (2) it combines parallel and sequential computing effectively.&nbsp;The MapReduce framework differs from other forms of parallel computation in the way it interleaves parallel and sequential computation, and this unique computational structure has allowed for major successes in analyzing large data and has led to hundreds of companies and universities adopting the system. However, the full power of MapReduce was to be better understood.<br /><br />The project focused on further developing the theoretical foundations of MapReduce. The main goal was in the development of sound theoretical foundations leading to the discovery of fast efficient methods for large data analysis using distributed methods and finding new ways of unlocking the underlying power of MapReduce through the development of new algorithmics.&nbsp;<br /><br />The key outcomes of the project are outlined as follows:<br /><br />The project showed how to simulate a large class of dynamic programming based algorithms in MapReduce. Dynamic programming is a fundamental algorithmic technique and is included in the standard CS curriculum. While dynamic programming has numerous applications, the powerful technique has been&nbsp;considered to be obsolete by practitioners since typically it is very sequential and requires a lot of memory. The project found a principled guideline on how to translate dynamic&nbsp;programming into efficient distributed algorithms. At a high level, this work can be viewed as unlocking the power of MapReduce for a large class of applications using dynamic programming.<br /><br />The project has produced a tutorial book that presents the key algorithmic toolkits in a more accessible way to the general audience. The new book describes algorithmic tools that have been developed for massively distributed computing that leverage the unique features of massively parallel computing. The tools covered by the book are generally applicable and can be used as building blocks to design algorithms requiring massive parallel computation. The book can be used as useful teaching materials in advanced algorithm classes.&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/26/2022<br>\n\t\t\t\t\tModified by: Sungjin&nbsp;Im</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nMapReduce (or more generally massively parallel computing) is considered as the de facto standard distributed computing framework. The success of MapReduce is partially due to the following reasons: (1) it offers a simple interface to programmers while hiding technical difficulties that arise in distributed computing; (2) it combines parallel and sequential computing effectively. The MapReduce framework differs from other forms of parallel computation in the way it interleaves parallel and sequential computation, and this unique computational structure has allowed for major successes in analyzing large data and has led to hundreds of companies and universities adopting the system. However, the full power of MapReduce was to be better understood.\n\nThe project focused on further developing the theoretical foundations of MapReduce. The main goal was in the development of sound theoretical foundations leading to the discovery of fast efficient methods for large data analysis using distributed methods and finding new ways of unlocking the underlying power of MapReduce through the development of new algorithmics. \n\nThe key outcomes of the project are outlined as follows:\n\nThe project showed how to simulate a large class of dynamic programming based algorithms in MapReduce. Dynamic programming is a fundamental algorithmic technique and is included in the standard CS curriculum. While dynamic programming has numerous applications, the powerful technique has been considered to be obsolete by practitioners since typically it is very sequential and requires a lot of memory. The project found a principled guideline on how to translate dynamic programming into efficient distributed algorithms. At a high level, this work can be viewed as unlocking the power of MapReduce for a large class of applications using dynamic programming.\n\nThe project has produced a tutorial book that presents the key algorithmic toolkits in a more accessible way to the general audience. The new book describes algorithmic tools that have been developed for massively distributed computing that leverage the unique features of massively parallel computing. The tools covered by the book are generally applicable and can be used as building blocks to design algorithms requiring massive parallel computation. The book can be used as useful teaching materials in advanced algorithm classes. \n\n\t\t\t\t\tLast Modified: 10/26/2022\n\n\t\t\t\t\tSubmitted by: Sungjin Im"
 }
}