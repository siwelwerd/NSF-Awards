{
 "awd_id": "1618657",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Small: A-Hypergeometric Solutions of Linear Differential Equations",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 449999.0,
 "awd_amount": 449999.0,
 "awd_min_amd_letter_date": "2016-06-28",
 "awd_max_amd_letter_date": "2016-06-28",
 "awd_abstract_narration": "Many scientific laws are captured as differential equations --\r\nformulas that relates a quantity (such as position) to its derivatives\r\n(velocity and acceleration). Differential equations are common in\r\nscience, mathematics and engineering.  They can be solved numerically,\r\nbut may also have a closed-form solution -- an exact solution written\r\nin terms of familiar functions.\r\n\r\nExcept for small equations, closed-form solutions were thought to be\r\nrare.  Algorithms for second-order equations, which were developed by\r\nthe PI and his students, have demonstrated that closed form solutions \r\nof linear differential equations with polynomial coefficients\r\nare actually common; solutions can often be written in terms of\r\nGauss's hypergeometric function, a familiar function in differential\r\nequations.\r\n\r\nThis project aims to find out if closed form solutions are also common\r\nfor higher order equations.  The PI will work with two graduate\r\nstudents to develop algorithms to search for solutions in terms of\r\nA-hypergeometric functions, which were introduced by Gel'fand,\r\nKapranov and Zelevinski.\r\n \r\nThere is a wide variety of A-hypergeometric functions, which\r\ncorrespond to polytopes. A-hypergeometric functions can be\r\nmultivariate, so several tools that currently only exist for\r\nunivariate equations need to be generalized.  A key motivating\r\nquestion is if convergent integer-series solutions can always be\r\nwritten in terms of A-hypergeometric functions. If true, then\r\nA-hypergeometric solutions would be common in areas of mathematics and\r\nscience that involve combinatorial structures or integrals, such as the Ising model\r\nor Feynman diagrams in physics. This question leads to several others\r\non A-hypergeometric functions, some of which can be settled by the\r\nalgorithms to be developed in this project.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Mark",
   "pi_last_name": "van Hoeij",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Mark van Hoeij",
   "pi_email_addr": "hoeij@math.fsu.edu",
   "nsf_id": "000483679",
   "pi_start_date": "2016-06-28",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Florida State University",
  "inst_street_address": "874 TRADITIONS WAY",
  "inst_street_address_2": "",
  "inst_city_name": "TALLAHASSEE",
  "inst_state_code": "FL",
  "inst_state_name": "Florida",
  "inst_phone_num": "8506445260",
  "inst_zip_code": "323060001",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "FL02",
  "org_lgl_bus_name": "FLORIDA STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "JF2BLNN4PJC3"
 },
 "perf_inst": {
  "perf_inst_name": "Florida State University",
  "perf_str_addr": "1017 Academic Way",
  "perf_city_name": "Tallahassee",
  "perf_st_code": "FL",
  "perf_st_name": "Florida",
  "perf_zip_code": "323064166",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "FL02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7933",
   "pgm_ref_txt": "NUM, SYMBOL, & ALGEBRA COMPUT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 449999.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project supported the PI and four PhD students, Erdal Imamoglu, Wen Xu, Shayea Aldossari and Yi Zhou. In addition to their PhD theses (3 completed and 1 in progress), it also supported 13 papers (10 published and 3 accepted). Algorithms have been developed and implemented that are used by other researchers. These algorithms are available online, and several have been adopted by computer algebra systems.<br /><br />Linear differential equations with rational function coefficients appear in a wide variety of problems in mathematics, science, and engineering. Such equations are often solved numerically. Computer algebra systems are used to find closed form solutions. This means that solutions are given exactly instead of approximately; presented with formulas instead of numbers.<br /><br />With prior NSF support, the PI and his graduate students developed algorithms for second order equations. These algorithms proved that closed form solutions are far more common than previously thought. This raised the question if that is also true for higher order equations. To answer this, Wen Xu (PhD 2017) developed algorithms and tools to find solutions in terms of A-hypergeometric functions. The first question we studied was, if an A-hypergeometric systems is reducible, and has a factor that corresponds to a system of order two, must that system have closed form solutions? This turned out to be the case in all examples we considered, which includes all A-hypergeometric systems of rank three. One can ask a similar question for higher order factors. To answer this, more tools were needed, in particular a method to simplify a differential equation to a standard form, which was developed by Imamoglu and Aldossari.<br /><br />Erdal Imamoglu (PhD 2017) developed a method for simplifying equations, and another algorithm for solving the simplified equation. This simplification is done by computing an \"integral basis\", which consists of transformations that erase poles at all but one of the points. Among those transformations, Imamoglu's algorithm selects one that minimizes the pole order at that one remaining point. This reduces the equation to near optimal form. This reduction turned out to be a key step towards finding closed form solutions.<br />Shayea Aldossari (PhD 2020) extended the integral basis method to more general differential equations, specifically, those with irregular singularities. He also developed key additional methods for simplification as well. Combined, these methods allow a differential equation to be simplified to a standard form.<br /><br />Yi Zhou (PhD expected in 2021) is currently working on factoring difference operators, related algorithms and applications. A highly efficient implementation is now available, allowing the computation of closed form solutions for higher order recurrence relations.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 05/05/2021<br>\n\t\t\t\t\tModified by: Mark&nbsp;Van Hoeij</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project supported the PI and four PhD students, Erdal Imamoglu, Wen Xu, Shayea Aldossari and Yi Zhou. In addition to their PhD theses (3 completed and 1 in progress), it also supported 13 papers (10 published and 3 accepted). Algorithms have been developed and implemented that are used by other researchers. These algorithms are available online, and several have been adopted by computer algebra systems.\n\nLinear differential equations with rational function coefficients appear in a wide variety of problems in mathematics, science, and engineering. Such equations are often solved numerically. Computer algebra systems are used to find closed form solutions. This means that solutions are given exactly instead of approximately; presented with formulas instead of numbers.\n\nWith prior NSF support, the PI and his graduate students developed algorithms for second order equations. These algorithms proved that closed form solutions are far more common than previously thought. This raised the question if that is also true for higher order equations. To answer this, Wen Xu (PhD 2017) developed algorithms and tools to find solutions in terms of A-hypergeometric functions. The first question we studied was, if an A-hypergeometric systems is reducible, and has a factor that corresponds to a system of order two, must that system have closed form solutions? This turned out to be the case in all examples we considered, which includes all A-hypergeometric systems of rank three. One can ask a similar question for higher order factors. To answer this, more tools were needed, in particular a method to simplify a differential equation to a standard form, which was developed by Imamoglu and Aldossari.\n\nErdal Imamoglu (PhD 2017) developed a method for simplifying equations, and another algorithm for solving the simplified equation. This simplification is done by computing an \"integral basis\", which consists of transformations that erase poles at all but one of the points. Among those transformations, Imamoglu's algorithm selects one that minimizes the pole order at that one remaining point. This reduces the equation to near optimal form. This reduction turned out to be a key step towards finding closed form solutions.\nShayea Aldossari (PhD 2020) extended the integral basis method to more general differential equations, specifically, those with irregular singularities. He also developed key additional methods for simplification as well. Combined, these methods allow a differential equation to be simplified to a standard form.\n\nYi Zhou (PhD expected in 2021) is currently working on factoring difference operators, related algorithms and applications. A highly efficient implementation is now available, allowing the computation of closed form solutions for higher order recurrence relations.\n\n\t\t\t\t\tLast Modified: 05/05/2021\n\n\t\t\t\t\tSubmitted by: Mark Van Hoeij"
 }
}