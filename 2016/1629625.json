{
 "awd_id": "1629625",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "XPS:FULL: MSLO-JS: Towards Multi-SLO-Guaranteed per-Job Scheduling in Datacenters",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 799950.0,
 "awd_amount": 815950.0,
 "awd_min_amd_letter_date": "2016-08-26",
 "awd_max_amd_letter_date": "2018-01-16",
 "awd_abstract_narration": "Today's datacenters enable a wide range of applications with diverse service-level \r\nobjectives (SLOs), e.g., user-facing applications such as web searches and disaster \r\nrecoveries that require real-time or near-real-time responses, calling for stringent job \r\nlatency and throughput guarantees. However, due to the lack of a proper abstraction, \r\nthe existing SLO-aware job resource provisioning approaches are platform dependent \r\nand trial-and-error by design. The proposed solution presents a new abstraction that \r\nprovides an effective separation of concerns and thus makes it possible to develop \r\nplatform-independent, portable algorithms that translate diverse job SLOs into exact \r\nperformance objectives (a.k.a. budgets) for constituent tasks, resulting in \r\nSLO-guaranteed job resource provisioning. The approach proposed can be proven \r\nby design and is expected to provide (a) important insights into computer systems \r\nand architecture designs with high performance guarantees and cost-effectiveness; \r\nand  (b) significant improvements in performance guarantees and resource utilization, \r\nand the reduction of operating cost for the increasingly popular cloud computing \r\nenvironment. It is also expected to encourage academia-and-industry,interdisciplinary \r\nand cross-layer collaborations.\r\n\r\nThe proposed research develops a sound theoretical foundation to enable \r\nSLO-guaranteed job resource provisioning. It explores fundamental design principles \r\nand is cross-layer by design, involving a two-layer design, from applications to runtime \r\nsystem and system architecture. At the upper, application layer, with any given job \r\nworkflow represented in the form of Directed Acyclic Graphs (DAGs), the job SLOs are \r\ntranslated into precise latency budgets for individual task nodes in the DAG, independent \r\nof the underlying system to be used to run the job. At the lower, runtime system layer, the \r\nsubsystems for individual task nodes are selected and the resources are allocated to meet \r\nall the task performance budgets and hence the job SLOs. This proposed research will \r\nenable us to develop job resource provisioning algorithms with SLO guarantee, while \r\nallowing for service consolidation and achieving high datacenter resource utilization.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Hao",
   "pi_last_name": "Che",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Hao Che",
   "pi_email_addr": "hche@cse.uta.edu",
   "nsf_id": "000180258",
   "pi_start_date": "2016-08-26",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Hong",
   "pi_last_name": "Jiang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Hong Jiang",
   "pi_email_addr": "hong.jiang@uta.edu",
   "nsf_id": "000358351",
   "pi_start_date": "2016-08-26",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Yu",
   "pi_last_name": "Lei",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Yu Lei",
   "pi_email_addr": "ylei@cse.uta.edu",
   "nsf_id": "000253964",
   "pi_start_date": "2016-08-26",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Texas at Arlington",
  "inst_street_address": "701 S NEDDERMAN DR",
  "inst_street_address_2": "",
  "inst_city_name": "ARLINGTON",
  "inst_state_code": "TX",
  "inst_state_name": "Texas",
  "inst_phone_num": "8172722105",
  "inst_zip_code": "760199800",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "TX25",
  "org_lgl_bus_name": "UNIVERSITY OF TEXAS AT ARLINGTON",
  "org_prnt_uei_num": "",
  "org_uei_num": "LMLUKUPJJ9N3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Texas at Arlington",
  "perf_str_addr": "University of Texas at Arlington",
  "perf_city_name": "Arlington",
  "perf_st_code": "TX",
  "perf_st_name": "Texas",
  "perf_zip_code": "760190145",
  "perf_ctry_code": "US",
  "perf_cong_dist": "25",
  "perf_st_cong_dist": "TX25",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "828300",
   "pgm_ele_name": "Exploiting Parallel&Scalabilty"
  },
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 799950.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Today's datacenters enable a wide range of applications with diverse service-level objectives (SLOs), e.g., user-facing applications such as web search, social networking, and disaster recoveries that require real-time or near-real-time responses, calling for stringent job latency and throughput guarantees. However, due to the lack of a proper abstraction, the existing SLO-aware job resource provisioning approaches are platform dependent and trial-and-error by design. The proposed solution presents a new abstraction that provides an effective separation of concerns and thus makes it possible to develop platform-independent, portable algorithms that translate job SLOs into exact <br />performance objectives (a.k.a. budgets) for constituent tasks, resulting in <br />SLO-guaranteed job resource provisioning. The approach proposed can be proven by design and provide (a) important insights into computer systems <br />and architecture designs with high performance guarantees and cost-effectiveness; and  (b) significant improvements in performance guarantees and resource utilization, and the reduction of operating cost for the increasingly popular cloud computing environments. It is also expected to encourage academia-and-industry, interdisciplinary and cross-layer collaborations.<br /><br />The proposed research develops a sound theoretical foundation to enable <br />SLO-guaranteed job resource provisioning. It explores fundamental design principles and is cross-layer by design, involving a two-layer design, from applications to runtime system and system architecture. At the upper, application layer, with any given job workflow represented in the form of Directed Acyclic Graphs (DAGs), the job SLOs are translated into precise latency budgets for individual task nodes in the DAG, independent <br />of the underlying system to be used to run the job. At the lower, runtime system layer, the subsystems for individual task nodes are selected and the resources are allocated to meet all the task performance budgets and hence the job SLOs. This proposed research enables us to develop job resource provisioning algorithms with SLO guarantee, while allowing for service consolidation and achieving high datacenter resource utilization.</p>\n<p>This project has made two major breakthroughs:</p>\n<p>(a) We demonstrated how the tail-latency-SLO-to-task-budget mapping  developed by ourselves can be used by a job scheduler to achieve  tail-latency guarantee for jobs with distinct tail-latency SLOs. This  solution successfully addresses the two major shortcomings of the  existing tail-latency-SLO-aware job schedulers: (i) the need of resource  overprovisioning; and (ii) the inability of meeting multiple  tail-latency SLOs and dealing with jobs with distinct fanout degrees.  This is the first work of its kind, which is expected to stimulate  significant research interests along the same line;</p>\n<p>(b) We  developed and implemented an SLO decomposition technique based on the  DAG critical path concept to allow effective SLO to task budget mapping  for general DAG workflows. Again, this is the first work of its kind,  which opens up the opportunitiy to provide true SLO-guaranteed service  for job scheduling.&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/22/2020<br>\n\t\t\t\t\tModified by: Hao&nbsp;Che</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nToday's datacenters enable a wide range of applications with diverse service-level objectives (SLOs), e.g., user-facing applications such as web search, social networking, and disaster recoveries that require real-time or near-real-time responses, calling for stringent job latency and throughput guarantees. However, due to the lack of a proper abstraction, the existing SLO-aware job resource provisioning approaches are platform dependent and trial-and-error by design. The proposed solution presents a new abstraction that provides an effective separation of concerns and thus makes it possible to develop platform-independent, portable algorithms that translate job SLOs into exact \nperformance objectives (a.k.a. budgets) for constituent tasks, resulting in \nSLO-guaranteed job resource provisioning. The approach proposed can be proven by design and provide (a) important insights into computer systems \nand architecture designs with high performance guarantees and cost-effectiveness; and  (b) significant improvements in performance guarantees and resource utilization, and the reduction of operating cost for the increasingly popular cloud computing environments. It is also expected to encourage academia-and-industry, interdisciplinary and cross-layer collaborations.\n\nThe proposed research develops a sound theoretical foundation to enable \nSLO-guaranteed job resource provisioning. It explores fundamental design principles and is cross-layer by design, involving a two-layer design, from applications to runtime system and system architecture. At the upper, application layer, with any given job workflow represented in the form of Directed Acyclic Graphs (DAGs), the job SLOs are translated into precise latency budgets for individual task nodes in the DAG, independent \nof the underlying system to be used to run the job. At the lower, runtime system layer, the subsystems for individual task nodes are selected and the resources are allocated to meet all the task performance budgets and hence the job SLOs. This proposed research enables us to develop job resource provisioning algorithms with SLO guarantee, while allowing for service consolidation and achieving high datacenter resource utilization.\n\nThis project has made two major breakthroughs:\n\n(a) We demonstrated how the tail-latency-SLO-to-task-budget mapping  developed by ourselves can be used by a job scheduler to achieve  tail-latency guarantee for jobs with distinct tail-latency SLOs. This  solution successfully addresses the two major shortcomings of the  existing tail-latency-SLO-aware job schedulers: (i) the need of resource  overprovisioning; and (ii) the inability of meeting multiple  tail-latency SLOs and dealing with jobs with distinct fanout degrees.  This is the first work of its kind, which is expected to stimulate  significant research interests along the same line;\n\n(b) We  developed and implemented an SLO decomposition technique based on the  DAG critical path concept to allow effective SLO to task budget mapping  for general DAG workflows. Again, this is the first work of its kind,  which opens up the opportunitiy to provide true SLO-guaranteed service  for job scheduling. \n\n\t\t\t\t\tLast Modified: 12/22/2020\n\n\t\t\t\t\tSubmitted by: Hao Che"
 }
}