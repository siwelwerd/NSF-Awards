{
 "awd_id": "1565336",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Large: Collaborative Research: Next Generation Communication Mechanisms exploiting Heterogeneity, Hierarchy and Concurrency for Emerging HPC Systems",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927498",
 "po_email": "achtchel@nsf.gov",
 "po_sign_block_name": "Almadena Chtchelkanova",
 "awd_eff_date": "2016-08-15",
 "awd_exp_date": "2020-07-31",
 "tot_intn_awd_amt": 405651.0,
 "awd_amount": 405651.0,
 "awd_min_amd_letter_date": "2016-08-04",
 "awd_max_amd_letter_date": "2016-08-04",
 "awd_abstract_narration": "This award was partially supported by the CIF21 Software Reuse Venture whose goals are to support pathways towards sustainable software elements through their reuse, and to emphasize the critical role of reusable software elements in a sustainable software cyberinfrastructure to support computational and data-enabled science and engineering.\r\n\r\nParallel programming based on MPI (Message Passing Interface) is being used with increased frequency in academia, government (defense and non-defense uses), as well as emerging uses in scalable machine learning and big data analytics. The emergence of Dense Many-Core (DMC) architectures like Intel's Knights Landing (KNL) and accelerator/co-processor architectures like NVIDIA GPGPUs are enabling the design of systems with high compute density. This, coupled with the availability of Remote Direct Memory Access (RDMA)-enabled commodity networking technologies like InfiniBand, RoCE, and 10/40GigE with iWARP, is fueling the growth of multi-petaflop and ExaFlop systems. These DMC architectures have the following unique characteristics: deeper levels of hierarchical memory; revolutionary network interconnects; and heterogeneous compute power and data movement costs (with heterogeneity at chip-level and node-level). \r\nFor these emerging systems, a combination of MPI  and other programming models, known as MPI+X (where X can be PGAS, Tasks, OpenMP, OpenACC, or CUDA), are being targeted.  The current generation communication protocols and mechanisms for MPI+X programming models cannot efficiently support the emerging DMC architectures.  This leads to the following broad challenges: 1) How can high-performance and scalable communication mechanisms for next generation DMC architectures be designed to support MPI+X (including Task-based) programming models? and 2) How can the current and next generation applications be designed/co-designed with the proposed communication mechanisms?\r\n\r\nA synergistic and comprehensive research plan, involving computer scientists from The Ohio State University (OSU) and Ohio Supercomputer Center (OSC) and computational scientists from the Texas Advanced Computing Center (TACC), San Diego Supercomputer Center (SDSC) and University of California San Diego (UCSD), is proposed to address the above broad challenges with innovative solutions.  The research will be driven by a set of applications from established NSF computational science researchers running large scale simulations on Stampede and Comet and other systems at OSC and OSU.  The proposed designs will be integrated into the widely-used MVAPICH2 library and made available for public use.  Multiple graduate and undergraduate students will be trained under this project as future scientists and engineers in HPC. The established national-scale training and outreach programs at TACC, SDSC and OSC will be used to disseminate the results of this research to XSEDE users. Tutorials will be organized at XSEDE, SC and other conferences to share the research results and experience with the community.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Amitava",
   "pi_last_name": "Majumdar",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Amitava Majumdar",
   "pi_email_addr": "majumdar@sdsc.edu",
   "nsf_id": "000413199",
   "pi_start_date": "2016-08-04",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Mahidhar",
   "pi_last_name": "Tatineni",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Mahidhar Tatineni",
   "pi_email_addr": "Mahidhar@sdsc.edu",
   "nsf_id": "000643983",
   "pi_start_date": "2016-08-04",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-San Diego",
  "inst_street_address": "9500 GILMAN DR",
  "inst_street_address_2": "",
  "inst_city_name": "LA JOLLA",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8585344896",
  "inst_zip_code": "920930021",
  "inst_country_name": "United States",
  "cong_dist_code": "50",
  "st_cong_dist_code": "CA50",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, SAN DIEGO",
  "org_prnt_uei_num": "",
  "org_uei_num": "UYTTZT6G9DT1"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-San Diego",
  "perf_str_addr": "9500 Gilman Dr. MC0934",
  "perf_city_name": "La Jolla",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "920930934",
  "perf_ctry_code": "US",
  "perf_cong_dist": "50",
  "perf_st_cong_dist": "CA50",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7925",
   "pgm_ref_txt": "LARGE PROJECT"
  },
  {
   "pgm_ref_code": "7942",
   "pgm_ref_txt": "HIGH-PERFORMANCE COMPUTING"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 405651.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p id=\"docs-internal-guid-f5289374-7fff-f5d5-6463-495efcbb779d\" dir=\"ltr\"><span>Current generation multi-petascale systems are being powered by modern multi-core architectures like Intel Cascade Lake and AMD Rome, and accelerators from NVIDIA and AMD. These systems have tight integration with Remote Direct Memory Access (RDMA) enabled high-performance networking technologies like InfiniBand, Omni-Path, and RDMA over Converged Enhanced Ethernet (RoCE). Such architectures are being defined as Dense Many-Core (DMC) systems. These systems are starkly different from homogeneous clusters of the past. These evolving DMC systems are targeted for emerging exascale computing and are characterized by: 1) Deeper levels of hierarchical memory, 2) Revolutionary network interconnects, and 3) Heterogeneous compute power and data movement costs (with heterogeneity at chip-level and node-level).</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>The Message Passing Interface (MPI) has been the de-facto parallel programming model for the past two decades and is very successful in implementing regular and iterative parallel algorithms with well-defined communication patterns.&nbsp; The Remote Memory Access (RMA) features of the MPI-3 standard have shown promise for expressing algorithms that have irregular computation and communication patterns by enabling light-weight one-sided communication and synchronization operations.&nbsp; On the other hand, owing to dramatic changes in the architectures (high concurrency and low memory per-core), hybrid programming models such as MPI+OpenMP and MPI+OpenACC/CUDA are being adopted as some of the primary programming models for High-Performance Computing (HPC) applications. The evolution and diversity of programming models and their hybrid usage modes for next-generation systems is being defined in a generic manner in the community as the `MPI+X' model.</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>On the other hand, task-based programming models and runtimes such as the Asynchronous PGAS (APGAS) models seem to be able to achieve efficient load balancing, fault tolerance and latency hiding for highly irregular communication patterns. However, it may not be ideal to express global control flow and global communication. Thus, MPI+Task (as another form of X) has been gaining momentum in the community.&nbsp; However, designing a unified resource progression mechanism to avoid resource starvation and/or deadlocks for the MPI+Task model is opening up several research challenges due to the fundamental differences in the flow of control between the two models - MPI being user-driven control flow and APGAS/Task-based&nbsp; model using system/runtime scheduler driven control. These trends lead to the following broad challenges: 1) How can high-performance and scalable communication mechanisms for next-generation DMC architectures be designed to support MPI+X (including Task-based) programming models? and 2) How can the current and next-generation applications be designed/co-designed with the proposed communication mechanisms?</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>To address the above outlined challenges, in this project, we have adopted a multi-year and multi-tiered approach to exploit emerging DMC architectures and design optimized runtimes for supporting MPI and MPI+X programming models. Challenges have been addressed along the following directions:</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>1. Designing and developing high-performance, contention-aware, and scalable point-to-point and collective communication protocols and algorithms for DMC heterogeneous systems with latest generation CPUs and GPUs.</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>2. Designing and developing dynamic and adaptive communication protocols for contiguous and non-contiguous data layout in MPI.</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>3. Designing efficient communication and synchronization schemes for MPI+PGAS and MPI+X programming models.</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>4. Carrying out in-depth study of the new designs with a range of computing and networking technologies.</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>5. Co-designing a set of&nbsp; applications with the new runtimes and studied performance and scalability on a set of contemporary multi-petaflop systems.</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>6. Deploying the new frameworks and runtimes on various HPC systems at Ohio Supercomputer Center (OSC), Texas Advanced Computing Center (TACC), and San Diego Supercomputer Center (SDSC) and carrying out continuous engagement with their users to improve and optimize the designs and deliver better performance and scalability for a large number of applications.</span></p>\n<p dir=\"ltr\"><span>The results of this research (new designs, performance results, benchmarks, etc.) have been made available to the community through the MVAPICH2 MPI&nbsp; libraries. Multiple releases of these libraries have been made during the project period. More than 400,000 copies of the MVAPICH2 MPI libraries have been downloaded from the project's web site during this project period. In each of these releases, features, performance numbers and scalability information have been shared with the MVAPICH user community through mailing lists and the project's web site.&nbsp; In addition to the software distribution, the results have been presented at various conferences and journals and events through Keynote talks, invited talks, tutorials, and hands-on sessions.&nbsp; The research has also led to thesis for several M.S. and Ph.D. students.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/28/2020<br>\n\t\t\t\t\tModified by: Amitava&nbsp;Majumdar</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "Current generation multi-petascale systems are being powered by modern multi-core architectures like Intel Cascade Lake and AMD Rome, and accelerators from NVIDIA and AMD. These systems have tight integration with Remote Direct Memory Access (RDMA) enabled high-performance networking technologies like InfiniBand, Omni-Path, and RDMA over Converged Enhanced Ethernet (RoCE). Such architectures are being defined as Dense Many-Core (DMC) systems. These systems are starkly different from homogeneous clusters of the past. These evolving DMC systems are targeted for emerging exascale computing and are characterized by: 1) Deeper levels of hierarchical memory, 2) Revolutionary network interconnects, and 3) Heterogeneous compute power and data movement costs (with heterogeneity at chip-level and node-level).\n\n \nThe Message Passing Interface (MPI) has been the de-facto parallel programming model for the past two decades and is very successful in implementing regular and iterative parallel algorithms with well-defined communication patterns.  The Remote Memory Access (RMA) features of the MPI-3 standard have shown promise for expressing algorithms that have irregular computation and communication patterns by enabling light-weight one-sided communication and synchronization operations.  On the other hand, owing to dramatic changes in the architectures (high concurrency and low memory per-core), hybrid programming models such as MPI+OpenMP and MPI+OpenACC/CUDA are being adopted as some of the primary programming models for High-Performance Computing (HPC) applications. The evolution and diversity of programming models and their hybrid usage modes for next-generation systems is being defined in a generic manner in the community as the `MPI+X' model.\n\n \nOn the other hand, task-based programming models and runtimes such as the Asynchronous PGAS (APGAS) models seem to be able to achieve efficient load balancing, fault tolerance and latency hiding for highly irregular communication patterns. However, it may not be ideal to express global control flow and global communication. Thus, MPI+Task (as another form of X) has been gaining momentum in the community.  However, designing a unified resource progression mechanism to avoid resource starvation and/or deadlocks for the MPI+Task model is opening up several research challenges due to the fundamental differences in the flow of control between the two models - MPI being user-driven control flow and APGAS/Task-based  model using system/runtime scheduler driven control. These trends lead to the following broad challenges: 1) How can high-performance and scalable communication mechanisms for next-generation DMC architectures be designed to support MPI+X (including Task-based) programming models? and 2) How can the current and next-generation applications be designed/co-designed with the proposed communication mechanisms?\n\n \nTo address the above outlined challenges, in this project, we have adopted a multi-year and multi-tiered approach to exploit emerging DMC architectures and design optimized runtimes for supporting MPI and MPI+X programming models. Challenges have been addressed along the following directions:\n\n \n1. Designing and developing high-performance, contention-aware, and scalable point-to-point and collective communication protocols and algorithms for DMC heterogeneous systems with latest generation CPUs and GPUs.\n\n \n2. Designing and developing dynamic and adaptive communication protocols for contiguous and non-contiguous data layout in MPI.\n\n \n3. Designing efficient communication and synchronization schemes for MPI+PGAS and MPI+X programming models.\n\n \n4. Carrying out in-depth study of the new designs with a range of computing and networking technologies.\n\n \n5. Co-designing a set of  applications with the new runtimes and studied performance and scalability on a set of contemporary multi-petaflop systems.\n\n \n6. Deploying the new frameworks and runtimes on various HPC systems at Ohio Supercomputer Center (OSC), Texas Advanced Computing Center (TACC), and San Diego Supercomputer Center (SDSC) and carrying out continuous engagement with their users to improve and optimize the designs and deliver better performance and scalability for a large number of applications.\nThe results of this research (new designs, performance results, benchmarks, etc.) have been made available to the community through the MVAPICH2 MPI  libraries. Multiple releases of these libraries have been made during the project period. More than 400,000 copies of the MVAPICH2 MPI libraries have been downloaded from the project's web site during this project period. In each of these releases, features, performance numbers and scalability information have been shared with the MVAPICH user community through mailing lists and the project's web site.  In addition to the software distribution, the results have been presented at various conferences and journals and events through Keynote talks, invited talks, tutorials, and hands-on sessions.  The research has also led to thesis for several M.S. and Ph.D. students.\n\n \n\n\t\t\t\t\tLast Modified: 11/28/2020\n\n\t\t\t\t\tSubmitted by: Amitava Majumdar"
 }
}