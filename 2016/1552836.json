{
 "awd_id": "1552836",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: At-scale Analysis of Issues in Cyber-Security and Software Engineering",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2016-05-15",
 "awd_exp_date": "2022-04-30",
 "tot_intn_awd_amt": 487243.0,
 "awd_amount": 503243.0,
 "awd_min_amd_letter_date": "2016-05-17",
 "awd_max_amd_letter_date": "2020-05-25",
 "awd_abstract_narration": "One of the most significant challenges in cybersecurity is that humans are involved in software engineering and inevitably make security mistakes in their implementation of specifications, leading to software vulnerabilities. A challenge to eliminating these mistakes is the relative lack of empirical evidence regarding what secure coding practices  (e.g., secure defaults, validating client data, etc.), threat modeling, and educational solutions are effective in reducing the number of application-level vulnerabilities that software engineers produce. This research aims to perform experiments analyzing programming assignment submissions to Massively Open Online Courses (MOOCs) before and after secure coding and threat modeling techniques are taught to empirically measure their impact on the rate of security vulnerabilities in assignment implementations. A key component of this research will be the use of MOOC assignment specifications and variations that have the potential to be affected by common cybersecurity vulnerabilities, such as problems with input validation to web applications or privilege escalation on mobile platforms. Because these critical security implementation issues will be known ahead of time, the MOOC assignments will allow automated assessment of how successfully each assignment implementation manages these security issues.\r\n\r\nKey questions investigated by this research include analyzing the impact of varying secure coding and threat modeling techniques on vulnerability production in software, what level of abstraction these techniques need to be taught at to be effective, the relative return on investment of threat modeling vs. automated vulnerability assessment effort, and the comparative effectiveness of making developers aware of security issues versus requiring active application of secure coding and threat modeling techniques. The broader impact of this research is substantial. Very little empirical data is available for organizations to use to properly value the secure coding and threat modeling techniques that have been developed. By creating a large body of rigorous evidence to illustrate how effective (or possibly not effective) different techniques are, the research will allow organizations to evaluate their return on investment and improve the use of these techniques in the software engineering process.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Christopher",
   "pi_last_name": "White",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Christopher J White",
   "pi_email_addr": "jules.white@vanderbilt.edu",
   "nsf_id": "000520194",
   "pi_start_date": "2016-05-17",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Vanderbilt University",
  "inst_street_address": "110 21ST AVE S",
  "inst_street_address_2": "",
  "inst_city_name": "NASHVILLE",
  "inst_state_code": "TN",
  "inst_state_name": "Tennessee",
  "inst_phone_num": "6153222631",
  "inst_zip_code": "372032416",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "TN05",
  "org_lgl_bus_name": "VANDERBILT UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "GTNBNWXJ12D5"
 },
 "perf_inst": {
  "perf_inst_name": "Vanderbilt University",
  "perf_str_addr": "1400 18th Avenue South",
  "perf_city_name": "Nashville",
  "perf_st_code": "TN",
  "perf_st_name": "Tennessee",
  "perf_zip_code": "372122809",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "TN05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 88973.0
  },
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 93004.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 113237.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 101681.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 106348.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span>The source of many security issues is a software vulnerability produced by an error in how a developer designed or implemented some component of the software. A key question is what techniques can be used to better educate about and assist software developers in identifying vulnerabilities in source code. Part of this reserarch work on has focused on the secure coding checklists that developers are often provided or seek out to help audit their source code. This research has helped identify that the disconnect between the level that many secure coding / vulnerability explanations are communicated (e.g., patterns) and the concrete realization in a framework, creates decidability problems for software engineers. The lack of specific guidance on mapping vulnerabilities and secure coding techniques into different frameworks generates knowledge gaps that lead to vulnerabilities. Moreover, the specificity required to create decidable guidance to engineers causes knowledge limits or eliminates reusability, leading to loss of knowledge between contexts. The work has helped demonstrate the deficiencies in these common mechanisms for communicating software vulnerabilities to software engineers and shown that additional supports are needed to assist software engineers. One promising area of support is the use of deep learning to assist developers in understanding how to securely implement software features. This research has included investigation of deep learning techniques to understand developer intentions and aid in production of correct source code. The findings from the work have been incorporated into the design of a variety of educational materials, including MOOC courses available online.&nbsp;</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/01/2022<br>\n\t\t\t\t\tModified by: Christopher&nbsp;J&nbsp;White</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe source of many security issues is a software vulnerability produced by an error in how a developer designed or implemented some component of the software. A key question is what techniques can be used to better educate about and assist software developers in identifying vulnerabilities in source code. Part of this reserarch work on has focused on the secure coding checklists that developers are often provided or seek out to help audit their source code. This research has helped identify that the disconnect between the level that many secure coding / vulnerability explanations are communicated (e.g., patterns) and the concrete realization in a framework, creates decidability problems for software engineers. The lack of specific guidance on mapping vulnerabilities and secure coding techniques into different frameworks generates knowledge gaps that lead to vulnerabilities. Moreover, the specificity required to create decidable guidance to engineers causes knowledge limits or eliminates reusability, leading to loss of knowledge between contexts. The work has helped demonstrate the deficiencies in these common mechanisms for communicating software vulnerabilities to software engineers and shown that additional supports are needed to assist software engineers. One promising area of support is the use of deep learning to assist developers in understanding how to securely implement software features. This research has included investigation of deep learning techniques to understand developer intentions and aid in production of correct source code. The findings from the work have been incorporated into the design of a variety of educational materials, including MOOC courses available online. \n\n \n\n\t\t\t\t\tLast Modified: 06/01/2022\n\n\t\t\t\t\tSubmitted by: Christopher J White"
 }
}