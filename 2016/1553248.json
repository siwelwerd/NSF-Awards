{
 "awd_id": "1553248",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: An Information Theoretic Perspective of Consistent Distributed Storage Systems",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922981",
 "po_email": "pregalia@nsf.gov",
 "po_sign_block_name": "Phillip Regalia",
 "awd_eff_date": "2016-02-15",
 "awd_exp_date": "2023-01-31",
 "tot_intn_awd_amt": 497847.0,
 "awd_amount": 497847.0,
 "awd_min_amd_letter_date": "2016-01-29",
 "awd_max_amd_letter_date": "2020-02-26",
 "awd_abstract_narration": "Broader Significance:\r\n\r\nKey-value stores form an integral infrastructural component of numerous modern web-based applications including retail stores, multi-player games, reservation systems, news feeds, and social and professional networks. Cloud computing service providers commonly implement key-value stores over large scale distributed data storage systems. At the heart of key-value store implementations in distributed storage systems, there are carefully crafted algorithms that expose a consistent, current view of the stored data to a user who reads the data.  The main purpose of this project is to undertake a formal study of the storage costs incurred in distributed storage systems which aspire to present a consistent, current view of the stored data. The project has the long-term potential to aid the development of new data storage techniques that can benefit key-value store implementations by reducing their storage cost and energy consumption.\r\n\r\nTechnical Description:\r\n\r\nAn important requirement of a distributed data storage system is fault tolerance, that is, the data must be accessible even if the system components fail. In applications of distributed storage to distributed computing and implementation of key-value stores, the following property known as consistency is also critical: when the data is being constantly updated, a user that reads from the system should obtain the latest version of the data. Algorithms that ensure consistency and fault tolerance in storage systems have been extensively studied in distributed systems theory and practice. The goal of this project is to obtain, for the first time, an information theoretic understanding of the storage costs incurred in consistent, fault-tolerant distributed storage systems.\r\n\r\nBuilding on preliminary work by the investigator, the project will develop and study several new information theoretic formulations inspired by distributed systems theory and practice. The proposed formulations naturally expose trade-offs between the degrees of redundancy and consistency, and other physical parameters of storage systems. New coding schemes and information theoretic converses for the proposed formulations will be developed using tools from algebra, combinatorics and network information theory. The project will also pursue the development of new bounds for network coding, which naturally apply to the newly proposed formulations and to other families of codes including locally repairable codes and regenerating codes. The project will likewise develop an education plan that eyes the long term goal of developing interdisciplinary researchers and engineers who are trained in information theory, coding theory, and the theory and design of distributed systems.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Viveck",
   "pi_last_name": "Cadambe",
   "pi_mid_init": "R",
   "pi_sufx_name": "",
   "pi_full_name": "Viveck R Cadambe",
   "pi_email_addr": "vcadambe6@gatech.edu",
   "nsf_id": "000677546",
   "pi_start_date": "2016-01-29",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Pennsylvania State Univ University Park",
  "inst_street_address": "201 OLD MAIN",
  "inst_street_address_2": "",
  "inst_city_name": "UNIVERSITY PARK",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "8148651372",
  "inst_zip_code": "168021503",
  "inst_country_name": "United States",
  "cong_dist_code": "15",
  "st_cong_dist_code": "PA15",
  "org_lgl_bus_name": "THE PENNSYLVANIA STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "NPM2J7MSCF61"
 },
 "perf_inst": {
  "perf_inst_name": "Pennsylvania State Univ University Park",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "168027000",
  "perf_ctry_code": "US",
  "perf_cong_dist": null,
  "perf_st_cong_dist": "PA",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779700",
   "pgm_ele_name": "Comm & Information Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7935",
   "pgm_ref_txt": "COMM & INFORMATION THEORY"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 192086.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 201554.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 104207.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Modern cloud data storage services are designed to ensure that the data is available to users even if some system components (such as servers) fail. This failure tolerance property is commonly ensured by replicating the data on multiple servers. Several applications such as reservation systems, financial transactions, and multiplayer gaming require storage systems to satisfy a property called consistency in addition to failure tolerance. In simple terms, consistency means that the latest update of the data must be available to users accessing the data. Consistent data storage services employ several carefully designed distributed algorithms that simultaneously ensure both failure tolerance and consistency.</p>\n<p>Notably, data replication comes with a redundancy overhead to ensure failure tolerance. In the absence of consistency requirements, a technique called erasure coding from the area of information theory is well-known to incur significantly lower redundancy overhead as compared to data replication without lowering the degree of failure tolerance. This project studied the use of erasure coding for storage systems with consistency requirements. Specifically, the project developed information-theoretic trade-offs between failure tolerance and redundancy overhead for systems that can use erasure coding. It identified new factors that emerge in this trade-off due to the requirement of maintaining consistency. New erasure codes that are nearly optimal with respect to failure tolerance redundancy trade-offs were developed. The developed erasure coding techniques were incorporated into new distributed algorithms for consistent data storage. The cost benefits of these algorithms were analyzed and demonstrated through a prototype data storage system.</p>\n<p>The project trained master's and Ph.D. level students in the areas of information theory, error-correcting codes, and distributed algorithms.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 05/01/2023<br>\n\t\t\t\t\tModified by: Viveck&nbsp;R&nbsp;Cadambe</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nModern cloud data storage services are designed to ensure that the data is available to users even if some system components (such as servers) fail. This failure tolerance property is commonly ensured by replicating the data on multiple servers. Several applications such as reservation systems, financial transactions, and multiplayer gaming require storage systems to satisfy a property called consistency in addition to failure tolerance. In simple terms, consistency means that the latest update of the data must be available to users accessing the data. Consistent data storage services employ several carefully designed distributed algorithms that simultaneously ensure both failure tolerance and consistency.\n\nNotably, data replication comes with a redundancy overhead to ensure failure tolerance. In the absence of consistency requirements, a technique called erasure coding from the area of information theory is well-known to incur significantly lower redundancy overhead as compared to data replication without lowering the degree of failure tolerance. This project studied the use of erasure coding for storage systems with consistency requirements. Specifically, the project developed information-theoretic trade-offs between failure tolerance and redundancy overhead for systems that can use erasure coding. It identified new factors that emerge in this trade-off due to the requirement of maintaining consistency. New erasure codes that are nearly optimal with respect to failure tolerance redundancy trade-offs were developed. The developed erasure coding techniques were incorporated into new distributed algorithms for consistent data storage. The cost benefits of these algorithms were analyzed and demonstrated through a prototype data storage system.\n\nThe project trained master's and Ph.D. level students in the areas of information theory, error-correcting codes, and distributed algorithms.\n\n\t\t\t\t\tLast Modified: 05/01/2023\n\n\t\t\t\t\tSubmitted by: Viveck R Cadambe"
 }
}