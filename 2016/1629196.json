{
 "awd_id": "1629196",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "XPS: FULL: Collaborative Research: Rethinking Architecture Support for Memory Consistency",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 481096.0,
 "awd_amount": 481096.0,
 "awd_min_amd_letter_date": "2016-07-28",
 "awd_max_amd_letter_date": "2016-07-28",
 "awd_abstract_narration": "Despite decades of progress, writing correct parallel software to realize the value of modern parallel computer hardware remains extremely difficult. A key problem is that today's computer systems do not give all programs clear behavioral guarantees; \"ill-synchronized\" code, in which parallel computations are incompletely or incorrectly coordinated, has ill-defined, often destructive behavior. This problem is a key theoretical and practical flaw in nearly all parallel computer systems. This proposal addresses this challenge, by proposing a new class of parallel computer architectures with strong behavioral guarantees, even for ill-synchronized code. The key idea is to make systems safely terminate ill-synchronized program executions before they can cause problems. To avoid degrading availability, the project includes mechanisms to avoid terminating program executions when possible, by falling back to more permissive, yet safe and predictable behavioral guarantees, and by resolving potential errors caused by ill-synchronized code. The intellectual merits of the project are that it provides crucial behavioral guarantees even to ill-synchronized parallel code. The project eliminates outdated hardware models that not only provide inadequate behavioral guarantees, but are also complex, and power-hungry. The project is the first in this domain to directly address availability and correctness together. The project's broader significance and importance are that it will improve the reliability of all parallel systems, which affects all aspects of life: medicine, energy, transportation, health, defense, and business.  The stronger guarantees provided by this project avoid costly, dangerous failures and decrease the cost of application development, even in mature languages.  The project will generate results relevant to industry and will influence academia through publication. The project will directly influence secondary and higher education in computing, fostering a diverse, future STEM workforce.\r\n\r\nTo provide strong behavioral guarantees to all code -- even if incorrectly synchronized -- the proposed architectures provide region-atomic memory consistency guarantees for coarse-grained code regions.  In these architectures, a program's execution is either a serialization of code regions, or it terminates with an exception that indicates an error could have left memory inconsistent.  The architectures provide this strong memory consistency model to all program executions, departing from mainstream approaches to coherence and consistency that favor weaker guarantees without a clear benefit in complexity or performance.  In systems executing ill-synchronized code, frequent exceptions may too often terminate program executions, degrading availability. The proposed architectures avoid degrading availability by tolerating consistency violations with a well-defined snapshot isolation semantics that avoids exceptions, but does not guarantee serializability of code regions. The architectures further address availability by resolving exceptions, leveraging commutativity of code to avoid unnecessary exceptions for commutative operations, as well as using dynamic symbolic analysis to resolve exceptions by combining symbolic memory updates.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Brandon",
   "pi_last_name": "Lucia",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Brandon Lucia",
   "pi_email_addr": "blucia@andrew.cmu.edu",
   "nsf_id": "000688970",
   "pi_start_date": "2016-07-28",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133815",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "828300",
   "pgm_ele_name": "Exploiting Parallel&Scalabilty"
  }
 ],
 "pgm_ref": null,
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 481096.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p id=\"docs-internal-guid-eb96fc3f-7fff-42ad-6ba6-a194b94e38af\" style=\"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\" dir=\"ltr\"><span style=\"font-size: 10.5pt; font-family: Arial; color: #333333; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">In response to physical limitations, modern computer systems provide increasingly parallel (instead of sequential) resources, but making use of these resources correctly and efficiently is notoriously difficult and error prone. As a result, computer systems are unreliable and sometimes unavailable, and are difficult to program. The project focused specifically on how parallel resources in computer systems communicate with each other. It showed both how to relax the requirements for communication -- saving execution time and energy -- while also automatically providing correctness guarantees for programs written to use relaxed communication. The project personnel designed, implemented, and evaluated new computer processor designs that provided these reliability and cost-saving benefits, demonstrating their benefits over the previous state of the art.</span></p>\n<p style=\"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\" dir=\"ltr\"><span style=\"font-size: 10.5pt; font-family: Arial; color: #333333; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">The project's intellectual merit lies in its novel solutions to important technical problems. The project introduced a computer chip design that provided strong guarantees for computer software regardless of its communication patterns, but with lower execution time and energy usage than was previously known to be possible. It showed, for the first time, how to automatically and correctly avoid errors that can occur during execution as a result of providing stronger guarantees. The project demonstrated a novel approach for relaxing communication in computer systems while preserving system correctness.  The project showed that when the data processed by the computer have special (sparse) mathematical structure, new memory system architectures and memory consistency models can use knowledge about the structure to make accesses to these data faster and more efficient, improving the overall operation of the computer system.</span></p>\n<p style=\"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\" dir=\"ltr\"><span style=\"font-size: 10.5pt; font-family: Arial; color: #333333; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">The project's broader impacts include societal benefits, publications, implementations, education, mentoring, and outreach aimed at broadening participation in computer science. Computer systems affect virtually all aspects of society; improving systems' reliability and performance reduces labor and energy costs, and improves human well-being and safety by improving safety-critical systems and impacting areas such as medical technology. The project's results were published in widely read, peer-reviewed proceedings. The project personnel made all of their software and hardware implementations publicly available for other researchers to inspect and build upon. The project helped train undergraduate and graduate students in the project's technical areas, through undergraduate and graduate course material developed by the principal investigator (PI) and PhD students advised by the PI. The project enabled the PI to start and lead an organization aimed at introducing undergraduates -- especially undergraduates who are members of underrepresented groups -- to computer science research.</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/18/2022<br>\n\t\t\t\t\tModified by: Brandon&nbsp;Lucia</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "In response to physical limitations, modern computer systems provide increasingly parallel (instead of sequential) resources, but making use of these resources correctly and efficiently is notoriously difficult and error prone. As a result, computer systems are unreliable and sometimes unavailable, and are difficult to program. The project focused specifically on how parallel resources in computer systems communicate with each other. It showed both how to relax the requirements for communication -- saving execution time and energy -- while also automatically providing correctness guarantees for programs written to use relaxed communication. The project personnel designed, implemented, and evaluated new computer processor designs that provided these reliability and cost-saving benefits, demonstrating their benefits over the previous state of the art.\nThe project's intellectual merit lies in its novel solutions to important technical problems. The project introduced a computer chip design that provided strong guarantees for computer software regardless of its communication patterns, but with lower execution time and energy usage than was previously known to be possible. It showed, for the first time, how to automatically and correctly avoid errors that can occur during execution as a result of providing stronger guarantees. The project demonstrated a novel approach for relaxing communication in computer systems while preserving system correctness.  The project showed that when the data processed by the computer have special (sparse) mathematical structure, new memory system architectures and memory consistency models can use knowledge about the structure to make accesses to these data faster and more efficient, improving the overall operation of the computer system.\nThe project's broader impacts include societal benefits, publications, implementations, education, mentoring, and outreach aimed at broadening participation in computer science. Computer systems affect virtually all aspects of society; improving systems' reliability and performance reduces labor and energy costs, and improves human well-being and safety by improving safety-critical systems and impacting areas such as medical technology. The project's results were published in widely read, peer-reviewed proceedings. The project personnel made all of their software and hardware implementations publicly available for other researchers to inspect and build upon. The project helped train undergraduate and graduate students in the project's technical areas, through undergraduate and graduate course material developed by the principal investigator (PI) and PhD students advised by the PI. The project enabled the PI to start and lead an organization aimed at introducing undergraduates -- especially undergraduates who are members of underrepresented groups -- to computer science research.\n\n\t\t\t\t\tLast Modified: 01/18/2022\n\n\t\t\t\t\tSubmitted by: Brandon Lucia"
 }
}