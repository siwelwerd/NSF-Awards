{
 "awd_id": "1618542",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Collaborative Research:  Concurrent Software Verification  with Rely/Guarantee Abstraction",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2016-08-01",
 "awd_exp_date": "2018-01-31",
 "tot_intn_awd_amt": 249641.0,
 "awd_amount": 249641.0,
 "awd_min_amd_letter_date": "2016-05-19",
 "awd_max_amd_letter_date": "2016-05-19",
 "awd_abstract_narration": "It is now widely recognized that increasing the reliability of\r\nconcurrent software is one of the most important scientific and\r\ntechnological challenges in the emerging era of multi-core and\r\ndistributed computing.  The last decade has seen substantial advances\r\nin automatic verification technology to improve the reliability of\r\nsequential programs, and software tools that can be applied to large \r\nindustrial code bases. Unfortunately, the underlying technology of \r\nsuch tools cannot be directly applied to concurrent programs. \r\n\r\nThis project investigates scalable techniques for automatic verification of \r\nconcurrent software. The approach uses thread-modular decomposition of \r\nthe overall problem that does not completely decompose to the granularity \r\nof an individual thread. Since base components may exhibit concurrent \r\nbehavior, the investigators develop analysis algorithms for these base components \r\nso that they can be automatically proven correct with respect to their environment\r\ndescription and vice-versa. This work yields automatic verification tools that \r\nexploit richer notions of modular reasoning about parallelism, thereby offering \r\nimproved scalability and robustness over previous approaches. The project team\r\nincludes graduate and undergraduate students.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Eric",
   "pi_last_name": "Koskinen",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Eric Koskinen",
   "pi_email_addr": "eric.koskinen@stevens.edu",
   "nsf_id": "000608272",
   "pi_start_date": "2016-05-19",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Yale University",
  "inst_street_address": "150 MUNSON ST",
  "inst_street_address_2": "",
  "inst_city_name": "NEW HAVEN",
  "inst_state_code": "CT",
  "inst_state_name": "Connecticut",
  "inst_phone_num": "2037854689",
  "inst_zip_code": "065113572",
  "inst_country_name": "United States",
  "cong_dist_code": "03",
  "st_cong_dist_code": "CT03",
  "org_lgl_bus_name": "YALE UNIV",
  "org_prnt_uei_num": "FL6GV84CKN57",
  "org_uei_num": "FL6GV84CKN57"
 },
 "perf_inst": {
  "perf_inst_name": "Yale University",
  "perf_str_addr": "AKWatson Ctr",
  "perf_city_name": "New Haven",
  "perf_st_code": "CT",
  "perf_st_name": "Connecticut",
  "perf_zip_code": "065208285",
  "perf_ctry_code": "US",
  "perf_cong_dist": "03",
  "perf_st_cong_dist": "CT03",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 184044.0
  }
 ],
 "por": null
}