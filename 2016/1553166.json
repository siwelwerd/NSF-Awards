{
 "awd_id": "1553166",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER:  Bridging the gap between theoretical and experimental self-assembly through computational modeling",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032928649",
 "po_email": "mbasu@nsf.gov",
 "po_sign_block_name": "Mitra Basu",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2023-06-30",
 "tot_intn_awd_amt": 499954.0,
 "awd_amount": 501561.0,
 "awd_min_amd_letter_date": "2016-07-05",
 "awd_max_amd_letter_date": "2022-09-23",
 "awd_abstract_narration": "The goal of this project is to develop software which enables techniques from theoretical modeling of self-assembling systems based on DNA nanotechnology to be developed and evaluated using rigorous molecular dynamics simulations, and then incorporated into physical molecular designs and implementations.  The software to be developed will consist of a fully integrated suite of open source software which will create a seamless pathway for the design of self-assembling systems based on components called tiles, via a high-level programming language interface to an abstract tile assembly simulator, all the way through the final output of the fully specified DNA strands which have been verified via highly accurate and DNA specific molecular simulations.  The second main component of the proposed work is the integration of theoretical techniques and designs for algorithmic self-assembling systems into DNA-based motifs, and the performance of extensive simulation-based experiments to develop molecular designs for components which yield systems that are more robust to error and varying environmental conditions than current systems, allowing them to be more scalable and widely utilized.\r\n\r\nDeveloping robust and scalable molecular self-assembling systems has the promise to greatly impact many aspects of science and technology, potentially enabling atomically precise manufacturing of materials with carefully specified properties, implementation of molecular \"robots\", and targeted drug delivery mechanisms which are able to diagnose and treat diseases in vivo. To realize the great promise of this field, it is important to recognize that it is fundamentally interdisciplinary and incorporates fields such as physics, chemistry, mathematics, computer science, and biochemical engineering, among others, and to foster the development of researchers experienced in these areas and also skilled at this interdisciplinary work. This project focuses on interdisciplinary collaboration and student education, includes the development of an interdisciplinary course (\"Introduction to DNA Nanotechnology''), the hosting of interdisciplinary workshops for high school students and also for experienced researchers, conducting interdepartmental seminars, and the development of software which can be easily used by scientists from many disciplines to quickly become proficient in this area.  This will help train extremely valuable researchers capable of synthesizing knowledge and techniques spanning many disciplines.\r\n\r\nThis project will create a freely released software suite capable of automating the design of DNA-based self-assembling systems.  The work will involve extending current simulation software to be massively parallelizable, allowing simulations to be run across large supercomputing clusters, and the creation of new software modules able to perform automated, quantitative analyses of simulation results.   Additional modules will be created to enable the suite to provide an end-to-end solution from theoretical design to simulation-based validation, along with an easily used web-based front end and database storage of results. The theoretical aspects of the project will involve incorporation of various theoretical construction techniques into molecular designs, and validation of those designs.  Some specific theoretical techniques which will be exploited and evaluated include the incorporation of geometric hindrance to enforce correct algorithmic behavior, and hierarchical self-assembly.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Matthew",
   "pi_last_name": "Patitz",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Matthew J Patitz",
   "pi_email_addr": "patitz@uark.edu",
   "nsf_id": "000583098",
   "pi_start_date": "2016-07-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Arkansas",
  "inst_street_address": "1125 W MAPLE ST STE 316",
  "inst_street_address_2": "",
  "inst_city_name": "FAYETTEVILLE",
  "inst_state_code": "AR",
  "inst_state_name": "Arkansas",
  "inst_phone_num": "4795753845",
  "inst_zip_code": "727013124",
  "inst_country_name": "United States",
  "cong_dist_code": "03",
  "st_cong_dist_code": "AR03",
  "org_lgl_bus_name": "UNIVERSITY OF ARKANSAS",
  "org_prnt_uei_num": "",
  "org_uei_num": "MECEHTM8DB17"
 },
 "perf_inst": {
  "perf_inst_name": "University of Arkansas",
  "perf_str_addr": "504 J. B. Hunt Building",
  "perf_city_name": "Fayetteville",
  "perf_st_code": "AR",
  "perf_st_name": "Arkansas",
  "perf_zip_code": "727011201",
  "perf_ctry_code": "US",
  "perf_cong_dist": "03",
  "perf_st_cong_dist": "AR03",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "089y00",
   "pgm_ele_name": "FET-Fndtns of Emerging Tech"
  },
  {
   "pgm_ele_code": "089Y00",
   "pgm_ele_name": "FET-Fndtns of Emerging Tech"
  },
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  },
  {
   "pgm_ele_code": "793100",
   "pgm_ele_name": "Computational Biology"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "102Z",
   "pgm_ref_txt": "COVID-Disproportionate Impcts Inst-Indiv"
  },
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7931",
   "pgm_ref_txt": "COMPUTATIONAL BIOLOGY"
  },
  {
   "pgm_ref_code": "7946",
   "pgm_ref_txt": "BIO COMPUTING"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "010V2122DB",
   "fund_name": "R&RA ARP Act DEFC V",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 421560.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The work of this project was in the area of DNA nanotechnology, focusing on self-assembling systems made up of DNA components referred to as ``tiles''. These tiles are composed of one or more strands of synthetic DNA, and they combine to each other autonomously, following the basic rules of DNA base-pairing. Such systems can be modeled and studied at various levels of abstraction, each with different goals. On one end of the spectrum is abstract mathematical modeling that treats the tiles as idealized and error-free components, and the goal of such modeling is to rigorously mathematically prove powers and limitations of self-assembling systems ``in the limit''. One major component of the work of this project focused on defining abstract models with varying geometric and dynamic properties, and developing mathematical tools to evaluate them, especially in comparison with each other. We successfully explored a wide range of models and exposed their relative powers and limitations, especially focused on their abilities to perform algorithmic self-assembly, which occurs when the tiles are designed so that their interactions force their self-assembly to proceed in an ordering and arrangement dictated by a pre-defined algorithm. Algorithmic self-assembling systems have the theoretical potential to perform arbitrary computations and build structures using dramatically fewer unique types of tiles, making systems potentially much cheaper and easier to implement, and also more scalable. We were able to identify several novel models and tile designs that have multiple improvements over existing models and designs. We provided mathematical definitions of these models and formal theorems and proofs of their powers and limitations which were published in peer-reviewed conferences and journals. We also developed software-based simulators that we made freely available.<br />In the middle of the spectrum is computational modeling that is more physically realistic than the abstract mathematical modeling. Types of modeling which fall into this category include so-called ``kinetic'' modeling and molecular dynamics simulations. In order to remain computationally tractable (i.e. to allow simulations to run in hours or days rather than months or years), such models are typically designed to incorporate more aspects of physical reality while still abstracting over other details, with different such models being designed to focus on different physical aspects. During this project, we developed software to automate several types of abstract designs and output them in formats compatible with the abstract simulators as well as with kinetic simulators we developed and with a widely used molecular dynamics simulator called oxDNA. Rather than making our software standalone, we interfaced several components with software developed by other research groups in the area, and we also contributed code to them to either enhance their capabilities or to allow designs to be transferred between them. For example, we contributed to both the oxDNA codebase as well as the scadnano codebase (note that scadnano is an online software tool and programming API used for designing&nbsp; DNA nanostructures). All of these software tools have been made freely available online on our research web portal at www.self-assembly.net, along with a wide assortment of wiki articles, tutorials, lists of open problems, presentation slides, etc. All of this is meant to provide a portal where experts and non-experts can come to learn about the area in varying levels of depth and to download and learn how to use the relevant software. In combination with the software developed by other researchers in the community, our contributions result in software capable of converting abstract code-based designs into tile-based designs for abstract or kinetic simulations, further converting those to DNA-based designs that can be simulated using molecular dynamics, and even being output into concrete lists of synthetic DNA molecules needed for a system and the experimental protocols to implement those systems. This full software pipeline, for multiple types of designs and at various levels of abstraction, has leveraged and added to the best tools concurrently in development in the DNA nanotechnology community and continues to rapidly evolve in both sophistication and ease of use.<br />The insights gained through the abstract and software modeling have allowed the PI and his group to develop novel DNA-based components and system designs that show great promise for making algorithmic self-assembling systems of much greater complexity and size than the current state-of-the-art, and those designs are currently being experimentally tested.<br />Another major focus of the project has been education and inspiration. The goal has been to educate and inspire a wide range of students in STEM and research, and particularly in interdisciplinary research. Main activities for this included the development and teaching of an interdisciplinary graduate-level course to introduce DNA nanotechnology, annual workshops for high school students to teach the same, and several years of organizing \"An Hour of Code\" activities at several local elementary schools. Multiple PhD students have also been trained in the area. Research and education goals of this project were achieved.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/24/2023<br>\n\t\t\t\t\tModified by: Matt&nbsp;J&nbsp;Patitz</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe work of this project was in the area of DNA nanotechnology, focusing on self-assembling systems made up of DNA components referred to as ``tiles''. These tiles are composed of one or more strands of synthetic DNA, and they combine to each other autonomously, following the basic rules of DNA base-pairing. Such systems can be modeled and studied at various levels of abstraction, each with different goals. On one end of the spectrum is abstract mathematical modeling that treats the tiles as idealized and error-free components, and the goal of such modeling is to rigorously mathematically prove powers and limitations of self-assembling systems ``in the limit''. One major component of the work of this project focused on defining abstract models with varying geometric and dynamic properties, and developing mathematical tools to evaluate them, especially in comparison with each other. We successfully explored a wide range of models and exposed their relative powers and limitations, especially focused on their abilities to perform algorithmic self-assembly, which occurs when the tiles are designed so that their interactions force their self-assembly to proceed in an ordering and arrangement dictated by a pre-defined algorithm. Algorithmic self-assembling systems have the theoretical potential to perform arbitrary computations and build structures using dramatically fewer unique types of tiles, making systems potentially much cheaper and easier to implement, and also more scalable. We were able to identify several novel models and tile designs that have multiple improvements over existing models and designs. We provided mathematical definitions of these models and formal theorems and proofs of their powers and limitations which were published in peer-reviewed conferences and journals. We also developed software-based simulators that we made freely available.\nIn the middle of the spectrum is computational modeling that is more physically realistic than the abstract mathematical modeling. Types of modeling which fall into this category include so-called ``kinetic'' modeling and molecular dynamics simulations. In order to remain computationally tractable (i.e. to allow simulations to run in hours or days rather than months or years), such models are typically designed to incorporate more aspects of physical reality while still abstracting over other details, with different such models being designed to focus on different physical aspects. During this project, we developed software to automate several types of abstract designs and output them in formats compatible with the abstract simulators as well as with kinetic simulators we developed and with a widely used molecular dynamics simulator called oxDNA. Rather than making our software standalone, we interfaced several components with software developed by other research groups in the area, and we also contributed code to them to either enhance their capabilities or to allow designs to be transferred between them. For example, we contributed to both the oxDNA codebase as well as the scadnano codebase (note that scadnano is an online software tool and programming API used for designing  DNA nanostructures). All of these software tools have been made freely available online on our research web portal at www.self-assembly.net, along with a wide assortment of wiki articles, tutorials, lists of open problems, presentation slides, etc. All of this is meant to provide a portal where experts and non-experts can come to learn about the area in varying levels of depth and to download and learn how to use the relevant software. In combination with the software developed by other researchers in the community, our contributions result in software capable of converting abstract code-based designs into tile-based designs for abstract or kinetic simulations, further converting those to DNA-based designs that can be simulated using molecular dynamics, and even being output into concrete lists of synthetic DNA molecules needed for a system and the experimental protocols to implement those systems. This full software pipeline, for multiple types of designs and at various levels of abstraction, has leveraged and added to the best tools concurrently in development in the DNA nanotechnology community and continues to rapidly evolve in both sophistication and ease of use.\nThe insights gained through the abstract and software modeling have allowed the PI and his group to develop novel DNA-based components and system designs that show great promise for making algorithmic self-assembling systems of much greater complexity and size than the current state-of-the-art, and those designs are currently being experimentally tested.\nAnother major focus of the project has been education and inspiration. The goal has been to educate and inspire a wide range of students in STEM and research, and particularly in interdisciplinary research. Main activities for this included the development and teaching of an interdisciplinary graduate-level course to introduce DNA nanotechnology, annual workshops for high school students to teach the same, and several years of organizing \"An Hour of Code\" activities at several local elementary schools. Multiple PhD students have also been trained in the area. Research and education goals of this project were achieved.\n\n\t\t\t\t\tLast Modified: 10/24/2023\n\n\t\t\t\t\tSubmitted by: Matt J Patitz"
 }
}