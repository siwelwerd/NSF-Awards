{
 "awd_id": "1642134",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: CICI: Secure and Resilient Architecture: NetSecOps -- Policy-Driven, Knowledge-Centric, Holistic Network Security Operations Architecture",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Rob Beverly",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 499925.0,
 "awd_amount": 515925.0,
 "awd_min_amd_letter_date": "2016-08-22",
 "awd_max_amd_letter_date": "2019-07-31",
 "awd_abstract_narration": "Network infrastructure at University campuses is complex and sophisticated, often supporting a mix of enterprise, academic, student, research, and healthcare data, each having its own distinct security, privacy, and priority policies.  Securing this complex and highly dynamic environment is extremely challenging, particularly since campus infrastructures are increasingly under attack from malicious actors on the Internet and (often unknowingly) internal campus devices. Different parts of the campus have very different policies and regulations that govern its treatment of sensitive data (e.g., private student/employee information, health care data, financial transactions, etc.). Furthermore, data-intensive scientific research traffic often requires exceptions to normal security policies, resulting in ad-hoc solutions that bypass standard operational procedures and leave both the scientific workflow and the campus as a whole vulnerable to attack. In short, state-of-the-art campus security operations still heavily rely on human domain experts to interpret high level policy documents, implement those policies through low-level mechanisms, create exceptions to accommodate scientific workflows, interpret reports and alerts, and be able to react to security events in near real time on a 24-by-7 basis.\r\n\r\nThis project addresses these challenges through a collaborative research effort, called NetSecOps (Network Security Operations), that assists information technology (IT) security teams by automating many of the operational tasks that are tedious, error-prone, and otherwise problematic in current campus networks. NetSecOps is policy-driven in that the framework encodes high-level human-readable policies into systematic policy specifications that drive the actual configuration and operation of the infrastructure. NetSecOps is knowledge-centric in that the framework captures data, information, and knowledge about the infrastructure in a central knowledge store that informs and guides IT operational tasks. The proposed NetSecOps architecture has the following unique capabilities: (1) the ability to capture campus network security policies systematically; (2) the ability to create new fine-grained network control abstractions that leverage existing security capabilities and emerging software defined networks (SDN) to implement security policies, including policies related to both scientific workflows and IT domains; (3) the ability to implement policy traceability tools that verify whether these network abstractions maintain the integrity of the high-level policies; (4) the ability to implement knowledge-discovery tools that enable reasoning across data from existing security point-solutions, including security monitoring tools and authentication and authorization frameworks; and (5) the ability to automatically adjust the network's security posture based on detected security events. Research results and tools from the project will be released into the public domain allowing academic institutions to utilize the resources as part of their best-practice IT security operations.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "James",
   "pi_last_name": "Griffioen",
   "pi_mid_init": "N",
   "pi_sufx_name": "",
   "pi_full_name": "James N Griffioen",
   "pi_email_addr": "griff@netlab.uky.edu",
   "nsf_id": "000316244",
   "pi_start_date": "2016-08-22",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Jane",
   "pi_last_name": "Hayes",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Jane E Hayes",
   "pi_email_addr": "hayes@cs.uky.edu",
   "nsf_id": "000293689",
   "pi_start_date": "2016-08-22",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Vernon",
   "pi_last_name": "Bumgardner",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Vernon Bumgardner",
   "pi_email_addr": "cody@uky.edu",
   "nsf_id": "000674272",
   "pi_start_date": "2016-08-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Kentucky Research Foundation",
  "inst_street_address": "500 S LIMESTONE",
  "inst_street_address_2": "109 KINKEAD HALL",
  "inst_city_name": "LEXINGTON",
  "inst_state_code": "KY",
  "inst_state_name": "Kentucky",
  "inst_phone_num": "8592579420",
  "inst_zip_code": "405260001",
  "inst_country_name": "United States",
  "cong_dist_code": "06",
  "st_cong_dist_code": "KY06",
  "org_lgl_bus_name": "UNIVERSITY OF KENTUCKY RESEARCH FOUNDATION, THE",
  "org_prnt_uei_num": "",
  "org_uei_num": "H1HYA8Z1NTM5"
 },
 "perf_inst": {
  "perf_inst_name": "University of Kentucky Research Foundation",
  "perf_str_addr": "500 S Limestone 109 Kinkead Hall",
  "perf_city_name": "Lexington",
  "perf_st_code": "KY",
  "perf_st_name": "Kentucky",
  "perf_zip_code": "405260001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "06",
  "perf_st_cong_dist": "KY06",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "802700",
   "pgm_ele_name": "Cybersecurity Innovation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 499925.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>University campus networks have become highly complex infrastructure that must support and span academic, research, enterprise, and often healthcare environments, each of which has its own set of requirements and usage, security, privacy, and priority policies.&nbsp; Designing, operating, and monitoring complex and dynamically changing campus network infrastructure in a way that ensures the university's policies are being correctly implemented and enforced has become a major challenge for campuses.&nbsp; The set of network policies that must be implemented and then constantly monitored and enforced by the network vary widely depending on the types of devices and (sensitive) data being handled by the network (e.g., student records, employee information, financial transactions, healthcare data, educational materials, and research data and publications).&nbsp; Moreover, the translation of high level policy documents into low level network configurations that enforce those policies typically relies on human expertise and manual translation.&nbsp; To complicate matters, network operators must often deal with policy exceptions such as allowing authorized data-intensive scientific research traffic to bypass policy enforcement points to achieve better performance.<br /><br />The Network Security Operations project (NetSecOps) explored ways to automate tasks associated with enforcing campus network policies -- tasks that have historically been manual, tedious, and error-prone.&nbsp; In particular, we developed ways to automate the translation of human-readable policy documents into network configurations used to enforce those policies.&nbsp; We also developed techniques to trace and evaluate whether the human-readable policies were being correctly translated to network configurations.&nbsp; Furthermore, we developed techniques to check if the network traffic traversing campus networks contains traffic that violates network policies.&nbsp; We also developed support for policy exceptions that allow authorized traffic to bypass policy enforcement points.&nbsp; The resulting techniques enhance the ability of network operators to keep today's complex network infrastructures secure and compliant with documented policies.<br /><br />To enable automatic translation of network policy documents into network configurations that enforce those policies, we developed a new network policy language similar to natural language, but one that can be automatically translated by a computer into software defined network configurations that control the network's behavior. We showed how our new human-readable network policy language, which utilizes features from business rule-based management systems, can automatically translate common network security policies into network configurations that enforce those policies.&nbsp; In a related effort, we demonstrated the ability to use legacy router features to control network traffic and enforce network policies, enabling use with older networks.<br /><br />To ensure that the policies specified in network policy documents are being correctly implemented by the network, we leveraged traceability techniques used to track software requirements from specification to implementation.&nbsp; Building on existing traceability systems, we developed components that can identify important policy artifacts (e.g., words/phrases) in policy documents such as acceptable use policies (AUPs) and trace them to their associated mapping in the network configuration, checking for consistency between the policy and network configuration.&nbsp; We collected example policies from a wide range of institutions and used them to drive our development and to evaluate various methods for mapping/tracing artifacts to determine the best techniques.<br /><br />To further improve policy enforcement, we developed techniques to check that the traffic seen traversing the network does not violate network policies.&nbsp; Building on recent advances in big data collection and analysis, we developed fine-grained network monitoring capabilities that can collect detailed network traffic and state information from today's large-scale campus networks.&nbsp; The (big) data collected can then be efficiently processed and searched using questions (queries) that directly correspond to network policy statements that look for traffic that violates network policies.<br /><br />Because network policy enforcement often requires careful examination of all network traffic traversing the policy enforcement point, these policy checkpoints can become bottlenecks to high speed networking.&nbsp; Consequently, some applications such as data-intensive science applications will often require an exception to the network policies in order to achieve the desired network performance.&nbsp; To address this need, we developed the ability for users to request on-demand policy exceptions from the network.&nbsp; By allowing trusted users, or their applications, to inform the network about the nature of their communication, the network can grant an exception and offer these users better service by routing traffic around policy enforcement points, effectively bypassing performance bottlenecks.<br /><br />The project's findings were disseminated in papers and presentations at various conferences and workshops. Overall the project provided new insights into the shortcomings of existing network security policies as well as the challenges of mapping policies to network mechanisms that enforce those policies, and it produced new techniques to address these challenges.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/10/2022<br>\n\t\t\t\t\tModified by: James&nbsp;N&nbsp;Griffioen</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nUniversity campus networks have become highly complex infrastructure that must support and span academic, research, enterprise, and often healthcare environments, each of which has its own set of requirements and usage, security, privacy, and priority policies.  Designing, operating, and monitoring complex and dynamically changing campus network infrastructure in a way that ensures the university's policies are being correctly implemented and enforced has become a major challenge for campuses.  The set of network policies that must be implemented and then constantly monitored and enforced by the network vary widely depending on the types of devices and (sensitive) data being handled by the network (e.g., student records, employee information, financial transactions, healthcare data, educational materials, and research data and publications).  Moreover, the translation of high level policy documents into low level network configurations that enforce those policies typically relies on human expertise and manual translation.  To complicate matters, network operators must often deal with policy exceptions such as allowing authorized data-intensive scientific research traffic to bypass policy enforcement points to achieve better performance.\n\nThe Network Security Operations project (NetSecOps) explored ways to automate tasks associated with enforcing campus network policies -- tasks that have historically been manual, tedious, and error-prone.  In particular, we developed ways to automate the translation of human-readable policy documents into network configurations used to enforce those policies.  We also developed techniques to trace and evaluate whether the human-readable policies were being correctly translated to network configurations.  Furthermore, we developed techniques to check if the network traffic traversing campus networks contains traffic that violates network policies.  We also developed support for policy exceptions that allow authorized traffic to bypass policy enforcement points.  The resulting techniques enhance the ability of network operators to keep today's complex network infrastructures secure and compliant with documented policies.\n\nTo enable automatic translation of network policy documents into network configurations that enforce those policies, we developed a new network policy language similar to natural language, but one that can be automatically translated by a computer into software defined network configurations that control the network's behavior. We showed how our new human-readable network policy language, which utilizes features from business rule-based management systems, can automatically translate common network security policies into network configurations that enforce those policies.  In a related effort, we demonstrated the ability to use legacy router features to control network traffic and enforce network policies, enabling use with older networks.\n\nTo ensure that the policies specified in network policy documents are being correctly implemented by the network, we leveraged traceability techniques used to track software requirements from specification to implementation.  Building on existing traceability systems, we developed components that can identify important policy artifacts (e.g., words/phrases) in policy documents such as acceptable use policies (AUPs) and trace them to their associated mapping in the network configuration, checking for consistency between the policy and network configuration.  We collected example policies from a wide range of institutions and used them to drive our development and to evaluate various methods for mapping/tracing artifacts to determine the best techniques.\n\nTo further improve policy enforcement, we developed techniques to check that the traffic seen traversing the network does not violate network policies.  Building on recent advances in big data collection and analysis, we developed fine-grained network monitoring capabilities that can collect detailed network traffic and state information from today's large-scale campus networks.  The (big) data collected can then be efficiently processed and searched using questions (queries) that directly correspond to network policy statements that look for traffic that violates network policies.\n\nBecause network policy enforcement often requires careful examination of all network traffic traversing the policy enforcement point, these policy checkpoints can become bottlenecks to high speed networking.  Consequently, some applications such as data-intensive science applications will often require an exception to the network policies in order to achieve the desired network performance.  To address this need, we developed the ability for users to request on-demand policy exceptions from the network.  By allowing trusted users, or their applications, to inform the network about the nature of their communication, the network can grant an exception and offer these users better service by routing traffic around policy enforcement points, effectively bypassing performance bottlenecks.\n\nThe project's findings were disseminated in papers and presentations at various conferences and workshops. Overall the project provided new insights into the shortcomings of existing network security policies as well as the challenges of mapping policies to network mechanisms that enforce those policies, and it produced new techniques to address these challenges.\n\n\t\t\t\t\tLast Modified: 01/10/2022\n\n\t\t\t\t\tSubmitted by: James N Griffioen"
 }
}