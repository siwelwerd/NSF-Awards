{
 "awd_id": "1642388",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SI2-SSE: Collaborative Research: Extending the Practicality and Scalability of LibMesh-Based Unstructured, Adaptive Finite Element Computations",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Seung-Jong Park",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 350065.0,
 "awd_amount": 350065.0,
 "awd_min_amd_letter_date": "2016-08-22",
 "awd_max_amd_letter_date": "2021-12-03",
 "awd_abstract_narration": "The development and deployment of cyberinfrastructure focused on scientific and engineering simulation has been, and continues to be, essential to the progress of science and engineering in the U.S. This is particularly true for software used in large scale supercomputing environments. Thus, for the U.S. to continue leadership and advancement in scientific computing, it is crucial that software infrastructure advance to enable modern computational and software engineering strategies for simulating complex scientific and engineering systems. Once such piece of software is the libMesh finite element library. libMesh is used by hundreds of research groups in the U.S. and around the world. Critically, libMesh can utilize large scale supercomputing infrastructure for simulating scientific and engineering systems. This work will update the libMesh software library to use state-of-the-art algorithms that will enable robust simulations on the largest supercomputers in the world and further advance the complexity of systems that can be successfully modeled using libMesh. Furthermore, the library will be enhanced to support user applications to leverage modern computer architectures, including emerging many-core architectures. This will enable the continued use of libMesh as both a fundamental tool of scientific and engineering simulation and as an educational tool for computational algorithms.\r\n\r\nThe libMesh finite element library is a prominent example of an open-source tool supporting adaptive mesh refinement, interfaces to preeminent solver packages, and solutions on large parallel supercomputers of complex finite element models. libMesh supports hundreds of users and many applications in solving partial differential equations across a variety of disciplines including solid mechanics, fluids mechanics, magnetohydrodynamics, hypersonics, nuclear engineering, combustion, and acoustics, to name a few examples. Following over a decade of successful collaborative open-source development, the library is poised to maintain its place as a prominent open-source finite element package. To do so, libMesh must be made to support emerging many core architectures, leverage the most advanced scalable algorithms, and interface with geometry underlying the complex meshes used in engineering analysis. The work addresses these issues directly by extending and enhancing the libMesh finite element library. The extensions will seamlessly make available modern solution algorithms through interfaces to world class solver libraries, facilitate the interaction with underlying geometric representations using openly available software libraries, and efficiently utilize modern computing hardware through cutting-edge software engineering principles and designs. Simultaneously, the developed interfaces will allow for flexibility of development of modeling kernels and maintain the low the barrier of entry that libMesh has always had for both the libMesh community as well as the scientific community in general. Such lofty goals will be attained by designing usable interfaces that hide the complexity of the underlying algorithms and extensive testing on modern computing architectures to ensure performance and scalability is delivered to the libMesh community.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Matthew",
   "pi_last_name": "Knepley",
   "pi_mid_init": "G",
   "pi_sufx_name": "",
   "pi_full_name": "Matthew G Knepley",
   "pi_email_addr": "knepley@buffalo.edu",
   "nsf_id": "000503185",
   "pi_start_date": "2019-08-01",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Paul",
   "pi_last_name": "Bauman",
   "pi_mid_init": "T",
   "pi_sufx_name": "",
   "pi_full_name": "Paul T Bauman",
   "pi_email_addr": "pbauman@buffalo.edu",
   "nsf_id": "000596718",
   "pi_start_date": "2016-08-22",
   "pi_end_date": "2019-08-01"
  }
 ],
 "inst": {
  "inst_name": "SUNY at Buffalo",
  "inst_street_address": "520 LEE ENTRANCE STE 211",
  "inst_street_address_2": "",
  "inst_city_name": "AMHERST",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "7166452634",
  "inst_zip_code": "142282577",
  "inst_country_name": "United States",
  "cong_dist_code": "26",
  "st_cong_dist_code": "NY26",
  "org_lgl_bus_name": "THE RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK",
  "org_prnt_uei_num": "GMZUKXFDJMA9",
  "org_uei_num": "LMCJKRFW5R81"
 },
 "perf_inst": {
  "perf_inst_name": "SUNY at Buffalo",
  "perf_str_addr": "318 Jarvis Hall",
  "perf_city_name": "Buffalo",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "142604400",
  "perf_ctry_code": "US",
  "perf_cong_dist": "26",
  "perf_st_cong_dist": "NY26",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  },
  {
   "pgm_ele_code": "808400",
   "pgm_ele_name": "CDS&E"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "8004",
   "pgm_ref_txt": "Software Institutes"
  },
  {
   "pgm_ref_code": "8005",
   "pgm_ref_txt": "Scientific Software Elements"
  },
  {
   "pgm_ref_code": "9263",
   "pgm_ref_txt": "COMPUTATIONAL SCIENCE & ENGING"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 350065.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>LibMesh is a widely used numerical library for simulation of computational mechanics using the finite element method (FEM). It forms the basis of FEM computation in many prominent simulation packages, such IBAMR and MOOSE. In addition to supporting some of the most advanced FEM technology available, LibMesh has been a pioneer is the use of parallel adaptive mesh refinement (AMR). The LibMesh group have developed, over decades, many of the foundational algorithms in this area. Laboratory scale problems often require highly disparate scales across the simulation domain, and few if any publicly available simulation packages support this capability.</p>\n<p>This project has focused on two main thrusts; improving the scalability of LibMesh, enabling it to run on the largest machines availabl today, and development of an immersed-interface discretization method to expand the physics it is capable of resolving. LibMesh is based on the PETSc library, which handles parallel linear algebra, communication, and algebraic solvers. Work on this project has incorporating scalable block solvers (PETSc PCFIELDSPLIT) and block smoothers for multigrid (PETSc PCPATCH) which are essential for the scalable solution of complex multiphysics problems. In addition, improvements in PETSc's communication library for hetergeneous machines has drastically improved scalability for LIbMesh on emerging HPC architectures. An immeersed-interface discretiation has been developed for LibMesh which allows resolution of sharp interfaces inside the domain, as well as complex interface conditions. It has been successfully applied to the simulation of biological vesicles.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/17/2023<br>\n\t\t\t\t\tModified by: Matthew&nbsp;Knepley</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nLibMesh is a widely used numerical library for simulation of computational mechanics using the finite element method (FEM). It forms the basis of FEM computation in many prominent simulation packages, such IBAMR and MOOSE. In addition to supporting some of the most advanced FEM technology available, LibMesh has been a pioneer is the use of parallel adaptive mesh refinement (AMR). The LibMesh group have developed, over decades, many of the foundational algorithms in this area. Laboratory scale problems often require highly disparate scales across the simulation domain, and few if any publicly available simulation packages support this capability.\n\nThis project has focused on two main thrusts; improving the scalability of LibMesh, enabling it to run on the largest machines availabl today, and development of an immersed-interface discretization method to expand the physics it is capable of resolving. LibMesh is based on the PETSc library, which handles parallel linear algebra, communication, and algebraic solvers. Work on this project has incorporating scalable block solvers (PETSc PCFIELDSPLIT) and block smoothers for multigrid (PETSc PCPATCH) which are essential for the scalable solution of complex multiphysics problems. In addition, improvements in PETSc's communication library for hetergeneous machines has drastically improved scalability for LIbMesh on emerging HPC architectures. An immeersed-interface discretiation has been developed for LibMesh which allows resolution of sharp interfaces inside the domain, as well as complex interface conditions. It has been successfully applied to the simulation of biological vesicles.\n\n\t\t\t\t\tLast Modified: 01/17/2023\n\n\t\t\t\t\tSubmitted by: Matthew Knepley"
 }
}