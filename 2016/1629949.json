{
 "awd_id": "1629949",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "II-New: CyPhyHouse: A Laboratory for Evolving Distributed and Mobile Cyber-Physical Systems Research",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927855",
 "po_email": "aabouzei@nsf.gov",
 "po_sign_block_name": "Alhussein Abouzeid",
 "awd_eff_date": "2016-07-15",
 "awd_exp_date": "2021-06-30",
 "tot_intn_awd_amt": 610000.0,
 "awd_amount": 626000.0,
 "awd_min_amd_letter_date": "2016-07-15",
 "awd_max_amd_letter_date": "2019-05-16",
 "awd_abstract_narration": "This project develops CyPhyHouse: an innovation playground for enabling rapid development and deployment of distributed and mobile robotic systems. Distributed robotic systems are at the frontier of research in manufacturing, transportation, logistics, and exploration. Yet, managing and experimenting with distributed robotic platforms can be a laborious and error-prone undertaking. Deploying a new algorithm on an existing hardware platform can take weeks; porting an application to a new platform can take months. This high overhead of deploying robotic applications takes a toll on the robustness of the scientific claims made in this area. CyPhyHouse provides application programming interfaces (APIs) and an easy to use software environment which reduces the above efforts by orders of magnitude. This new infrastructure provides easy to use, open source, software and hardware platform for rapidly programming, simulating, deploying, and visualizing a rich family of applications on heterogeneous fleet of vehicles. It thus will enable large-scale experimental research needed for developing computing systems that support and rely on coordinated and controlled mobility, for example, in the study of mobility of WiFi access points, debuggers for mobile systems, and augmented-reality with real and virtual Unmanned Autonomous Vehicles.\r\n\r\nThe hardware infrastructure consists of a collection of about mobile vehicle platforms (a mix of ground vehicles and aerial vehicles). The software infrastructure consists of APIs for coordination and control of the heterogeneous fleet based on distributed shared-memory (DSM) and reach-avoid functions. These APIs are integrated in an extension of a familiar programming language (e.g., C++ or Java) and have implementations on all the hardware platforms. Supporting software tools are developed for compilation, simulation, logging, and monitoring that help with development and deployment of application programs. The infrastructure enables a researcher to quickly deploy experiments involving dozens of vehicles and  visualize them. The same high-level application programs will be portable across different hardware platforms. The platform enables large-scale, repeatable experimental research needed for developing computing systems that support and rely on coordinated and controlled mobility.  All the software and hardware specifications will be open-sourced and made available to the broader community. In several graduate courses, CyPhyHouse will provide students with a realistic platform for projects. It aims to help train graduate students and provide research opportunities for undergraduates in areas like cyber-physical systems, mobile and distributed computing, and multi-agent systems.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Sayan",
   "pi_last_name": "Mitra",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Sayan Mitra",
   "pi_email_addr": "mitras@illinois.edu",
   "nsf_id": "000526790",
   "pi_start_date": "2016-07-15",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Co-Principal Investigator",
   "pi_first_name": "Nitin",
   "pi_last_name": "Vaidya",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "Nitin H Vaidya",
   "pi_email_addr": "nv198@georgetown.edu",
   "nsf_id": "000101142",
   "pi_start_date": "2016-07-15",
   "pi_end_date": "2019-05-16"
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Geir",
   "pi_last_name": "Dullerud",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Geir E Dullerud",
   "pi_email_addr": "dullerudge@gmail.com",
   "nsf_id": "000100212",
   "pi_start_date": "2016-07-15",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Sibin",
   "pi_last_name": "Mohan",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Sibin Mohan",
   "pi_email_addr": "sibin.mohan@gwu.edu",
   "nsf_id": "000637486",
   "pi_start_date": "2016-07-15",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Illinois at Urbana-Champaign",
  "inst_street_address": "506 S WRIGHT ST",
  "inst_street_address_2": "",
  "inst_city_name": "URBANA",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "2173332187",
  "inst_zip_code": "618013620",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "IL13",
  "org_lgl_bus_name": "UNIVERSITY OF ILLINOIS",
  "org_prnt_uei_num": "V2PHZ2CSCH63",
  "org_uei_num": "Y8CWNJRCNN91"
 },
 "perf_inst": {
  "perf_inst_name": "University of Illinois at Urbana-Champaign",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "618207473",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "IL13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735900",
   "pgm_ele_name": "CCRI-CISE Cmnty Rsrch Infrstrc"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7359",
   "pgm_ref_txt": "COMPUTING RES INFRASTRUCTURE"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 610000.0
  },
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><dd>\n<div class=\"tinyMCEContent\">\n<p>Distributed cyber physical systems (CPS) like delivery drones and smart manufacturing systems are poised to transform the way we live and work. To unlock their full potential, programmability is key as the value-addition moves to software and application development. Today, it is challenging to develop code for one CPS platform and port it to another platform because of their incompatibility and small differences. Porting can take&nbsp; months of effort. In the same vein, testing and verification of CPS applications is very challenging.&nbsp; This project addressed these challenges in&nbsp;<em>programmability, portability, and verifiability</em>&nbsp;of CPS applications, and made several significant strides.&nbsp;</p>\n<p>First, the project demonstrated&nbsp;<strong>for the first time</strong>&nbsp;that it is possible to achieve portability of code for (distributed) robotics across multiple hardware platforms, namely, ground vehicles and quadrotors. For example, it showed that you can develop a distributed delivery app and&nbsp;<em>deploy it on both cars and drones, without changing a single line</em>. You can also deploy it on a heterogeneous mix of cars&nbsp;<strong>and&nbsp;</strong>drones.</p>\n<p>The domain specific programming language (DSL) called&nbsp;<em>Koord</em>&nbsp;developed in this project showed how control&nbsp; and communication can be abstracted in terms of simple variable assignemnts. The result is low-code applications. The same delivery app which requires coordination of different agents, collision avaoidance, mutual exclusion of tasks, can be written in only 40 lines of Koord code.</p>\n<p>Finally, Koord semantics developed in the K semantic framework&nbsp;<strong>showed for the first time</strong>&nbsp;how formal verification of distributed cyber-physical systems can be done at the code-level by combining program analysis with data-driven reachability for the physical components. The developed artifacts (langauge, simulator, verification tool) have been used by a broad community of researchers and students, they have applied to realistic scenarios for vehicle coordination, surveillance, delivery, and coordination of urban air mobility systems. The project generated top-tier publications in robotics and programming languages, and was showcased in several events for the broader public.</p>\n</div>\n</dd>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/01/2021<br>\n\t\t\t\t\tModified by: Sayan&nbsp;Mitra</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2021/1629949/1629949_10440919_1633107115071_irl-delivery-deploy-299--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1629949/1629949_10440919_1633107115071_irl-delivery-deploy-299--rgov-800width.jpg\" title=\"Delivery app deployed\"><img src=\"/por/images/Reports/POR/2021/1629949/1629949_10440919_1633107115071_irl-delivery-deploy-299--rgov-66x44.jpg\" alt=\"Delivery app deployed\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The same delivery application (40 lines of Koord code) deployed on different hardware platforms.</div>\n<div class=\"imageCredit\">Sayan Mitra</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Sayan&nbsp;Mitra</div>\n<div class=\"imageTitle\">Delivery app deployed</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1629949/1629949_10440919_1633107035293_delivery-sim-1-frame--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1629949/1629949_10440919_1633107035293_delivery-sim-1-frame--rgov-800width.jpg\" title=\"Simulation of delivery application\"><img src=\"/por/images/Reports/POR/2021/1629949/1629949_10440919_1633107035293_delivery-sim-1-frame--rgov-66x44.jpg\" alt=\"Simulation of delivery application\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Simulation of the Delivery Application. 40 lines of Koord code. Simulation using our CyPhyHouse simulator. Delivery app is deployed on drones and cars.</div>\n<div class=\"imageCredit\">Sayan Mitra</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Sayan&nbsp;Mitra</div>\n<div class=\"imageTitle\">Simulation of delivery application</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1629949/1629949_10440919_1633106431055_shapeform-small--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1629949/1629949_10440919_1633106431055_shapeform-small--rgov-800width.jpg\" title=\"Formation flight using Koord\"><img src=\"/por/images/Reports/POR/2021/1629949/1629949_10440919_1633106431055_shapeform-small--rgov-66x44.jpg\" alt=\"Formation flight using Koord\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">This gif video shows a set of agents creating a formation. This application is written in our Koord language in less than 10 lines. Moreover, the code can be verified to prove that agents do not collide (under the right assumptions).</div>\n<div class=\"imageCredit\">Sayan Mitra</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Sayan&nbsp;Mitra</div>\n<div class=\"imageTitle\">Formation flight using Koord</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\n\n\nDistributed cyber physical systems (CPS) like delivery drones and smart manufacturing systems are poised to transform the way we live and work. To unlock their full potential, programmability is key as the value-addition moves to software and application development. Today, it is challenging to develop code for one CPS platform and port it to another platform because of their incompatibility and small differences. Porting can take  months of effort. In the same vein, testing and verification of CPS applications is very challenging.  This project addressed these challenges in programmability, portability, and verifiability of CPS applications, and made several significant strides. \n\nFirst, the project demonstrated for the first time that it is possible to achieve portability of code for (distributed) robotics across multiple hardware platforms, namely, ground vehicles and quadrotors. For example, it showed that you can develop a distributed delivery app and deploy it on both cars and drones, without changing a single line. You can also deploy it on a heterogeneous mix of cars and drones.\n\nThe domain specific programming language (DSL) called Koord developed in this project showed how control  and communication can be abstracted in terms of simple variable assignemnts. The result is low-code applications. The same delivery app which requires coordination of different agents, collision avaoidance, mutual exclusion of tasks, can be written in only 40 lines of Koord code.\n\nFinally, Koord semantics developed in the K semantic framework showed for the first time how formal verification of distributed cyber-physical systems can be done at the code-level by combining program analysis with data-driven reachability for the physical components. The developed artifacts (langauge, simulator, verification tool) have been used by a broad community of researchers and students, they have applied to realistic scenarios for vehicle coordination, surveillance, delivery, and coordination of urban air mobility systems. The project generated top-tier publications in robotics and programming languages, and was showcased in several events for the broader public.\n\n\n\n \n\n \n\n\t\t\t\t\tLast Modified: 10/01/2021\n\n\t\t\t\t\tSubmitted by: Sayan Mitra"
 }
}