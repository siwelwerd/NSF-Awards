{
 "awd_id": "1550593",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: SI2-SSI: Integrating Data with Complex Predictive Models under Uncertainty: An Extensible Software Framework for Large-Scale Bayesian Inversion",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Seung-Jong Park",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 350885.0,
 "awd_amount": 350885.0,
 "awd_min_amd_letter_date": "2016-08-10",
 "awd_max_amd_letter_date": "2019-11-18",
 "awd_abstract_narration": "Scientists often use mathematical models to predict the behavior of natural and engineered systems. These models are therefore fundamental to scientific and engineering progress and hence relevant to NSF's science mission. Most models of realistic physical systems  use complex formulae (such as, partial differential equations) involving many variables. When using such a model for predicting the future behavior of a system, a scientist has to provide initial values for all the variables.  This can be difficult because input values may not be directly measureable. Thus, scientists often must use \"inverse\" computations to calculate the initial input values of the variables of a system model based on external observations of the real world. In other words, scientists seek to infer inputs to a computer model of a physical process from real observational data of the outputs. There are many examples of inverse computations, ranging from computing the important dimensions of an organ from its CAT scan, reconstructing the source of a sound by measuring its volume and frequency at various places, calculating the density of the Earth from measurements of its gravity field, or calculating the initial condition of the atmosphere (temperature, pressure, etc.) from satellite and weather station observations over a time interval. Inverse problems are ubiquitous across all of science and engineering (and beyond). Many solutions exist for inverse problems, i.e. solutions that fit the data to the observations. However, there are variations in the solutions identified. That is, the solutions of an inverse problem are subject to uncertainty. Bayesian inferencing provides a systematic mathematical framework for characterizing this uncertainty. However, the Bayesian solution of inverse problems for large-scale complex models require enormous computational power. Only recently have algorithms begun to emerge that are computationally tractable. However, these algorithms have remained out of the reach of the mainstream of scientists who solve inverse problems, due to their complexity and the need for deeper information from the forward model. This project aims to develop, distribute, and support open-source software that encodes state-of-the-art algorithms for the solution of large-scale complex Bayesian inverse problems and is robust, scalable, flexible, modular, widely accessible, and easy to use.\r\n\r\nThe project builds heavily on two complementary open-source software libraries the team has been developing: MUQ at MIT, and hIPPYlib at UT-Austin/UC-Merced. MUQ provides a spectrum of powerful Bayesian inversion models and algorithms, but expects forward models to come equipped with gradients/Hessians to permit large-scale solution. hIPPYlib implements powerful large-scale gradient/Hessian-based inverse solvers in an environment that can automatically generate needed derivatives, but it lacks full Bayesian capabilities. By integrating these two complementary libraries, the project will result in a robust, scalable, and efficient software framework that realizes the benefits of each to tackle complex large-scale Bayesian inverse problems across a broad spectrum of scientific and engineering disciplines. The resulting software, that will be distributed under an open-source license, will provide an environment for rapid development of inverse models equipped with gradient/Hessian information; benchmark problems for evaluation and comparison of algorithms; and tutorial problems for training and testing purposes.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Omar",
   "pi_last_name": "Ghattas",
   "pi_mid_init": "N",
   "pi_sufx_name": "",
   "pi_full_name": "Omar N Ghattas",
   "pi_email_addr": "omar@ices.utexas.edu",
   "nsf_id": "000249850",
   "pi_start_date": "2016-08-10",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Co-Principal Investigator",
   "pi_first_name": "Umberto",
   "pi_last_name": "Villa",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Umberto Villa",
   "pi_email_addr": "uvilla@oden.utexas.edu",
   "nsf_id": "000698476",
   "pi_start_date": "2016-08-10",
   "pi_end_date": "2019-11-18"
  }
 ],
 "inst": {
  "inst_name": "University of Texas at Austin",
  "inst_street_address": "110 INNER CAMPUS DR",
  "inst_street_address_2": "",
  "inst_city_name": "AUSTIN",
  "inst_state_code": "TX",
  "inst_state_name": "Texas",
  "inst_phone_num": "5124716424",
  "inst_zip_code": "787121139",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "TX25",
  "org_lgl_bus_name": "UNIVERSITY OF TEXAS AT AUSTIN",
  "org_prnt_uei_num": "",
  "org_uei_num": "V6AFQPN18437"
 },
 "perf_inst": {
  "perf_inst_name": "University of Texas at Austin",
  "perf_str_addr": "101 E. 27th Street, Suite 5.300",
  "perf_city_name": "Austin",
  "perf_st_code": "TX",
  "perf_st_name": "Texas",
  "perf_zip_code": "787121532",
  "perf_ctry_code": "US",
  "perf_cong_dist": "25",
  "perf_st_cong_dist": "TX25",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "126600",
   "pgm_ele_name": "APPLIED MATHEMATICS"
  },
  {
   "pgm_ele_code": "127100",
   "pgm_ele_name": "COMPUTATIONAL MATHEMATICS"
  },
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  },
  {
   "pgm_ele_code": "806900",
   "pgm_ele_name": "CDS&E-MSS"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "4444",
   "pgm_ref_txt": "INTERDISCIPLINARY PROPOSALS"
  },
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "8004",
   "pgm_ref_txt": "Software Institutes"
  },
  {
   "pgm_ref_code": "8009",
   "pgm_ref_txt": "Scientifc Software Integration"
  },
  {
   "pgm_ref_code": "8251",
   "pgm_ref_txt": "Math Sci Innovation Incubator"
  },
  {
   "pgm_ref_code": "9263",
   "pgm_ref_txt": "COMPUTATIONAL SCIENCE & ENGING"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 350885.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p class=\"p1\"><span class=\"s1\">The overarching goal of this collaborative project between UT Austin,&nbsp;</span><span class=\"s1\">MIT, and UC Merced was the development and dissemination of a&nbsp;</span><span class=\"s1\">high-performance, open-source software framework incorporating a suite&nbsp;</span>of advanced algorithms for the solution of Bayesian inverse problems.&nbsp;<span class=\"s1\">Bayesian inversion is the most systematic and rigorous framework for&nbsp;</span>learning physical models from data while accounting for uncertainties in both the data and the models. The components of a physical model we might wish to learn from the data include initial and boundary conditions, sources, material properties, geometry, and model structure, all of which can be heterogeneous in space and/or time. These heterogeneities imply that the parameters we wish to learn are in fact infinite-dimensional fields, which upon numerical discretization lead to very high-dimensional parameter spaces, as much as millions and more.&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">Inverse problems abound in every area of science, engineering,&nbsp;</span>medicine, and technology. As just a few examples of model-based inverse problems, we may infer: coalescing binary system parameters from detected gravitational waves; earth structure from reflected seismic waves; reaction rates from measurements of chemically-reacting flows; ice sheet basal friction from satellite observations of surface flow; 3D bone structure from X-ray CT measurements; subsurface contaminant plume spread from crosswell electromagnetic measurements; internal structural defects from measurements of structural vibrations; initial conditions for prediction from meteorological data; ocean state from satellite and in-situ observations; and biochemical reaction networks from observed species concentrations.&nbsp;&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">Despite the ubiquitous nature of inverse problems, and despite the&nbsp;</span>critical need to quantify uncertainties in the solution of inverse problems, application of classical Bayesian inversion methods to the class of inverse problems we target -- those characterized by complex models (e.g., governed by partial differential equations), complex data, and high-dimensional parameters -- is prohibitive. This is due to the fact that these methods suffer from the curse of dimensionality, resulting in a need to generate millions of samples or more, each requiring solution of the forward model.&nbsp; &nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">While sophisticated methods have emerged over the past decade that&nbsp;</span>exploit the mathematical structure of the inverse problem (including low-dimensionality, geometry, and smoothness) and thus mitigate the challenges outlined above, they have been buried in the mathematical and statistical literature and have remained out of reach of many scientists and engineers who wish to solve Bayesian inverse problems governed by complex forward models. Our project has brought these advances to the scientific and engineering communities in the form of the hIPPYlib and hIPPYlib/MUQ software frameworks. In particular, the major scientific and broader impact outcomes of our project include:&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">1. The further development of scalable and robust algorithms that&nbsp;</span>exploit problem structure to make Bayesian inversion more tractable for a wider range of complex problems.</p>\n<p class=\"p1\">2. The incorporation of these algorithms into the hIPPYlib (https://hippylib.github.io/) and hIPPYlib/MUQ (https://hippylib.github.io/muq-hippylib/) open source software frameworks.&nbsp;hIPPYlib has been downloaded over 1000 times.&nbsp;</p>\n<p class=\"p2\">3. The application of hIPPYlib to a broad spectrum of challenging Bayesian inverse problems, including inference of atmospheric contaminant plumes, inference of faults from subsurface flow well data, inference of earthquake sources from GPS data, inference of phase field models of directed self assembly of block copolymers from image data, inference of ice sheet basal friction from InSAR-based surface velocities, inference of aquifer permeabilities from InSAR surface deformations, and inference of diffusivity and grow rate parameters for computational oncology models from MRI images.&nbsp;</p>\n<p class=\"p2\">4. The development of teaching materials and tutorials illustrating the capabilities of the hIPPYlib, in the form of Jupyter notebooks (interactive tutorials that mix instruction and theory with editable and runnable code).&nbsp;</p>\n<p class=\"p1\"><span class=\"s1\">5. Creation of dissemination and support mechanisms for hIPPYlib,&nbsp;</span>including documentation, website, regular version releases, Docker images, issue tracking, and Slack channel.</p>\n<p class=\"p1\">6. The support and training of two postdoctoral researchers, one graduate student, and one undergraduate student in Bayesian inversion theory, algorithms, and software.&nbsp;</p>\n<p class=\"p1\">7. The use of hIPPYlib as the computational foundation for two graduate-level inverse problems courses at UT Austin and WUSTL. (hIPPYlib has been used in inverse problems courses at a number of other universities as well.)</p>\n<p class=\"p1\">8. The teaching of a two-week summer school in June 2018 (the SIAM Gene Golub Summer School) to 44 graduate students on the theme of inverse problems. hIPPYlib and MUQ were heavily employed to aid student comprehension and to support the student projects.</p>\n<p class=\"p1\">9. Over a dozen articles (published, submitted, in preparation) on hIPPYlib's algorithms and their applications to a spectrum of challenging inverse problems.&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/22/2021<br>\n\t\t\t\t\tModified by: Omar&nbsp;N&nbsp;Ghattas</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "The overarching goal of this collaborative project between UT Austin, MIT, and UC Merced was the development and dissemination of a high-performance, open-source software framework incorporating a suite of advanced algorithms for the solution of Bayesian inverse problems. Bayesian inversion is the most systematic and rigorous framework for learning physical models from data while accounting for uncertainties in both the data and the models. The components of a physical model we might wish to learn from the data include initial and boundary conditions, sources, material properties, geometry, and model structure, all of which can be heterogeneous in space and/or time. These heterogeneities imply that the parameters we wish to learn are in fact infinite-dimensional fields, which upon numerical discretization lead to very high-dimensional parameter spaces, as much as millions and more. \nInverse problems abound in every area of science, engineering, medicine, and technology. As just a few examples of model-based inverse problems, we may infer: coalescing binary system parameters from detected gravitational waves; earth structure from reflected seismic waves; reaction rates from measurements of chemically-reacting flows; ice sheet basal friction from satellite observations of surface flow; 3D bone structure from X-ray CT measurements; subsurface contaminant plume spread from crosswell electromagnetic measurements; internal structural defects from measurements of structural vibrations; initial conditions for prediction from meteorological data; ocean state from satellite and in-situ observations; and biochemical reaction networks from observed species concentrations.  \nDespite the ubiquitous nature of inverse problems, and despite the critical need to quantify uncertainties in the solution of inverse problems, application of classical Bayesian inversion methods to the class of inverse problems we target -- those characterized by complex models (e.g., governed by partial differential equations), complex data, and high-dimensional parameters -- is prohibitive. This is due to the fact that these methods suffer from the curse of dimensionality, resulting in a need to generate millions of samples or more, each requiring solution of the forward model.   \nWhile sophisticated methods have emerged over the past decade that exploit the mathematical structure of the inverse problem (including low-dimensionality, geometry, and smoothness) and thus mitigate the challenges outlined above, they have been buried in the mathematical and statistical literature and have remained out of reach of many scientists and engineers who wish to solve Bayesian inverse problems governed by complex forward models. Our project has brought these advances to the scientific and engineering communities in the form of the hIPPYlib and hIPPYlib/MUQ software frameworks. In particular, the major scientific and broader impact outcomes of our project include: \n1. The further development of scalable and robust algorithms that exploit problem structure to make Bayesian inversion more tractable for a wider range of complex problems.\n2. The incorporation of these algorithms into the hIPPYlib (https://hippylib.github.io/) and hIPPYlib/MUQ (https://hippylib.github.io/muq-hippylib/) open source software frameworks. hIPPYlib has been downloaded over 1000 times. \n3. The application of hIPPYlib to a broad spectrum of challenging Bayesian inverse problems, including inference of atmospheric contaminant plumes, inference of faults from subsurface flow well data, inference of earthquake sources from GPS data, inference of phase field models of directed self assembly of block copolymers from image data, inference of ice sheet basal friction from InSAR-based surface velocities, inference of aquifer permeabilities from InSAR surface deformations, and inference of diffusivity and grow rate parameters for computational oncology models from MRI images. \n4. The development of teaching materials and tutorials illustrating the capabilities of the hIPPYlib, in the form of Jupyter notebooks (interactive tutorials that mix instruction and theory with editable and runnable code). \n5. Creation of dissemination and support mechanisms for hIPPYlib, including documentation, website, regular version releases, Docker images, issue tracking, and Slack channel.\n6. The support and training of two postdoctoral researchers, one graduate student, and one undergraduate student in Bayesian inversion theory, algorithms, and software. \n7. The use of hIPPYlib as the computational foundation for two graduate-level inverse problems courses at UT Austin and WUSTL. (hIPPYlib has been used in inverse problems courses at a number of other universities as well.)\n8. The teaching of a two-week summer school in June 2018 (the SIAM Gene Golub Summer School) to 44 graduate students on the theme of inverse problems. hIPPYlib and MUQ were heavily employed to aid student comprehension and to support the student projects.\n9. Over a dozen articles (published, submitted, in preparation) on hIPPYlib's algorithms and their applications to a spectrum of challenging inverse problems. \n\n\t\t\t\t\tLast Modified: 02/22/2021\n\n\t\t\t\t\tSubmitted by: Omar N Ghattas"
 }
}