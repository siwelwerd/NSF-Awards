{
 "awd_id": "1616584",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Small: Graph Routing, Vertex Sparsifiers, and Connections to Graph Theory",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2016-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 449720.0,
 "awd_amount": 449720.0,
 "awd_min_amd_letter_date": "2016-05-25",
 "awd_max_amd_letter_date": "2016-05-25",
 "awd_abstract_narration": "Graphs are basic combinatorial objects that are widely used in computer science, engineering, and beyond. Many problems, both theoretical and practical, can be abstracted through graphs, and graphs are also used to represent data. Several basic optimization problems on graphs naturally arise in many different contexts, and it is important to build and expand a toolkit of algorithmic ideas and techniques for addressing such problems. This project will focus on two broad classes of graph optimization problems: graph routing and graph sparsification. Graph routing problems are used as abstractions in many applications, for example, when designing VLSI chips, in multi-robot motion planning, and routing traffic across optical networks. Graph sparsification can be a useful tool in analyzing large and complex networks, including social ones, and in designing faster algorithms for a variety of graph problems. Graph routing and sparsification problems were studied in several different areas, such as approximation algorithms, fixed parameter tractability, and graph theory. In addition to designing better algorithms for such problems, another goal of the project is to increase the flow of ideas and collaboration between these different communities, by studying problems lying in the intersection of these areas. The project will involve graduate and possibly undergraduate students from TTIC and University of Chicago, as well as students from other institutions who participate in TTIC's summer internship program. The PI will also participate in activities aimed at increasing the participation of women in theoretical computer science.\r\n\r\nTypically in a graph routing problem one is given a graph G and a collection of pairs of vertices, called demand pairs, that need to be connected to each other. The goal is to connect as many of the pairs as possible via paths, usually subject to some restrictions on the maximum load on graph vertices or edges. These are fundamental problems that have been studied extensively by both theoretical computer science and graph theory communities. Unfortunately, there are still wide gaps in our understanding of some of the most basic problems in this area, and this project aims to make progress on them. In graph sparsification problems, one is given a graph G and a small set T of its vertices called terminals. The goal is to represent the graph G by a much smaller graph H (called a sparsifier), that approximately preserves the properties of G with respect to T. The specific types of properties one would like to preserve give rise to several types of sparsifiers (for example, we may want to preserve cuts, flows or integral routings between the terminals). Problems in this area naturally connect to approximation algorithms (where sparsifiers can be used to obtain improved approximation factors to various problems), fixed-parameter tractability (where they give a black-box way to design faster algortihms), and to graph theory (many sparsification problems can be cast in graph theoretic terms and have been studied by the graph theory community). There are still many open problems in this area, and this project will attempt to improve the state of the art on several of them.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Julia",
   "pi_last_name": "Chuzhoy",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Julia Chuzhoy",
   "pi_email_addr": "cjulia@ttic.edu",
   "nsf_id": "000509131",
   "pi_start_date": "2016-05-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Toyota Technological Institute at Chicago",
  "inst_street_address": "6045 S KENWOOD AVE",
  "inst_street_address_2": "",
  "inst_city_name": "CHICAGO",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "7738340409",
  "inst_zip_code": "606372803",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "IL01",
  "org_lgl_bus_name": "TOYOTA TECHNOLOGICAL INSTITUTE AT CHICAGO",
  "org_prnt_uei_num": "ERBJF4DMW6G4",
  "org_uei_num": "ERBJF4DMW6G4"
 },
 "perf_inst": {
  "perf_inst_name": "Toyota Technological Institute at Chicago",
  "perf_str_addr": "6045 S. Kenwood Ave",
  "perf_city_name": "Chicago",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "606372902",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "IL01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 449720.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The project mostly focused on three main directions.</p>\n<p>The first direction is the study of routing problems in graphs, and more specifically the Node-Disjoint Paths problem. In this problem, we are given a graph, that may model, for example, a road network, or a computer network, and a collection of pairs of vertices that need to be connected to each other, or routed, via paths that are completely disjoint from each other. The goal is to route as many of the given pairs of vertices as possible. This is a basic and extensively studied graph routing problem that has many applications in algorithm design. While we cannot hope to solve the problem exactly by an efficient algorithm, much of the research in this area focused on obtaining fast algorithms that solve the problem approximately. Unfortunately, only very weak approximation algorithms are known for this problem. In a sequence of several papers, we designed somewhat better approximation algorithms for the special case where the underlying network is a grid, and then proved strong negative results, showing that obtaining efficient algorithms for the problem that achieve reasonably good approximation is impossible, even if the underlying network is a grid graph. This result comes close to resolving the question of establishing the approximation thershold for this basic problem, and also exhibits that the difficulty in solving this problem exists already in very simple graphs, namely grid graphs, which is a rather surprising result.</p>\n<p>The second direction is in obtaining stronger bounds for the Excluded Grid Theorem. This is a central theorem in graph theory, that allows one to design algorithms for graphs that are sufficiently complex. The ``complexity'' of a graph is measured by its treewidth: the smaller the treewidth, the simpler the graph. While low-treewidth graphs are usually easy to deal with algorithmically, graphs with high treewidth may be quite complex. The Excluded Grid theorem provides a powerful tool for dealing with such graph, by exhibiting a helpful structure in them: it shows that if the treewidth of a graph is large then graph contains a large grid-like subgraph. This grid-like subgraph in turn can be exploited in order to design algorithms for various problems on such graphs. The major question in this area is how large this grid-like subgraph is relatively to the treewidth of the graph. One of our results makes a significant progress on this questions, obtaining bounds that are much stronger than those previously known.</p>\n<p>The third direction is in designing dynamic algorithms for the All-Pairs Shortest-Paths problem. In this problem, we consider a graph that undergoes changes. For example, edges of the graph may be deleted, or their lengths may be increased. At any time the algorithm may be asked to provide a shortest path connecting some pair of vertices of the graph. The goal is to design a data structure that supports such shortest-path queries very efficiently (though possibly approximately), while ensuring that the total time that is needed in order to maintain this data structure is not too large. One example of an application of this problem is routing traffic applications, such as Google Maps, where users ask queries regarding shortest routes between their current location and their destination. As time progresses, some streets may become more congested, which results in increases in ``lengths'' of the corresponding edges. Additionally, algorithms for dynamic all-pairs shortest paths serve as a bulding block in several known algorithms for other dynamic and static graph problems, such as, for example, fast algorithms for computing network flows. In a series of three papers, we have designed the fastest currently known deterministic algorithm for the problem.</p>\n<p>&nbsp;</p>\n<p>The PI has participated in \"women in theory\" conference in 2020 (that was held online), and in \"women in theory\" panel at STOC 2019 - a major conference in theoretical computer science. She also helped launch \"women in TTIC\" quarterly meetings.</p>\n<p>The PI gave a 2-hour long tutorial at TheoryFest 2017, and talks at Eurocomb and Distinguish Lecture Series at University of Waterloo, on topics related to this project. In several of these talks the main audience was researchers in Mathematics.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/09/2020<br>\n\t\t\t\t\tModified by: Julia&nbsp;Chuzhoy</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe project mostly focused on three main directions.\n\nThe first direction is the study of routing problems in graphs, and more specifically the Node-Disjoint Paths problem. In this problem, we are given a graph, that may model, for example, a road network, or a computer network, and a collection of pairs of vertices that need to be connected to each other, or routed, via paths that are completely disjoint from each other. The goal is to route as many of the given pairs of vertices as possible. This is a basic and extensively studied graph routing problem that has many applications in algorithm design. While we cannot hope to solve the problem exactly by an efficient algorithm, much of the research in this area focused on obtaining fast algorithms that solve the problem approximately. Unfortunately, only very weak approximation algorithms are known for this problem. In a sequence of several papers, we designed somewhat better approximation algorithms for the special case where the underlying network is a grid, and then proved strong negative results, showing that obtaining efficient algorithms for the problem that achieve reasonably good approximation is impossible, even if the underlying network is a grid graph. This result comes close to resolving the question of establishing the approximation thershold for this basic problem, and also exhibits that the difficulty in solving this problem exists already in very simple graphs, namely grid graphs, which is a rather surprising result.\n\nThe second direction is in obtaining stronger bounds for the Excluded Grid Theorem. This is a central theorem in graph theory, that allows one to design algorithms for graphs that are sufficiently complex. The ``complexity'' of a graph is measured by its treewidth: the smaller the treewidth, the simpler the graph. While low-treewidth graphs are usually easy to deal with algorithmically, graphs with high treewidth may be quite complex. The Excluded Grid theorem provides a powerful tool for dealing with such graph, by exhibiting a helpful structure in them: it shows that if the treewidth of a graph is large then graph contains a large grid-like subgraph. This grid-like subgraph in turn can be exploited in order to design algorithms for various problems on such graphs. The major question in this area is how large this grid-like subgraph is relatively to the treewidth of the graph. One of our results makes a significant progress on this questions, obtaining bounds that are much stronger than those previously known.\n\nThe third direction is in designing dynamic algorithms for the All-Pairs Shortest-Paths problem. In this problem, we consider a graph that undergoes changes. For example, edges of the graph may be deleted, or their lengths may be increased. At any time the algorithm may be asked to provide a shortest path connecting some pair of vertices of the graph. The goal is to design a data structure that supports such shortest-path queries very efficiently (though possibly approximately), while ensuring that the total time that is needed in order to maintain this data structure is not too large. One example of an application of this problem is routing traffic applications, such as Google Maps, where users ask queries regarding shortest routes between their current location and their destination. As time progresses, some streets may become more congested, which results in increases in ``lengths'' of the corresponding edges. Additionally, algorithms for dynamic all-pairs shortest paths serve as a bulding block in several known algorithms for other dynamic and static graph problems, such as, for example, fast algorithms for computing network flows. In a series of three papers, we have designed the fastest currently known deterministic algorithm for the problem.\n\n \n\nThe PI has participated in \"women in theory\" conference in 2020 (that was held online), and in \"women in theory\" panel at STOC 2019 - a major conference in theoretical computer science. She also helped launch \"women in TTIC\" quarterly meetings.\n\nThe PI gave a 2-hour long tutorial at TheoryFest 2017, and talks at Eurocomb and Distinguish Lecture Series at University of Waterloo, on topics related to this project. In several of these talks the main audience was researchers in Mathematics.\n\n\t\t\t\t\tLast Modified: 11/09/2020\n\n\t\t\t\t\tSubmitted by: Julia Chuzhoy"
 }
}