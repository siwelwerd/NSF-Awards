{
 "awd_id": "2330255",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: Scalable Algorithmic Primitives for Data Science",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922182",
 "po_email": "pbrass@nsf.gov",
 "po_sign_block_name": "Peter Brass",
 "awd_eff_date": "2022-10-01",
 "awd_exp_date": "2024-08-31",
 "tot_intn_awd_amt": 456546.0,
 "awd_amount": 240469.0,
 "awd_min_amd_letter_date": "2023-05-24",
 "awd_max_amd_letter_date": "2023-08-07",
 "awd_abstract_narration": "This project aims to improve some of the most fundamental algorithms in computing: solving systems of linear equations, optimization on graphs, and maintaining dynamically changing networks. Tools for solving these problems are integral components of high-level programming languages such as MATLAB and Julia, and are frequently taught as basic programming constructs in courses on machine learning, statistics, and data science. Improved algorithms for these problems can provide faster, more robust, and easier-to-use algorithmic primitives, which would in turn enable computing on larger and more diverse data sets in areas such as data mining, image processing, scientific computing, and network science. The proposed works will actively involve graduate students, and their results will be incorporated into courses at both graduate and undergraduate levels. The project will also support the PI's long-time involvement with algorithmic problem-solving outreach activities, with a focus on making these activities more accessible to underrepresented groups, and institutionalizing the involvement of graduate students.\r\n \r\nThe problems that this project proposes to study, linear system solvers and optimization on graphs, are some of the most well-studied problems in algorithm design. Previous work on these topics led to many widely-used algorithms and data structures. The main approach of this project is motivated by progress on combining numerical and combinatorial algorithmic primitives through the graph Laplacian matrix, known as the `Laplacian paradigm' for designing graph algorithms. Recent and ongoing work by the PI and collaborators led to the current best algorithms for many key problems involving graph Laplacians, and more importantly, significantly broadened the scope of problems addressed. An underlying theme in these results is that the most powerful tools work with intermediate algorithmic states, and the focus of this project is a more in-depth study of this phenomenon using ideas from data structures, which also construct and reuse intermediate algorithmic states. These directions of investigation will lead to new algorithmic constructs, give improved tools for computing on static and dynamic data, and enable new applications based on computations on graphs and matrices.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Yang",
   "pi_last_name": "Peng",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Yang Peng",
   "pi_email_addr": "yangp@cs.cmu.edu",
   "nsf_id": "000700106",
   "pi_start_date": "2023-05-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "5000 FORBES AVE",
  "perf_city_name": "PITTSBURGH",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133815",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002324DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 28259.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 104546.0
  },
  {
   "fund_oblg_fiscal_yr": 2023,
   "fund_oblg_amt": 107664.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project studied more efficient primitives for core primitives in scientific computing, network science,  and machine learning. It led to an improved theoretical upper bounds for solving sparse systems of linear equations, as well as the a nearly-linear time algorithm for solving optimization problems on planar networks.</p>\n<p>Key to both of these lines of investigation are primitives that eliminate varibles to generate equivalent problems on smaller subsets of the problems. These include steps of Gaussian elimination, as well as star-clique transforms in graph theoretic settings. When combined with iterative methods for solving linear systems as well as optimization problems, these methods led to significant runtime improvements.</p>\n<p>These results obtained have had a multitude of impact on convex optimization, dynamic graph data structures, as well as distributed graph algorithms. Some long-standing barriers that some of these results, when combined with the extensive literatures in these areas, were able to break, include solving sparse regression problems faster than their dense analogs, deterministic dynamic connectivity in subpolynomial time per update, and network flows in sublinear rounds of CONGEST distributed communication. Several of the algorithms have also been tested practically, with papers appearing in machine learning and high performance computing conferences.<br /><br />The project partially supported the training of three graduate students, including the continuation of one of them as a postdoc when the PI moved. It also supported in part the PI's involvements in outreach activities related to algorithmic problem solving, including serving as head-trainer for the NA Programming Camp (NAPC) ran by the University of Central Florida in 2020 - 2022. However, most of those involvements occurred remotely.</p><br>\n<p>\n Last Modified: 09/30/2024<br>\nModified by: Yang&nbsp;Peng</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThis project studied more efficient primitives for core primitives in scientific computing, network science,  and machine learning. It led to an improved theoretical upper bounds for solving sparse systems of linear equations, as well as the a nearly-linear time algorithm for solving optimization problems on planar networks.\n\n\nKey to both of these lines of investigation are primitives that eliminate varibles to generate equivalent problems on smaller subsets of the problems. These include steps of Gaussian elimination, as well as star-clique transforms in graph theoretic settings. When combined with iterative methods for solving linear systems as well as optimization problems, these methods led to significant runtime improvements.\n\n\nThese results obtained have had a multitude of impact on convex optimization, dynamic graph data structures, as well as distributed graph algorithms. Some long-standing barriers that some of these results, when combined with the extensive literatures in these areas, were able to break, include solving sparse regression problems faster than their dense analogs, deterministic dynamic connectivity in subpolynomial time per update, and network flows in sublinear rounds of CONGEST distributed communication. Several of the algorithms have also been tested practically, with papers appearing in machine learning and high performance computing conferences.\n\nThe project partially supported the training of three graduate students, including the continuation of one of them as a postdoc when the PI moved. It also supported in part the PI's involvements in outreach activities related to algorithmic problem solving, including serving as head-trainer for the NA Programming Camp (NAPC) ran by the University of Central Florida in 2020 - 2022. However, most of those involvements occurred remotely.\t\t\t\t\tLast Modified: 09/30/2024\n\n\t\t\t\t\tSubmitted by: YangPeng\n"
 }
}