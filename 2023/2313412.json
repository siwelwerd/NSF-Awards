{
 "awd_id": "2313412",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Redshift: An Operating System for Pervasive Hardware Acceleration",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032922177",
 "po_email": "dandrese@nsf.gov",
 "po_sign_block_name": "Daniel Andresen",
 "awd_eff_date": "2022-10-01",
 "awd_exp_date": "2023-08-31",
 "tot_intn_awd_amt": 460000.0,
 "awd_amount": 110322.0,
 "awd_min_amd_letter_date": "2023-03-14",
 "awd_max_amd_letter_date": "2023-03-14",
 "awd_abstract_narration": "In contrast to today's systems centered around general-purpose processors also known as central processing units (CPUs), the next generation of high-performance computers will inherently rely on diverse, heterogeneous hardware ranging from many-core processors like Intel Xeon Phi that contains up to 72 processor cores and graphical processing units (GPUs) to specialized hardware accelerators, like specialized machine-learning chips and field-programmable gate arrays (FPGAs) re-programmed on demand for a specific task. In a hardware-accelerated environment that consists of many diverse execution units, the execution of a program is no longer a conventional thread tied to a single CPU, but a graph of small computations scheduled on a set of hardware accelerators each implementing a part of the program logic. Redshift is a new operating system for developing applications that leverage performance of a heterogeneous hardware-accelerated system.\r\n\r\nAt the core of Redshift is a dataflow programming model that enables execution of commodity programs on a network of heterogeneous hardware execution units with only minimal modifications. Redshift implements programs as collections of asynchronous invocations that transparently move execution between hardware functions. A novel runtime maps computations to execution units, balances load among them, and scales the hardware graph of computation in response to load. \r\n\r\nThe problem of efficient computing environments has large impacts on society as a whole: a rapidly growing share of scientific discoveries is done in silico. As this trend continues, we as a society depend on computational capacity of modern computers. Redshift will provide a foundation for developing the next generation of computation intensive applications in the areas of artificial intelligence, e.g., speech and image recognition, personal digital assistance, big-data analytical applications, genomic and personalized medicine, drug discovery, and many more.\r\n\r\nRedshift will be implemented as a practical layer compatible with de facto research and industry standard Linux operating system, and will be open source, directly benefiting the broader community. To make our approach widely available, Redshift will be hosted in a publicly-readable repository, and will be available to anyone (https://github.com/mars-research/redshift). Additionally, as parts of Redshift will be developed in the openly-available National Science Foundation-funded CloudLab and Emulab testbeds, Redshift will be available for a test drive via a CloudLab profile (https://www.cloudlab.us/p/redshift/testdrive) that automatically instantiates a collection of nodes running Redshift).\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Anton",
   "pi_last_name": "Burtsev",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Anton Burtsev",
   "pi_email_addr": "aburtsev@flux.utah.edu",
   "nsf_id": "000637182",
   "pi_start_date": "2023-03-14",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Utah",
  "inst_street_address": "201 PRESIDENTS CIR",
  "inst_street_address_2": "",
  "inst_city_name": "SALT LAKE CITY",
  "inst_state_code": "UT",
  "inst_state_name": "Utah",
  "inst_phone_num": "8015816903",
  "inst_zip_code": "841129049",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "UT01",
  "org_lgl_bus_name": "UNIVERSITY OF UTAH",
  "org_prnt_uei_num": "",
  "org_uei_num": "LL8GLEVH6MG3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Utah",
  "perf_str_addr": "201 PRESIDENTS CIR",
  "perf_city_name": "SALT LAKE CITY",
  "perf_st_code": "UT",
  "perf_st_name": "Utah",
  "perf_zip_code": "841129049",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "UT01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 102322.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 8000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Our work explored organization of a new operating system, RedShift, that was centered around utilization of heterogeneous execution units and dataflow model of execution. Specifically, RedShift executes a program as a collection of execution stages connected with fast communication channels. Over the course of five years we have explored a range of abstractions and mechanisms aimed at providing efficient communication, low-overhead isolation, various models of execution, impact of memory locality on performance, and the possibility to outperform hardware coherence protocols through careful software optimizations.<br /><br />Our work was aimed at exploring the design principles of building new software systems that can fully leverage performance of modern hardware. For example, RedShift explored the possibility to design applications that are optimized to execute at the speed of DRAM. Our work resulted in a development of, arguably, the fastest at the moment of publication hash table, DRAMHiT. Several design principles were critical for achieving performance: asynchronous communication interface, fully-prefetched memory access, batching of requests with out-of-order completion, and partitioned design with a low-overhead, scalable delegation scheme. DRAMHiT leverages these principles to operate close to the speed of DRAM and outperform existing hash tables by nearly a factor of two.<br /><br />Overall, RedShift provides a foundation for developing the next generation of computation intensive applications in the areas of artificial intelligence, e.g., speech and image recognition, personal digital assistance, big-data analytical applications, genomic and personalized medicine, drug discovery, and many more. Redshift is developed as a practical layer compatible with de facto research and industry standard Linux operating system. Over the course of the project a number of graduate and undergraduate students gained experience through their contributions to this project. Students were exposed to complexity of real systems through continuous modification and integration with the full-featured, de-facto industry standard Linux operating system kernel, low-level analysis of microarchitectural aspects of application performance, and development of novel operating system abstractions.</p><br>\n<p>\n Last Modified: 03/20/2024<br>\nModified by: Anton&nbsp;Burtsev</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nOur work explored organization of a new operating system, RedShift, that was centered around utilization of heterogeneous execution units and dataflow model of execution. Specifically, RedShift executes a program as a collection of execution stages connected with fast communication channels. Over the course of five years we have explored a range of abstractions and mechanisms aimed at providing efficient communication, low-overhead isolation, various models of execution, impact of memory locality on performance, and the possibility to outperform hardware coherence protocols through careful software optimizations.\n\nOur work was aimed at exploring the design principles of building new software systems that can fully leverage performance of modern hardware. For example, RedShift explored the possibility to design applications that are optimized to execute at the speed of DRAM. Our work resulted in a development of, arguably, the fastest at the moment of publication hash table, DRAMHiT. Several design principles were critical for achieving performance: asynchronous communication interface, fully-prefetched memory access, batching of requests with out-of-order completion, and partitioned design with a low-overhead, scalable delegation scheme. DRAMHiT leverages these principles to operate close to the speed of DRAM and outperform existing hash tables by nearly a factor of two.\n\nOverall, RedShift provides a foundation for developing the next generation of computation intensive applications in the areas of artificial intelligence, e.g., speech and image recognition, personal digital assistance, big-data analytical applications, genomic and personalized medicine, drug discovery, and many more. Redshift is developed as a practical layer compatible with de facto research and industry standard Linux operating system. Over the course of the project a number of graduate and undergraduate students gained experience through their contributions to this project. Students were exposed to complexity of real systems through continuous modification and integration with the full-featured, de-facto industry standard Linux operating system kernel, low-level analysis of microarchitectural aspects of application performance, and development of novel operating system abstractions.\t\t\t\t\tLast Modified: 03/20/2024\n\n\t\t\t\t\tSubmitted by: AntonBurtsev\n"
 }
}