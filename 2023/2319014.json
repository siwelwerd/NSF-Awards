{
 "awd_id": "2319014",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "FMitF: Track II: Educating Developers about Ownership in Rust",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Damian Dechev",
 "awd_eff_date": "2023-08-01",
 "awd_exp_date": "2024-07-31",
 "tot_intn_awd_amt": 99936.0,
 "awd_amount": 99936.0,
 "awd_min_amd_letter_date": "2023-07-20",
 "awd_max_amd_letter_date": "2023-07-20",
 "awd_abstract_narration": "Rust is an important new programming language that enables programmers to build low-level systems in a way that is both fast and efficient, a combination that has traditionally been extremely difficult. However, using Rust requires programmers to understand the language's \"ownership\" mechanism, which many find daunting. The project's novelties are to create a strong understanding of the difficulties in learning it, create tools to improve understanding, and evaluate that these tools work. The project's impacts are an understanding of important programming language concepts, a collection of useful tools, and a collection of pedagogic materials.\r\n\r\nConcretely, the project has multiple phases. First, it examines StackOverflow postings to determine what troubles programmers seem to have. Next, it turns these into a concept inventory for ownership. Then, it creates visualization tools for understanding both the dynamic and static semantics of Rust. These are then deployed in a copy of a widely used Rust book. The project then assesses the impact of these interventions.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Shriram",
   "pi_last_name": "Krishnamurthi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Shriram Krishnamurthi",
   "pi_email_addr": "sk+17@cs.brown.edu",
   "nsf_id": "000280993",
   "pi_start_date": "2023-07-20",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Brown University",
  "inst_street_address": "1 PROSPECT ST",
  "inst_street_address_2": "",
  "inst_city_name": "PROVIDENCE",
  "inst_state_code": "RI",
  "inst_state_name": "Rhode Island",
  "inst_phone_num": "4018632777",
  "inst_zip_code": "029129100",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "RI01",
  "org_lgl_bus_name": "BROWN UNIVERSITY",
  "org_prnt_uei_num": "E3FDXZ6TBHW3",
  "org_uei_num": "E3FDXZ6TBHW3"
 },
 "perf_inst": {
  "perf_inst_name": "Brown University",
  "perf_str_addr": "1 PROSPECT ST",
  "perf_city_name": "PROVIDENCE",
  "perf_st_code": "RI",
  "perf_st_name": "Rhode Island",
  "perf_zip_code": "029129127",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "RI01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "094Y00",
   "pgm_ele_name": "FMitF: Formal Methods in the F"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "071Z",
   "pgm_ref_txt": "FMitF-Formal Methods in the Field"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002324DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2023,
   "fund_oblg_amt": 99936.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The Rust programming language bundles several innovations from academic computer science into a robust product that is seeing increasing use in industry. Rust has the potential to significantly improve the security and reliability of computer systems, especially ones that implement critical infrastructure. Unfortunately, Rust accomplishes this by sophisticated means that are difficult for many programmers to understand, hindering its adoption.</p>\n<p>The project examined issues that programmers encounter in practice. It identified the root causes behind those issues, focusing on counterfactual reasoning. It then devised new pedagogies to address their comprehension: specifically, a way to show programmers what is happening inside the Rust type system, and a way to demonstrate what would go wrong in the absence of Rust. It implemented these as software tools, and published them through a free, public (fork of a) book. This book has been viewed mililons of times and is in active use, both at large and in formal courses. Beyond these, the project also identified broader trends in learning programming languages.</p>\n<p>The <strong>intellectual&nbsp;merit</strong>&nbsp;of the project is primarily in identifying the cognitive factors that made Rust difficult, and finding ways to address them. The <strong>broader impacts</strong>&nbsp;consist of new free pedagogic materials, insights into difficulties and understanding, and software that people can use to obtain similar understanding of other novel computing infrastructure.</p><br>\n<p>\n Last Modified: 09/02/2024<br>\nModified by: Shriram&nbsp;Krishnamurthi</p></div>\n<div class=\"porSideCol\"\n><div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls onePhoto\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2024/2319014/2319014_10879111_1725328376935_comp_q_6--rgov-214x142.png\" original=\"/por/images/Reports/POR/2024/2319014/2319014_10879111_1725328376935_comp_q_6--rgov-800width.png\" title=\"Ownership error explanation\"><img src=\"/por/images/Reports/POR/2024/2319014/2319014_10879111_1725328376935_comp_q_6--rgov-66x44.png\" alt=\"Ownership error explanation\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">View of counterfactual reasoning in explaining Rust's ownership types.</div>\n<div class=\"imageCredit\">Will Crichton, Gavin Gray, Shriram Krishnamurthi</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Shriram&nbsp;Krishnamurthi\n<div class=\"imageTitle\">Ownership error explanation</div>\n</div>\n</li><li>\n<a href=\"/por/images/Reports/POR/2024/2319014/2319014_10879111_1725328428286_comp_q_5--rgov-214x142.png\" original=\"/por/images/Reports/POR/2024/2319014/2319014_10879111_1725328428286_comp_q_5--rgov-800width.png\" title=\"Ownership type model\"><img src=\"/por/images/Reports/POR/2024/2319014/2319014_10879111_1725328428286_comp_q_5--rgov-66x44.png\" alt=\"Ownership type model\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">View of a new and simpler model for explaining ownership in Rust.</div>\n<div class=\"imageCredit\">Will Crichton, Gavin Gray, Shriram Krishnamurthi</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Shriram&nbsp;Krishnamurthi\n<div class=\"imageTitle\">Ownership type model</div>\n</div>\n</li></ul>\n</div>\n</div></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe Rust programming language bundles several innovations from academic computer science into a robust product that is seeing increasing use in industry. Rust has the potential to significantly improve the security and reliability of computer systems, especially ones that implement critical infrastructure. Unfortunately, Rust accomplishes this by sophisticated means that are difficult for many programmers to understand, hindering its adoption.\n\n\nThe project examined issues that programmers encounter in practice. It identified the root causes behind those issues, focusing on counterfactual reasoning. It then devised new pedagogies to address their comprehension: specifically, a way to show programmers what is happening inside the Rust type system, and a way to demonstrate what would go wrong in the absence of Rust. It implemented these as software tools, and published them through a free, public (fork of a) book. This book has been viewed mililons of times and is in active use, both at large and in formal courses. Beyond these, the project also identified broader trends in learning programming languages.\n\n\nThe intellectualmeritof the project is primarily in identifying the cognitive factors that made Rust difficult, and finding ways to address them. The broader impactsconsist of new free pedagogic materials, insights into difficulties and understanding, and software that people can use to obtain similar understanding of other novel computing infrastructure.\t\t\t\t\tLast Modified: 09/02/2024\n\n\t\t\t\t\tSubmitted by: ShriramKrishnamurthi\n"
 }
}