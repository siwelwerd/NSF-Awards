{
 "awd_id": "2322307",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SBIR Phase I:  Massively Parallel Protocols for Software-based Wireless Systems",
 "cfda_num": "47.084",
 "org_code": "15030000",
 "po_phone": "7032925198",
 "po_email": "pchundi@nsf.gov",
 "po_sign_block_name": "Parvathi Chundi",
 "awd_eff_date": "2023-09-15",
 "awd_exp_date": "2024-12-31",
 "tot_intn_awd_amt": 273383.0,
 "awd_amount": 273383.0,
 "awd_min_amd_letter_date": "2023-09-08",
 "awd_max_amd_letter_date": "2023-09-08",
 "awd_abstract_narration": "The broader/commercial impact of this Small Business Innovation Research (SBIR) Phase I project lies in its potential to implement state-of-the-art radio communication systems faster and less expensively. Radio systems are an essential part of everyday life, serving roles from entertainment to public safety. But modern radio systems, designed to use the limited number of available frequencies efficiently, are expensive to develop and deploy. A major reason for the high cost is that custom silicon chips are needed to do the processing that converts a weak radio signal into useful data.  This project aims to make radio systems much cheaper to build. Instead of building custom chips, the team uses commodity computers and specially designed software that can run the radio processing tasks at high speed. This speed is enabled by technology that analyzes radio processing tasks and turns them into software which runs on a processor with many individual computing cores.  The economic impact is twofold: that technology can reduce the cost of existing systems, such as cellular LTE and 5G base stations, it also makes possible new applications which are too expensive to build from custom hardware.\r\n\r\nThis SBIR Phase I project seeks to understand how to develop the processing needed in modern radio system quickly and efficiently.  The team also seeks to address the features of communications protocols that are hard to implement because the computations are too complicated or too much data needs to be examined before the final output is generated. They will also address the opportunities to change the protocol to eliminate the bottlenecks. The technology will measure the how fast key radio algorithms run on commodity computing hardware and how much time is spent on essential, but not productive, tasks such as moving data between memories. The objective is a quantitative estimate of how much data can be transmitted or received by a radio implemented purely in software. Ultimately, the team will design protocols that scale with the number of processor cores: twice as many processors giving twice the data throughput.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "TIP",
 "org_dir_long_name": "Directorate for Technology, Innovation, and Partnerships",
 "div_abbr": "TI",
 "org_div_long_name": "Translational Impacts",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "James",
   "pi_last_name": "Martin",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "James C Martin",
   "pi_email_addr": "james@lutris.us",
   "nsf_id": "000879634",
   "pi_start_date": "2023-09-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "LUTRIS, INC.",
  "inst_street_address": "1437 HEARST AVE",
  "inst_street_address_2": "",
  "inst_city_name": "BERKELEY",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "5103979274",
  "inst_zip_code": "947021532",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "CA12",
  "org_lgl_bus_name": "LUTRIS, INC.",
  "org_prnt_uei_num": "",
  "org_uei_num": "ZE76YE8D9PM5"
 },
 "perf_inst": {
  "perf_inst_name": "LUTRIS, INC.",
  "perf_str_addr": "1437 HEARST AVE",
  "perf_city_name": "BERKELEY",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "947021532",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "CA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "537100",
   "pgm_ele_name": "SBIR Phase I"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "4097",
   "pgm_ref_txt": "NETWORKING RESEARCH"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01AB2324DB",
   "fund_name": "R&RA DRSA DEFC AAB",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2023,
   "fund_oblg_amt": 273383.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><div class=\"page\" title=\"Page 1\">\r\n<div class=\"layoutArea\">\r\n<div class=\"column\">\r\n<p><span>Lutris, Inc.&rsquo;s goal for its NSF SBIR Phase I work was to develop techniques to allow modern cellular standards &mdash; the fourth generation standard, also known as Long Term Evolution or LTE, and the current fifth generation (5G) &mdash; purely in software. The reason for implementing the complicated radio signal processing in software instead of hardware is standard, off-the-shelf computers are much less expensive than custom integrated circuits. We succeeded in this, and have software implementations of most of LTE and 5G that run on standard, multicore processors, for instance, using a high-end laptop computer. We have also identified a promising near-term commercial application of our technology. </span></p>\r\n<p><span>Implementing radio signal processing on a standard computer is more difficult than would appear at first glance, because while the processing power of standard microprocessors has grown enormously over the last few decades, the appetite for wireless data capacity has grown even faster. Also, computer clock speeds are no longer increasing, as silicon integrated circuit technology begins to approach fundamental limits. </span></p>\r\n<p><span>Instead of requiring ever faster computers, our approach uses what we can obtain easily: computers that have many processors, working in parallel. The challenge is to distribute the work across the processors while avoiding bottlenecks, for example, too much work being allocated to one particular processor. We also need to account for the time spent communicating between processors and controlling what is to be done next. The problem is very complicated, and the results that were obtained in the past, disappointing. </span></p>\r\n<p><span>In the academic work which inspired our project, the compute cores of a multi-core processor were each devoted to a single signal processing task. Data flowed from one core to the next, rather like an assembly line. This yielded promising results, but breaking up the signal processing to spread it across the cores was time consuming and required a great deal of experience to do it efficiently. </span></p>\r\n<p><span>The work in this SBIR led to a significantly simpler approach that allowed us to implement the radio signal processing more quickly on multi-core processors, while still maintaining high performance. The basis of our approach is to use a modern functional programming language (Haskell) that makes it easy to split up a problem into many &ldquo;threads&rdquo; which are executed in parallel. In contrast to the academic work, the radio software developed in this SBIR can execute multiple threads on a single processor. By using a finer-grained partitioning of the signal processing task, we are able to keep the processor cores busy most of the time. The processing threads can also migrate from one core to another, providing a way to avoid bottlenecks, in which too much work is assigned to a single core. </span></p>\r\n<p><span>As a result of the above advances made during this SBIR grant, we now have nearly complete software implementations of both the LTE (4G) and 5G radio protocols used for cellular communication. Further, we understand which parts of the radio protocol standards are hard to implement purely in software: the error correction coding, which recovers the data lost because of inevitable fluctuations in the quality of the radio communication channel. </span></p>\r\n<p><span>Our work has shown that purely software radio implementations are possible and can be written quickly. Therefore our technology gives our company the ability to respond to specialized, niche or highly disruptive applications that lack an immediate large market. We are targeting for our initial commercial application one such market: measurement, testing, and monitoring products for 5G and 4G LTE wireless networks, particularly for private cellular networks installers and operators. We have prototyped equipment that monitors and decodes over-the-air cellular traffic. Using our software technology, we are able to combine off-the-shelf software defined radio modules with standard laptop or server computers to build equipment for&nbsp;</span>over-the-air monitoring and debugging of cellular networks. Our approach delivers two main benefits: the first is that it gives a very complete view of wireless network performance, so that problems and inefficiencies are easily found. The second is that, since it is implemented entirely in software, it is straightforward to upgrade. The latter will be increasingly important as 5G evolves into a sixth-generation radio protocol.</p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"page\" title=\"Page 2\">\r\n<div class=\"layoutArea\">\r\n<div class=\"column\">\r\n<p><span>While work in this area may seem quite specialized, it is easily justified by the fact that small improvements in this area can have large economic effects: approximately </span><span>$</span><span>200 billion is being spent by wireless service providers on 5G spectrum and hardware.</span></p>\r\n</div>\r\n</div>\r\n</div><br>\n<p>\n Last Modified: 02/11/2025<br>\nModified by: James&nbsp;C&nbsp;Martin</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\r\n\r\n\r\n\n\nLutris, Inc.s goal for its NSF SBIR Phase I work was to develop techniques to allow modern cellular standards  the fourth generation standard, also known as Long Term Evolution or LTE, and the current fifth generation (5G)  purely in software. The reason for implementing the complicated radio signal processing in software instead of hardware is standard, off-the-shelf computers are much less expensive than custom integrated circuits. We succeeded in this, and have software implementations of most of LTE and 5G that run on standard, multicore processors, for instance, using a high-end laptop computer. We have also identified a promising near-term commercial application of our technology. \r\n\n\nImplementing radio signal processing on a standard computer is more difficult than would appear at first glance, because while the processing power of standard microprocessors has grown enormously over the last few decades, the appetite for wireless data capacity has grown even faster. Also, computer clock speeds are no longer increasing, as silicon integrated circuit technology begins to approach fundamental limits. \r\n\n\nInstead of requiring ever faster computers, our approach uses what we can obtain easily: computers that have many processors, working in parallel. The challenge is to distribute the work across the processors while avoiding bottlenecks, for example, too much work being allocated to one particular processor. We also need to account for the time spent communicating between processors and controlling what is to be done next. The problem is very complicated, and the results that were obtained in the past, disappointing. \r\n\n\nIn the academic work which inspired our project, the compute cores of a multi-core processor were each devoted to a single signal processing task. Data flowed from one core to the next, rather like an assembly line. This yielded promising results, but breaking up the signal processing to spread it across the cores was time consuming and required a great deal of experience to do it efficiently. \r\n\n\nThe work in this SBIR led to a significantly simpler approach that allowed us to implement the radio signal processing more quickly on multi-core processors, while still maintaining high performance. The basis of our approach is to use a modern functional programming language (Haskell) that makes it easy to split up a problem into many threads which are executed in parallel. In contrast to the academic work, the radio software developed in this SBIR can execute multiple threads on a single processor. By using a finer-grained partitioning of the signal processing task, we are able to keep the processor cores busy most of the time. The processing threads can also migrate from one core to another, providing a way to avoid bottlenecks, in which too much work is assigned to a single core. \r\n\n\nAs a result of the above advances made during this SBIR grant, we now have nearly complete software implementations of both the LTE (4G) and 5G radio protocols used for cellular communication. Further, we understand which parts of the radio protocol standards are hard to implement purely in software: the error correction coding, which recovers the data lost because of inevitable fluctuations in the quality of the radio communication channel. \r\n\n\nOur work has shown that purely software radio implementations are possible and can be written quickly. Therefore our technology gives our company the ability to respond to specialized, niche or highly disruptive applications that lack an immediate large market. We are targeting for our initial commercial application one such market: measurement, testing, and monitoring products for 5G and 4G LTE wireless networks, particularly for private cellular networks installers and operators. We have prototyped equipment that monitors and decodes over-the-air cellular traffic. Using our software technology, we are able to combine off-the-shelf software defined radio modules with standard laptop or server computers to build equipment forover-the-air monitoring and debugging of cellular networks. Our approach delivers two main benefits: the first is that it gives a very complete view of wireless network performance, so that problems and inefficiencies are easily found. The second is that, since it is implemented entirely in software, it is straightforward to upgrade. The latter will be increasingly important as 5G evolves into a sixth-generation radio protocol.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\nWhile work in this area may seem quite specialized, it is easily justified by the fact that small improvements in this area can have large economic effects: approximately $200 billion is being spent by wireless service providers on 5G spectrum and hardware.\r\n\r\n\r\n\t\t\t\t\tLast Modified: 02/11/2025\n\n\t\t\t\t\tSubmitted by: JamesCMartin\n"
 }
}