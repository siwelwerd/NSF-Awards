{
 "awd_id": "1834701",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: SOlSTICe: Software Synthesis with Timing Contracts for Cyber-Physical Systems",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032922585",
 "po_email": "pprabhak@nsf.gov",
 "po_sign_block_name": "Pavithra Prabhakar",
 "awd_eff_date": "2018-01-01",
 "awd_exp_date": "2023-12-31",
 "tot_intn_awd_amt": 490065.0,
 "awd_amount": 490065.0,
 "awd_min_amd_letter_date": "2018-05-31",
 "awd_max_amd_letter_date": "2022-11-14",
 "awd_abstract_narration": "This project aims to develop innovative design automation methodologies and algorithms for software synthesis of cyber-physical systems (CPS), which have applications in key sectors such as automotive, aerospace, healthcare, and industrial automation. Software has become critical and drives future innovations for many such systems, but faces significant challenges in its development, in particular regarding the formulation, exploration and validation of timing constraints. The results from this project will address critical timing challenges in CPS software development, and lead to correct, predictable and efficient software implementations. In addition to disseminating the results through publications and workshops, the PI will collaborate with industry partners on transitioning the research findings into practice. Leveraging the research activities, the PI will develop an integrated education program that focuses on the interdisciplinary education of K-12, undergraduate and graduate students, through Lego Mindstorms labs development and contest organization, new CPS course development, and textbook writing. \r\n\r\nThe project will develop, a software synthesis framework that addresses the timing challenges in CPS by quantitatively exploring timing constraints for multiple conflicting design metrics and across multiple abstraction layers, and using these timing constraints to drive the design space exploration. Developing the framework includes three closely-related research themes: (1) formulating and exploring timing contracts to co-design functionality and software architecture with respect to various design metrics (e.g., performance, security, schedulability) and to carry out hierarchical refinement across abstraction layers, (2) exploring the generation of software tasks from functional models and the mapping of those tasks onto hardware platforms with holistic timing consideration throughout the synthesis process, and (3) co-simulating functional and architectural models with explicit representation and evaluation of timing contracts to complement the proposed analytical synthesis algorithms.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Qi",
   "pi_last_name": "Zhu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Qi Zhu",
   "pi_email_addr": "qzhu@northwestern.edu",
   "nsf_id": "000600127",
   "pi_start_date": "2018-05-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Northwestern University",
  "inst_street_address": "633 CLARK ST",
  "inst_street_address_2": "",
  "inst_city_name": "EVANSTON",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "3125037955",
  "inst_zip_code": "602080001",
  "inst_country_name": "United States",
  "cong_dist_code": "09",
  "st_cong_dist_code": "IL09",
  "org_lgl_bus_name": "NORTHWESTERN UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "EXZVPWZBLUE8"
 },
 "perf_inst": {
  "perf_inst_name": "Northwestern University",
  "perf_str_addr": "2145 Sheridan Road",
  "perf_city_name": "Evanston",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "602083118",
  "perf_ctry_code": "US",
  "perf_cong_dist": "09",
  "perf_st_cong_dist": "IL09",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  },
  {
   "pgm_ele_code": "791800",
   "pgm_ele_name": "CPS-Cyber-Physical Systems"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7918",
   "pgm_ref_txt": "CYBER-PHYSICAL SYSTEMS (CPS)"
  },
  {
   "pgm_ref_code": "7945",
   "pgm_ref_txt": "DES AUTO FOR MICRO & NANO SYST"
  }
 ],
 "app_fund": [
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 197652.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 142829.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 149583.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project develops innovative design automation methodologies, algorithms, and tools for software synthesis of cyber-physical systems (CPSs), which have applications in key sectors such as automotive, aerospace, healthcare, and industrial automation. Software has become critical and drives future innovations for many CPSs, however faces significant challenges in its development, in particular regarding the design, analysis, and validation of timing constraints and machine learning-based components. The results from this project address some of the critical challenges in CPS software development, and lead to correct, predictable, and efficient software implementations. Some highlights of the project outcome include cross-layer software synthesis for time-critical and safety-critical CPSs, synthesis and verification with weakly-hard timing contracts, safety-assured software design and adaptation for learning-enabled CPSs, robust LE-CPS design under disturbances and uncertainties, development of learning algorithms addressing data challenges, and applications in automotive, robotic, and building domains, as introduced below.</p>\n<p><strong>Cross-layer software synthesis for time-critical and safety-critical CPSs:</strong> The project developed a series of software synthesis methods that address various properties (e.g., safety, performance, robustness) at the functional layer and system schedulability at the embedded platform layer in a holistic manner, with the consideration of timing behavior across system layers. This cross-layer and codesign methodology was applied to a number of practical applications, particularly in automotive domain, and was able to significantly improve design feasibility and performance.</p>\n<p><strong>Synthesis and verification with weakly-hard timing contracts: </strong>The project explored leveraging weakly-hard timing contracts (constraints) to facilitate system design and retrofitting. Different from traditional hard deadlines, weakly-hard timing constraints allow occasional deadline misses of operations in a bounded and controlled manner. Leveraging these weakly-hard constraints significantly expands the potential system design space, increases design flexibility, and improves system's capability to accommodate future changes; while still provides opportunities for formally reasoning/verifying system properties such as safety and stability.</p>\n<p><strong>Safety-assured software design and adaptation for learning-enabled CPSs (LE-CPSs): </strong>For many CPSs that rely on machine learning components for perception, planning, control, and other functionalities, i.e., LE-CPSs, there are strong needs for ensuring their safety while adapting to dynamic environments and evolving mission objectives. This project developed a series of verification, offline design, and online adaptation methods to 1) formally verify the safety of given LE-CPS designs, 2) efficiently learn safe LE-CPS planning and control policies with verification in the loop for known and unknown environments, and 3) adaptively switch planning/control policies and adjust software architecture to accommodate environment and mission changes while ensuring system safety, performance, and efficiency.</p>\n<p><strong>Robust LE-CPS design under disturbances and uncertainties: </strong>The project developed a series of methods for addressing disturbances and uncertainties in LE-CPS design, verification, and adaptation, such as adversarial attacks to perception neural network input, disturbances in software and hardware execution, and uncertainties in the behavior of neural network-based components. In particular, it developed formal methodologies to measure neural network local and global robustness with respect to input disturbances, and to improve their robustness through adversarial training, neural network repairment, and system-level mitigation strategies.</p>\n<p><strong>Development of learning algorithms addressing data challenges: </strong>This project developed new machine learning algorithms to address several key challenges in applying data-driven learning methods to CPSs. These include algorithms to address the lack of data samples and labels in model training, the encountering of previously unseen data domains during model deployment, the class imbalance across different nodes in federated learning, the enormous amount of time and data needed for finding an effective policy in reinforcement learning, the significant noises in sensing data, and the costly resource consumption in embedded applications.</p>\n<p><strong>Applications in automotive, robotic, and building domains: </strong>Leveraging the general methods, tools, and algorithms developed above, the project also developed a series of domain-specific methods for critical CPS domains such as automotive systems, robotic systems, and smart buildings. For instance, it presented methods to improve the safety, robustness, and efficiency of neural network-based components in connected and autonomous vehicles, and to improve the efficiency and robustness of reinforcement learning-based building HVAC control systems.</p>\n<p>The research findings from this project provided significant fundamental advances in addressing CPS safety, robustness, performance, and efficiency, especially with the increasing software complexity and the emergence of machine learning-based components. The knowledge and solutions gained for application domains such as automotive systems and smart buildings could have significant practical values and societal impacts. The findings have been disseminated to the public through more than 80 publications at top conferences and journals, with two best paper awards (TODAES 2016, DATE 2022) and multiple nominations, and popular open-source tools such as ReachNN and POLAR. They have also been incorporated into several undergraduate and graduate courses at Northwestern University and UC Riverside. Through the project, the PI has mentored more than 20 graduate students and postdocs. They also closely collaborated with industry partners, with joint publications.</p><br>\n<p>\n Last Modified: 04/29/2024<br>\nModified by: Qi&nbsp;Zhu</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThis project develops innovative design automation methodologies, algorithms, and tools for software synthesis of cyber-physical systems (CPSs), which have applications in key sectors such as automotive, aerospace, healthcare, and industrial automation. Software has become critical and drives future innovations for many CPSs, however faces significant challenges in its development, in particular regarding the design, analysis, and validation of timing constraints and machine learning-based components. The results from this project address some of the critical challenges in CPS software development, and lead to correct, predictable, and efficient software implementations. Some highlights of the project outcome include cross-layer software synthesis for time-critical and safety-critical CPSs, synthesis and verification with weakly-hard timing contracts, safety-assured software design and adaptation for learning-enabled CPSs, robust LE-CPS design under disturbances and uncertainties, development of learning algorithms addressing data challenges, and applications in automotive, robotic, and building domains, as introduced below.\n\n\nCross-layer software synthesis for time-critical and safety-critical CPSs: The project developed a series of software synthesis methods that address various properties (e.g., safety, performance, robustness) at the functional layer and system schedulability at the embedded platform layer in a holistic manner, with the consideration of timing behavior across system layers. This cross-layer and codesign methodology was applied to a number of practical applications, particularly in automotive domain, and was able to significantly improve design feasibility and performance.\n\n\nSynthesis and verification with weakly-hard timing contracts: The project explored leveraging weakly-hard timing contracts (constraints) to facilitate system design and retrofitting. Different from traditional hard deadlines, weakly-hard timing constraints allow occasional deadline misses of operations in a bounded and controlled manner. Leveraging these weakly-hard constraints significantly expands the potential system design space, increases design flexibility, and improves system's capability to accommodate future changes; while still provides opportunities for formally reasoning/verifying system properties such as safety and stability.\n\n\nSafety-assured software design and adaptation for learning-enabled CPSs (LE-CPSs): For many CPSs that rely on machine learning components for perception, planning, control, and other functionalities, i.e., LE-CPSs, there are strong needs for ensuring their safety while adapting to dynamic environments and evolving mission objectives. This project developed a series of verification, offline design, and online adaptation methods to 1) formally verify the safety of given LE-CPS designs, 2) efficiently learn safe LE-CPS planning and control policies with verification in the loop for known and unknown environments, and 3) adaptively switch planning/control policies and adjust software architecture to accommodate environment and mission changes while ensuring system safety, performance, and efficiency.\n\n\nRobust LE-CPS design under disturbances and uncertainties: The project developed a series of methods for addressing disturbances and uncertainties in LE-CPS design, verification, and adaptation, such as adversarial attacks to perception neural network input, disturbances in software and hardware execution, and uncertainties in the behavior of neural network-based components. In particular, it developed formal methodologies to measure neural network local and global robustness with respect to input disturbances, and to improve their robustness through adversarial training, neural network repairment, and system-level mitigation strategies.\n\n\nDevelopment of learning algorithms addressing data challenges: This project developed new machine learning algorithms to address several key challenges in applying data-driven learning methods to CPSs. These include algorithms to address the lack of data samples and labels in model training, the encountering of previously unseen data domains during model deployment, the class imbalance across different nodes in federated learning, the enormous amount of time and data needed for finding an effective policy in reinforcement learning, the significant noises in sensing data, and the costly resource consumption in embedded applications.\n\n\nApplications in automotive, robotic, and building domains: Leveraging the general methods, tools, and algorithms developed above, the project also developed a series of domain-specific methods for critical CPS domains such as automotive systems, robotic systems, and smart buildings. For instance, it presented methods to improve the safety, robustness, and efficiency of neural network-based components in connected and autonomous vehicles, and to improve the efficiency and robustness of reinforcement learning-based building HVAC control systems.\n\n\nThe research findings from this project provided significant fundamental advances in addressing CPS safety, robustness, performance, and efficiency, especially with the increasing software complexity and the emergence of machine learning-based components. The knowledge and solutions gained for application domains such as automotive systems and smart buildings could have significant practical values and societal impacts. The findings have been disseminated to the public through more than 80 publications at top conferences and journals, with two best paper awards (TODAES 2016, DATE 2022) and multiple nominations, and popular open-source tools such as ReachNN and POLAR. They have also been incorporated into several undergraduate and graduate courses at Northwestern University and UC Riverside. Through the project, the PI has mentored more than 20 graduate students and postdocs. They also closely collaborated with industry partners, with joint publications.\t\t\t\t\tLast Modified: 04/29/2024\n\n\t\t\t\t\tSubmitted by: QiZhu\n"
 }
}