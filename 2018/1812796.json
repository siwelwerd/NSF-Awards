{
 "awd_id": "1812796",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CHS: Small: Higher-Order Monte Carlo Samples for Computer Graphics Rendering",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Ephraim Glinert",
 "awd_eff_date": "2018-08-15",
 "awd_exp_date": "2022-07-31",
 "tot_intn_awd_amt": 494628.0,
 "awd_amount": 494628.0,
 "awd_min_amd_letter_date": "2018-08-08",
 "awd_max_amd_letter_date": "2018-09-14",
 "awd_abstract_narration": "As computer graphics rendering becomes more realistic, it is increasingly critical to our economy, safety, and daily lives: from diagnosing illnesses, to self-driving cars, and to designing, visualizing and manufacturing products.  These application domains are fueled by rendering algorithms which simulate how light sources emit photons that then scatter around in a scene before making their way into a camera (or our eyes) to form a virtual image.  Unfortunately, the number of such photons that even the fastest computers are able to simulate is so tiny in comparison to nature that rendering high-quality images remains an incredibly time-consuming enterprise.  This project will develop new ways of expressing numerical light transport simulations which are not restricted to operate in direct analogy to nature, thereby generalizing a broad range of rendering algorithms used in computer graphics so they can operate more efficiently.  Project outcomes will transform the field by fundamentally changing the definition of Monte Carlo integration, and by providing a suite of new tools to design, implement, and analyze such algorithms, with far-reaching and broad impact on applications such as those mentioned above and many others.  An integrated educational and outreach program will leverage ubiquitous familiarity with light to teach otherwise abstract mathematical and physical concepts to students from diverse educational and socio-economic backgrounds.\r\n\r\nAccurate and efficient light transport simulation has always been a central problem of computer graphics, and it continues to be challenging because the currently prevailing Monte Carlo (MC) algorithms operate in direct analogy to nature by randomly point-sampling paths from the light to the sensor.  While intuitive, these algorithms are too slow because each sample contributes little to the answer so that many samples are required, but even the fastest computers cannot hope to compete with the computational speed of nature in the foreseeable future.  This project will address that challenge by: establishing a generalized theory of MC integration enabling new rendering algorithms that simulate light more efficiently than nature by leveraging higher-order samples such as lines (1D), planes (2D), and beyond (nD); by developing the necessary tools to analyze and optimally leverage such samples in general MC integration; and by applying these benefits to inverse light transport problems.  Project outcomes will have far-reaching impact in all application domains relying on computer graphics rendering, as well as in other fields that rely on MC integration and physically based light transport in general.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Wojciech",
   "pi_last_name": "Jarosz",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Wojciech Jarosz",
   "pi_email_addr": "wojciech.k.jarosz@dartmouth.edu",
   "nsf_id": "000703281",
   "pi_start_date": "2018-08-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Dartmouth College",
  "inst_street_address": "7 LEBANON ST",
  "inst_street_address_2": "",
  "inst_city_name": "HANOVER",
  "inst_state_code": "NH",
  "inst_state_name": "New Hampshire",
  "inst_phone_num": "6036463007",
  "inst_zip_code": "037552170",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "NH02",
  "org_lgl_bus_name": "TRUSTEES OF DARTMOUTH COLLEGE",
  "org_prnt_uei_num": "T4MWFG59C6R3",
  "org_uei_num": "EB8ASJBCFER9"
 },
 "perf_inst": {
  "perf_inst_name": "Trustees of Dartmouth College",
  "perf_str_addr": "6211 Sudikoff",
  "perf_city_name": "Hanover",
  "perf_st_code": "NH",
  "perf_st_name": "New Hampshire",
  "perf_zip_code": "037553510",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "NH02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736700",
   "pgm_ele_name": "HCC-Human-Centered Computing"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7367",
   "pgm_ref_txt": "Cyber-Human Systems"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 494628.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span>This project dealt with reimagining the Monte Carlo (MC) algorithms that underpin modern computer graphics rendering. Monte Carlo algorithms use random sampling to estimate quantities that can otherwise be impossibe to compute. </span>In rendering, MC algorithms essentially operate in direct analogy to how light behaves in nature: they randomly point sample paths of light from a light source to the sensor. This process is very general, and is responsible for the explosion of visual complexity in animated films and visual effects over the last couple decades. Unfortunately, it is also very expensive, and it leads to images with considerable noise.</p>\n<p>In this project we abandoned simulating light in direct analogy to nature. Instead of consider individual paths of light (corresponding to point samples), we developed the theory and algorithms to simultaneously simulate entire collections of light paths in tandem (essentially considering entire swaths of points along lines, planes, or other higher-dimensional shapes). This allowed us to generate images in less time, and with less noise than previously possible, and also opened up the opportunity to apply these ideas to problems outside of computer graphics rendering.</p>\n<p>We summarize the main idea and some of the key results of this project in reference to the uploaded images:</p>\n<p>1&amp;2. Monte Carlo&nbsp;<span>rendering typically uses random point sampling to determine the amount of light reaching a particular shade point. For instance, to estimate the fraction of the light source visible to a shade point (and therefore the brightness of the illumination), Monte Carlo samples multiple locations on the light, and uses the fraction of points that \"see\" the light as an estimate of the illumination. This is straightforward, but also expensive. Many samples are needed since each sample only provides one bit of information: the sample either sees the light or not. Our theory allows us to use line samples. Each line sample provides information about <em>how much</em> of the sample is occluded. Each sample is therefore more useful, and produces renderings with less noise than traditional point-sampling approaches for the same computational effort.</span></p>\n<p><span>3. These benefits extend beyond simulating solid surfaces, to scenes containing volumetric media like smoke, steam, or clouds. <span>In this image the bright windows illuminate a smoke-filled room. Prior point-sampling approaches simulate a single ray of light coming from the window at a time. The theory we developed allows us to simulate a whole collection of light paths simultaneously, reducing rendering artifacts considerably.</span></span></p>\n<p>4. Many scientific disciplines require different kinds of cameras and sensors. For instance, \"time-of-flight\" (ToF) cameras can capture images (or videos) \"at the speed of light\": revealing how light travels through a scene. This has applications for autonomous vehicles to navigate in foggy conditions, or for archelogists to recover images underneath paintings in an non-invasive manner. Our line-sampling theory also allows us to simulate, at unprecedented quality, existing and potential future ToF cameras. The image shows a \"steady-state\" image as it would be captured by a typical camera, along with a sequence of ToF images at different points in time, simulated by our approach. Such simulation techniques allow scientists to experiment with new camera designs and acquisition setups before building physical prototypes.</p>\n<p>5. A Monte Carlo algorithm is \"unbiased\" if it returns the correct result, on average. A biased algorithm does not return the correct result on average, expect potentially in the limit of infinite computational effort. Some problems in computer graphics can unfortunately only handled by such biased algoroithms. This includes simulating the focusing of light through a rippling water surface (like at the bottom of a swimming poll). Existing biased algorithms produce images that are overly blurry. Our theory allowed us to, for the first time, estimate the bias/error or error of such techniques, and therefore subtract it from the result to obtain unbiased results.</p>\n<p>6. Finally, we discovered that the techniques we had developed for simulating light transport in volumetric media can also be adapted to the seemingly unrelated problem of solving partial differential equations (PDEs). PDEs can model natural phenomena central to many scientific disciplines, such as heat dissipation, diffusion of electrostatic charges, and distribution of water in soil. Currently, deterministic numerical solvers are the dominant way to tackle such problems, but they struggle when faced with immense geometric complexity since they need to chop up the domain onto a grid or mesh before even solving the PDE. Computer graphics rendering was in a similar situation in the 80s before transitioning to Monte Carlo techniques. We developed analogous Monte Carlo algorithms for solving PDEs. We can use them to, for instance, visualize the&nbsp;<span>distribution of heat radiating from infinitely many blackbodies (about 600M effective boundary vertices are visible from this viewpoint alone). Our Monte Carlo PDE solver directly captures fine geometric detail without ever needing to mesh the 3D domain.</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/28/2022<br>\n\t\t\t\t\tModified by: Wojciech&nbsp;Jarosz</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669652878792_salesin1--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669652878792_salesin1--rgov-800width.jpg\" title=\"Point vs. Line sampling illustration\"><img src=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669652878792_salesin1--rgov-66x44.jpg\" alt=\"Point vs. Line sampling illustration\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Rendering typically uses random point sampling (left) to determine the amount of light reaching a shade point. Each sample is either illuminated or occluded, so many are needed. In our approach (right), each line sample provides information about how much of the sample is occluded, reducing noise.</div>\n<div class=\"imageCredit\">Katherine Salesin, Wojciech Jarosz. \"Combining point and line samples for direct illumination.\" Computer Graphics Forum (Proceedings of EGSR), 38(4), July 2019.</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Wojciech&nbsp;Jarosz</div>\n<div class=\"imageTitle\">Point vs. Line sampling illustration</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669653123073_salesin2--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669653123073_salesin2--rgov-800width.jpg\" title=\"Point vs. Line sampling comparison\"><img src=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669653123073_salesin2--rgov-66x44.jpg\" alt=\"Point vs. Line sampling comparison\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">This simple scene contains four different colored light sources reflecting off of four glossy metallic plates. Our line sampling approach (right) allows us to render this with substantially less noise compared to point sampling (left).</div>\n<div class=\"imageCredit\">Katherine Salesin, Wojciech Jarosz. \"Combining point and line samples for direct illumination.\" Computer Graphics Forum (Proceedings of EGSR), 38(4):159\ufffd169, July 2019.</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Wojciech&nbsp;Jarosz</div>\n<div class=\"imageTitle\">Point vs. Line sampling comparison</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669653507332_photon-planes--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669653507332_photon-planes--rgov-800width.jpg\" title=\"Robust volumetric lighting using photon surfaces\"><img src=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669653507332_photon-planes--rgov-66x44.jpg\" alt=\"Robust volumetric lighting using photon surfaces\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The bright windows illuminate this smoke-filled room. Prior approaches (left) simulate a single ray of light coming from the window  at a time. The theory we developed allows us (right) to simulate a whole collection of light paths simultaneously, reducing rendering artifacts considerably.</div>\n<div class=\"imageCredit\">Xi Deng, Shaojie Jiao, Benedikt Bitterli, Wojciech Jarosz. \"Photon surfaces for robust, unbiased volumetric density estimation.\" ACM Transactions on Graphics (Proceedings of SIGGRAPH), 38(4), July 2019.</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Wojciech&nbsp;Jarosz</div>\n<div class=\"imageTitle\">Robust volumetric lighting using photon surfaces</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669654020039_ToF--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669654020039_ToF--rgov-800width.jpg\" title=\"Time-of-flight rendering\"><img src=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669654020039_ToF--rgov-66x44.jpg\" alt=\"Time-of-flight rendering\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Our theory also allows us to simulate, at unprecedented quality, \"time-of-flight\" (ToF) cameras which capture videos of light as it bounces around in a scene. Here we show (left) a \"steady-state\" image captured by a typical camera, and (right) a sequence of ToF images simulated by our approach.</div>\n<div class=\"imageCredit\">Yang Liu, Shaojie Jiao, Wojciech Jarosz. \"Temporally sliced photon primitives for time-of-flight rendering.\" Computer Graphics Forum (Proceedings of EGSR), 41(4), July 2022.</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Wojciech&nbsp;Jarosz</div>\n<div class=\"imageTitle\">Time-of-flight rendering</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669654493731_debiasing--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669654493731_debiasing--rgov-800width.jpg\" title=\"Unbiased photon mapping\"><img src=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669654493731_debiasing--rgov-66x44.jpg\" alt=\"Unbiased photon mapping\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Some problems currently only admit biased solutions that only give the correct result in the limit of infinite computation (like the left image which has blurred out light patterns on the walls). Our theory allows us to, for the first time, estimate the bias/error to obtain unbiased results (right).</div>\n<div class=\"imageCredit\">Zackary Misso, Benedikt Bitterli, Iliyan Georgiev, Wojciech Jarosz. \"Unbiased and consistent rendering using biased estimators.\" ACM Transactions on Graphics (Proceedings of SIGGRAPH), 41(4), July 2022.</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Wojciech&nbsp;Jarosz</div>\n<div class=\"imageTitle\">Unbiased photon mapping</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669654970627_gridfree--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669654970627_gridfree--rgov-800width.jpg\" title=\"Solving heat-diffusion in a complex scene using Monte Carlo\"><img src=\"/por/images/Reports/POR/2022/1812796/1812796_10567897_1669654970627_gridfree--rgov-66x44.jpg\" alt=\"Solving heat-diffusion in a complex scene using Monte Carlo\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Distribution of heat (inset) radiating from infinitely many blackbodies\ufffdabout 600M effective boundary vertices are visible from this viewpoint alone. (Here we visualize a 2D slice of the full 3D solution.) Our Monte Carlo PDE solver captures this geometric complexity without meshing the 3D domain.</div>\n<div class=\"imageCredit\">Rohan Sawhney, Dario Seyb, Wojciech Jarosz, Keenan Crane. \"Grid-free Monte Carlo for PDEs with spatially varying coefficients.\" ACM Transactions on Graphics (Proceedings of SIGGRAPH), 41(4), July 2022.</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Wojciech&nbsp;Jarosz</div>\n<div class=\"imageTitle\">Solving heat-diffusion in a complex scene using Monte Carlo</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\nThis project dealt with reimagining the Monte Carlo (MC) algorithms that underpin modern computer graphics rendering. Monte Carlo algorithms use random sampling to estimate quantities that can otherwise be impossibe to compute. In rendering, MC algorithms essentially operate in direct analogy to how light behaves in nature: they randomly point sample paths of light from a light source to the sensor. This process is very general, and is responsible for the explosion of visual complexity in animated films and visual effects over the last couple decades. Unfortunately, it is also very expensive, and it leads to images with considerable noise.\n\nIn this project we abandoned simulating light in direct analogy to nature. Instead of consider individual paths of light (corresponding to point samples), we developed the theory and algorithms to simultaneously simulate entire collections of light paths in tandem (essentially considering entire swaths of points along lines, planes, or other higher-dimensional shapes). This allowed us to generate images in less time, and with less noise than previously possible, and also opened up the opportunity to apply these ideas to problems outside of computer graphics rendering.\n\nWe summarize the main idea and some of the key results of this project in reference to the uploaded images:\n\n1&amp;2. Monte Carlo rendering typically uses random point sampling to determine the amount of light reaching a particular shade point. For instance, to estimate the fraction of the light source visible to a shade point (and therefore the brightness of the illumination), Monte Carlo samples multiple locations on the light, and uses the fraction of points that \"see\" the light as an estimate of the illumination. This is straightforward, but also expensive. Many samples are needed since each sample only provides one bit of information: the sample either sees the light or not. Our theory allows us to use line samples. Each line sample provides information about how much of the sample is occluded. Each sample is therefore more useful, and produces renderings with less noise than traditional point-sampling approaches for the same computational effort.\n\n3. These benefits extend beyond simulating solid surfaces, to scenes containing volumetric media like smoke, steam, or clouds. In this image the bright windows illuminate a smoke-filled room. Prior point-sampling approaches simulate a single ray of light coming from the window at a time. The theory we developed allows us to simulate a whole collection of light paths simultaneously, reducing rendering artifacts considerably.\n\n4. Many scientific disciplines require different kinds of cameras and sensors. For instance, \"time-of-flight\" (ToF) cameras can capture images (or videos) \"at the speed of light\": revealing how light travels through a scene. This has applications for autonomous vehicles to navigate in foggy conditions, or for archelogists to recover images underneath paintings in an non-invasive manner. Our line-sampling theory also allows us to simulate, at unprecedented quality, existing and potential future ToF cameras. The image shows a \"steady-state\" image as it would be captured by a typical camera, along with a sequence of ToF images at different points in time, simulated by our approach. Such simulation techniques allow scientists to experiment with new camera designs and acquisition setups before building physical prototypes.\n\n5. A Monte Carlo algorithm is \"unbiased\" if it returns the correct result, on average. A biased algorithm does not return the correct result on average, expect potentially in the limit of infinite computational effort. Some problems in computer graphics can unfortunately only handled by such biased algoroithms. This includes simulating the focusing of light through a rippling water surface (like at the bottom of a swimming poll). Existing biased algorithms produce images that are overly blurry. Our theory allowed us to, for the first time, estimate the bias/error or error of such techniques, and therefore subtract it from the result to obtain unbiased results.\n\n6. Finally, we discovered that the techniques we had developed for simulating light transport in volumetric media can also be adapted to the seemingly unrelated problem of solving partial differential equations (PDEs). PDEs can model natural phenomena central to many scientific disciplines, such as heat dissipation, diffusion of electrostatic charges, and distribution of water in soil. Currently, deterministic numerical solvers are the dominant way to tackle such problems, but they struggle when faced with immense geometric complexity since they need to chop up the domain onto a grid or mesh before even solving the PDE. Computer graphics rendering was in a similar situation in the 80s before transitioning to Monte Carlo techniques. We developed analogous Monte Carlo algorithms for solving PDEs. We can use them to, for instance, visualize the distribution of heat radiating from infinitely many blackbodies (about 600M effective boundary vertices are visible from this viewpoint alone). Our Monte Carlo PDE solver directly captures fine geometric detail without ever needing to mesh the 3D domain.\n\n\t\t\t\t\tLast Modified: 11/28/2022\n\n\t\t\t\t\tSubmitted by: Wojciech Jarosz"
 }
}