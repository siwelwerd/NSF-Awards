{
 "awd_id": "1750116",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: Quality Matters: Dynamic, Static and Proactive Analyses for Automated Program Repair",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2018-03-01",
 "awd_exp_date": "2024-09-30",
 "tot_intn_awd_amt": 524998.0,
 "awd_amount": 606350.0,
 "awd_min_amd_letter_date": "2018-02-27",
 "awd_max_amd_letter_date": "2023-03-09",
 "awd_abstract_narration": "Society is increasingly reliant on software that affects human safety, privacy, and other important concerns. Software engineers have many tools at their disposal to identify errors and write correct code. However, programmer productivity and software quality are serious problems due to the number of open bugs, the negative impact of these bugs, and limited time available to developers to fix them. A recently emerging area of research develops techniques for automatic program repair.  This project will advance the state of software testing and repair by addressing some of the challenges that must be overcome if automatic program repair is to become a common tester's tool. The outcomes of this research will reduce the cost of software defects, improve the quality of software, and improve productivity of programmers.\r\n\r\nTo attack this problem, the project will develop repair techniques that synthesize new code based on Hoare logic and provide better patch guidance for developers through automatic reduction of false negatives. The research will extend separation logic-based bug-finding analyses to construct verified fixes. This involves dynamic strategies that search for and then compose diverse solutions to a given bug repair problem into measurably general patches, also static techniques that construct patches for previously undiscovered bugs that are difficult to find via testing.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Claire",
   "pi_last_name": "Le Goues",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Claire Le Goues",
   "pi_email_addr": "clegoues@cs.cmu.edu",
   "nsf_id": "000654066",
   "pi_start_date": "2018-02-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "CARNEGIE MELLON UNIVERISTY",
  "perf_str_addr": "5000 FORBES AVE",
  "perf_city_name": "PITTSBURGH",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133890",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7798",
   "pgm_ref_txt": "SOFTWARE & HARDWARE FOUNDATION"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002324DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0122",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 205325.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 230757.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 122268.0
  },
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2023,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Bugs in software are an expensive, time-consuming problem.&nbsp; They represent seriousrisks to our economic and often even physical well-being. As the amount of software on which society relies continues to grow, and the velocity at which we create and evolve new software accelerates commensurately, new and better tools are required to help developers cope with and manage the quality problems in the software they work on.&nbsp; In particular, automatic tools --- that can find and fix bugs automatically --- are needed to supplement human effort; there simply are not enough humandeveloper-hours available to attend to all quality problems inpractice.&nbsp; Tools like compilers, linters, and testing frameworks have long existed to support quality assurance and improvement.&nbsp; This project developed new techniques for automatically finding and fixing bugs that are as easy and natural for developers to use as these longstanding technologies, and to show their utility on real-world code.</p>\r\n<p><br />Intellectual Merit.&nbsp; This project produced a number of new techniques and technologies for automatic bug detection and repair.&nbsp; We developed new ways to fix bugs found both by tests, and by tools that rely on formal logic.&nbsp; We developed new programming languages that are easy for developers to use to describe and apply changes to code, a cornerstone of automatic repair.&nbsp; We also demonstrated the use of those languages for other kinds of program editing, such as for updates and upgrades to underlying APIs and libraries.&nbsp; We additionally focused a portion of the project's efforts specifically on bugs in robotics systems, as they are complex and safety critical, and in particularly dire need of good programming tools.&nbsp; We studied bugs in existing systems, and came up with ways to analyze robotics code and help developers quickly spot and fix mistakes in their systems.&nbsp;</p>\r\n<p><br />Broader Impacts.&nbsp; Software quality affects everyone, and everything --- our economy relies on software, from the phones we use to stay connected, to the backbone of our financial system, to the cars and planes we use to travel.&nbsp; Its quality is therefore instrumental to our existence as a functioning society.&nbsp; Techniques to find and fix bugs in that software are thus wide-ranging in their impacts.&nbsp; Specific technologies developed as part of this project are open-source, and several popular on GitHub, being used by other developers, or extended by other researchers to study follow-on problems. Additionally, this project supported a number of students, both graduate and undergraduate, in the design and execution of its novel outcomes.&nbsp; Many of the undergraduate students have gone on to graduate study, with their first taste of research coming from their work on this project.&nbsp; The graduate students have gone on to Research Scientist positions throughout the country, or are joining academia as teaching faculty.&nbsp; The project thus has had wide-ranging potential broader impacts, both in terms of the specific techniques it developed, and in terms of the students whose training it supported.&nbsp;</p>\r\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 01/29/2025<br>\nModified by: Claire&nbsp;Le Goues</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nBugs in software are an expensive, time-consuming problem. They represent seriousrisks to our economic and often even physical well-being. As the amount of software on which society relies continues to grow, and the velocity at which we create and evolve new software accelerates commensurately, new and better tools are required to help developers cope with and manage the quality problems in the software they work on. In particular, automatic tools --- that can find and fix bugs automatically --- are needed to supplement human effort; there simply are not enough humandeveloper-hours available to attend to all quality problems inpractice. Tools like compilers, linters, and testing frameworks have long existed to support quality assurance and improvement. This project developed new techniques for automatically finding and fixing bugs that are as easy and natural for developers to use as these longstanding technologies, and to show their utility on real-world code.\r\n\n\n\nIntellectual Merit. This project produced a number of new techniques and technologies for automatic bug detection and repair. We developed new ways to fix bugs found both by tests, and by tools that rely on formal logic. We developed new programming languages that are easy for developers to use to describe and apply changes to code, a cornerstone of automatic repair. We also demonstrated the use of those languages for other kinds of program editing, such as for updates and upgrades to underlying APIs and libraries. We additionally focused a portion of the project's efforts specifically on bugs in robotics systems, as they are complex and safety critical, and in particularly dire need of good programming tools. We studied bugs in existing systems, and came up with ways to analyze robotics code and help developers quickly spot and fix mistakes in their systems.\r\n\n\n\nBroader Impacts. Software quality affects everyone, and everything --- our economy relies on software, from the phones we use to stay connected, to the backbone of our financial system, to the cars and planes we use to travel. Its quality is therefore instrumental to our existence as a functioning society. Techniques to find and fix bugs in that software are thus wide-ranging in their impacts. Specific technologies developed as part of this project are open-source, and several popular on GitHub, being used by other developers, or extended by other researchers to study follow-on problems. Additionally, this project supported a number of students, both graduate and undergraduate, in the design and execution of its novel outcomes. Many of the undergraduate students have gone on to graduate study, with their first taste of research coming from their work on this project. The graduate students have gone on to Research Scientist positions throughout the country, or are joining academia as teaching faculty. The project thus has had wide-ranging potential broader impacts, both in terms of the specific techniques it developed, and in terms of the students whose training it supported.\r\n\n\n\t\t\t\t\tLast Modified: 01/29/2025\n\n\t\t\t\t\tSubmitted by: ClaireLe Goues\n"
 }
}