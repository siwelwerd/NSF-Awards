{
 "awd_id": "1822342",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CISE/SHF: Summer School on Formal Techniques",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922585",
 "po_email": "pprabhak@nsf.gov",
 "po_sign_block_name": "Pavithra Prabhakar",
 "awd_eff_date": "2018-04-01",
 "awd_exp_date": "2023-03-31",
 "tot_intn_awd_amt": 299379.0,
 "awd_amount": 299379.0,
 "awd_min_amd_letter_date": "2018-03-21",
 "awd_max_amd_letter_date": "2020-04-01",
 "awd_abstract_narration": "Formal verification covers a wide range of technologies that are widely studied in academia and routinely used in industry. Any acceleration in the diffusion of knowledge about these techniques will lead to superior technology, better users, and exciting and far-reaching applications. This grant organizes a Summer School on Formal Techniques over three years, during 2018 - 2020, for students to learn about cutting-edge techniques in formal modeling and verification. The lectures are rigorous and cover the spectrum of formal techniques including static analysis, model checking, theorem proving, invariant generation, compositional verification, security and systems biology. The lectures are supported by hands-on laboratories. Attendees at the school discuss their own research ideas and interact closely with both the lecturers and other students.\r\n\r\nThe previous summer schools have had a significant broad impact in terms of imparting theoretical knowledge as well as practical skills to the students from many different research areas. These summer schools have been received enthusiastically by the participants, and helped develop a well-knit community of young researchers. The organizers collected valuable feedback from the students on the impact of the summer school lectures on their education and research, as well as longitudinal study across past attendees of these events to evaluate longer-term impacts. Much of the feedback has been positive, and there is a strong indication that the lectures cover material that is new and useful to the students, and the laboratory work builds confidence in the use of specific formal techniques. The lectures, software tools, and other course material are available from the previous summer school web sites.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Natarajan",
   "pi_last_name": "Shankar",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Natarajan Shankar",
   "pi_email_addr": "shankar@csl.sri.com",
   "nsf_id": "000370169",
   "pi_start_date": "2018-03-21",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "SRI International",
  "inst_street_address": "333 RAVENSWOOD AVE",
  "inst_street_address_2": "",
  "inst_city_name": "MENLO PARK",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "6097342285",
  "inst_zip_code": "940253493",
  "inst_country_name": "United States",
  "cong_dist_code": "16",
  "st_cong_dist_code": "CA16",
  "org_lgl_bus_name": "SRI INTERNATIONAL",
  "org_prnt_uei_num": "SRG2J1WS9X63",
  "org_uei_num": "SRG2J1WS9X63"
 },
 "perf_inst": {
  "perf_inst_name": "SRI International",
  "perf_str_addr": "333 Ravenswood Avenue",
  "perf_city_name": "Menlo Park",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "940253493",
  "perf_ctry_code": "US",
  "perf_cong_dist": "16",
  "perf_st_cong_dist": "CA16",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 99664.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 99777.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 99938.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Software plays an increasingly significant role in the infrastructure<br />supporting transportation, manufacturing, entertainment, agriculture,<br />and government.&nbsp; The safety and security of this infrastructure<br />depends critically on the level of rigor with which software-based<br />systems are designed and verified.&nbsp; Formal techniques for rigorous<br />modeling and verification have seen dramatic advances in the last two<br />decades.&nbsp; Verification techniques like static analysis, constraint<br />solving, model checking, and theorem proving are now widely used in<br />both the hardware and software industries.&nbsp; Formal techniques are also<br />increasingly being used in scientific modeling; for example, in<br />systems biology and in the engineering of complex cyber-physical<br />systems.&nbsp; The biggest challenge facing this technology is the lack of<br />trained users and developers of this technology.&nbsp; The Summer School on<br />Formal Techniques is an annual event devoted to training students on<br />the principles and practice of formal techniques, with a strong<br />emphasis on the hands-on use and development of this technology.&nbsp; It<br />primarily targets graduate students and young researchers who are<br />interested in studying and using formal techniques in their research.<br />Twelve such summer schools have been held since the inaugural school<br />in 2011.&nbsp; Nearly a thousand students have received advanced training<br />through these schools.&nbsp; Many of them have gone on to complete advanced<br />degrees and have become productive formal methods researchers.&nbsp; Many<br />alumni credit their attendance at the summer school as a turning point<br />in their careers.<br /><br />The summer schools typically run for a week and feature five or more<br />lecturers delivering lectures and supervising laboratory sessions<br />where the students work on challenging exercises that train them in<br />the effective use formal tools and techniques.&nbsp; The school includes a<br />background course on the basics of logic and type theory and invited<br />talks addressing cutting-edge topics.<br /><br />In 2022, a one-day Formal-Methods-in-the-Field (FMiTF) Boot Camp was<br />held and this was expanded to a four-day FMiTF Boot Camp in 2023.<br />During these Boot Camps, the students worked in teams to take on hard<br />challenge problems in formalization and verification using a variety<br />of tools.<br /><br />Techniques based on formal logic, such as model checking,<br />satisfiability, static analysis, and automated theorem proving, are<br />finding a broad range of applications in modeling, analysis, verification,<br />and synthesis.&nbsp; Tools based on these techniques are being employed<br />as research aids in a range of disciplines both within computing and elsewhere.<br />They are also gaining acceptance in industry, particularly in hardware and<br />software design.&nbsp; The summer school bridges a critical gap in the<br />training of students to master this important technology.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/22/2023<br>\n\t\t\t\t\tModified by: Natarajan&nbsp;Shankar</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nSoftware plays an increasingly significant role in the infrastructure\nsupporting transportation, manufacturing, entertainment, agriculture,\nand government.  The safety and security of this infrastructure\ndepends critically on the level of rigor with which software-based\nsystems are designed and verified.  Formal techniques for rigorous\nmodeling and verification have seen dramatic advances in the last two\ndecades.  Verification techniques like static analysis, constraint\nsolving, model checking, and theorem proving are now widely used in\nboth the hardware and software industries.  Formal techniques are also\nincreasingly being used in scientific modeling; for example, in\nsystems biology and in the engineering of complex cyber-physical\nsystems.  The biggest challenge facing this technology is the lack of\ntrained users and developers of this technology.  The Summer School on\nFormal Techniques is an annual event devoted to training students on\nthe principles and practice of formal techniques, with a strong\nemphasis on the hands-on use and development of this technology.  It\nprimarily targets graduate students and young researchers who are\ninterested in studying and using formal techniques in their research.\nTwelve such summer schools have been held since the inaugural school\nin 2011.  Nearly a thousand students have received advanced training\nthrough these schools.  Many of them have gone on to complete advanced\ndegrees and have become productive formal methods researchers.  Many\nalumni credit their attendance at the summer school as a turning point\nin their careers.\n\nThe summer schools typically run for a week and feature five or more\nlecturers delivering lectures and supervising laboratory sessions\nwhere the students work on challenging exercises that train them in\nthe effective use formal tools and techniques.  The school includes a\nbackground course on the basics of logic and type theory and invited\ntalks addressing cutting-edge topics.\n\nIn 2022, a one-day Formal-Methods-in-the-Field (FMiTF) Boot Camp was\nheld and this was expanded to a four-day FMiTF Boot Camp in 2023.\nDuring these Boot Camps, the students worked in teams to take on hard\nchallenge problems in formalization and verification using a variety\nof tools.\n\nTechniques based on formal logic, such as model checking,\nsatisfiability, static analysis, and automated theorem proving, are\nfinding a broad range of applications in modeling, analysis, verification,\nand synthesis.  Tools based on these techniques are being employed\nas research aids in a range of disciplines both within computing and elsewhere.\nThey are also gaining acceptance in industry, particularly in hardware and\nsoftware design.  The summer school bridges a critical gap in the\ntraining of students to master this important technology.\n\n\t\t\t\t\tLast Modified: 06/22/2023\n\n\t\t\t\t\tSubmitted by: Natarajan Shankar"
 }
}