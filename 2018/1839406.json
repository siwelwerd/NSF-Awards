{
 "awd_id": "1839406",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Analytical Tools in Probability for Social Choice Theory and Computer Science",
 "cfda_num": "47.049",
 "org_code": "03040000",
 "po_phone": "7032924885",
 "po_email": "tbartosz@nsf.gov",
 "po_sign_block_name": "Tomek Bartoszynski",
 "awd_eff_date": "2018-07-01",
 "awd_exp_date": "2020-06-30",
 "tot_intn_awd_amt": 46491.0,
 "awd_amount": 46491.0,
 "awd_min_amd_letter_date": "2018-06-14",
 "awd_max_amd_letter_date": "2018-06-14",
 "awd_abstract_narration": "This project seeks to answer the following questions. (1) \"How can we design an election so that the outcome does not change due to miscounted or corrupted votes?\" (2) \"What is the best way to cluster data on a computer?\" (3) \"How can we understand the geometry of networks?\"  Questions (1) and (2) can be reformulated as isoperimetric problems.  One example of an isoperimetric problem asks for the shape of a fence of fixed length that encloses the most area (the answer being a circular fence, which was known since ancient times).  The specific isoperimetric problems the principal investigator studies can be phrased as probabilistic problems, and this project develops some new tools from calculus to deal with these problems.  Different versions of Question (1) have been studied extensively by game theorists in the 1950s and 1960s, but investigations in theoretical computer science in the last two decades have given renewed interest for Questions (1), (2), and (3).  Generally speaking, theoretical computer science finds ways for computers to solve problems as quickly and as efficiently as possible.\r\n\r\nThis project develops two analytic tools in probability: the calculus of variations and curvature.  Several recent isoperimetric problems in probability and theoretical computer science such as (1) and (2) ask for the Euclidean sets of smallest Gaussian perimeter and fixed Gaussian volume.  A breakthrough result of Choksi and Sternberg from 2007 allows the calculus of variations to be applied to these optimization problems, though others have not yet used variational tools for these problems.  The principal investigator will also develop theories of curvature for hypercontractive and logarithmic Sobolev inequalities.  For a Riemannian manifold, Ricci curvature bounds imply logarithmic Sobolev inequalities, a result of Bakry and Emery from 1985.  In this project, different notions of Ricci curvature on random graphs will be investigated. Theories of Ricci curvature for noncommutative logarithmic Sobolev inequalities will also be investigated.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "MPS",
 "org_dir_long_name": "Directorate for Mathematical and Physical Sciences",
 "div_abbr": "DMS",
 "org_div_long_name": "Division Of Mathematical Sciences",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Steven",
   "pi_last_name": "Heilman",
   "pi_mid_init": "M",
   "pi_sufx_name": "",
   "pi_full_name": "Steven M Heilman",
   "pi_email_addr": "sheilman@usc.edu",
   "nsf_id": "000677417",
   "pi_start_date": "2018-06-14",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Southern California",
  "inst_street_address": "3720 S FLOWER ST FL 3",
  "inst_street_address_2": "",
  "inst_city_name": "LOS ANGELES",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "2137407762",
  "inst_zip_code": "90033",
  "inst_country_name": "United States",
  "cong_dist_code": "34",
  "st_cong_dist_code": "CA34",
  "org_lgl_bus_name": "UNIVERSITY OF SOUTHERN CALIFORNIA",
  "org_prnt_uei_num": "",
  "org_uei_num": "G88KLJR3KYT5"
 },
 "perf_inst": {
  "perf_inst_name": "University of Southern California",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "900890001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "37",
  "perf_st_cong_dist": "CA37",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "126300",
   "pgm_ele_name": "PROBABILITY"
  }
 ],
 "pgm_ref": null,
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 46491.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project attempted to answer the following questions. (1) \"How can we design an election so that the outcome does not change due to miscounted or corrupted votes?\" (2) \"What is the best way to cluster data on a computer?\" (3) \"How can we understand the geometry of networks?\" Questions (1) and (2) can be reformulated as isoperimetric problems. One example of an isoperimetric problem asks for the shape of a fence of fixed length that encloses the most area (the answer being a circular fence, which was known since ancient times). The specific isoperimetric problems the principal investigator studies can be phrased as probabilistic problems, and this project develops some new tools from calculus to deal with these problems. Different versions of Question (1) have been studied extensively by game theorists in the 1950s and 1960s, but investigations in theoretical computer science in the last two decades have given renewed interest for Questions (1), (2), and (3). Generally speaking, theoretical computer science finds ways for computers to solve problems as quickly and as efficiently as possible.</p>\n<p><br />Concerning question (1), we showed that a winner-take-all (plurality) voting method best preserves the outcome of an election when a small number of votes are corrupted or miscounted.&nbsp; This result culminated several previous results.&nbsp; This result only considers voting methods where each voter votes for one candidate.&nbsp; It is still unclear what ranked-choice voting method best preserves its outcome when some votes are corrupted.&nbsp; In a ranked-choice voting method, each voter provides a ranked list of candidates, from most-preferred to least-preferred.</p>\n<p><br />Question (2) is directly related to question (1), so we now have a slightly better, though still incomplete, answer to question (2), for a specific computational problem known as MAX-k-CUT.&nbsp; Some applications of our results to machine learning are currently in development.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/30/2020<br>\n\t\t\t\t\tModified by: Steven&nbsp;M&nbsp;Heilman</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project attempted to answer the following questions. (1) \"How can we design an election so that the outcome does not change due to miscounted or corrupted votes?\" (2) \"What is the best way to cluster data on a computer?\" (3) \"How can we understand the geometry of networks?\" Questions (1) and (2) can be reformulated as isoperimetric problems. One example of an isoperimetric problem asks for the shape of a fence of fixed length that encloses the most area (the answer being a circular fence, which was known since ancient times). The specific isoperimetric problems the principal investigator studies can be phrased as probabilistic problems, and this project develops some new tools from calculus to deal with these problems. Different versions of Question (1) have been studied extensively by game theorists in the 1950s and 1960s, but investigations in theoretical computer science in the last two decades have given renewed interest for Questions (1), (2), and (3). Generally speaking, theoretical computer science finds ways for computers to solve problems as quickly and as efficiently as possible.\n\n\nConcerning question (1), we showed that a winner-take-all (plurality) voting method best preserves the outcome of an election when a small number of votes are corrupted or miscounted.  This result culminated several previous results.  This result only considers voting methods where each voter votes for one candidate.  It is still unclear what ranked-choice voting method best preserves its outcome when some votes are corrupted.  In a ranked-choice voting method, each voter provides a ranked list of candidates, from most-preferred to least-preferred.\n\n\nQuestion (2) is directly related to question (1), so we now have a slightly better, though still incomplete, answer to question (2), for a specific computational problem known as MAX-k-CUT.  Some applications of our results to machine learning are currently in development.\n\n\t\t\t\t\tLast Modified: 07/30/2020\n\n\t\t\t\t\tSubmitted by: Steven M Heilman"
 }
}