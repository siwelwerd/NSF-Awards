{
 "awd_id": "1821841",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: EDU: Curricula and CTF Exercises for Teaching Smart Fuzzing and Symbolic Execution",
 "cfda_num": "47.076",
 "org_code": "11010000",
 "po_phone": "7032922677",
 "po_email": "liyang@nsf.gov",
 "po_sign_block_name": "Li Yang",
 "awd_eff_date": "2018-09-15",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 279448.0,
 "awd_amount": 279448.0,
 "awd_min_amd_letter_date": "2018-08-15",
 "awd_max_amd_letter_date": "2018-08-15",
 "awd_abstract_narration": "It is estimated that a security flaw occurs in in every 100 lines of code written, which makes it difficult to develop secure, and trustworthy software.  Given the lack of a sufficient number of developers, the computing industry is turning to smart fuzzing and symbolic execution tools that automatically discover and patch vulnerabilities in computing systems.  While these techniques are becoming widely used in industry, few academic programs include these concepts in their educational programs.  The project will develop curricular materials that will teach students these emerging techniques that are revolutionizing how software is being tested and validated.  This project will develop open-source curricula, and hands-on, \"capture-the-flag\" (CTF) exercises that will enable Computer Science programs across the country to teach these techniques to students. \r\n \r\nIn order to help develop abilities in fuzzing the project will develop a polymorphically generated web application that includes source code and several vulnerabilities.  Students will use a fuzzer to identify, and fix the vulnerabilities.  As a result students will develop the skills required to use fuzzers, and the ability to spot the errors and vulnerabilities in source-code that fuzzers reveal.  By building and publishing these educational artifacts, this project will place these tools in the hands of as many students as possible so that industry can efficiently build and secure software.  As a result, the next-generation of developers will understand the fundamental ideas behind automated vulnerability detection and correction, and develop the ability to leverage modern software testing tools.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DGE",
 "org_div_long_name": "Division Of Graduate Education",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Wu-chang",
   "pi_last_name": "Feng",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Wu-chang Feng",
   "pi_email_addr": "wuchang@cs.pdx.edu",
   "nsf_id": "000148091",
   "pi_start_date": "2018-08-15",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Portland State University",
  "inst_street_address": "1600 SW 4TH AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PORTLAND",
  "inst_state_code": "OR",
  "inst_state_name": "Oregon",
  "inst_phone_num": "5037259900",
  "inst_zip_code": "972015508",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "OR01",
  "org_lgl_bus_name": "PORTLAND STATE UNIVERSITY",
  "org_prnt_uei_num": "WWUJS84WJ647",
  "org_uei_num": "H4CAHK2RD945"
 },
 "perf_inst": {
  "perf_inst_name": "Portland State University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "OR",
  "perf_st_name": "Oregon",
  "perf_zip_code": "972070751",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "OR01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7254",
   "pgm_ref_txt": "CYBER SECURITY ACT PROPOSALS"
  },
  {
   "pgm_ref_code": "9179",
   "pgm_ref_txt": "GRADUATE INVOLVEMENT"
  },
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "SMET",
   "pgm_ref_txt": "SCIENCE, MATH, ENG & TECH EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0418",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001819DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 279448.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project has produced publicly available curricula, codelabs, and CTF exercises that demonstrate the effectiveness of symbolic execution and smart fuzzing for ensuring software security.&nbsp; These exercises have been used within courses, workshops, and trainings given by the PI and the PI's students.<br /><br />1.&nbsp; angr CTF and curriculum<br />To better teach students how to apply symbolic execution to real programs, we have built, deployed, and released our curriculum and CTF <a href=\"https://angr.oregonctf.org\">here</a>.&nbsp; &nbsp;It has been offered in our Malware Reverse Engineering course (CS 492/592) in Winter 2019 as well as at the BSidesPDX workshop.&nbsp; Directions for setting up the CTF (including the angr Docker container that includes the environment for students to run) are <a href=\"https://codelabs.cs.pdx.edu/labs/M3_angr\">here</a>.&nbsp; The work is described in the following publication:<br />Jake Springer, Wu-chang Feng \"Teaching with angr: A Symbolic Execution Curriculum and CTF\", USENIX Advances in Security Education (ASE), August 2018. <a href=\"https://thefengs.com/wuchang/papers/feng18angr.pdf\">pdf</a></p>\n<p>2. Manticore codelab/CTF<br />Smart contracts that hold and manage cryptocurrency are some of the most widely targeted pieces of software.&nbsp; To show students how symbolic execution can be used to identify vulnerabilities in smart contracts automatically, we designed, deployed, and released a set of codelabs for automatically solving levels in a smart contract vulnerability CTF.&nbsp; &nbsp;The codelabs and curriculum has been offered in our Blockchain Development and Security course in Spring 2019 and the labs can be found <a href=\"https://codelabs.cs.pdx.edu/cs410b/?cat=Manticore\">here</a>.&nbsp; While COVID has delayed our ability to offer this to the community, we are aiming to do so at the next scheduled BSidesPDX workshop.&nbsp; Follow-on work produced a publication on vulnerable smart contracts:<br />Daniel Connelly, Wu-chang Feng, \"Have I Been Exploited? A Registry of Vulnerable Smart Contracts\", International Conference on Blockchain, August 2020. <a href=\"https://thefengs.com/wuchang/papers/icbc20have.pdf\">pdf</a></p>\n<p>3. AFL curriculum and codelab<br />The project produced a publicly available smart fuzzing curriculum and codelab in which students perform a walkthrough on applying the AFL gcc compiler to several vulnerable C programs to identify the vulnerabilities in each.&nbsp; &nbsp;Consisting of 6 scaffolded programs, the codelab is available&nbsp;<a href=\"https://codelabs.cs.pdx.edu/labs/M2_afl\">here</a>.<br />The curriculum and codelab has been offered in our Malware Reverse Engineering course (CS 492/592) in Winter 2019 as well as the BSidesPDX 2019&nbsp;<a href=\"https://bsidespdx.org/events/2018/workshops.html\">workshop</a>.</p>\n<p>4. Fuzzing outreach<br />The project has supported outreach talks given by Allison Naaktgeboren to women in security (Shakticon 2021) as well as software engineers (OWASP DevSlop 2021) described <a href=\"https://www.allisonnaaktgeboren.com/speaking/\">here</a>.</p>\n<p>5. Google Cloud CTF<br />We have designed, developed, and deployed a Cloud Security CTF that can be used to teach essential topics in cloud security.&nbsp; It has been used by over 100 students.&nbsp; The curriculum and CTF can be found <a href=\"https://thunder-ctf.cloud\">here</a>.&nbsp; It is described in the following publication:</p>\n<p>Nicholas Springer, Wu-chang Feng \"Thunder CTF: Learning Cloud Security on a Dime\", July 2021. <a href=\"https://arxiv.org/abs/2107.12566\">pdf</a><br />Talks on the CTF have been given at OWASP Portland (2/2021), the University of Oregon colloquium (10/2020), and the Google Cloud Faculty Experts (4/2020)</p>\n<p>6. Yubikeys for high-schools<br />As part of outreach described in our proposal, we are interested in spreading security skills with hands-on exercises throughout all ranges of students.&nbsp; &nbsp;To address this issue at the high-school level, we have developed a curriculum and codelab for teaching students how to use 2-factor authentication via U2F/FIDO2 security tokens to secure their on-line accounts.&nbsp; &nbsp;The work was presented at WiCyS 2019 and a pilot study is underway with the first set of teachers being offered the Yubikey training in this year's CyberPDX camp (held in July 2019) so that they can offer it to their students in the 2019-2020 school year.&nbsp; The poster can be found <a href=\"https://thefengs.com/wuchang/papers/wicys2019_poster.pdf\">here</a>&nbsp;while the curriculum can be found <a href=\"https://bit.ly/pdx-yubi\">here</a>.&nbsp; The curriculum was deployed at multiple high schools.&nbsp; A description can be found <a href=\"https://osd.wednet.edu/news/district_news_archive__2019-20_/capital_h_s_students_study_cybersecurity\">here</a>&nbsp;and <a href=\"http://capitalcomtech.info/2019/09/25/introducing-security-using-authentication-and-yubikeys/\">here</a>.<br /><br />7. High-school internships<br />As we have done for the last 15 years, we continue to offer internships to high-school students in order to foster the next generation of cybersecurity practitioners with a focus on under-represented groups.&nbsp; The project has supported 3 female students (Elsie Johnson, Grace Chen, Angela Cao) as well as one hispanic student (Victor Ramirez).</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/01/2021<br>\n\t\t\t\t\tModified by: Wu-Chang&nbsp;Feng</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project has produced publicly available curricula, codelabs, and CTF exercises that demonstrate the effectiveness of symbolic execution and smart fuzzing for ensuring software security.  These exercises have been used within courses, workshops, and trainings given by the PI and the PI's students.\n\n1.  angr CTF and curriculum\nTo better teach students how to apply symbolic execution to real programs, we have built, deployed, and released our curriculum and CTF here.   It has been offered in our Malware Reverse Engineering course (CS 492/592) in Winter 2019 as well as at the BSidesPDX workshop.  Directions for setting up the CTF (including the angr Docker container that includes the environment for students to run) are here.  The work is described in the following publication:\nJake Springer, Wu-chang Feng \"Teaching with angr: A Symbolic Execution Curriculum and CTF\", USENIX Advances in Security Education (ASE), August 2018. pdf\n\n2. Manticore codelab/CTF\nSmart contracts that hold and manage cryptocurrency are some of the most widely targeted pieces of software.  To show students how symbolic execution can be used to identify vulnerabilities in smart contracts automatically, we designed, deployed, and released a set of codelabs for automatically solving levels in a smart contract vulnerability CTF.   The codelabs and curriculum has been offered in our Blockchain Development and Security course in Spring 2019 and the labs can be found here.  While COVID has delayed our ability to offer this to the community, we are aiming to do so at the next scheduled BSidesPDX workshop.  Follow-on work produced a publication on vulnerable smart contracts:\nDaniel Connelly, Wu-chang Feng, \"Have I Been Exploited? A Registry of Vulnerable Smart Contracts\", International Conference on Blockchain, August 2020. pdf\n\n3. AFL curriculum and codelab\nThe project produced a publicly available smart fuzzing curriculum and codelab in which students perform a walkthrough on applying the AFL gcc compiler to several vulnerable C programs to identify the vulnerabilities in each.   Consisting of 6 scaffolded programs, the codelab is available here.\nThe curriculum and codelab has been offered in our Malware Reverse Engineering course (CS 492/592) in Winter 2019 as well as the BSidesPDX 2019 workshop.\n\n4. Fuzzing outreach\nThe project has supported outreach talks given by Allison Naaktgeboren to women in security (Shakticon 2021) as well as software engineers (OWASP DevSlop 2021) described here.\n\n5. Google Cloud CTF\nWe have designed, developed, and deployed a Cloud Security CTF that can be used to teach essential topics in cloud security.  It has been used by over 100 students.  The curriculum and CTF can be found here.  It is described in the following publication:\n\nNicholas Springer, Wu-chang Feng \"Thunder CTF: Learning Cloud Security on a Dime\", July 2021. pdf\nTalks on the CTF have been given at OWASP Portland (2/2021), the University of Oregon colloquium (10/2020), and the Google Cloud Faculty Experts (4/2020)\n\n6. Yubikeys for high-schools\nAs part of outreach described in our proposal, we are interested in spreading security skills with hands-on exercises throughout all ranges of students.   To address this issue at the high-school level, we have developed a curriculum and codelab for teaching students how to use 2-factor authentication via U2F/FIDO2 security tokens to secure their on-line accounts.   The work was presented at WiCyS 2019 and a pilot study is underway with the first set of teachers being offered the Yubikey training in this year's CyberPDX camp (held in July 2019) so that they can offer it to their students in the 2019-2020 school year.  The poster can be found here while the curriculum can be found here.  The curriculum was deployed at multiple high schools.  A description can be found here and here.\n\n7. High-school internships\nAs we have done for the last 15 years, we continue to offer internships to high-school students in order to foster the next generation of cybersecurity practitioners with a focus on under-represented groups.  The project has supported 3 female students (Elsie Johnson, Grace Chen, Angela Cao) as well as one hispanic student (Victor Ramirez).\n\n \n\n\t\t\t\t\tLast Modified: 09/01/2021\n\n\t\t\t\t\tSubmitted by: Wu-Chang Feng"
 }
}