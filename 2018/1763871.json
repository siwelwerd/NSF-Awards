{
 "awd_id": "1763871",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "NeTS: Medium: Collaborative research: Automatic Network Repair",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Ann Von Lehmen",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 1030000.0,
 "awd_amount": 1030000.0,
 "awd_min_amd_letter_date": "2018-08-17",
 "awd_max_amd_letter_date": "2021-11-23",
 "awd_abstract_narration": "Modern computer networks must satisfy increasingly complex security, availability, and performance objectives to meet the diverse needs of users and applications. Consequently, programming a network to satisfy these requirements has become extremely challenging, even for highly skilled network operators. While previous work has helped operators generate policy-compliant network configurations, networks can still experience unexpected behaviors such as link failures or traffic surges, which can lead to policy violations that require a repair of the network. Today, repairs are often done manually and are error-prone. This project will develop a ground-up framework for automatically and efficiently repairing networks that do not satisfy given requirements.  Building on previous work, this research lays the foundation for \"zero touch networking\", where a network's behavior is automatically managed based on high-level objectives provided by human operators. The results of this research will enable individuals without extensive training to repair network data and control planes, thus paving the way for increased stability and security in the networks on which businesses, governments, and individuals so heavily depend.\r\n\r\nThis project proposes to develop a formal framework for automatically creating optimal network repairs and for providing formal guarantees on the quality of the generated repairs. Concretely, the project will pursue research on three fronts: 1) Design formal abstractions for distributed control planes that compute high-quality repairs for a wide range of policies. 2) Design formal abstractions for centralized control planes that compute high-quality repairs for a wide range of policies. 3) Design and implement algorithms for repairing control planes in the presence of probabilistic events (e.g., to conform to traffic engineering policies).\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Loris",
   "pi_last_name": "DAntoni",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Loris DAntoni",
   "pi_email_addr": "ldantoni@ucsd.edu",
   "nsf_id": "000701818",
   "pi_start_date": "2018-08-17",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Co-Principal Investigator",
   "pi_first_name": "Aditya",
   "pi_last_name": "Akella",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Aditya Akella",
   "pi_email_addr": "akella@cs.utexas.edu",
   "nsf_id": "000204197",
   "pi_start_date": "2018-08-17",
   "pi_end_date": "2021-08-31"
  }
 ],
 "inst": {
  "inst_name": "University of Wisconsin-Madison",
  "inst_street_address": "21 N PARK ST STE 6301",
  "inst_street_address_2": "",
  "inst_city_name": "MADISON",
  "inst_state_code": "WI",
  "inst_state_name": "Wisconsin",
  "inst_phone_num": "6082623822",
  "inst_zip_code": "537151218",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "WI02",
  "org_lgl_bus_name": "UNIVERSITY OF WISCONSIN SYSTEM",
  "org_prnt_uei_num": "",
  "org_uei_num": "LCLSJAGTNZQ7"
 },
 "perf_inst": {
  "perf_inst_name": "University of Wisconsin - Madison",
  "perf_str_addr": "1210 West Dayton Street",
  "perf_city_name": "Madison",
  "perf_st_code": "WI",
  "perf_st_name": "Wisconsin",
  "perf_zip_code": "537061685",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "WI02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736300",
   "pgm_ele_name": "Networking Technology and Syst"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 288450.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 283240.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 227355.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 230955.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-1d33dee9-7fff-a7fe-7c49-5069fc3ec90e\"> <span id=\"docs-internal-guid-ef92bb48-7fff-63d3-337a-72d279d39a97\"> </span></span></p>\n<h2 dir=\"ltr\"><span style=\"color: #000000; font-size: 12px; font-weight: normal;\">Modern computer networks must satisfy increasingly complex security, availability, and performance objectives to meet the diverse needs of users and applications. Consequently, programming a network to satisfy these requirements has become extremely challenging, even for highly skilled network operators.&nbsp;</span></h2>\n<p dir=\"ltr\"><span>While previous work has helped operators generate policy-compliant network configurations, networks can still experience unexpected behaviors such as link failures or traffic surges, which can lead to policy violations that require a repair of the network. Today, repairs are often done manually and are error-prone.&nbsp;</span></p>\n<p dir=\"ltr\"><span>This project had the goal of designing frameworks for enabling automatic repair across all facets of network programming. To achieve this goal, the project contributed the following formal abstractions and algorithmic insights.</span></p>\n<p dir=\"ltr\"><span>QARC is a distributed graph-based control plane abstraction that can be used to automatically verify whether a control plane may cause link-load violations under failures. QARC is fully automatic and can help operators program networks that are more resilient to failures and upgrade the network to avoid violations. The PIs applied QARC to real datacenter and ISP networks and found interesting cases of load violations.</span></p>\n<p dir=\"ltr\"><span>D2R is a mechanism that provides the illusion of a hierarchical network fabric that is always available and policy-compliant under failures. D2R takes advantage of the recent advances in fast programmable switches to perform policy-compliant route computations entirely in the data plane, thus providing fast and programmable reactions to failures (i.e., it repairs the network&rsquo;s routing at runtime). Thus, in D2R, when link failures occur, the data plane does not have to wait for the control plane to install new routes. Moreover, D2R can guarantee that computed routes comply with user-given policies.&nbsp;</span></p>\n<p dir=\"ltr\"><span>LLB is a general approach to finding an optimal load balancing strategy for a given network topology and workload, and is fast enough in practice to deploy the inferred strategies. LLB uses deep supervised learning techniques to learn how to handle different traffic patterns and topology changes, and adapts to any failures in the underlying network. Similarly to how D2R repairs routing at runtime, LLB can repair load balancing at runtime without needing to invoke the control plane upon every network failure. LLB leverages emerging trends in network telemetry, programmable switching, and \"smart\" NICs.</span></p>\n<p dir=\"ltr\"><span>AED automates the process of updating router configurations so that they meet a variety of management objectives (e.g., maintaining structural similarity across devices), while also ensuring all forwarding policies are correctly satisfied. AED models configuration updates as a collection of syntax tree additions and removals, and formulates an innovative system of SMT (Satisfiability Modulo Theory) constraints that encode configurations' structure and interaction with routing algorithms. Operators express management objectives in a high-level language, and AED translates these to \"soft\" constraints that are maximally satisfied. Evaluations on real and synthetic network configurations show that AED can update networks with tens of routers and hundreds of policies in under a minute, and AED outperforms both hand-crafted updates and state-of-the-art tools in meeting management objectives.</span></p>\n<p>The work funded by this award also contributed new synthesis frameworks and approaches that are applicable beyond the problem of network repair: the Semantics Guided Synthesis framework for describing arbitrary synthesis problems and automated techniques for proving when a synthesis or repair problem is unrealizable (it has no solution).</p>\n<p dir=\"ltr\"><span>To accomplish the projects, the PIs have mentored four graduate students and two undergraduate students. The implementations of the tools developed as part of this research have been open sourced and published at peer-reviewed conferences.&nbsp;</span></p>\n<p dir=\"ltr\"><span>Finally, the PI have successfully evaluated their tools on real networks with real traffic patterns obtained from industry collaborators.</span></p>\n<p dir=\"ltr\"><span>Key outcomes: The project was successful in its main goal of designing tools for repairing network configurations from high-level policies.</span></p>\n<div><span><br /></span></div>\n<p dir=\"ltr\">&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 12/29/2023<br>\nModified by: Loris&nbsp;Dantoni</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n  \nModern computer networks must satisfy increasingly complex security, availability, and performance objectives to meet the diverse needs of users and applications. Consequently, programming a network to satisfy these requirements has become extremely challenging, even for highly skilled network operators.\n\n\nWhile previous work has helped operators generate policy-compliant network configurations, networks can still experience unexpected behaviors such as link failures or traffic surges, which can lead to policy violations that require a repair of the network. Today, repairs are often done manually and are error-prone.\n\n\nThis project had the goal of designing frameworks for enabling automatic repair across all facets of network programming. To achieve this goal, the project contributed the following formal abstractions and algorithmic insights.\n\n\nQARC is a distributed graph-based control plane abstraction that can be used to automatically verify whether a control plane may cause link-load violations under failures. QARC is fully automatic and can help operators program networks that are more resilient to failures and upgrade the network to avoid violations. The PIs applied QARC to real datacenter and ISP networks and found interesting cases of load violations.\n\n\nD2R is a mechanism that provides the illusion of a hierarchical network fabric that is always available and policy-compliant under failures. D2R takes advantage of the recent advances in fast programmable switches to perform policy-compliant route computations entirely in the data plane, thus providing fast and programmable reactions to failures (i.e., it repairs the networks routing at runtime). Thus, in D2R, when link failures occur, the data plane does not have to wait for the control plane to install new routes. Moreover, D2R can guarantee that computed routes comply with user-given policies.\n\n\nLLB is a general approach to finding an optimal load balancing strategy for a given network topology and workload, and is fast enough in practice to deploy the inferred strategies. LLB uses deep supervised learning techniques to learn how to handle different traffic patterns and topology changes, and adapts to any failures in the underlying network. Similarly to how D2R repairs routing at runtime, LLB can repair load balancing at runtime without needing to invoke the control plane upon every network failure. LLB leverages emerging trends in network telemetry, programmable switching, and \"smart\" NICs.\n\n\nAED automates the process of updating router configurations so that they meet a variety of management objectives (e.g., maintaining structural similarity across devices), while also ensuring all forwarding policies are correctly satisfied. AED models configuration updates as a collection of syntax tree additions and removals, and formulates an innovative system of SMT (Satisfiability Modulo Theory) constraints that encode configurations' structure and interaction with routing algorithms. Operators express management objectives in a high-level language, and AED translates these to \"soft\" constraints that are maximally satisfied. Evaluations on real and synthetic network configurations show that AED can update networks with tens of routers and hundreds of policies in under a minute, and AED outperforms both hand-crafted updates and state-of-the-art tools in meeting management objectives.\n\n\nThe work funded by this award also contributed new synthesis frameworks and approaches that are applicable beyond the problem of network repair: the Semantics Guided Synthesis framework for describing arbitrary synthesis problems and automated techniques for proving when a synthesis or repair problem is unrealizable (it has no solution).\n\n\nTo accomplish the projects, the PIs have mentored four graduate students and two undergraduate students. The implementations of the tools developed as part of this research have been open sourced and published at peer-reviewed conferences.\n\n\nFinally, the PI have successfully evaluated their tools on real networks with real traffic patterns obtained from industry collaborators.\n\n\nKey outcomes: The project was successful in its main goal of designing tools for repairing network configurations from high-level policies.\n\n\n\n\n\n\n\n\t\t\t\t\tLast Modified: 12/29/2023\n\n\t\t\t\t\tSubmitted by: LorisDantoni\n"
 }
}