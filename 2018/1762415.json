{
 "awd_id": "1762415",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: Proofing A Basic Systems Engineering Model Through Empirically-Based Cognitive Testing",
 "cfda_num": "47.041",
 "org_code": "07030000",
 "po_phone": "7032927933",
 "po_email": "kjabloko@nsf.gov",
 "po_sign_block_name": "Kathryn Jablokow",
 "awd_eff_date": "2018-07-15",
 "awd_exp_date": "2023-06-30",
 "tot_intn_awd_amt": 349849.0,
 "awd_amount": 349849.0,
 "awd_min_amd_letter_date": "2018-07-09",
 "awd_max_amd_letter_date": "2018-07-09",
 "awd_abstract_narration": "America's global leadership depends in part on its engineering and design capabilities in an increasingly competitive and complex environment. Trends have long been toward larger and more complicated systems. Systems engineering methodology is intended to address the complexity of today?s engineering challenges. Currently, there are only narrative theoretical models that cover the entirety of systems engineering. These models have proven difficult to test due to their discursive nature. This project addresses how such theoretical models can be tested against quantitative experimental results derived from studying engineers performing systems design. This will result in improved systems engineering models and used to contribute to America's global leadership. The results of this project form the basis of an increased scientific understanding of engineering systems design with direct implications for systems engineering practice and education. It will demonstrate a novel research technique that can be used to test other discursive theoretical models and will lay the foundation for the future testing of the education of systems engineers.\r\n\r\nDescriptive theoretical models that aim to capture and enhance engineering systems design have been suggested but not tested. The goal of this project is to apply the approach of converting a narrative theoretical model into a cognitively-based ontology with the aim of producing a representation that allows for quantitative representations and testing. This approach treats the discursive model as the articulation of a think-aloud protocol. This project is based on a newly developed technique of representing such descriptive theoretical models by translating them into the Function-Behavior-Structure (FBS) ontology, which serves as a common ontology, and then segmenting and coding the result as if it were a think-aloud protocol. The FBS ontology is a highly-grounded ontology that has been shown to be effective in representing the engineering design process. This then allows the theoretical model to be compared with results obtained by studying the design cognition of engineers designing using a think-aloud protocol segmented and coded using the FBS ontology. Since both the theoretical model and the experimental results are in the same form the theoretical model can now be tested for coherence with the experimental results.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "ENG",
 "org_dir_long_name": "Directorate for Engineering",
 "div_abbr": "CMMI",
 "org_div_long_name": "Division of Civil, Mechanical, and Manufacturing Innovation",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Gero",
   "pi_mid_init": "S",
   "pi_sufx_name": "",
   "pi_full_name": "John S Gero",
   "pi_email_addr": "jgero1@uncc.edu",
   "nsf_id": "000471490",
   "pi_start_date": "2018-07-09",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of North Carolina at Charlotte",
  "inst_street_address": "9201 UNIVERSITY CITY BLVD",
  "inst_street_address_2": "",
  "inst_city_name": "CHARLOTTE",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "7046871888",
  "inst_zip_code": "282230001",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "NC12",
  "org_lgl_bus_name": "UNIVERSITY OF NORTH CAROLINA AT CHARLOTTE",
  "org_prnt_uei_num": "NEYCH3CVBTR6",
  "org_uei_num": "JB33DT84JNA5"
 },
 "perf_inst": {
  "perf_inst_name": "University of North Carolina at Charlotte",
  "perf_str_addr": "9201 University City Blvd",
  "perf_city_name": "Charlotte",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "282230001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "NC12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "072Y00",
   "pgm_ele_name": "EDSE-Engineering Design and Sy"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "068E",
   "pgm_ref_txt": "DESIGN THEORY"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 349849.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><strong>Major Activities of the Project</strong></p>\n<p><strong>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Collect protocols</strong></p>\n<p>The nineteen teams consisted of three professional systems engineering designer volunteers, and were recruited from&nbsp;<strong>Autoliv</strong>&nbsp;and&nbsp;<strong>L3Harris Technologies.&nbsp;</strong>Volunteers were selected from a pool of designers with at least 10,000 hours of professional design experience. Each team carried out the same design task over a 60-minute design session.&nbsp;</p>\n<p><strong>&nbsp;2. Code protocols</strong></p>\n<p>Protocols were coded utilizing a coding scheme based on a principled ontology of designing (FBS), with two independent coders (graduate student researchers) who arbitrated between themselves and with the final arbitration carried out with the PIs.</p>\n<p><strong>Arbitration of Segmentation/Coding</strong></p>\n<p>Two segmenters/coders were used to produce the final segmented/coded protocol in order to have inter-coder reliability against the final, arbitrated protocol. Typical inter-coder reliability obtained by this method is above 75%, and in this project was in the range of 80&ndash;90%. This final protocol is available for analysis and may generate between 500 and 1500 segments. The full data set produced over 20,000 coded segments making this one of the largest data sets collected in engineering design research. This provides a rich and statistically significant data set.</p>\n<p><strong>3. Construct characterization models of the cognitive behavior</strong></p>\n<p>These characterization models were produced using statistical modeling and techniques developed by the PI (Gero). Amongst others models, these aim to produce structure decision matrix models from empirical results. They provide a richer and more nuanced set of results about the design activity.&nbsp;</p>\n<p><strong>4. Re-represent INCOSE&rsquo;s model</strong></p>\n<p>In parallel with the empirical study of the cognition of systems designing, the transformation of the qualitative INCOSE systems engineering model into a form that allow for comparison with empirical data has been completed. The model described by INCOSE was chosen because it is one of the most comprehensive, detailed and widely known models of systems engineering. The INCOSE model was re-represented by converting the text and tablkes into FBS codes.&nbsp;</p>\n<p><strong>5. Construct characterization models of the coded INCOSE model</strong></p>\n<p>For this research,<strong>&nbsp;</strong>the core technical processes of the INCOSE model of systems engineering were investigated to determine differences from other models of designing from the domains of mechanical engineering, software engineering and service design.&nbsp;</p>\n<p><strong>6. Quantitatively compare INCOSE&rsquo;s models with the cognitive models</strong></p>\n<p>The INCOSE model was compared with three other design models:&nbsp;<em>Pahl and Beitz for engineering design</em>,&nbsp;<em>Rational Unified Process for software design&nbsp;</em>and&nbsp;<em>Design for SixSigma for service design</em>. We have been able to compare these design methods because they have all been transformed into the same representation.&nbsp;</p>\n<p><strong>Significant Results:</strong></p>\n<p>The results showed the distributions of design issues and design processes of teams while systems designing. In particular they showed the decomposition and recomposition strategies used by professional engineering designers. Of particular interest is the cumulative occurrence can be modeled as linear over time.</p>\n<p>This research investigated the question whether a model of systems engineering (INCOSE) is different to models of engineering design (Pahl/Beitz), software design (RUP) and service design (DFSS/ICOV). It revealed both similarities and differences between them, not based on qualitative judgements but on quantitative analyses using statistical methods.</p>\n<p>The main similarities with other models of designing that were identified include:</p>\n<p>&bull; the initial phase of understanding and defining the design problem, whose design steps are quite distinct from other phases,</p>\n<p>&bull; the shift in focus during the design process from the design problem to possible solutions,</p>\n<p>&bull; the constant generation of solution structures (S), and</p>\n<p>&bull; the same dominant state transitions for the majority of design issues.</p>\n<p>However, INCOSE also has a set of unique features that make it fundamentally different from the other models.</p>\n<p>They include:</p>\n<p>&bull; a stronger association of the overall model with requirements (R) and structure behaviour (Bs),</p>\n<p>&bull; Verification and Validation phases whose design steps are fundamentally different from all others,</p>\n<p>&bull; the increased generation of structure behaviour (Bs) and design descriptions (D) towards the end of the design process, and</p>\n<p>&bull; the dominant state transition from structure (S) to structure behaviour (Bs).</p>\n<p>This research may have an effect on engineering and design education in that it shows that what is currently being taught is incomplete. Educators in engineering and systems design should be aware of the differences and teach using problem solving techniques that utilize all four models to maximize student design learning. This might include incorporating various case studies from each model and discipline to give students the opportunity to enrich their learning and understanding for a broader systems design experience.</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 07/22/2024<br>\nModified by: John&nbsp;S&nbsp;Gero</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nMajor Activities of the Project\n\n\n1.Collect protocols\n\n\nThe nineteen teams consisted of three professional systems engineering designer volunteers, and were recruited fromAutolivandL3Harris Technologies.Volunteers were selected from a pool of designers with at least 10,000 hours of professional design experience. Each team carried out the same design task over a 60-minute design session.\n\n\n2. Code protocols\n\n\nProtocols were coded utilizing a coding scheme based on a principled ontology of designing (FBS), with two independent coders (graduate student researchers) who arbitrated between themselves and with the final arbitration carried out with the PIs.\n\n\nArbitration of Segmentation/Coding\n\n\nTwo segmenters/coders were used to produce the final segmented/coded protocol in order to have inter-coder reliability against the final, arbitrated protocol. Typical inter-coder reliability obtained by this method is above 75%, and in this project was in the range of 8090%. This final protocol is available for analysis and may generate between 500 and 1500 segments. The full data set produced over 20,000 coded segments making this one of the largest data sets collected in engineering design research. This provides a rich and statistically significant data set.\n\n\n3. Construct characterization models of the cognitive behavior\n\n\nThese characterization models were produced using statistical modeling and techniques developed by the PI (Gero). Amongst others models, these aim to produce structure decision matrix models from empirical results. They provide a richer and more nuanced set of results about the design activity.\n\n\n4. Re-represent INCOSEs model\n\n\nIn parallel with the empirical study of the cognition of systems designing, the transformation of the qualitative INCOSE systems engineering model into a form that allow for comparison with empirical data has been completed. The model described by INCOSE was chosen because it is one of the most comprehensive, detailed and widely known models of systems engineering. The INCOSE model was re-represented by converting the text and tablkes into FBS codes.\n\n\n5. Construct characterization models of the coded INCOSE model\n\n\nFor this research,the core technical processes of the INCOSE model of systems engineering were investigated to determine differences from other models of designing from the domains of mechanical engineering, software engineering and service design.\n\n\n6. Quantitatively compare INCOSEs models with the cognitive models\n\n\nThe INCOSE model was compared with three other design models:Pahl and Beitz for engineering design,Rational Unified Process for software designandDesign for SixSigma for service design. We have been able to compare these design methods because they have all been transformed into the same representation.\n\n\nSignificant Results:\n\n\nThe results showed the distributions of design issues and design processes of teams while systems designing. In particular they showed the decomposition and recomposition strategies used by professional engineering designers. Of particular interest is the cumulative occurrence can be modeled as linear over time.\n\n\nThis research investigated the question whether a model of systems engineering (INCOSE) is different to models of engineering design (Pahl/Beitz), software design (RUP) and service design (DFSS/ICOV). It revealed both similarities and differences between them, not based on qualitative judgements but on quantitative analyses using statistical methods.\n\n\nThe main similarities with other models of designing that were identified include:\n\n\n the initial phase of understanding and defining the design problem, whose design steps are quite distinct from other phases,\n\n\n the shift in focus during the design process from the design problem to possible solutions,\n\n\n the constant generation of solution structures (S), and\n\n\n the same dominant state transitions for the majority of design issues.\n\n\nHowever, INCOSE also has a set of unique features that make it fundamentally different from the other models.\n\n\nThey include:\n\n\n a stronger association of the overall model with requirements (R) and structure behaviour (Bs),\n\n\n Verification and Validation phases whose design steps are fundamentally different from all others,\n\n\n the increased generation of structure behaviour (Bs) and design descriptions (D) towards the end of the design process, and\n\n\n the dominant state transition from structure (S) to structure behaviour (Bs).\n\n\nThis research may have an effect on engineering and design education in that it shows that what is currently being taught is incomplete. Educators in engineering and systems design should be aware of the differences and teach using problem solving techniques that utilize all four models to maximize student design learning. This might include incorporating various case studies from each model and discipline to give students the opportunity to enrich their learning and understanding for a broader systems design experience.\n\n\n\t\t\t\t\tLast Modified: 07/22/2024\n\n\t\t\t\t\tSubmitted by: JohnSGero\n"
 }
}