{
 "awd_id": "1837337",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CPS: Medium: GOALI: Real-Time Computer Vision in Autonomous Vehicles: Real Fast Isn't Good Enough",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032928950",
 "po_email": "rwachter@nsf.gov",
 "po_sign_block_name": "Ralph Wachter",
 "awd_eff_date": "2019-01-01",
 "awd_exp_date": "2023-12-31",
 "tot_intn_awd_amt": 1000000.0,
 "awd_amount": 1000000.0,
 "awd_min_amd_letter_date": "2018-09-12",
 "awd_max_amd_letter_date": "2022-09-19",
 "awd_abstract_narration": "The push towards deploying autonomous-driving capabilities in vehicles is happening at breakneck speed.  Semi-autonomous features are becoming increasingly common, and fully autonomous vehicles at mass-market scales are on the horizon.  Cameras are cost-effective sensors, so computer-vision techniques have loomed large in implementing autonomous features.  In a vehicle, these techniques must function \"in real time.\"  Unfortunately, this requirement lies at the heart of a significant disconnect: when computer-vision researchers refer to \"real time,\" they usually mean \"real fast\"; in contrast, certifiable automotive systems must be \"real time\" in the sense of being able to predictably react to input information (such as a detected pedestrian) within specified deadlines so that adverse outcomes (such as striking a pedestrian) are provably precluded.  The goal of this project is to eliminate this disconnect.  It will do so through research on several fronts.  First, a real-time computer-vision programming framework will be created by extending OpenVX, which is a recently ratified standard intended for developing computer-vision applications for embedded systems.  Second, new computer-vision algorithms that exploit the features of this programming framework will be created, and methods will be developed to transform existing algorithms to make them \"real time\" in a predictability sense.  Third, an experimental evaluation of \"real-fast\" vs. \"real-time\" computer vision will be conducted using driving simulators, sub-scale autonomous vehicles, and advanced testing infrastructure at General Motors.\r\n\r\nWhile industry is pushing hard in the area of autonomous driving, autonomous vehicles will never become a common mode of transportation unless methods for certifying real-time safety are produced.  This project will focus on a key aspect of certification: validating the real-time correctness of computer-vision applications.  The results that are produced will be made available to the world at large through open-source software.  This software will include the new programming framework to be produced as well as tools for validating the real-time correctness of applications developed using this framework.  In this project, a special emphasis will be placed on outreach to girls and women, as three female graduate students will be involved in the project.  Such outreach will include: events involving the Graduate Women in Computer Science (GWiCS) group at the University of North Carolina (UNC), which hosts an annual research symposium targeted toward undergraduate women and other under-represented minorities; Tar Heel Hack, a hackathon for local middle and high school girls; the UNC Girls Who Code Club, which provides local girls in grades 6-12 with a community for learning about computer science; and the UNC Computer Science Department's annual Open House and Science Expo.  These events will include hackathon projects as well as demos of a driving simulator and a sub-scale autonomous car.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "James",
   "pi_last_name": "Anderson",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "James H Anderson",
   "pi_email_addr": "anderson@cs.unc.edu",
   "nsf_id": "000481767",
   "pi_start_date": "2018-09-12",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Co-Principal Investigator",
   "pi_first_name": "Frank",
   "pi_last_name": "Smith",
   "pi_mid_init": "D",
   "pi_sufx_name": "Jr.",
   "pi_full_name": "Frank D Smith",
   "pi_email_addr": "smithfd@cs.unc.edu",
   "nsf_id": "000349015",
   "pi_start_date": "2018-09-12",
   "pi_end_date": "2022-09-19"
  },
  {
   "pi_role": "Former Co-Principal Investigator",
   "pi_first_name": "Jan-Michael",
   "pi_last_name": "Frahm",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Jan-Michael Frahm",
   "pi_email_addr": "jmf@cs.unc.edu",
   "nsf_id": "000427356",
   "pi_start_date": "2018-09-12",
   "pi_end_date": "2022-04-11"
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Shige",
   "pi_last_name": "Wang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Shige Wang",
   "pi_email_addr": "shige.wang@motional.com",
   "nsf_id": "000525202",
   "pi_start_date": "2018-09-12",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of North Carolina at Chapel Hill",
  "inst_street_address": "104 AIRPORT DR STE 2200",
  "inst_street_address_2": "",
  "inst_city_name": "CHAPEL HILL",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9199663411",
  "inst_zip_code": "275995023",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "NC04",
  "org_lgl_bus_name": "UNIVERSITY OF NORTH CAROLINA AT CHAPEL HILL",
  "org_prnt_uei_num": "D3LHU66KBLD5",
  "org_uei_num": "D3LHU66KBLD5"
 },
 "perf_inst": {
  "perf_inst_name": "University of North Carolina at Chapel Hill",
  "perf_str_addr": "Department of Computer Science",
  "perf_city_name": "Chapel Hill",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "275993175",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "NC04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "791800",
   "pgm_ele_name": "CPS-Cyber-Physical Systems"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 1000000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The push towards deploying autonomous-driving capabilities in vehicles is happening at breakneck speed. Semi-autonomous features such as automatic lane keeping are now common, and fully autonomous vehicles at mass-market scales are on the horizon. Cameras are cost-effective sensors, so computer-vision (CV) techniques have loomed large in implementing autonomous features and will continue to do so.&nbsp; CV techniques are applied to \"make sense\" of an image by identifying what is in it.&nbsp; For example, an autonomous vehicle must detect pedestrians in a frame of video and perhaps their motion across consecutive frames.&nbsp; In a vehicle, CV techniques must function \"in real time.\"&nbsp; For example, detecting a pedestrian in the road too late to take appropriate action is just as bad as not detecting them at all.&nbsp; Unfortunately, the requirement for real-time execution lies at the heart of a significant disconnect: when CV researchers refer to \"real time,\" they usually mean \"real fast\" <em>most of the time</em>; in contrast, an automotive system that can pass safety certification must be \"real time\" in the sense of being provably predictable <em>all of the time</em>.<br /><br />This disconnect between real-fast CV and real-time safety has already had unfortunate consequences.&nbsp; Several highly publicized accidents involving semi-autonomous and fully autonomous cars on open roads have resulted in fatalities.&nbsp; The post-crash analyses of these incidents have revealed a critical trade-off between time and accuracy at the nexus between CV and real time.&nbsp; Today, CV-based features are largely provided in settings where the driver is assumed to be able to retake full control of the vehicle.&nbsp; As such, these features are not yet subject to strict certification requirements.&nbsp; Moving forward, however, we will see greater and greater autonomy in mass-market vehicles, with the line between semi-autonomy and full autonomy being crossed eventually.&nbsp; When this happens, strict certification will be enormously important.&nbsp; Certifying CV applications that are merely \"real fast\" most of the time will be difficult, if not impossible.<br /><br />This project was directed at enabling CV programmers to produce code that is amenable to real-time certification.&nbsp; The project's main intellectual contributions were framed by basic realities regarding how CV software is structured and the hardware platforms upon which such software typically executes.&nbsp; In CV software today, neural networks are used.&nbsp; Such networks consist of many programs that can execute in parallel and that typically entail performing relatively complex mathematical operations.&nbsp; For timely processing, the underlying hardware platform is usually a multicore processor with an attached graphics processing unit (GPU).&nbsp; A multicore processor has several general-purpose computing \"cores\" that can execute different programs at the same time.&nbsp; (Most consumer-grade laptop and desktop systems today have multicore processors.)&nbsp; GPUs are highly parallel processors that were originally designed to speed graphics processing (e.g., for animation in computer games) but today are used to speed mathematical operations in general-purpose computing.<br /><br />As seen from the above descriptions, in a multicore+GPU machine, parallelism exists at several levels.&nbsp; It can be challenging to provably show that a CV computation always completes \"on time\" on such a complex hardware platform.&nbsp; Nevertheless, this is the very issue that was addressed by this project.&nbsp; This was done through four main contributions.&nbsp; First, new techniques were produced for restructuring CV software so that real-time properties---notably, in the form of <em>response-time bounds</em> that upper bound worst-case code execution times---can be proved.&nbsp; Second, new analytical techniques were devised for proving such bounds that account for the significant parallelism on a multicore+GPU platform.&nbsp; Third, investigations were conducted to demystify the inner workings of GPUs by the two most prominent GPU manufacturers, NVIDIA and AMD.&nbsp; Fourth, based on this knowledge of GPU internals, new methods for structuring GPU-using application code and reasoning about the timing properties of said code were produced.<br /><br />In terms of broader impacts, the investigators presented talks on this work at numerous institutions, conferences, workshops, etc.&nbsp; Additionally, the results of this project formed the basis of the Ph.D. dissertations of six graduate students.&nbsp; Two undergraduate honors theses were also produced under this project.&nbsp; Some of the results from the project were also applied in automotive systems at General Motors as part of summer internship positions undertaken by the supported graduate students.&nbsp; A small-scale autonomous car was also developed and exhibited at various open-house demo events at UNC.</p><br>\n<p>\n Last Modified: 03/13/2024<br>\nModified by: James&nbsp;H&nbsp;Anderson</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe push towards deploying autonomous-driving capabilities in vehicles is happening at breakneck speed. Semi-autonomous features such as automatic lane keeping are now common, and fully autonomous vehicles at mass-market scales are on the horizon. Cameras are cost-effective sensors, so computer-vision (CV) techniques have loomed large in implementing autonomous features and will continue to do so. CV techniques are applied to \"make sense\" of an image by identifying what is in it. For example, an autonomous vehicle must detect pedestrians in a frame of video and perhaps their motion across consecutive frames. In a vehicle, CV techniques must function \"in real time.\" For example, detecting a pedestrian in the road too late to take appropriate action is just as bad as not detecting them at all. Unfortunately, the requirement for real-time execution lies at the heart of a significant disconnect: when CV researchers refer to \"real time,\" they usually mean \"real fast\" most of the time; in contrast, an automotive system that can pass safety certification must be \"real time\" in the sense of being provably predictable all of the time.\n\nThis disconnect between real-fast CV and real-time safety has already had unfortunate consequences. Several highly publicized accidents involving semi-autonomous and fully autonomous cars on open roads have resulted in fatalities. The post-crash analyses of these incidents have revealed a critical trade-off between time and accuracy at the nexus between CV and real time. Today, CV-based features are largely provided in settings where the driver is assumed to be able to retake full control of the vehicle. As such, these features are not yet subject to strict certification requirements. Moving forward, however, we will see greater and greater autonomy in mass-market vehicles, with the line between semi-autonomy and full autonomy being crossed eventually. When this happens, strict certification will be enormously important. Certifying CV applications that are merely \"real fast\" most of the time will be difficult, if not impossible.\n\nThis project was directed at enabling CV programmers to produce code that is amenable to real-time certification. The project's main intellectual contributions were framed by basic realities regarding how CV software is structured and the hardware platforms upon which such software typically executes. In CV software today, neural networks are used. Such networks consist of many programs that can execute in parallel and that typically entail performing relatively complex mathematical operations. For timely processing, the underlying hardware platform is usually a multicore processor with an attached graphics processing unit (GPU). A multicore processor has several general-purpose computing \"cores\" that can execute different programs at the same time. (Most consumer-grade laptop and desktop systems today have multicore processors.) GPUs are highly parallel processors that were originally designed to speed graphics processing (e.g., for animation in computer games) but today are used to speed mathematical operations in general-purpose computing.\n\nAs seen from the above descriptions, in a multicore+GPU machine, parallelism exists at several levels. It can be challenging to provably show that a CV computation always completes \"on time\" on such a complex hardware platform. Nevertheless, this is the very issue that was addressed by this project. This was done through four main contributions. First, new techniques were produced for restructuring CV software so that real-time properties---notably, in the form of response-time bounds that upper bound worst-case code execution times---can be proved. Second, new analytical techniques were devised for proving such bounds that account for the significant parallelism on a multicore+GPU platform. Third, investigations were conducted to demystify the inner workings of GPUs by the two most prominent GPU manufacturers, NVIDIA and AMD. Fourth, based on this knowledge of GPU internals, new methods for structuring GPU-using application code and reasoning about the timing properties of said code were produced.\n\nIn terms of broader impacts, the investigators presented talks on this work at numerous institutions, conferences, workshops, etc. Additionally, the results of this project formed the basis of the Ph.D. dissertations of six graduate students. Two undergraduate honors theses were also produced under this project. Some of the results from the project were also applied in automotive systems at General Motors as part of summer internship positions undertaken by the supported graduate students. A small-scale autonomous car was also developed and exhibited at various open-house demo events at UNC.\t\t\t\t\tLast Modified: 03/13/2024\n\n\t\t\t\t\tSubmitted by: JamesHAnderson\n"
 }
}