{
 "awd_id": "1747219",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SBIR Phase I:  Programmer-Friendly Automatic Code Fixes",
 "cfda_num": "47.084",
 "org_code": "15030000",
 "po_phone": "7032928772",
 "po_email": "patherto@nsf.gov",
 "po_sign_block_name": "Peter Atherton",
 "awd_eff_date": "2018-01-01",
 "awd_exp_date": "2018-12-31",
 "tot_intn_awd_amt": 225000.0,
 "awd_amount": 225000.0,
 "awd_min_amd_letter_date": "2017-12-27",
 "awd_max_amd_letter_date": "2017-12-27",
 "awd_abstract_narration": "The broader impact/commercial potential of this Small Business Innovation Research (SBIR) Phase I project is to develop and bring to market tools that improve code quality and help avoid dangerous bugs, while also improving programmer productivity. Poor code quality leads to bugs which often translate into financial loses and can even endanger human life. A study by NIST estimated software bugs cost $59 billion annually. The key aspect of this project is a programmer-friendly language for describing software fixes. Successful adoption of the language by the programmer community can have a far-reaching positive impact upon the software community: programmers will have a common, formal, language to discuss ways to fix bugs, and the result of their collaboration could be used to automatically fix software systems.\r\n\r\nThis Small Business Innovation Research (SBIR) Phase I project will address the research and technical challenges in providing programmers with a language to express their knowledge of error patterns and their fixes, and a tool that uses this information to check and fix software systems. The research objective is to refine the language such that it is easy to use by programmers, and to provide a scalable infrastructure. This will be achieved by iteratively improving both the language and the supporting infrastructure with feedback from early users. The anticipated result is that the technology will be applicable to a wide variety of bugs and to large code bases.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "TIP",
 "org_dir_long_name": "Directorate for Technology, Innovation, and Partnerships",
 "div_abbr": "TI",
 "org_div_long_name": "Translational Impacts",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Cosmin",
   "pi_last_name": "Radoi",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "Cosmin A Radoi",
   "pi_email_addr": "cosmin.radoi@gmail.com",
   "nsf_id": "000752145",
   "pi_start_date": "2017-12-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Iuvo AI, Inc.",
  "inst_street_address": "450 TOWNSEND ST STE 100",
  "inst_street_address_2": "",
  "inst_city_name": "SAN FRANCISCO",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "2178981773",
  "inst_zip_code": "941071510",
  "inst_country_name": "United States",
  "cong_dist_code": "11",
  "st_cong_dist_code": "CA11",
  "org_lgl_bus_name": "IUVO AI, INC.",
  "org_prnt_uei_num": "",
  "org_uei_num": "DAH4JVUJ7LG6"
 },
 "perf_inst": {
  "perf_inst_name": "Iuvo AI, Inc.",
  "perf_str_addr": "",
  "perf_city_name": "Chicago",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "606574831",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "IL05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "537100",
   "pgm_ele_name": "SBIR Phase I"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "5371",
   "pgm_ref_txt": "SMALL BUSINESS PHASE I"
  },
  {
   "pgm_ref_code": "8032",
   "pgm_ref_txt": "Software Services and Applications"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 225000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Poor code quality leads to financial loses and endangers human life. Developing software code that is of high quality, i.e., free of security vulnerabilities and other bugs, is one of the main challenges most software companies face. This project supported the research and development of technology that addresses the problem by making it easy to automatically identify and fix code quality issues. The purpose of the project is to prove the technical and market feasibility of the technology.</p>\n<p><br />The core of the technology is a novel programming language specialized for fixing code. Software developers can use our language to develop rules that then automatically and systematically fix code written in other languages. In contrast to previous approaches, the new language allows software developers to write such rules quickly and does not require them to have advanced expertise in this area, which few developers do. The language thus allows a democratization of automatic code fixing. In our experiments, our language takes ten times less code than traditional approaches to achieve the same purpose, and it is easy to learn by new developers. An attached screenshot shows how a code change is encoded as a simple, short rule in our language.</p>\n<p><br />We also used our system to contribute over 2000 automatically-generated code changes to ten popular open-source software projects which are, cumulatively, used by another 3.5 million software projects. Furthermore, we used our system to migrate an enterprise codebase of over one million lines of code between two versions of the PHP programming language, which lowered the software security risks of the company. Prior to this, a software developer team inside the company failed to achieve the upgrade despite significant effort.</p>\n<p><br />As part of this project, we also developed and experimented with ways of integrating automatic code fixes in software processes. We created a visual interface that integrates with GitHub, the most popular code repository platform, and allows developers to apply automatically-generated fixes to their own code. The attached images show a screenshot of the interface and detail of the process, respectively.</p>\n<p><br />Widespread adoption of this type of technology will lead to markedly safer, faster, and more reliable software. It will also increase software developer productivity. Anywhere between one third and two thirds of current developer work could be completely automated. This is particularly important as the US faces a severe shortage of software developers.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/18/2020<br>\n\t\t\t\t\tModified by: Cosmin&nbsp;A&nbsp;Radoi</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2020/1747219/1747219_10526881_1584551628218_aaa--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2020/1747219/1747219_10526881_1584551628218_aaa--rgov-800width.jpg\" title=\"Developer-Unhack-GitHub interaction\"><img src=\"/por/images/Reports/POR/2020/1747219/1747219_10526881_1584551628218_aaa--rgov-66x44.jpg\" alt=\"Developer-Unhack-GitHub interaction\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Diagram showing the sequence of steps in the interaction between a software developer, Unhack, and GitHub.</div>\n<div class=\"imageCredit\">Unhack AI</div>\n<div class=\"imageSubmitted\">Cosmin&nbsp;A&nbsp;Radoi</div>\n<div class=\"imageTitle\">Developer-Unhack-GitHub interaction</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2020/1747219/1747219_10526881_1584548510552_ScreenShot2020-03-17at6.24.29PM--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2020/1747219/1747219_10526881_1584548510552_ScreenShot2020-03-17at6.24.29PM--rgov-800width.jpg\" title=\"Unhack rule example\"><img src=\"/por/images/Reports/POR/2020/1747219/1747219_10526881_1584548510552_ScreenShot2020-03-17at6.24.29PM--rgov-66x44.jpg\" alt=\"Unhack rule example\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Example of how a code fix is expressed as an Unhack rule.</div>\n<div class=\"imageCredit\">Unhack AI</div>\n<div class=\"imageSubmitted\">Cosmin&nbsp;A&nbsp;Radoi</div>\n<div class=\"imageTitle\">Unhack rule example</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2020/1747219/1747219_10526881_1584494181741_ScreenShot2020-03-17at6.10.59PM--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2020/1747219/1747219_10526881_1584494181741_ScreenShot2020-03-17at6.10.59PM--rgov-800width.jpg\" title=\"Screenshot of code-fixing interface\"><img src=\"/por/images/Reports/POR/2020/1747219/1747219_10526881_1584494181741_ScreenShot2020-03-17at6.10.59PM--rgov-66x44.jpg\" alt=\"Screenshot of code-fixing interface\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">A screenshot showing the interface for reviewing code fixes. It allows accepting fixes, which are committed directly to the code repository, as well as ignoring, which is remembered inside our system.</div>\n<div class=\"imageCredit\">Unhack AI</div>\n<div class=\"imageSubmitted\">Cosmin&nbsp;A&nbsp;Radoi</div>\n<div class=\"imageTitle\">Screenshot of code-fixing interface</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\nPoor code quality leads to financial loses and endangers human life. Developing software code that is of high quality, i.e., free of security vulnerabilities and other bugs, is one of the main challenges most software companies face. This project supported the research and development of technology that addresses the problem by making it easy to automatically identify and fix code quality issues. The purpose of the project is to prove the technical and market feasibility of the technology.\n\n\nThe core of the technology is a novel programming language specialized for fixing code. Software developers can use our language to develop rules that then automatically and systematically fix code written in other languages. In contrast to previous approaches, the new language allows software developers to write such rules quickly and does not require them to have advanced expertise in this area, which few developers do. The language thus allows a democratization of automatic code fixing. In our experiments, our language takes ten times less code than traditional approaches to achieve the same purpose, and it is easy to learn by new developers. An attached screenshot shows how a code change is encoded as a simple, short rule in our language.\n\n\nWe also used our system to contribute over 2000 automatically-generated code changes to ten popular open-source software projects which are, cumulatively, used by another 3.5 million software projects. Furthermore, we used our system to migrate an enterprise codebase of over one million lines of code between two versions of the PHP programming language, which lowered the software security risks of the company. Prior to this, a software developer team inside the company failed to achieve the upgrade despite significant effort.\n\n\nAs part of this project, we also developed and experimented with ways of integrating automatic code fixes in software processes. We created a visual interface that integrates with GitHub, the most popular code repository platform, and allows developers to apply automatically-generated fixes to their own code. The attached images show a screenshot of the interface and detail of the process, respectively.\n\n\nWidespread adoption of this type of technology will lead to markedly safer, faster, and more reliable software. It will also increase software developer productivity. Anywhere between one third and two thirds of current developer work could be completely automated. This is particularly important as the US faces a severe shortage of software developers.\n\n \n\n \n\n \n\n\t\t\t\t\tLast Modified: 03/18/2020\n\n\t\t\t\t\tSubmitted by: Cosmin A Radoi"
 }
}