{
 "awd_id": "1823447",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "FoMR: Collaborative Research: Single-Thread Multi-Accelerator Execution to Close the Dennard Scaling Gap",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Yuanyuan Yang",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2021-09-30",
 "tot_intn_awd_amt": 175000.0,
 "awd_amount": 175000.0,
 "awd_min_amd_letter_date": "2018-08-10",
 "awd_max_amd_letter_date": "2018-08-10",
 "awd_abstract_narration": "With ever-slowing scaling trends in microprocessor technologies, traditional techniques of improving processor performance are no longer viable, and achieving higher performance requires a dramatically different approach. This project develops a multicore chip microarchitecture using specialized accelerators and code-injection techniques without needing to modify user-level software, compilers and operating systems.  The impact of this research is to help steer microprocessor design in novel ways that can help sustain performance improvements, especially for datacenter and big-data computing.  \r\n\r\nThis project builds on a recent promising technique involves offloading program phases onto specialized processors (accelerators) which are tuned to execute programs with specific characteristics  (i.e., parallelism, control dependence, memory behavior) at extremely high efficiency. There are two main challenges which motivate the major thrusts of this work.  The first is the question of how to design a practical system for managing the execution of heterogeneous accelerators and dynamic translation.  The second is how to design a set of accelerators which provide integer factors of improvement over general purpose processors' performance and energy efficiency.  This work addresses the first challenge by designing a disaggregated translation subsystem, including region detection hardware at each core, a set of disaggregated compiler cores and a translation cache, and a hardware/software layer which dynamically re-maps logical threads to physical cores based on dynamic code properties and load balancing.  To design a set of balanced accelerators, this work is analyzing programs to identify key program behaviors, and developing targeted accelerators for each.  Finally, this includes the design of synthesis-time resource allocation algorithms which will co-optimize the choice of cache interface, general core attributes, and accelerator execution model.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Karthikeyan",
   "pi_last_name": "Sankaralingam",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Karthikeyan Sankaralingam",
   "pi_email_addr": "karu@cs.wisc.edu",
   "nsf_id": "000491322",
   "pi_start_date": "2018-08-10",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Wisconsin-Madison",
  "inst_street_address": "21 N PARK ST STE 6301",
  "inst_street_address_2": "",
  "inst_city_name": "MADISON",
  "inst_state_code": "WI",
  "inst_state_name": "Wisconsin",
  "inst_phone_num": "6082623822",
  "inst_zip_code": "537151218",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "WI02",
  "org_lgl_bus_name": "UNIVERSITY OF WISCONSIN SYSTEM",
  "org_prnt_uei_num": "",
  "org_uei_num": "LCLSJAGTNZQ7"
 },
 "perf_inst": {
  "perf_inst_name": "University of Wisconsin-Madison",
  "perf_str_addr": "1210 W. Dayton St",
  "perf_city_name": "Madison",
  "perf_st_code": "WI",
  "perf_st_name": "Wisconsin",
  "perf_zip_code": "537061613",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "WI02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "021Z",
   "pgm_ref_txt": "Industry Partnerships"
  },
  {
   "pgm_ref_code": "2878",
   "pgm_ref_txt": "SPECIAL PROJECTS - CCF"
  },
  {
   "pgm_ref_code": "7798",
   "pgm_ref_txt": "SOFTWARE & HARDWARE FOUNDATION"
  },
  {
   "pgm_ref_code": "7941",
   "pgm_ref_txt": "COMPUTER ARCHITECTURE"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 175000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The goal of the project was to develop a new paradigm for improving chip performance that involves successive generations of identifying program behaviors, and instantiating specialized and programmable accelerators on chip, where each can improve performance or energy efficiency by an order of magnitude or more. To avoid modifications to user-level software, compilers and various operating systems, the system would fully-transparently manage specialization resources. Specifically the project looked at transparent specialization and transparent accelerator design. In particular the project developed and refined the idea of \"stream dataflow\" execution which includes two behavior abstractions: program streams and dataflow. Program streams express how memory is accessed, while dataflow expresses the computation. The project refined this execution model, including developing hardware architecture definition of how to apply this to speed up deep-learning workloads. On the software side, the project developed ideas from integer linear programming for fast compilation. The specific outcome there was to develope compilation technologies that could seamlessly apply across different types of hardware, without rewriting of the compiler for each hardware. The outcomes of the project have contributed to the fundamentals of efficient microprocessor design, especially for accelerators that need to be programmable. The specific outcomes in terms of tools and student training have helped the microprocessor industry, academia, and education. Some of these research elements have been included in the undergraduate curriculum.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 04/07/2022<br>\n\t\t\t\t\tModified by: Karthikeyan&nbsp;Sankaralingam</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe goal of the project was to develop a new paradigm for improving chip performance that involves successive generations of identifying program behaviors, and instantiating specialized and programmable accelerators on chip, where each can improve performance or energy efficiency by an order of magnitude or more. To avoid modifications to user-level software, compilers and various operating systems, the system would fully-transparently manage specialization resources. Specifically the project looked at transparent specialization and transparent accelerator design. In particular the project developed and refined the idea of \"stream dataflow\" execution which includes two behavior abstractions: program streams and dataflow. Program streams express how memory is accessed, while dataflow expresses the computation. The project refined this execution model, including developing hardware architecture definition of how to apply this to speed up deep-learning workloads. On the software side, the project developed ideas from integer linear programming for fast compilation. The specific outcome there was to develope compilation technologies that could seamlessly apply across different types of hardware, without rewriting of the compiler for each hardware. The outcomes of the project have contributed to the fundamentals of efficient microprocessor design, especially for accelerators that need to be programmable. The specific outcomes in terms of tools and student training have helped the microprocessor industry, academia, and education. Some of these research elements have been included in the undergraduate curriculum.\n\n\t\t\t\t\tLast Modified: 04/07/2022\n\n\t\t\t\t\tSubmitted by: Karthikeyan Sankaralingam"
 }
}