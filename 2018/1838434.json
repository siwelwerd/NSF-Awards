{
 "awd_id": "1838434",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: EAGER: The Power of Isolation in Computing",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2021-09-30",
 "tot_intn_awd_amt": 125000.0,
 "awd_amount": 125000.0,
 "awd_min_amd_letter_date": "2018-06-25",
 "awd_max_amd_letter_date": "2018-06-25",
 "awd_abstract_narration": "Computer science and engineering have made great strides in building high-performing software and hardware systems.  Further progress on the hardware front requires multiple processors to work in parallel on the same task.  To make adequate use of the parallel hardware, the software needs to be parallelized as well - it needs to specify how to break up the task among the various processors.  The fact that a given problem may have several solutions often complicates software parallelization.  This is because the processors do not have much time to coordinate among themselves.  Without coordination, they may be working towards different, incompatible solutions.  Isolation is a strategy to ensure all processors work towards the same solution.  It also has a wide range of other algorithmic uses. This project focuses on the power of isolation, which is the process of singling out a solution to a computational problem that may have many solutions. Though fundamental in nature and aimed at developing the underlying theory, the project may lead to practical improvements, e.g., for computational problems that involve detecting similarities between certain types of structures.  Graduate training and education are core to the project. \r\n\r\nThe project consists of several thrusts that center around the notion of isolation: \r\n(1) Derandomizing known isolation procedures for problems that capture various models of computation.  Known procedures are based on the Isolation Lemma, which assigns small random weights to the components of a solution so as to make the solution of minimum total weight unique.  The project aims to reduce the number of random bits needed and ultimately remove the need for randomness completely while maintaining efficiency. \r\n\r\n(2) Developing deterministic or randomized isolation procedures for well-studied intermediate problems, namely, isomorphism problems on graphs and more expressive structures.  This relates to a number of known open questions regarding these problems, including the connection with testing rigidity of structures and with finding a canonical form for the structures. \r\n\r\n(3) Refuting the Unique Games Conjecture, a central conjecture in the area of hardness of approximation with ties to several other mathematical fields.  The conjecture states that approximating the optimal yield of strategies for so-called label cover games is as hard for cases that satisfy a certain isolation-like property as it is in general.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Dieter",
   "pi_last_name": "van Melkebeek",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Dieter van Melkebeek",
   "pi_email_addr": "dieter@cs.wisc.edu",
   "nsf_id": "000295926",
   "pi_start_date": "2018-06-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Wisconsin-Madison",
  "inst_street_address": "21 N PARK ST STE 6301",
  "inst_street_address_2": "",
  "inst_city_name": "MADISON",
  "inst_state_code": "WI",
  "inst_state_name": "Wisconsin",
  "inst_phone_num": "6082623822",
  "inst_zip_code": "537151218",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "WI02",
  "org_lgl_bus_name": "UNIVERSITY OF WISCONSIN SYSTEM",
  "org_prnt_uei_num": "",
  "org_uei_num": "LCLSJAGTNZQ7"
 },
 "perf_inst": {
  "perf_inst_name": "University of Wisconsin-Madison",
  "perf_str_addr": "1210 W Dayton St",
  "perf_city_name": "Madison",
  "perf_st_code": "WI",
  "perf_st_name": "Wisconsin",
  "perf_zip_code": "537061613",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "WI02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "7927",
   "pgm_ref_txt": "COMPLEXITY & CRYPTOGRAPHY"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 125000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p class=\"p1\">The intellectual merits of this project deal with the role of randomness in computation, in particular for isolating a solution to computational problems that may have many solutions.<span>&nbsp;</span></p>\n<p class=\"p1\">Randomness in computation refers to the ability to of flipping coins. This resource is indispensable for tasks like secret key selection in cryptography. It also seems helpful in computational settings where one wants to realize a deterministic transformation from inputs to outputs. The reason is that there sometimes are many good ways to proceed a computation, but singling out any particular one is challenging. By making the decision at random, there is a high chance that we pick a good one.&nbsp;</p>\n<p class=\"p1\">Benefits of the use of randomness in such settings may be gains in simplicity of the implementation, in running time, and in memory space consumption. Drawbacks include the possibility of incorrect outputs and/or considerably poorer performance than expected. We can often make the probability of undesirably outcomes small but we typically cannot rule them out completely. Another issue in some contexts is the lack of reproducibility when there are multiple valid outputs: different runs may yield different outputs. Finally, procuring the required coin flips may be difficult as true randomness is not, in general, a cheap resource. In practice, pseudorandom generators are used to keep the need for true randomness low. They are efficient deterministic algorithms that take a short seed and transform it into a much longer sequence that looks random to a computationally limited observer when the seed is chosen at random.<span>&nbsp;</span></p>\n<p class=\"p1\">A major outcome of the project is the development of provably secure pseudorandom generators for a widely-used randomized isolation process for finding routes from a starting point to a destination on a map. The process assigns small random costs to the streets on a map so as to make the route with the minimum total cost unique. Our pseudorandom generator enables an exponential reduction in the number of truly random bits needed without blowing up the running time or memory space consumption by much. This, in turns, allows us to eliminate the need for randomness completely and thereby avoid the above drawbacks of randomized processes all together, at a small cost in running time and memory space.</p>\n<p class=\"p1\">Another outcome specifically addresses the drawback of incorrect outputs. It shows how to detect incorrect runs in randomized reductions to an important step for determining the complexity of computational problems, namely finding the minimum size of a Boolean circuit that realizes a given truth-table.</p>\n<p class=\"p1\">Broader impacts of the project include research training of several graduate and undergraduate students, resulting in two PhD dissertations and three honors theses. Another broader impact is the development of lecture notes on quantum algorithms.<span>&nbsp;</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/03/2022<br>\n\t\t\t\t\tModified by: Dieter&nbsp;Van Melkebeek</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "The intellectual merits of this project deal with the role of randomness in computation, in particular for isolating a solution to computational problems that may have many solutions. \nRandomness in computation refers to the ability to of flipping coins. This resource is indispensable for tasks like secret key selection in cryptography. It also seems helpful in computational settings where one wants to realize a deterministic transformation from inputs to outputs. The reason is that there sometimes are many good ways to proceed a computation, but singling out any particular one is challenging. By making the decision at random, there is a high chance that we pick a good one. \nBenefits of the use of randomness in such settings may be gains in simplicity of the implementation, in running time, and in memory space consumption. Drawbacks include the possibility of incorrect outputs and/or considerably poorer performance than expected. We can often make the probability of undesirably outcomes small but we typically cannot rule them out completely. Another issue in some contexts is the lack of reproducibility when there are multiple valid outputs: different runs may yield different outputs. Finally, procuring the required coin flips may be difficult as true randomness is not, in general, a cheap resource. In practice, pseudorandom generators are used to keep the need for true randomness low. They are efficient deterministic algorithms that take a short seed and transform it into a much longer sequence that looks random to a computationally limited observer when the seed is chosen at random. \nA major outcome of the project is the development of provably secure pseudorandom generators for a widely-used randomized isolation process for finding routes from a starting point to a destination on a map. The process assigns small random costs to the streets on a map so as to make the route with the minimum total cost unique. Our pseudorandom generator enables an exponential reduction in the number of truly random bits needed without blowing up the running time or memory space consumption by much. This, in turns, allows us to eliminate the need for randomness completely and thereby avoid the above drawbacks of randomized processes all together, at a small cost in running time and memory space.\nAnother outcome specifically addresses the drawback of incorrect outputs. It shows how to detect incorrect runs in randomized reductions to an important step for determining the complexity of computational problems, namely finding the minimum size of a Boolean circuit that realizes a given truth-table.\nBroader impacts of the project include research training of several graduate and undergraduate students, resulting in two PhD dissertations and three honors theses. Another broader impact is the development of lecture notes on quantum algorithms. \n\n\t\t\t\t\tLast Modified: 01/03/2022\n\n\t\t\t\t\tSubmitted by: Dieter Van Melkebeek"
 }
}