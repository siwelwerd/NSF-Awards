{
 "awd_id": "1763256",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CSR: Medium: Collaborative Research: GPL: General-Purpose Lambda Computing",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Jason Hallstrom",
 "awd_eff_date": "2018-09-01",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 800000.0,
 "awd_amount": 800000.0,
 "awd_min_amd_letter_date": "2018-07-27",
 "awd_max_amd_letter_date": "2020-10-15",
 "awd_abstract_narration": "The project will design ways for computer programs to do things in a few seconds that would ordinarily take hours, by borrowing thousands of computers at once. Until recently, this was not possible or economical: the companies that rent computers required minutes of advance notice, with a minimum bill of at least ten minutes. Recently, new technology called \"function-as-a-service computing\" allows people to rent thousands of unreliable computers at the same time with no advance notice, for fractions of a second. This project will design software, storage systems, and programming languages to use this technology robustly for large calculations.\r\n\r\nThis research aims to deliver a new model of \"burst parallel\" applications and systems. This model takes advantage of new function-as-a-service offerings by cloud-computing providers such as Amazon, Microsoft, and Google. In this model, fine-grained \"ephemeral lambdas\" enable large-scale parallel computations at low cost.  With careful attention to algorithm parallelization, we argue that many both old and new data processing tasks can be adapted into a model of functions that operate on small pieces of data, executed in a burst-parallel manner to achieve interactive performance demands, in a way that can be debugged, traced, and understood.\r\n\r\nThis project intends to provide the application blueprint and systems foundation to enable end-users and developers to access massive amounts of parallelism on demand, while only paying for those resources actually consumed by an application. The researchers will engage with the developer community to ensure that others are able to use and build upon the work. In addition to integrating this research into course curricula, the researchers have a formalized program for embedding under-represented minority undergraduate students into their research groups.\r\n\r\nSoftware will be released under open-source software licenses pursuant to the policies of the University of California and Stanford University, and distributed through the project website and through traditional means of distribution of open-source software (e.g., GNU/Linux distributions, ports collections, app stores, etc.). Data, code, and evaluation results will continue to be hosted for at least three years after project completion at https://gplambda.github.io.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Keith",
   "pi_last_name": "Winstein",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Keith Winstein",
   "pi_email_addr": "keithw@cs.stanford.edu",
   "nsf_id": "000682184",
   "pi_start_date": "2018-07-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Stanford University",
  "inst_street_address": "450 JANE STANFORD WAY",
  "inst_street_address_2": "",
  "inst_city_name": "STANFORD",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "6507232300",
  "inst_zip_code": "943052004",
  "inst_country_name": "United States",
  "cong_dist_code": "16",
  "st_cong_dist_code": "CA16",
  "org_lgl_bus_name": "THE LELAND STANFORD JUNIOR UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "HJD6G4D6TJY5"
 },
 "perf_inst": {
  "perf_inst_name": "Stanford University",
  "perf_str_addr": "353 Serra Mall, Gates Bldg",
  "perf_city_name": "Palo Alto",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "943059025",
  "perf_ctry_code": "US",
  "perf_cong_dist": "16",
  "perf_st_cong_dist": "CA16",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 251256.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 276632.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 272112.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><div class=\"tinyMCEContent\">\n<p>Several companies offer what are called \"cloud-computing\" services, where it's possible to rent a computer on a minute-by-minute basis. This type of service (provided by companies like Amazon, Microsoft, Google, Oracle, Alibaba, etc.) has become incredibly popular and a huge industry.<br /><br />This project explored a different kind of service, which we called \"burst-parallel\" computing. Our vision was that this new model  enables applications could briefly use hundreds  or thousands of concurrent ephemeral \"lambdas\", reducing the run time of  data processing tasks by multiple orders of magnitude and transforming  batch tasks into interactive ones.</p>\nThe major goals of the project were:\n<p>* Introduce and motivate the substantial benefits of our new burst  parallel computation model on cloud services using ephemeral lambdas  using two highly-successful applications.</p>\n<p>* Develop two new burst parallel systems, a parallel compiler for  large applications and a modular, programmable video processing system.  Both were to demonstrate the transformation of currently what are  batch-processing tasks into interactive tasks.</p>\n<p>* Develop a common framework for developing, implementing, and executing<br />burst  parallel applications on cloud infrastructure, including a new storage  system for intermediate data, an execution engine serving as a burst  parallel runtime system, and a distributed tracing framework.<br /><br />As part of this project, we worked with our colleagues at UC San Diego and designed and built three new systems:</p>\n<ul>\n<li> Our \"gg\" system makes it possible to run many types of workloads (compilation, unit testing, video processing, verification and testing) on thousands of computers rented on a second-by-second basis. We published research papers about this system at major research conferences (USENIX ATC 2019, OOPSLA 2018, and FMCAD 2020), and the papers have been cited more than 200 times. The gg system is available as free and open-source software.</li>\n<li>Our \"R2E2\" system demonstrates the use of similar techniques for a particular task: rendering film-scale scenes. We built a \"burst-parallel\" ray-tracing system and published a paper at a major graphics conference (SIGGRAPH 2022). The R2E2 system is available as free and open-source software.</li>\n<li>Our \"Fixpoint\" system tries to drive these techniques to the ultimate level: at the core of the operating system. We have shown that the overhead of such techniques can be on the level of nanoseconds (billionths of a second), which gives hope that they might be used pervasively. We published a paper on this at a research workshop (ACM HotNets 2022).</li>\n</ul>\n</div><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/13/2023<br>\n\t\t\t\t\tModified by: Keith&nbsp;Winstein</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nSeveral companies offer what are called \"cloud-computing\" services, where it's possible to rent a computer on a minute-by-minute basis. This type of service (provided by companies like Amazon, Microsoft, Google, Oracle, Alibaba, etc.) has become incredibly popular and a huge industry.\n\nThis project explored a different kind of service, which we called \"burst-parallel\" computing. Our vision was that this new model  enables applications could briefly use hundreds  or thousands of concurrent ephemeral \"lambdas\", reducing the run time of  data processing tasks by multiple orders of magnitude and transforming  batch tasks into interactive ones.\nThe major goals of the project were:\n\n* Introduce and motivate the substantial benefits of our new burst  parallel computation model on cloud services using ephemeral lambdas  using two highly-successful applications.\n\n* Develop two new burst parallel systems, a parallel compiler for  large applications and a modular, programmable video processing system.  Both were to demonstrate the transformation of currently what are  batch-processing tasks into interactive tasks.\n\n* Develop a common framework for developing, implementing, and executing\nburst  parallel applications on cloud infrastructure, including a new storage  system for intermediate data, an execution engine serving as a burst  parallel runtime system, and a distributed tracing framework.\n\nAs part of this project, we worked with our colleagues at UC San Diego and designed and built three new systems:\n\n Our \"gg\" system makes it possible to run many types of workloads (compilation, unit testing, video processing, verification and testing) on thousands of computers rented on a second-by-second basis. We published research papers about this system at major research conferences (USENIX ATC 2019, OOPSLA 2018, and FMCAD 2020), and the papers have been cited more than 200 times. The gg system is available as free and open-source software.\nOur \"R2E2\" system demonstrates the use of similar techniques for a particular task: rendering film-scale scenes. We built a \"burst-parallel\" ray-tracing system and published a paper at a major graphics conference (SIGGRAPH 2022). The R2E2 system is available as free and open-source software.\nOur \"Fixpoint\" system tries to drive these techniques to the ultimate level: at the core of the operating system. We have shown that the overhead of such techniques can be on the level of nanoseconds (billionths of a second), which gives hope that they might be used pervasively. We published a paper on this at a research workshop (ACM HotNets 2022).\n\n\n\n\t\t\t\t\tLast Modified: 07/13/2023\n\n\t\t\t\t\tSubmitted by: Keith Winstein"
 }
}