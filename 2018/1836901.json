{
 "awd_id": "1836901",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "ICE-T: RC: Orchestration and Reconfiguration Control Architecture for Software Defined Radios",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032922935",
 "po_email": "dmedhi@nsf.gov",
 "po_sign_block_name": "Deepankar Medhi",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2021-09-30",
 "tot_intn_awd_amt": 300000.0,
 "awd_amount": 316000.0,
 "awd_min_amd_letter_date": "2018-09-13",
 "awd_max_amd_letter_date": "2019-04-25",
 "awd_abstract_narration": "Wireless networks have grown enormously during the past 30 years, impacting numerous industries, including telecommunications, emergency response, and entertainment. Wireless advances could radically change several industries in the near future, including manufacturing, the automotive industry, healthcare, assisted living, public events, home automation, and utilities. However, each industry has different, often opposing, wireless demands.  Manufacturing often requires a low data rate, ultra-low latency closed loop communication between machines, while emerging augmented reality interactions between people have much larger large data volumes, but can tolerate higher latency. Today, applications and services are constrained to a handful of wireless technologies, such as 4G, Wi-Fi and Bluetooth, because developing and modifying new radio protocols requires many man-years. The challenge for the wireless community is to enable wireless networks the same flexibility as regular computing devices, such as laptops or phones, where the same hardware supports a near infinite variety of behaviors realized in software. Flexibility at the wireless level has lagged as radios have been implemented as fixed-function circuits, in order to minimize marginal cost, energy use, and network latency. Enabling such flexibility would open opportunities for new wireless functions in diverse application domains. \r\n\r\nWhile the emerging field of Software-Defined Radio (SDR) has made progress toward this vision, recent results have shown that traditional SDRs suffer serious limitations. The main problem is the slower sequential execution, even when using multicore central processing units (CPUs) or graphics processing units (GPUs), in contrast to the fast execution and high parallelization in application-specific integrated circuits (ASICs)or field-programmable gate arrays (FPGAs). This research will explore and evaluate a new software abstraction, Dynamic Blocks (DB), which will realize many software abstractions in an SDR FPGA, including procedure calls, recursion, queuing, dynamic routing, shared memory and matrix algebra. Realizing these abstractions in FPGAs will allow developers to rapidly try new designs or modify existing ones while meeting real-time latency and low energy requirements. The project will use millimeter-wave (mmWave) scenarios to evaluate real-time SDRs programmed using DBs. The SDRs available in the ORBIT testbed at Rutgers University, and the future mmWave capable equipment from the recently-funded COSMOS platform and European Union partners would be the target platforms for this research.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Ivan",
   "pi_last_name": "Seskar",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ivan Seskar",
   "pi_email_addr": "seskar@winlab.rutgers.edu",
   "nsf_id": "000195782",
   "pi_start_date": "2018-09-13",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Richard",
   "pi_last_name": "Martin",
   "pi_mid_init": "P",
   "pi_sufx_name": "",
   "pi_full_name": "Richard P Martin",
   "pi_email_addr": "Rmartin@cs.Rutgers.Edu",
   "nsf_id": "000086200",
   "pi_start_date": "2018-09-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Rutgers University New Brunswick",
  "inst_street_address": "3 RUTGERS PLZ",
  "inst_street_address_2": "",
  "inst_city_name": "NEW BRUNSWICK",
  "inst_state_code": "NJ",
  "inst_state_name": "New Jersey",
  "inst_phone_num": "8489320150",
  "inst_zip_code": "089018559",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "NJ12",
  "org_lgl_bus_name": "RUTGERS, THE STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "M1LVPE5GLSD9"
 },
 "perf_inst": {
  "perf_inst_name": "Rutgers University New Brunswick",
  "perf_str_addr": "671 US Highway 1",
  "perf_city_name": "North Brunswick",
  "perf_st_code": "NJ",
  "perf_st_name": "New Jersey",
  "perf_zip_code": "089023390",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "NJ12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7363",
   "pgm_ref_txt": "RES IN NETWORKING TECH & SYS"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 300000.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The ICE-T project seeks three major enhancements to the set of ORCA project developed tools to lower the barrier for high performance, real-time experimentation in the area of radio and wireless technology. Specifically, we explored three different parallelization approaches to speed up Software Defined Radios (SDR). As SDR implement radio functions in software rather than analogy circuits, they have tight latency requirements to keep packet response times to within protocol specifications. We investigated using Field Programmable Gate Arrays (FPGAs), Graphics Processing Units (GPUs) and parallel CPUs using the Message Passing Interface as parallelization environments. We found all three can gain performance over standard SDR software. The research is a joint collaboration between the ORBIT and COSMOS (PAWR) teams at Rutgers, and teams from the ORCA Consortium that include, IMEC and Katholieke Univeriteit Leuven in Belgium, Trinity College Dublin in Ireland, Technische Universitaet Dresden and National Instruments Dresden GMBH in Germany, and Martel Innovate in Switzerland as well as ORCA Open Call collaborators including Centre Tecnol&ograve;gic de Telecomunicacions de Catalunya (CTTC) - CERCA in Spain, IMDEA Networks Institute in Spain, and University of Skopje in North Macedonia.</p>\n<p>The first project explored novel method to accelerate software radios by placing more of the functionality in the FPGA rather than in the host CPU. One example function we moved into the FPGA is a Correlator. We implemented 3 new functional blocks in the FPGA. On the transmit side, we added a spreader block, and on the receiver side we added an averaging block and a correlator block. We found the FPGA resources taken up with the new blocks was modest, adding 11.4%, 8.74% and 2.76% extra to the LUT, Flip-Flop, and BRAM resources, respectively. By moving the correlator and averaging blocks to the FPGA,the processing time on the host, and amount of data transferred from the SDR to the host was significantly reduced. This made channel sounding experiments much easier as the results such as can now be observed real time, as opposed to waiting for off-line results.</p>\n<p>In the second project, significant progress was made in introducing GPUs as accelerators for demodulation of Massive MIMO (Multiple Input Multiple Output) next generation wireless systems. The issue with SDRs is that the volume of data scaling linearly with the number of antennas, and each antenna can generate on the order of 0.5 to 10 GBs of RF samples. While an FPGA could have been used, a GPU is much more easily programmable and has the required parallelization to increase the speed of computation.</p>\n<p>While performing experimentation with the our GPU platform, we found that for certain demodulation scenarios, using a CPU was faster when the number of antennas was low, typically less than 2 or 4. However, as the number of antennas increases the GPU is always faster, by up to 0.6 to 3 times faster depending on the demodulation used.</p>\n<p>The third project used distributed memory message passing model by using Message Passing Interface (MPI) to distribute the encoding and Sum-Product decoding processes of LDPC codes over multiple multi-core CPUs. We performed the processing using stream processing and batch processing mechanisms. We showed the acceleration provided by using message passing model for both mechanisms, and compare the execution time required for processing with respect to increases in both the number of CPUs and cores per CPU. We also found that while using a distributed memory based message passing model for distributed processing provides acceleration, increasing the number of processors to more than the logical cores in the system adds high processing latency as well as inter-processor communication latency due to context switching between processes.</p>\n<p>In the final year, the project research objectives were expanded to include evaluation of the accuracy of machine learning structures in modulation recognition. Our machine learning techniques included conventional and non-conventional neural networks, and experimentation aimed at examination of impact of complexity, training time and noise conditions on performance. The results indicate that the CNN provides the best accuracy but it is time and resource intensive and that the FCN is the optimal network in terms of timing and resources and exhibits accuracy results comparable to the CNN network.</p>\n<p>In addition to these ICE-T projects, the team actively participated in various ORCA project activities including supporting external ORCA Open Call participants performing development&nbsp; and experimentation on the ORBIT and, more recently on COSMOS testbeds. Also, the core of the ORCA&nbsp; project team (imec and Rutgers) formed the Scatter Team that competed in the DARPA Spectrum&nbsp; Collaboration Challenge. Once the ORCA project ended, the team continued international collaboration by supporting various NGI Atlantic evaluation projects that are being performed on ORBIT and COSMOS testbeds.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/31/2022<br>\n\t\t\t\t\tModified by: Ivan&nbsp;Seskar</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe ICE-T project seeks three major enhancements to the set of ORCA project developed tools to lower the barrier for high performance, real-time experimentation in the area of radio and wireless technology. Specifically, we explored three different parallelization approaches to speed up Software Defined Radios (SDR). As SDR implement radio functions in software rather than analogy circuits, they have tight latency requirements to keep packet response times to within protocol specifications. We investigated using Field Programmable Gate Arrays (FPGAs), Graphics Processing Units (GPUs) and parallel CPUs using the Message Passing Interface as parallelization environments. We found all three can gain performance over standard SDR software. The research is a joint collaboration between the ORBIT and COSMOS (PAWR) teams at Rutgers, and teams from the ORCA Consortium that include, IMEC and Katholieke Univeriteit Leuven in Belgium, Trinity College Dublin in Ireland, Technische Universitaet Dresden and National Instruments Dresden GMBH in Germany, and Martel Innovate in Switzerland as well as ORCA Open Call collaborators including Centre Tecnol&ograve;gic de Telecomunicacions de Catalunya (CTTC) - CERCA in Spain, IMDEA Networks Institute in Spain, and University of Skopje in North Macedonia.\n\nThe first project explored novel method to accelerate software radios by placing more of the functionality in the FPGA rather than in the host CPU. One example function we moved into the FPGA is a Correlator. We implemented 3 new functional blocks in the FPGA. On the transmit side, we added a spreader block, and on the receiver side we added an averaging block and a correlator block. We found the FPGA resources taken up with the new blocks was modest, adding 11.4%, 8.74% and 2.76% extra to the LUT, Flip-Flop, and BRAM resources, respectively. By moving the correlator and averaging blocks to the FPGA,the processing time on the host, and amount of data transferred from the SDR to the host was significantly reduced. This made channel sounding experiments much easier as the results such as can now be observed real time, as opposed to waiting for off-line results.\n\nIn the second project, significant progress was made in introducing GPUs as accelerators for demodulation of Massive MIMO (Multiple Input Multiple Output) next generation wireless systems. The issue with SDRs is that the volume of data scaling linearly with the number of antennas, and each antenna can generate on the order of 0.5 to 10 GBs of RF samples. While an FPGA could have been used, a GPU is much more easily programmable and has the required parallelization to increase the speed of computation.\n\nWhile performing experimentation with the our GPU platform, we found that for certain demodulation scenarios, using a CPU was faster when the number of antennas was low, typically less than 2 or 4. However, as the number of antennas increases the GPU is always faster, by up to 0.6 to 3 times faster depending on the demodulation used.\n\nThe third project used distributed memory message passing model by using Message Passing Interface (MPI) to distribute the encoding and Sum-Product decoding processes of LDPC codes over multiple multi-core CPUs. We performed the processing using stream processing and batch processing mechanisms. We showed the acceleration provided by using message passing model for both mechanisms, and compare the execution time required for processing with respect to increases in both the number of CPUs and cores per CPU. We also found that while using a distributed memory based message passing model for distributed processing provides acceleration, increasing the number of processors to more than the logical cores in the system adds high processing latency as well as inter-processor communication latency due to context switching between processes.\n\nIn the final year, the project research objectives were expanded to include evaluation of the accuracy of machine learning structures in modulation recognition. Our machine learning techniques included conventional and non-conventional neural networks, and experimentation aimed at examination of impact of complexity, training time and noise conditions on performance. The results indicate that the CNN provides the best accuracy but it is time and resource intensive and that the FCN is the optimal network in terms of timing and resources and exhibits accuracy results comparable to the CNN network.\n\nIn addition to these ICE-T projects, the team actively participated in various ORCA project activities including supporting external ORCA Open Call participants performing development  and experimentation on the ORBIT and, more recently on COSMOS testbeds. Also, the core of the ORCA  project team (imec and Rutgers) formed the Scatter Team that competed in the DARPA Spectrum  Collaboration Challenge. Once the ORCA project ended, the team continued international collaboration by supporting various NGI Atlantic evaluation projects that are being performed on ORBIT and COSMOS testbeds.\n\n\t\t\t\t\tLast Modified: 01/31/2022\n\n\t\t\t\t\tSubmitted by: Ivan Seskar"
 }
}