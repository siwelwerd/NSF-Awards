{
 "awd_id": "1814457",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CCF-BSF: SHF: Small: Integration and Evolution of Software Models with Executable Logic",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 412497.0,
 "awd_amount": 412497.0,
 "awd_min_amd_letter_date": "2018-08-27",
 "awd_max_amd_letter_date": "2018-08-27",
 "awd_abstract_narration": "Model Based Systems Engineering (MBSE) is an approach for building large software systems in which one describes the system in a modeling language and, once the model is considered consistent and correct, then transforms the models into software programs. The MBSE approach is motivated by the growing complexity of software, which requires multiple views of the software system at multiple levels of abstraction. Programming languages do not support this modeling activity, which has triggered the development of new modeling technologies and a variety of model-level services such as model verification and validation, testing, analysis, transformation, refactoring, design patterns, meta-modeling, and model evolution. The goal of this research is to develop an executable formal modeling framework that can support and integrate a wide variety of modeling tasks, and thus enable the building of robust, large software systems. \r\n\r\nThe goal of this project is to develop logical foundations and a prototype realization of reasoning services for model engineering. In particular, the plan is to focus on mediation-based integration, partitioning, and evolution of software models and use the recently developed language, F-OML, inspired by prior work on F-logic, HiLog, and Transaction Logic. F-OML is a compact yet powerful logic-based language supported by a well-defined semantics and a provably correct execution method. The project includes the following main efforts: (1) Building logical foundations for reasoning services, including higher-order capabilities, actions, reasoning under inconsistent or incomplete knowledge, and explanation generation; (2) building uniform logical foundations for integration (vertical and horizontal) and evolution of software models; (3) building a proof-of-concept prototype of an MBSE system based on the above ideas; and (4) evaluation of the proposed approach via case studies and benchmark models.  This project involves a number of challenging problems ranging from reasoning about models to verification and integration of models to model-guided code generation to model partitioning and evolution. The expected outcome of this work will be a theory, algorithms, and a prototype for mediated reasoning services for logic-based systems engineering, which will support integration and evolution of modeling services. Eventual incorporation of such services into existing interactive software development environments will make the new capabilities available to software engineers to increase their  productivity and reliability of the software they produce.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Michael",
   "pi_last_name": "Kifer",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Michael Kifer",
   "pi_email_addr": "kifer@cs.stonybrook.edu",
   "nsf_id": "000172694",
   "pi_start_date": "2018-08-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "SUNY at Stony Brook",
  "inst_street_address": "W5510 FRANKS MELVILLE MEMORIAL LIBRARY",
  "inst_street_address_2": "",
  "inst_city_name": "STONY BROOK",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6316329949",
  "inst_zip_code": "117940001",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "NY01",
  "org_lgl_bus_name": "THE RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK",
  "org_prnt_uei_num": "M746VC6XMNH9",
  "org_uei_num": "M746VC6XMNH9"
 },
 "perf_inst": {
  "perf_inst_name": "SUNY at Stony Brook",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "117944600",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "NY01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 412497.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The objectives of this project were two-fold: (1) development of logical foundations and prototyping of reasoning services for model engineering of computer software, and (2) development of the technology for creating actionable, machine-understandable knowledge out of English sentences crafted by domain experts, such as biologists, doctors, lawyers, etc. These two goals are related because one highly attractive way to construct formal specifications of software models is through the natural language interface.&nbsp; The plan for (1) was to focus on mediation-based integration, partitioning, and evolution of software models based on PI's earlier work on the FOML language that in turn was inspired by his prior award-winning work on F-logic, HiLog, and Transaction Logic. FOML is a compact yet powerful logic-based language with a well-defined declarative semantics and provably correct execution methods.&nbsp; The plan for (2) was to develop a highly accurate semantic parser for lightly stylized English sentences by combining a suitable existing syntactic parser with our own higher-level semantic parser. That semantic parser is based on the idea of FrameNet's ``frames'' that capture the meaning of the English sentences irrespective of the syntactic forms used to express that meaning. For instance, ``X works for Y'' and ``Y is employed by X'' would be parsed into the same logical statement by our frame-based parser and thus would have the same meaning.&nbsp;</p>\n<p><br />The technical results from this project were reported in a dozen of papers published in international conference proceedings, journals, book chapters, and Ph.D. theses. Proof-of-concept prototypes of the systems developed with support of this project were released as open source software through sourceforge.net and github.com.&nbsp; Two Ph.D. theses resulted from this project and four other students (2 M.S., 2 B.S.) had an opportunity to participate in this cutting edge research.</p>\n<p><br />The technical outcomes of this project directly correspond to the two objectives mentioned above. In plain terms, the first outcome is the creation of logical foundations for multimodal reasoning services, including the multilevel modeling capabilities. Multimodal here means that reasoning can be performed at several levels: at the model level, at the instance level, or both. Our proof-of-concept FOModeller system was built on these theoretical foundations.&nbsp; The second technical outcome concerns knowledge authoring with natural language.&nbsp; Here we developed the KALM (Knowledgebase Authoring Logic Machine) architecture and algorithms for very high-accuracy, frame-based semantic parsing of English sentences and for converting them into actionable knowledge represented as logical statements.&nbsp; We started with a relatively restricted version of English, known as Attempto Controlled English, and extended the techniques to a very general subset of English, which we call Factual English. The advantage of Factual English is not only its generality but also that its use requires very little training on behalf of the domain expert.&nbsp; We then further extended the framework to include rules (if-then type of sentences) and even sentences that involve actions.</p>\n<p><br />With further development, the above technologies could be expected to spur a qualitative leap in software reliability and to make knowledge based software much more common and cost-effective.<br /><br /></p><br>\n<p>\n Last Modified: 11/09/2023<br>\nModified by: Michael&nbsp;Kifer</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe objectives of this project were two-fold: (1) development of logical foundations and prototyping of reasoning services for model engineering of computer software, and (2) development of the technology for creating actionable, machine-understandable knowledge out of English sentences crafted by domain experts, such as biologists, doctors, lawyers, etc. These two goals are related because one highly attractive way to construct formal specifications of software models is through the natural language interface. The plan for (1) was to focus on mediation-based integration, partitioning, and evolution of software models based on PI's earlier work on the FOML language that in turn was inspired by his prior award-winning work on F-logic, HiLog, and Transaction Logic. FOML is a compact yet powerful logic-based language with a well-defined declarative semantics and provably correct execution methods. The plan for (2) was to develop a highly accurate semantic parser for lightly stylized English sentences by combining a suitable existing syntactic parser with our own higher-level semantic parser. That semantic parser is based on the idea of FrameNet's ``frames'' that capture the meaning of the English sentences irrespective of the syntactic forms used to express that meaning. For instance, ``X works for Y'' and ``Y is employed by X'' would be parsed into the same logical statement by our frame-based parser and thus would have the same meaning.\n\n\n\nThe technical results from this project were reported in a dozen of papers published in international conference proceedings, journals, book chapters, and Ph.D. theses. Proof-of-concept prototypes of the systems developed with support of this project were released as open source software through sourceforge.net and github.com. Two Ph.D. theses resulted from this project and four other students (2 M.S., 2 B.S.) had an opportunity to participate in this cutting edge research.\n\n\n\nThe technical outcomes of this project directly correspond to the two objectives mentioned above. In plain terms, the first outcome is the creation of logical foundations for multimodal reasoning services, including the multilevel modeling capabilities. Multimodal here means that reasoning can be performed at several levels: at the model level, at the instance level, or both. Our proof-of-concept FOModeller system was built on these theoretical foundations. The second technical outcome concerns knowledge authoring with natural language. Here we developed the KALM (Knowledgebase Authoring Logic Machine) architecture and algorithms for very high-accuracy, frame-based semantic parsing of English sentences and for converting them into actionable knowledge represented as logical statements. We started with a relatively restricted version of English, known as Attempto Controlled English, and extended the techniques to a very general subset of English, which we call Factual English. The advantage of Factual English is not only its generality but also that its use requires very little training on behalf of the domain expert. We then further extended the framework to include rules (if-then type of sentences) and even sentences that involve actions.\n\n\n\nWith further development, the above technologies could be expected to spur a qualitative leap in software reliability and to make knowledge based software much more common and cost-effective.\n\n\t\t\t\t\tLast Modified: 11/09/2023\n\n\t\t\t\t\tSubmitted by: MichaelKifer\n"
 }
}