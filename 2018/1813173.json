{
 "awd_id": "1813173",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: GPU-dedicated Graph Transformations for Accelerating Iterative Graph Analytics",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927498",
 "po_email": "achtchel@nsf.gov",
 "po_sign_block_name": "Almadena Chtchelkanova",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2022-09-30",
 "tot_intn_awd_amt": 499987.0,
 "awd_amount": 499987.0,
 "awd_min_amd_letter_date": "2018-08-27",
 "awd_max_amd_letter_date": "2018-08-27",
 "awd_abstract_narration": "Graph analytics yields deeper knowledge in many scientific domains by mining large volumes of highly connected data, such as social networks, airline networks, biological networks, and internet topology. Due to its compute and data-intensive nature, GPUs with massive parallelism hold great potential in accelerating graph analytics. However, existing solutions exhibit low utilization of GPU resources caused by the mismatch between GPU's design for regular computations and the highly irregular nature of real-world graphs. Moreover, GPUs often fail to handle relatively large graphs due to their limited on-device memory. The goal of this research is to dramatically improve the GPU resource utilization and boost the scalability of graph analytics by transforming the graphs in ways that make the data and workloads better fit in the GPU computing. The results of this research include software products that can be readily deployed on existing large-scale high-performance systems equipped with GPUs for executing real-world graph applications. More broadly, this research helps accelerate new discoveries in scientific fields like bioinformatics, social science, and public security. \r\n\r\nSpecifically, this research develops a series of GPU-oriented graph transformations that together address the challenges of irregularity, scalability, and load imbalance at the input graph level. These include: (1) graph transformations for regularity which transform the irregular graph structures into more regular ones to address the low GPU efficiency; (2) graph transformations for scalability which transform a large graph into a mix of acyclic and cyclic small graphs, with each of them fitting into the GPU global memory. By maximally migrating computation from the acyclic graphs to the cyclic ones, the transformations can greatly reduce the data movement between GPU memory and host memory; and (3) graph transformations for multi-GPU systems which address the GPU load imbalance caused by the variation of active nodes in iterative graph analytics. This is achieved by generating small yet overlapped graphs and selectively processing the overlapped regions. Finally, this research integrates the above transformations to maximize the overall benefits by tailoring the design of the transformations to the properties of input graphs and GPU platforms. The evaluation includes large graph data sets from KONNECT and SNAP repositories. The implementations of graph analysis algorithms are packaged into easy-to-use programming interfaces and released over the course of this project.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Zhijia",
   "pi_last_name": "Zhao",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhijia Zhao",
   "pi_email_addr": "zhijia@cs.ucr.edu",
   "nsf_id": "000702557",
   "pi_start_date": "2018-08-27",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Rajiv",
   "pi_last_name": "Gupta",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Rajiv Gupta",
   "pi_email_addr": "gupta@cs.ucr.edu",
   "nsf_id": "000077772",
   "pi_start_date": "2018-08-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Riverside",
  "inst_street_address": "200 UNIVERSTY OFC BUILDING",
  "inst_street_address_2": "",
  "inst_city_name": "RIVERSIDE",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "9518275535",
  "inst_zip_code": "925210001",
  "inst_country_name": "United States",
  "cong_dist_code": "39",
  "st_cong_dist_code": "CA39",
  "org_lgl_bus_name": "REGENTS OF THE UNIVERSITY OF CALIFORNIA AT RIVERSIDE",
  "org_prnt_uei_num": "",
  "org_uei_num": "MR5QC5FCAVH5"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Riverside",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "925210001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "39",
  "perf_st_cong_dist": "CA39",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7942",
   "pgm_ref_txt": "HIGH-PERFORMANCE COMPUTING"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 499987.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-55782802-7fff-fbd8-2ae9-8a6250e0db7f\"> </span></p>\n<p dir=\"ltr\"><span>In many real-world applications, the data can be naturally modeled as a graph structure, where vertices in the graph represent entities and the edges represent the connections among different entities (such as the users and their relationships in a social network). To process graph data efficiently, system designers have considered adopting GPUs, which are powerful parallel processors capable of handling many tasks simultaneously. Unfortunately, graph data exposes some unique challenges to the design of a GPU-based processing system. First, graph data by nature is irregular (e.g., some vertices may own many more edges than others), while the GPU is designed for more regular computations. Second, an initially small graph may grow over time and eventually become too large to fit into the GPU memory.</span></p>\n<p dir=\"ltr\"><span>To address the above challenges, in this research, we designed and implemented a series of novel techniques, including transformations that turn the irregular graphs into more regular ones (Tigr system) and algorithms that dynamically track and extract the active portion of the graph during the query evaluation so that the graph does not have to be loaded into the GPU memory entirely (Subway system). In addition, this project also contributed to multiple aspects of the graph processing system design, including accelerating query evaluation by reusing the graph query results (Tripoline and VRGQ), exploiting the use of a proxy graph (Core Graph), designing a new hardware accelerator (GraphPulse), supporting the evaluation of multiple graph queries (MultiLyra, SimGQ, BEAD, and Glign), covering more graph query types (PnP and G-Morph), and the testing of GPU programs (DSGEN).</span></p>\n<p dir=\"ltr\"><span>Besides research advancements, this project also facilitated the training of over 10 PhD students advised by the PI and co-PI in high-performance computing and big data processing systems. As a result, they became the authors/co-authors of papers associated with the works mentioned above. In addition, several PhD students involved in this project have successfully defended their degrees.</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/14/2023<br>\n\t\t\t\t\tModified by: Zhijia&nbsp;Zhao</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nIn many real-world applications, the data can be naturally modeled as a graph structure, where vertices in the graph represent entities and the edges represent the connections among different entities (such as the users and their relationships in a social network). To process graph data efficiently, system designers have considered adopting GPUs, which are powerful parallel processors capable of handling many tasks simultaneously. Unfortunately, graph data exposes some unique challenges to the design of a GPU-based processing system. First, graph data by nature is irregular (e.g., some vertices may own many more edges than others), while the GPU is designed for more regular computations. Second, an initially small graph may grow over time and eventually become too large to fit into the GPU memory.\nTo address the above challenges, in this research, we designed and implemented a series of novel techniques, including transformations that turn the irregular graphs into more regular ones (Tigr system) and algorithms that dynamically track and extract the active portion of the graph during the query evaluation so that the graph does not have to be loaded into the GPU memory entirely (Subway system). In addition, this project also contributed to multiple aspects of the graph processing system design, including accelerating query evaluation by reusing the graph query results (Tripoline and VRGQ), exploiting the use of a proxy graph (Core Graph), designing a new hardware accelerator (GraphPulse), supporting the evaluation of multiple graph queries (MultiLyra, SimGQ, BEAD, and Glign), covering more graph query types (PnP and G-Morph), and the testing of GPU programs (DSGEN).\nBesides research advancements, this project also facilitated the training of over 10 PhD students advised by the PI and co-PI in high-performance computing and big data processing systems. As a result, they became the authors/co-authors of papers associated with the works mentioned above. In addition, several PhD students involved in this project have successfully defended their degrees.\n\n\t\t\t\t\tLast Modified: 01/14/2023\n\n\t\t\t\t\tSubmitted by: Zhijia Zhao"
 }
}