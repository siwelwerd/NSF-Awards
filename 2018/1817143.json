{
 "awd_id": "1817143",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: CORE: Small: Secure Computation on Large Data",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2021-09-30",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 500000.0,
 "awd_min_amd_letter_date": "2018-08-30",
 "awd_max_amd_letter_date": "2018-08-30",
 "awd_abstract_narration": "This project focuses on secure computation protocols that can efficiently compute on large data.  Secure computation is a fundamental and very general notion in cryptography that captures privacy-preserving computation of any algorithm on data which originates from multiple sources and should be kept private except for what is revealed by the computation output.  Possible applications of secure computation include public policy, to detect financial fraud or other emergency markers using data held by different public or private entities; medicine, to find matches between drugs and patients' medical histories while keeping both private; finance, to enable private auctions; network security, to identify large-scale virus attacks using network data from different organizations; or privacy-protecting internet services, e.g. to allow privacy-protecting database search.\r\n\r\nSecure computation has seen great progress in bringing feasibility results closer to practice. However, until very recently efficient secure computation was possible only for programs which compute on short inputs.  A key tool for extending secure computation to the case of large inputs is a protocol for Secure Computation for Random Access Memory (SC-RAM), i.e., a protocol that reads or writes secret-shared data to a chosen location in a large secret-shared array without leaking the address of the accessed location.  Efficient SC-RAM implementations will enable secure computation to scale to arbitrarily large data, and this project seeks to develop SC-RAM protocols which perform this task efficiently.  The focus of this work is on the case where the shared computation is performed by three parties, for which both generic and special-purpose low-latency and high-throughput protocols will be developed, optimizing SC-RAM for a variety of settings, depending on the number and size of data records, network topology, read vs. write access, support for batch reads, and other considerations. The work as part of this project will also include prototype implementations which will be made public, integrated in a development environment so that they can be easily adopted by developers of secure computation protocol applications.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Stanislaw",
   "pi_last_name": "Jarecki",
   "pi_mid_init": "M",
   "pi_sufx_name": "",
   "pi_full_name": "Stanislaw M Jarecki",
   "pi_email_addr": "stanislawjarecki@gmail.com",
   "nsf_id": "000104009",
   "pi_start_date": "2018-08-30",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Anton",
   "pi_last_name": "Burtsev",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Anton Burtsev",
   "pi_email_addr": "aburtsev@flux.utah.edu",
   "nsf_id": "000637182",
   "pi_start_date": "2018-08-30",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Irvine",
  "inst_street_address": "160 ALDRICH HALL",
  "inst_street_address_2": "",
  "inst_city_name": "IRVINE",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "9498247295",
  "inst_zip_code": "926970001",
  "inst_country_name": "United States",
  "cong_dist_code": "47",
  "st_cong_dist_code": "CA47",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA IRVINE",
  "org_prnt_uei_num": "MJC5FCYQTPE6",
  "org_uei_num": "MJC5FCYQTPE6"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Irvine",
  "perf_str_addr": "4026 Bren Hall",
  "perf_city_name": "Irvine",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "926173067",
  "perf_ctry_code": "US",
  "perf_cong_dist": "47",
  "perf_st_cong_dist": "CA47",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 500000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Our most significant outcomes are the following:</p>\n<p>1) We designed and prototyped an o<span>blivious database engine for Intel SGX, which allows an SGX-enabled datacenter to service&nbsp;</span><span>database queries in a way which protects query and data privacy even to other, potentially malicious, processes executed by the same datacenter.&nbsp; This was a challenging objective and our results will aid privacy-preserving computation on large data in practice.</span></p>\n<p>2) We designed and prototyped practical and bandwidth-optimal 3-party secure multi-party computation (MPC) of (oblivious) RAM (ORAM), with extensions to keyword-based lookup, and native support for keywords and payloads which are cryptographic group elements. Minimal-bandwidth MPC-ORAM can be used to speed up any secure computation on large data, but native support for group elements allows for more efficient integration of MPC-ORAM with distributed cryptosystems, thus extending applications of privacy-preserving distributed cryptosystems.</p>\n<p>3) We made several contributions to Password-Authenticated Key Exchange (PAKE) which bring cryptographically strong password-authentication closer to practice.&nbsp; Specifically, we (1) improved the analysis and/or efficiency of several PAKE protocols which were chosen in the IETF PAKE standardization process, including our own \"OPAQUE\" PAKE which won the IETF PAKE competition in the client-server category. The practical effects of the latter work includes a subtle re-design of OPAQUE which (2) further reduces its cost and (3) allows for easier integration of provably-secure PAKE with the TLS, paving the way for adopting strong password-authentication methods by web browsers and servers.&nbsp; In other PAKE-related results, (4) we proposed a new round-reduced client-server PAKE, (5) we proposed several cost-minimal client-server PAKE designs, and we proposed and prototyped several PAKE extensions including applications to (6) password management and (7) two-factor authentication.</p>\n<p>4) We proposed and prototyped a highly efficient Updatable Key Management Service (KMS) with much stronger security and efficiency properties than current KMS solutions used by industry.&nbsp; KMS is used to manage encryption of files in large storage systems, and our Updatable and Oblivious KMS solution allows for updating the keys used in file encryption (i.e. effectively for re-encrypting the encrypted files) in a way which is much more bandwidth efficient and creates less security exposure compared to current KMS solutions.</p>\n<p>5) We made progress in the domain of \"covert computation\", i.e. arbitrary secure computation which in addition to being secure also has a feature of being undetectable even to active man-in-the-middle attackers.&nbsp; Specifically, covert computation is a secure computation where all messages look like random strings. Covert computation is a relatively new area within cryptography, and in our work we (a) established general connections between covert computation and adaptive security, and (b) designed a suite of practical covert protocols for the specific task of Authenticated Key Exchange (AKE) in the setting where two communicating participants are certified by a common Certification Authority (CA).</p>\n<p>&nbsp;</p>\n<p><span><br /></span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/23/2022<br>\n\t\t\t\t\tModified by: Stanislaw&nbsp;M&nbsp;Jarecki</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nOur most significant outcomes are the following:\n\n1) We designed and prototyped an oblivious database engine for Intel SGX, which allows an SGX-enabled datacenter to service database queries in a way which protects query and data privacy even to other, potentially malicious, processes executed by the same datacenter.  This was a challenging objective and our results will aid privacy-preserving computation on large data in practice.\n\n2) We designed and prototyped practical and bandwidth-optimal 3-party secure multi-party computation (MPC) of (oblivious) RAM (ORAM), with extensions to keyword-based lookup, and native support for keywords and payloads which are cryptographic group elements. Minimal-bandwidth MPC-ORAM can be used to speed up any secure computation on large data, but native support for group elements allows for more efficient integration of MPC-ORAM with distributed cryptosystems, thus extending applications of privacy-preserving distributed cryptosystems.\n\n3) We made several contributions to Password-Authenticated Key Exchange (PAKE) which bring cryptographically strong password-authentication closer to practice.  Specifically, we (1) improved the analysis and/or efficiency of several PAKE protocols which were chosen in the IETF PAKE standardization process, including our own \"OPAQUE\" PAKE which won the IETF PAKE competition in the client-server category. The practical effects of the latter work includes a subtle re-design of OPAQUE which (2) further reduces its cost and (3) allows for easier integration of provably-secure PAKE with the TLS, paving the way for adopting strong password-authentication methods by web browsers and servers.  In other PAKE-related results, (4) we proposed a new round-reduced client-server PAKE, (5) we proposed several cost-minimal client-server PAKE designs, and we proposed and prototyped several PAKE extensions including applications to (6) password management and (7) two-factor authentication.\n\n4) We proposed and prototyped a highly efficient Updatable Key Management Service (KMS) with much stronger security and efficiency properties than current KMS solutions used by industry.  KMS is used to manage encryption of files in large storage systems, and our Updatable and Oblivious KMS solution allows for updating the keys used in file encryption (i.e. effectively for re-encrypting the encrypted files) in a way which is much more bandwidth efficient and creates less security exposure compared to current KMS solutions.\n\n5) We made progress in the domain of \"covert computation\", i.e. arbitrary secure computation which in addition to being secure also has a feature of being undetectable even to active man-in-the-middle attackers.  Specifically, covert computation is a secure computation where all messages look like random strings. Covert computation is a relatively new area within cryptography, and in our work we (a) established general connections between covert computation and adaptive security, and (b) designed a suite of practical covert protocols for the specific task of Authenticated Key Exchange (AKE) in the setting where two communicating participants are certified by a common Certification Authority (CA).\n\n \n\n\n\n\n\t\t\t\t\tLast Modified: 03/23/2022\n\n\t\t\t\t\tSubmitted by: Stanislaw M Jarecki"
 }
}