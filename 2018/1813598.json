{
 "awd_id": "1813598",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: SMALL: Streamlining Fork-Based Software Development",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2021-09-30",
 "tot_intn_awd_amt": 490019.0,
 "awd_amount": 530019.0,
 "awd_min_amd_letter_date": "2018-08-31",
 "awd_max_amd_letter_date": "2021-05-19",
 "awd_abstract_narration": "Collaboration is essential for software development at scale, in both industrial and open-source projects. Inadequate models of collaboration can stifle innovation and severely hurt open-source sustainability. This research investigates how developers collaborate in distributed settings with forks. Forks are public copies of repositories (source code, books, musical composition, lectures, and so forth) in which developers can make changes, including extensions and bug fixes. Developers may, but do not have to, contribute these changes back to the original project. Specifically, this project is concerned with inefficiencies in developer activities, such as lost contributions, redundant development, and fragmented communities. Such inefficiencies are not only wasteful with regard to the scarce developer time, but also often demotivating for new developers. This research will identify which practices are efficient in which contexts and will provide guidance for developers and team leads. This way, this research will support sustainability of software projects, allowing them to draw on more contributions and motivating more developers to contribute.\r\n\r\nCombining theory building, empirical data-driven research, and tool building, the research will discover and evaluate existing interventions and develop new ones that steer collaborative development with forks toward better practices, such as better coordination among otherwise independent developers. Using empirical mixed-methods research, from exploratory studies building hypotheses to statistical evaluations on logs of development activities at scale, the research will identify and validate measures of inefficiencies and interventions developers use in practice to improve collaborative development, identifying what is effective in  which contexts. In addition, this research will design, develop, evaluate, and deploy new interventions in terms of light-weight transparency and awareness mechanisms that foster collaboration and integration and reduce redundancies, thus reducing inefficiencies within forked projects.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Christian",
   "pi_last_name": "Kastner",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Christian Kastner",
   "pi_email_addr": "kaestner@cmu.edu",
   "nsf_id": "000634835",
   "pi_start_date": "2018-08-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "CARNEGIE MELLON UNIVERISTY",
  "perf_str_addr": "5000 FORBES AVE",
  "perf_city_name": "PITTSBURGH",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133890",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 490019.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 8000.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-4b028f40-7fff-5404-f90a-230b75550887\"> </span></p>\n<p dir=\"ltr\"><span>The project explored distributed collaboration among open-source contributors as part of their work. In open source, developers often work together on a project with little explicit coordination and in many cases without ever meeting in person. Collaboration is fostered through social coding platforms such as GitHub, where developers can suggest and discuss changes or fork a repository to take the project into a different direction. This new open-source style of collaborative work is also increasingly adopted for work within software companies and in non-software communities. Understanding and improving this form of collaborative work has a large potential for improving productivity, for building strong and diverse communities, and for generally sustaining open source software on which our modern digital life depends as critical infrastructure.</span></p>\n<p>The concept of forks is essential for this novel style of collaborative work. A fork is a copy of a repository, often intended to perform some changes which might or might not be integrated back into the original repository. Forks have a long history in open source and were originally used to create copies of a repository that would then take a different direction and exist in parallel to the original repository. This style of forks, which we call ?hard forks? were often controversial and seen as an important right but also a last resort when a project could not converge around a shared vision. In contrast, these days forking has taken on a different meaning, which we call ?social forks,? where copies are created with the intention of contributing changes back to the original repository through pull requests.</p>\n<p>To better understand this new form of collaborative work, we analyzed how forking has changed from the old notion of hard forks to modern social forks with the rise of social coding platforms and modern open source practices. Hard forks still exist and can be detected automatically with common evolution patterns, but they are relatively rare compared to social forks. Perceptions toward hard forks have changed significantly. The stigma previously often associated with them is largely gone and hard forks are perceived more positively as a way of complementing a project rather than competing with it. With the rise of social forking, hard forks actually often arise not deliberately but evolve slowly from social forks.</p>\n<p>In contrast, social forks are a new collaboration tool that can be used in different ways. Our research explored what forms of collaboration are more effective than others and in which contexts. We found that indeed different projects have very different collaboration practices, with some being much more likely to contribute changes back to the original project, some more likely to limit redundant work, and others more likely to trigger hard forks. That is, the costs associated with lost contributions and duplicate and parallel work differs across projects. We found that better modularity and centralized management are associated with more contributions and a higher fraction of accepted pull requests, suggesting specific best practices that project maintainers can adopt to reduce forking-related inefficiencies in their communities.</p>\n<p dir=\"ltr\"><span>Finally, this research developed tools to understand a project with many related social and hard forks better, to understand what functionality can be found in the different forks, toward better steering a larger community while still preserving the distributed and open nature of the collaborative work. Our tools identify and summarize changes in forks, making it easier to oversee changes across many forks. Understanding the larger community can also help with onboarding new contributors, finding mentors, fostering more efficient development, and generally building a strong community.</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/18/2022<br>\n\t\t\t\t\tModified by: Christian&nbsp;Kastner</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nThe project explored distributed collaboration among open-source contributors as part of their work. In open source, developers often work together on a project with little explicit coordination and in many cases without ever meeting in person. Collaboration is fostered through social coding platforms such as GitHub, where developers can suggest and discuss changes or fork a repository to take the project into a different direction. This new open-source style of collaborative work is also increasingly adopted for work within software companies and in non-software communities. Understanding and improving this form of collaborative work has a large potential for improving productivity, for building strong and diverse communities, and for generally sustaining open source software on which our modern digital life depends as critical infrastructure.\n\nThe concept of forks is essential for this novel style of collaborative work. A fork is a copy of a repository, often intended to perform some changes which might or might not be integrated back into the original repository. Forks have a long history in open source and were originally used to create copies of a repository that would then take a different direction and exist in parallel to the original repository. This style of forks, which we call ?hard forks? were often controversial and seen as an important right but also a last resort when a project could not converge around a shared vision. In contrast, these days forking has taken on a different meaning, which we call ?social forks,? where copies are created with the intention of contributing changes back to the original repository through pull requests.\n\nTo better understand this new form of collaborative work, we analyzed how forking has changed from the old notion of hard forks to modern social forks with the rise of social coding platforms and modern open source practices. Hard forks still exist and can be detected automatically with common evolution patterns, but they are relatively rare compared to social forks. Perceptions toward hard forks have changed significantly. The stigma previously often associated with them is largely gone and hard forks are perceived more positively as a way of complementing a project rather than competing with it. With the rise of social forking, hard forks actually often arise not deliberately but evolve slowly from social forks.\n\nIn contrast, social forks are a new collaboration tool that can be used in different ways. Our research explored what forms of collaboration are more effective than others and in which contexts. We found that indeed different projects have very different collaboration practices, with some being much more likely to contribute changes back to the original project, some more likely to limit redundant work, and others more likely to trigger hard forks. That is, the costs associated with lost contributions and duplicate and parallel work differs across projects. We found that better modularity and centralized management are associated with more contributions and a higher fraction of accepted pull requests, suggesting specific best practices that project maintainers can adopt to reduce forking-related inefficiencies in their communities.\nFinally, this research developed tools to understand a project with many related social and hard forks better, to understand what functionality can be found in the different forks, toward better steering a larger community while still preserving the distributed and open nature of the collaborative work. Our tools identify and summarize changes in forks, making it easier to oversee changes across many forks. Understanding the larger community can also help with onboarding new contributors, finding mentors, fostering more efficient development, and generally building a strong community.\n\n\t\t\t\t\tLast Modified: 02/18/2022\n\n\t\t\t\t\tSubmitted by: Christian Kastner"
 }
}