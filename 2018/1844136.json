{
 "awd_id": "1844136",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EDU: Collaborative: Using Virtual Machine Introspection for Deep Cyber Security Education",
 "cfda_num": "47.076",
 "org_code": "11010001",
 "po_phone": "7032922677",
 "po_email": "liyang@nsf.gov",
 "po_sign_block_name": "Li Yang",
 "awd_eff_date": "2018-06-15",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 139802.0,
 "awd_amount": 139802.0,
 "awd_min_amd_letter_date": "2018-08-22",
 "awd_max_amd_letter_date": "2018-08-22",
 "awd_abstract_narration": "Cybersecurity is one of the most strategically important areas in computer science, and also one of the most difficult disciplines to teach effectively. Historically, hands-on cyber security exercises helped students reinforce basic concepts, but most of them focused on user level attacks and defenses. Since OS kernels provide the foundations to the applications, any compromise to OS kernels will lead to an entirely untrusted computing. Therefore, it is imperative to teach students the practice of kernel level attacks and defenses.\r\n\r\nOver the past decade, there has been great interest in using virtualization to profile, characterize, and observe kernel events including the security incidents. Inspired by the great success from virtual machine introspection (VMI), this project aims to provide an advancement by directly building practical VMI tools and libraries (or toolkit) on top of virtualization, and applying them for deep cybersecurity education. The deepness comes from the study of the lower level system internals such as OS kernels. The project will further provide a number of seed contents to teach both instructors and students on utilizing the toolkit to be used for studying not only traditional user level attacks such as buffer overflow, but also defenses inside the OS kernels. The outcome of this project (i.e., the toolkit and the cybersecurity exercises) will contribute to the health, safety, and economic well-being of our society by helping to improve the state-of-the-art in cybersecurity education, especially for effectively performing hands-on cybersecurity exercises.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DGE",
 "org_div_long_name": "Division Of Graduate Education",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Irfan",
   "pi_last_name": "Ahmed",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Irfan Ahmed",
   "pi_email_addr": "iahmed3@vcu.edu",
   "nsf_id": "000635815",
   "pi_start_date": "2018-08-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Virginia Commonwealth University",
  "inst_street_address": "910 WEST FRANKLIN ST",
  "inst_street_address_2": "",
  "inst_city_name": "RICHMOND",
  "inst_state_code": "VA",
  "inst_state_name": "Virginia",
  "inst_phone_num": "8048286772",
  "inst_zip_code": "232849005",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "VA04",
  "org_lgl_bus_name": "VIRGINIA COMMONWEALTH UNIVERSITY",
  "org_prnt_uei_num": "WXQLZ1PA6XP3",
  "org_uei_num": "MLQFL4JSSAA9"
 },
 "perf_inst": {
  "perf_inst_name": "Virginia Commonwealth University",
  "perf_str_addr": "P.O. Box 980568",
  "perf_city_name": "RICHMOND",
  "perf_st_code": "VA",
  "perf_st_name": "Virginia",
  "perf_zip_code": "232980568",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "VA04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7254",
   "pgm_ref_txt": "CYBER SECURITY ACT PROPOSALS"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9179",
   "pgm_ref_txt": "GRADUATE INVOLVEMENT"
  },
  {
   "pgm_ref_code": "SMET",
   "pgm_ref_txt": "SCIENCE, MATH, ENG & TECH EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0416",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001617DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 139802.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Unlike the previous practice of using virtualization for mere easier packaging and distribution of cyber security exercises, this project provides an advancement by directly building practical virtual machine introspection tools and libraries on top of virtualization, and applying them for deep cyber security education. The deepness comes from the study of the lower level system internals such as OS kernels.<br /><br />We developed seed contents consisting of seven hands-on exercises as part of our virtual machine introspection toolkit to study OS kernel and userspace attacks. The exercises are divided into four categories: 1)&nbsp; Application Code, 2) Kernel, 3) Process Environment Block, and 4) Return Oriented Programming. The exercises are on buffer overflow, direct kernel object manipulation (DKOM), PatchGuard, heap spray attacks, manipulation of the process environment variables, and keylogger. The exercises are available at https://gitlab.com/iahmed4/vmi-tools-for-cybersecurity-education</p>\n<p><br />We also developed Cronus to automated assessment of student learning gain using concept maps. Cronus provides useful feedback on a student concept map similar to manual assessment by comparing it with an instructor concept map. The feedback includes identifying misconceptions, finding concepts, links, and branches that are (partially) matched or missed from a student concept map, generating summary statistics based on the feedback, and suggesting a grade of the map using predefined criteria (by the instructor) on the summary stats. Cronus code is available publicly on gitlab, https://github.com/Masrik-Dahir/Cronus<br /><br />One graduate student has worked full-time on this project in close collaboration with the PI. The developed materials are publicly available and open to use by other instructors for training on kernel and user-level attacks and defenses.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 05/25/2021<br>\n\t\t\t\t\tModified by: Irfan&nbsp;Ahmed</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nUnlike the previous practice of using virtualization for mere easier packaging and distribution of cyber security exercises, this project provides an advancement by directly building practical virtual machine introspection tools and libraries on top of virtualization, and applying them for deep cyber security education. The deepness comes from the study of the lower level system internals such as OS kernels.\n\nWe developed seed contents consisting of seven hands-on exercises as part of our virtual machine introspection toolkit to study OS kernel and userspace attacks. The exercises are divided into four categories: 1)  Application Code, 2) Kernel, 3) Process Environment Block, and 4) Return Oriented Programming. The exercises are on buffer overflow, direct kernel object manipulation (DKOM), PatchGuard, heap spray attacks, manipulation of the process environment variables, and keylogger. The exercises are available at https://gitlab.com/iahmed4/vmi-tools-for-cybersecurity-education\n\n\nWe also developed Cronus to automated assessment of student learning gain using concept maps. Cronus provides useful feedback on a student concept map similar to manual assessment by comparing it with an instructor concept map. The feedback includes identifying misconceptions, finding concepts, links, and branches that are (partially) matched or missed from a student concept map, generating summary statistics based on the feedback, and suggesting a grade of the map using predefined criteria (by the instructor) on the summary stats. Cronus code is available publicly on gitlab, https://github.com/Masrik-Dahir/Cronus\n\nOne graduate student has worked full-time on this project in close collaboration with the PI. The developed materials are publicly available and open to use by other instructors for training on kernel and user-level attacks and defenses.\n\n \n\n\t\t\t\t\tLast Modified: 05/25/2021\n\n\t\t\t\t\tSubmitted by: Irfan Ahmed"
 }
}