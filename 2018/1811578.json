{
 "awd_id": "1811578",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: CORE: Small: Collaborative: Evaluating Performance and Security of Executable Steganography for Surreptitious Programs",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2018-08-01",
 "awd_exp_date": "2020-12-31",
 "tot_intn_awd_amt": 151433.0,
 "awd_amount": 151433.0,
 "awd_min_amd_letter_date": "2018-08-04",
 "awd_max_amd_letter_date": "2018-08-04",
 "awd_abstract_narration": "Intellectual property protection of software remains a priority for the commercial sector because counterfeiting and piracy erode profits and market share, ultimately causing impacts on companies, consumers and governments. Watermarking for proving digital ownership and obfuscation for hindering adversarial reverse engineering are currently used to provide some level of deterrence against this. This project will investigate novel methods of software protection, hiding executable programs within other executable code.\r\n\r\nProposed research will investigate the use of \"executable steganography\" as a possible anti-reverse engineering technique and a way to watermark software. The goal of this research is to produce viable methods for hiding executable code, expanding the state-of-the-art for this style of program protection, while also characterizing its effectiveness based on capacity, robustness, detectability, invisibility, and resilience. \r\n\r\nBoth University of Nebraska Omaha and University of South Alabama bring key opportunities for broader impacts of this research. Both have a rich tradition of meeting the needs of diverse student bodies, both are in Established Program to Stimulate Competitive Research (EPSCoR) states, with numerous students coming from rural areas. Both universities have extensive K-12 STEM outreach and Scholarship for Service students preparing for future cybersecurity careers. The research teams will directly engage students in the research as part of their academic programs via course projects, senior capstone exercises, and labs.  \r\n \r\nThe data for this project will not contain any personal or sensitive information other than the algorithms developed. Other researchers will have access to any databases and the source code via individual requests to the PIs. Research papers and published conference papers, etc. will be available via the project web page: http://loki.ist.unomaha.edu/~wmahoney/ExecutableSteganography/index.html.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jeffrey",
   "pi_last_name": "McDonald",
   "pi_mid_init": "T",
   "pi_sufx_name": "",
   "pi_full_name": "Jeffrey T McDonald",
   "pi_email_addr": "jtmcdonald@southalabama.edu",
   "nsf_id": "000605183",
   "pi_start_date": "2018-08-04",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of South Alabama",
  "inst_street_address": "307 N UNIVERSITY BLVD",
  "inst_street_address_2": "",
  "inst_city_name": "MOBILE",
  "inst_state_code": "AL",
  "inst_state_name": "Alabama",
  "inst_phone_num": "2514606333",
  "inst_zip_code": "366083053",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "AL02",
  "org_lgl_bus_name": "UNIVERSITY OF SOUTH ALABAMA",
  "org_prnt_uei_num": "",
  "org_uei_num": "QB12VPNQQFE8"
 },
 "perf_inst": {
  "perf_inst_name": "University of South Alabama",
  "perf_str_addr": "307 University Boulevard",
  "perf_city_name": "Mobile",
  "perf_st_code": "AL",
  "perf_st_name": "Alabama",
  "perf_zip_code": "366880002",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "AL01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 151433.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Researchers at the University of Nebraska at Omaha (UNO) and the University of South Alabama (USA) investigated the possibilities of executable steganography -- the hiding of executable code within a target program, such that it is difficult to detect, remove, or alter through reverse engineering. Whereas cryptography makes data secret in an overt manner, steganography attempts to keep data from being discovered. Common applications of steganography involve hiding arbitrary data, a secret message for example, in an unrelated data set such as an image.&nbsp; In our work our arbitrary data is executable code - merging an executable program that performs some function into some other program that acts as the carrier of this executable code.</p>\n<p>Executable steganography has potential uses for government agencies that deal with secret communication - for example to demonstrate that the integrity of a program has not been compromised.&nbsp; It could also be used to transmit programs that are sensitive or secret in a way which avoids their detection.&nbsp; In our example, executable steganography, we focused on digital fingerprinting, useful for intellectual property protection.</p>\n<p>Our initial research concentrated specifically on the x86-64 instruction set. One of our outcomes was to create a database of x86 instructions organized by length, from one to six bytes, which are therefore useful in our original steganography approach. A white paper was also prepared detailing how this study was made. Additionally, we presented a paper on our approach and our early results at an established reverse engineering workshop.</p>\n<p>Over time, though, the x86 approach proved to be a solution that works when constructed by hand but a method that does not scale well. The USA team completed their work on analysis algorithms for understanding the frequency distribution of opcodes which could be useful for software transformation techniques. This analysis resulted in a paper which was presented at a 2020 Cybersecurity Symposium. But it was this result which caused the UNO team to regroup and focus on techniques that would integrate executable code (the secret steganographic message) into existing code (the cover object) but at the level of intermediate representation within a compiler. The main difficulty in our initial approach was that the relative frequency of candidate instructions necessary for our steganography idea was insufficient in typical compiled programs.</p>\n<p>The result is that the UNO/USA team refocused our efforts on the intermediate representation used in the compilation process, fingerprinting at this level and then generating the program with the included steganography data in a manner which was machine independent. At this time the demonstrations of steganography at this higher level of abstraction are complete and a forthcoming conference paper describes our results. We have hidden embedded code which is then compiled in, and by moving the intermediate representation back and forth between two completely different architectures, we have tested the machine independence.</p>\n<p>The SaTC award has resulted in intellectual merit in terms of developing and characterizing algorithms for executable steganography in applied settings.&nbsp; First, watermarking and fingerprinting applications are embedded using steganography, embedding code to identify the owner of intellectual property. Proof of an executable stego watermark can be demonstrated easily by changing the entry point of a program to specific address(es) where executable stego threads are embedded. The entry points, known only to a software owner, provide a covert means to establish ownership. Secondly, we are embedding this data in an independent manner, so that code at a high level can be subjected to steganography independently of the target machine.</p>\n<p>Our grant has resulted in several broad impacts, including furthering cybersecurity research at UNO and USA, providing our faculty with opportunity to learn and grow in their field, and giving students the chance to experience and use the theoretical knowledge they gain as part of our CAE-CD and CAE-CO cybersecurity curricula.&nbsp; PI Mahoney integrated research results into his current Reverse Engineering class and will further integrate these results into the Compiler class as well. Anti-reverse engineering, a topic related directly to this award, is a significant part of the class contents and the ability to have students directly examine our executable steganography work -- albeit from the perspective of reversing -- is meaningful. This work thus directly impacts over 50 students each Spring.</p>\n<p>PI McDonald utilized grant-related research threads at USA in existing Secure Software Engineering, Compilers, and Surreptitious Software classes as part of student course projects and integrated labs. These courses provide natural outlets to expose and involve over 80 students. This award has also had a direct impact on STEM and Information Assurance awareness at the USA, resulting in direct support for 2 Master's theses, 1 UG thesis, and a doctoral thesis. Five undergraduate students were utilized during the course of the project as well, allowing recruitment of students from underrepresented diverse backgrounds.&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/01/2021<br>\n\t\t\t\t\tModified by: Jeffrey&nbsp;T&nbsp;Mcdonald</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612219711777_Slide1--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612219711777_Slide1--rgov-800width.jpg\" title=\"Project Overview\"><img src=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612219711777_Slide1--rgov-66x44.jpg\" alt=\"Project Overview\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Overview of Executable Steganography: presented at SaTC PI Meeting 2019</div>\n<div class=\"imageCredit\">J.T. McDonald</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Jeffrey&nbsp;T&nbsp;Mcdonald</div>\n<div class=\"imageTitle\">Project Overview</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612219908727_TrinityStroudPoster-SaTC-v2--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612219908727_TrinityStroudPoster-SaTC-v2--rgov-800width.jpg\" title=\"Circuit-based Approach for Program Diversification\"><img src=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612219908727_TrinityStroudPoster-SaTC-v2--rgov-66x44.jpg\" alt=\"Circuit-based Approach for Program Diversification\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Undergraduate work presented at SaTC PI Meeting - Undergraduate Forum - 2019</div>\n<div class=\"imageCredit\">J.T. McDonald</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Jeffrey&nbsp;T&nbsp;Mcdonald</div>\n<div class=\"imageTitle\">Circuit-based Approach for Program Diversification</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612220045926_BlockWeaving--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612220045926_BlockWeaving--rgov-800width.jpg\" title=\"Weaver Algorithm\"><img src=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612220045926_BlockWeaving--rgov-66x44.jpg\" alt=\"Weaver Algorithm\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Weaver algorithm for combining fingerprints into intermediate code</div>\n<div class=\"imageCredit\">J.T. McDonald</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Jeffrey&nbsp;T&nbsp;Mcdonald</div>\n<div class=\"imageTitle\">Weaver Algorithm</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612220150524_LLVMFingerprint--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612220150524_LLVMFingerprint--rgov-800width.jpg\" title=\"Intermediate Code Shuffling\"><img src=\"/por/images/Reports/POR/2021/1811578/1811578_10565952_1612220150524_LLVMFingerprint--rgov-66x44.jpg\" alt=\"Intermediate Code Shuffling\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Shuffling approach for achieving stego-fingerprinted programs at the intermediate code level</div>\n<div class=\"imageCredit\">J.T. McDonald</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Jeffrey&nbsp;T&nbsp;Mcdonald</div>\n<div class=\"imageTitle\">Intermediate Code Shuffling</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\nResearchers at the University of Nebraska at Omaha (UNO) and the University of South Alabama (USA) investigated the possibilities of executable steganography -- the hiding of executable code within a target program, such that it is difficult to detect, remove, or alter through reverse engineering. Whereas cryptography makes data secret in an overt manner, steganography attempts to keep data from being discovered. Common applications of steganography involve hiding arbitrary data, a secret message for example, in an unrelated data set such as an image.  In our work our arbitrary data is executable code - merging an executable program that performs some function into some other program that acts as the carrier of this executable code.\n\nExecutable steganography has potential uses for government agencies that deal with secret communication - for example to demonstrate that the integrity of a program has not been compromised.  It could also be used to transmit programs that are sensitive or secret in a way which avoids their detection.  In our example, executable steganography, we focused on digital fingerprinting, useful for intellectual property protection.\n\nOur initial research concentrated specifically on the x86-64 instruction set. One of our outcomes was to create a database of x86 instructions organized by length, from one to six bytes, which are therefore useful in our original steganography approach. A white paper was also prepared detailing how this study was made. Additionally, we presented a paper on our approach and our early results at an established reverse engineering workshop.\n\nOver time, though, the x86 approach proved to be a solution that works when constructed by hand but a method that does not scale well. The USA team completed their work on analysis algorithms for understanding the frequency distribution of opcodes which could be useful for software transformation techniques. This analysis resulted in a paper which was presented at a 2020 Cybersecurity Symposium. But it was this result which caused the UNO team to regroup and focus on techniques that would integrate executable code (the secret steganographic message) into existing code (the cover object) but at the level of intermediate representation within a compiler. The main difficulty in our initial approach was that the relative frequency of candidate instructions necessary for our steganography idea was insufficient in typical compiled programs.\n\nThe result is that the UNO/USA team refocused our efforts on the intermediate representation used in the compilation process, fingerprinting at this level and then generating the program with the included steganography data in a manner which was machine independent. At this time the demonstrations of steganography at this higher level of abstraction are complete and a forthcoming conference paper describes our results. We have hidden embedded code which is then compiled in, and by moving the intermediate representation back and forth between two completely different architectures, we have tested the machine independence.\n\nThe SaTC award has resulted in intellectual merit in terms of developing and characterizing algorithms for executable steganography in applied settings.  First, watermarking and fingerprinting applications are embedded using steganography, embedding code to identify the owner of intellectual property. Proof of an executable stego watermark can be demonstrated easily by changing the entry point of a program to specific address(es) where executable stego threads are embedded. The entry points, known only to a software owner, provide a covert means to establish ownership. Secondly, we are embedding this data in an independent manner, so that code at a high level can be subjected to steganography independently of the target machine.\n\nOur grant has resulted in several broad impacts, including furthering cybersecurity research at UNO and USA, providing our faculty with opportunity to learn and grow in their field, and giving students the chance to experience and use the theoretical knowledge they gain as part of our CAE-CD and CAE-CO cybersecurity curricula.  PI Mahoney integrated research results into his current Reverse Engineering class and will further integrate these results into the Compiler class as well. Anti-reverse engineering, a topic related directly to this award, is a significant part of the class contents and the ability to have students directly examine our executable steganography work -- albeit from the perspective of reversing -- is meaningful. This work thus directly impacts over 50 students each Spring.\n\nPI McDonald utilized grant-related research threads at USA in existing Secure Software Engineering, Compilers, and Surreptitious Software classes as part of student course projects and integrated labs. These courses provide natural outlets to expose and involve over 80 students. This award has also had a direct impact on STEM and Information Assurance awareness at the USA, resulting in direct support for 2 Master's theses, 1 UG thesis, and a doctoral thesis. Five undergraduate students were utilized during the course of the project as well, allowing recruitment of students from underrepresented diverse backgrounds. \n\n \n\n\t\t\t\t\tLast Modified: 02/01/2021\n\n\t\t\t\t\tSubmitted by: Jeffrey T Mcdonald"
 }
}