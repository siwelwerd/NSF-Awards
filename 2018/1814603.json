{
 "awd_id": "1814603",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CIF: Small: New Coding Techniques for Synchronization Errors",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922981",
 "po_email": "pregalia@nsf.gov",
 "po_sign_block_name": "Phillip Regalia",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2022-09-30",
 "tot_intn_awd_amt": 472229.0,
 "awd_amount": 488229.0,
 "awd_min_amd_letter_date": "2018-06-11",
 "awd_max_amd_letter_date": "2019-04-08",
 "awd_abstract_narration": "Coding theory has advanced our understanding of how to efficiently correct symbol corruptions and erasures. The error-correcting codes developed by this theory have had a tremendous practical and theoretical impact on technology and engineering as well as mathematics, theoretical computer science, and other fields. Correcting closely related synchronization errors, such as insertions and deletions, however, while also studied since the 1960s, has largely resisted progress so far. The goal of this proposal is to close this gap and develop a better understanding of and new coding techniques for synchronization errors. In addition to resolving fundamental questions on natural and basic error models, the investigators believe that the study has the potential to guide the design of systems which use efficient coding techniques to address synchronization and noise issues jointly, instead of spending significant resources on ensuring very tight controls on synchronization.\r\n\r\nThe project will build on the recent work in this area by the investigators and their students, and investigate new coding approaches for coping with insertions/deletions. For the case of large finite alphabets, the project will investigate codes based on synchronization strings. Synchronization strings isolate and directly tackle the synchronization aspect which distinguishes insertion and deletion errors from symbol corruptions and erasures, yielding an efficient way to reduce them to regular errors. Such a transformation can then leverage the tremendous progress made on regular error-correcting codes toward the design of insertion-deletion codes. The project will also investigate new approaches for the setting of binary or very small alphabets with the goal of better understanding the potential of insertion-deletion codes together with efficient constructions. Beyond simple insertions and deletions, the project will also study more general synchronization error models stemming from practical applications such as tandem repeats or block corruptions. The educational component will infuse appropriate concepts from the project into courses taught by the investigators, and take advantage of the accessible and attractive nature of the topic to engage undergraduates in research, in addition to the substantial involvement of graduate students. The project will aim to forge stronger intellectual ties between the computer science and information theory communities which are both actively engaged in study of codes in various models.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Venkatesan",
   "pi_last_name": "Guruswami",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Venkatesan Guruswami",
   "pi_email_addr": "venkatg@berkeley.edu",
   "nsf_id": "000105726",
   "pi_start_date": "2018-06-11",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Bernhard",
   "pi_last_name": "Haeupler",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Bernhard Haeupler",
   "pi_email_addr": "haeupler@cs.cmu.edu",
   "nsf_id": "000678019",
   "pi_start_date": "2018-06-11",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie Mellon University",
  "perf_str_addr": "5000 Forbes Avenue",
  "perf_city_name": "Pittsburgh",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133890",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779700",
   "pgm_ele_name": "Comm & Information Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  },
  {
   "pgm_ref_code": "7927",
   "pgm_ref_txt": "COMPLEXITY & CRYPTOGRAPHY"
  },
  {
   "pgm_ref_code": "7935",
   "pgm_ref_txt": "COMM & INFORMATION THEORY"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 472229.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p id=\"docs-internal-guid-bb2b997d-7fff-8e03-9836-1e3f6a9c3126\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: #ffffff; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Error-correcting codes introduce judicious redundancy into the data, ensuring that it can be correctly recovered from noise of various forms which affect data during storage and communication. In the 75 years since Shannon and Hamming?s seminal works that led to the birth of information and coding theory, the field has developed many excellent error-correcting codes for the problem of correcting symbol errors, where individual symbols get corrupted (eg. bits get flipped). However, the problem of correcting synchronization errors, where symbols can get inserted/deleted, has not had commensurate progress and success. Such errors are increasingly important to tackle in modern asynchronous settings. As</span><span style=\"font-size: 10pt; font-family: Arial; color: #000000; background-color: #ffffff; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> </span><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">the locations of insertions/deletions are not known at the decoder, many of the classic techniques to devise codes, such as algebraic constructions, are not well suited to cope with synchronization errors. As a result, numerous basic questions concerning the potential and limitations of coding schemes for insertion/deletion errors remained open.</span></p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">This project made substantial progress towards the ambitious goal of bringing the status and understanding of codes for synchronization errors closer to the mature landscape of codes that correct symbol substitution errors. It further developed the technique of synchronization strings as an effective way to map symbol insertions and deletions, that are hard to tackle directly, into the better understood substitution errors, with negligible loss in efficiency for codes over big enough alphabets. For codes over bits, constructions with carefully controlled oscillation patterns between 0s and 1s were leveraged to obtain better codes, and a general structural result that classifies binary strings by their oscillation patterns was employed to show fundamental limitations of deletion-correcting codes. The project resolved a number of prominent open questions in the subject such as pinning down the largest fraction of insertions and deletions which can be list-decoded with non-vanishing information rate for all fixed alphabets, and showing that one cannot correct a deletion fraction approaching 50% with binary codes of non-vanishing rate. This latter result also answers a longstanding open problem in extremal combinatorics concerning long common subsequences of bit-strings. The project also yielded binary codes with almost optimal redundancy for correcting a small proportion of insertion/deletions, as well as explicit constructions of codes to correct a small number of deletions that match the best known existential bounds.&nbsp;</span></p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">For broader impact, the research and outreach activities associated with the project enhanced the </span><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: #ffffff; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">cross-fertilization of ideas between information theorists and computer scientists on various aspects related to error-correction. Survey articles and several seminar and survey talks on the subject of coding for deletion errors served as an effective means to widely disseminate the results of the project, in addition to conference and archival journal publications. The project trained and mentored several graduate students and postdocs, provided a stimulating research environment for them, and paved&nbsp; a career path for the students in research and education. The project also formed the basis of successful undergraduate research experiences, leading to publications by undergraduates at selective venues of the field and placing them in top Ph.D. programs.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/10/2023<br>\n\t\t\t\t\tModified by: Venkatesan&nbsp;Guruswami</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "Error-correcting codes introduce judicious redundancy into the data, ensuring that it can be correctly recovered from noise of various forms which affect data during storage and communication. In the 75 years since Shannon and Hamming?s seminal works that led to the birth of information and coding theory, the field has developed many excellent error-correcting codes for the problem of correcting symbol errors, where individual symbols get corrupted (eg. bits get flipped). However, the problem of correcting synchronization errors, where symbols can get inserted/deleted, has not had commensurate progress and success. Such errors are increasingly important to tackle in modern asynchronous settings. As the locations of insertions/deletions are not known at the decoder, many of the classic techniques to devise codes, such as algebraic constructions, are not well suited to cope with synchronization errors. As a result, numerous basic questions concerning the potential and limitations of coding schemes for insertion/deletion errors remained open.\n\n\nThis project made substantial progress towards the ambitious goal of bringing the status and understanding of codes for synchronization errors closer to the mature landscape of codes that correct symbol substitution errors. It further developed the technique of synchronization strings as an effective way to map symbol insertions and deletions, that are hard to tackle directly, into the better understood substitution errors, with negligible loss in efficiency for codes over big enough alphabets. For codes over bits, constructions with carefully controlled oscillation patterns between 0s and 1s were leveraged to obtain better codes, and a general structural result that classifies binary strings by their oscillation patterns was employed to show fundamental limitations of deletion-correcting codes. The project resolved a number of prominent open questions in the subject such as pinning down the largest fraction of insertions and deletions which can be list-decoded with non-vanishing information rate for all fixed alphabets, and showing that one cannot correct a deletion fraction approaching 50% with binary codes of non-vanishing rate. This latter result also answers a longstanding open problem in extremal combinatorics concerning long common subsequences of bit-strings. The project also yielded binary codes with almost optimal redundancy for correcting a small proportion of insertion/deletions, as well as explicit constructions of codes to correct a small number of deletions that match the best known existential bounds. \n\n\nFor broader impact, the research and outreach activities associated with the project enhanced the cross-fertilization of ideas between information theorists and computer scientists on various aspects related to error-correction. Survey articles and several seminar and survey talks on the subject of coding for deletion errors served as an effective means to widely disseminate the results of the project, in addition to conference and archival journal publications. The project trained and mentored several graduate students and postdocs, provided a stimulating research environment for them, and paved  a career path for the students in research and education. The project also formed the basis of successful undergraduate research experiences, leading to publications by undergraduates at selective venues of the field and placing them in top Ph.D. programs.\n\n \n\n\t\t\t\t\tLast Modified: 03/10/2023\n\n\t\t\t\t\tSubmitted by: Venkatesan Guruswami"
 }
}