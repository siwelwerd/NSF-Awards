{
 "awd_id": "1830615",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "NRI: FND: Connected and Continuous Multi-Policy Decision Making",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032928074",
 "po_email": "jdonlon@nsf.gov",
 "po_sign_block_name": "James Donlon",
 "awd_eff_date": "2018-09-01",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 654807.0,
 "awd_amount": 654807.0,
 "awd_min_amd_letter_date": "2018-08-23",
 "awd_max_amd_letter_date": "2018-08-23",
 "awd_abstract_narration": "The goal of this project is to create methods that allow robots to move and communicate in close proximity to other robots or humans. In these settings, a robot must understand how its behavior is likely to influence and change the behavior of other robots and people nearby.  The basic idea of this project is to allow the robot to select between several different strategies, picking the one that is most likely to work well in a given situation. For example, a robot might decide to veer towards the right because it predicts that an approaching wheelchair requires more room than a typical pedestrian. This project will also investigate how robots can coordinate with each other, deciding what information should be transmitted to teammate robots. This type of research is important in order to build robots that can safely and comfortably interact with regular people in everyday environments like their homes, schools, and hospitals. \r\n\r\nThe technical approach of this project is to extend a planning algorithm known as Multi-Policy Decision Making (MPDM).  Using an on-line forward roll-out process, candidate policies are evaluated from a \"library\" of options. The core tension in MPDM type systems is that larger libraries allow more flexible behaviors, but require greater computational resources. This project achieves expressivity in a different way than previous MPDM approaches: it allows policies to have one or more continuous parameters, and then efficiently computes good values of those continuous parameters. For example, whereas earlier MPDM work might have had several policies representing different nominal speeds of travel, this work allows robot designers to explicitly parameterize velocity. This continuous-valued parameter can be tuned using backpropagation methods similar to those used in deep learning networks.  The key advantage of this approach is that a single policy can generate a wider range of behaviors, which reduces the number of policies that must be explicitly considered. In turn, this reduces the computational complexity of the planning process.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Edwin",
   "pi_last_name": "Olson",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Edwin Olson",
   "pi_email_addr": "ebolson@umich.edu",
   "nsf_id": "000520144",
   "pi_start_date": "2018-08-23",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Regents of the University of Michigan - Ann Arbor",
  "inst_street_address": "1109 GEDDES AVE STE 3300",
  "inst_street_address_2": "",
  "inst_city_name": "ANN ARBOR",
  "inst_state_code": "MI",
  "inst_state_name": "Michigan",
  "inst_phone_num": "7347636438",
  "inst_zip_code": "481091015",
  "inst_country_name": "United States",
  "cong_dist_code": "06",
  "st_cong_dist_code": "MI06",
  "org_lgl_bus_name": "REGENTS OF THE UNIVERSITY OF MICHIGAN",
  "org_prnt_uei_num": "",
  "org_uei_num": "GNJ7BBP73WE9"
 },
 "perf_inst": {
  "perf_inst_name": "University of Michigan Ann Arbor",
  "perf_str_addr": "2260 Hayward, 3737 Beyster Bldg.",
  "perf_city_name": "Ann Arbor",
  "perf_st_code": "MI",
  "perf_st_name": "Michigan",
  "perf_zip_code": "481092121",
  "perf_ctry_code": "US",
  "perf_cong_dist": "06",
  "perf_st_cong_dist": "MI06",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "801300",
   "pgm_ele_name": "NRI-National Robotics Initiati"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "063Z",
   "pgm_ref_txt": "FW-HTF Futr Wrk Hum-Tech Frntr"
  },
  {
   "pgm_ref_code": "8086",
   "pgm_ref_txt": "Natl Robotics Initiative (NRI)"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 654807.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The goal of this project was to develop planning strategies that help robots perform long-duration tasks like exploring a natural disaster area or driving an autonomous car. In these kinds of complex problems, it is common for a robot to encounter situations that the robot's designers did not anticipate. It is important that robots be able to adapt and even improvise solutions that are beyond what the robots' engineers envisioned.</p>\n<p>Instead of making the planning system for the robots ever more complicated to handle these complex situations, the key idea of this project was to give the robots a library of relatively simple strategies. While each of these strategies (for example \"follow the car in front of you\", or \"change lanes\") is quite limited, they can be combined to create quite sophisticated behaviors. For example, merging on a freeway can be described in terms of a sequence of \"following\" and \"changing lanes\".</p>\n<p>The approach we've taken is to put a simulator on board the robots that allows it to predict how well each of these simple strategies might perform in the current setting. In a more conventional system, an engineer might program the robot to recognize situation X and perform action Y-- but this is different. The robot has a set of possible actions, and it imagines the result of performing them, and carries them out.</p>\n<p>Through this research program, we applied this strategy to a number of different problems. We began with \"simple\" children's games, like tag. We implemented two very simple strategies for playing tag, each of which individually performed rather poorly. However, when the robot was able to dynamically switch between these strategies by using our simulation approach, the robot was able to play tag far better. We also explored variants of tag where there are multiple robots that are communicating and coordinating.</p>\n<p>Next, we showed a simple set of underlying strategies could be used to solve multiple robot tasks simply by changing the robot's goal. For example, the same set of simple strategies used for the game tag can be used to perform search and rescue missions in a natural disaster. Being able to reuse significant components of a robot system could dramatically decrease the cost of deploying robots to solve new problems.</p>\n<p>During this project's final year, we explored even more flexible ways of combining simple strategies, allowing it to switch between strategies more dynamically. This additional flexibility improved the robot's performance as expected, but notably, we were able to do this without significantly increasing the computational costs of the algorithms. We did this by allowing the robot to spend more computational time on the most promising strategies, and more quickly abandoning strategies when they appear to be ineffective in a particular setting.</p>\n<p>This project resulted in five peer-reviewed publications plus a PhD dissertation, while supporting the training and mentorship of two graduate researchers and four undergraduates.&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/12/2022<br>\n\t\t\t\t\tModified by: Edwin&nbsp;Olson</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe goal of this project was to develop planning strategies that help robots perform long-duration tasks like exploring a natural disaster area or driving an autonomous car. In these kinds of complex problems, it is common for a robot to encounter situations that the robot's designers did not anticipate. It is important that robots be able to adapt and even improvise solutions that are beyond what the robots' engineers envisioned.\n\nInstead of making the planning system for the robots ever more complicated to handle these complex situations, the key idea of this project was to give the robots a library of relatively simple strategies. While each of these strategies (for example \"follow the car in front of you\", or \"change lanes\") is quite limited, they can be combined to create quite sophisticated behaviors. For example, merging on a freeway can be described in terms of a sequence of \"following\" and \"changing lanes\".\n\nThe approach we've taken is to put a simulator on board the robots that allows it to predict how well each of these simple strategies might perform in the current setting. In a more conventional system, an engineer might program the robot to recognize situation X and perform action Y-- but this is different. The robot has a set of possible actions, and it imagines the result of performing them, and carries them out.\n\nThrough this research program, we applied this strategy to a number of different problems. We began with \"simple\" children's games, like tag. We implemented two very simple strategies for playing tag, each of which individually performed rather poorly. However, when the robot was able to dynamically switch between these strategies by using our simulation approach, the robot was able to play tag far better. We also explored variants of tag where there are multiple robots that are communicating and coordinating.\n\nNext, we showed a simple set of underlying strategies could be used to solve multiple robot tasks simply by changing the robot's goal. For example, the same set of simple strategies used for the game tag can be used to perform search and rescue missions in a natural disaster. Being able to reuse significant components of a robot system could dramatically decrease the cost of deploying robots to solve new problems.\n\nDuring this project's final year, we explored even more flexible ways of combining simple strategies, allowing it to switch between strategies more dynamically. This additional flexibility improved the robot's performance as expected, but notably, we were able to do this without significantly increasing the computational costs of the algorithms. We did this by allowing the robot to spend more computational time on the most promising strategies, and more quickly abandoning strategies when they appear to be ineffective in a particular setting.\n\nThis project resulted in five peer-reviewed publications plus a PhD dissertation, while supporting the training and mentorship of two graduate researchers and four undergraduates. \n\n \n\n\t\t\t\t\tLast Modified: 10/12/2022\n\n\t\t\t\t\tSubmitted by: Edwin Olson"
 }
}