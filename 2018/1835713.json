{
 "awd_id": "1835713",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: NSCI Framework: Software for Building a Community-Based Molecular Modeling Capability Around the Molecular Simulation Design Framework (MoSDeF)",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": "7032928235",
 "po_email": "bmihaila@nsf.gov",
 "po_sign_block_name": "Bogdan Mihaila",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 230637.0,
 "awd_amount": 240637.0,
 "awd_min_amd_letter_date": "2018-09-08",
 "awd_max_amd_letter_date": "2021-08-24",
 "awd_abstract_narration": "As molecular-based computer simulations of both naturally occurring and man-made (synthetic) materials become increasingly used to predict their properties, the reproducibility of these simulations becomes an increasingly important issue. These simulations are complex, require large amounts of computer time, and are usually performed manually - i.e., put together one at a time, from all the components that go into such a simulation, including the models for how molecules interact with each other (known as forcefields). In addition, there has been much interest in being able to perform such computational simulations on large sets of different but related systems in order to screen for desirable properties, leading to the discovery of new materials and their incorporation into applications twice as rapidly and at half the cost of existing, primarily experimental, methods. This ambition is the basis for the national Materials Genome Initiative (MGI), making reproducibility even more important. In this project, nine research groups from eight universities are combining their expertise to create a software environment, called the Molecular Simulation Design Framework (MoSDeF) that will enable the automation of molecular-based computer simulations of soft materials (such as fluids, polymers, and biological systems) and will enable MGI-style screening of such systems. MoSDeF is open source and the use of MoSDeF will enable reproducibility in molecular-based computer simulations, because all simulation steps, all input data, and all codes used will be publicly accessible to anyone to reproduce a published simulation. MoSDeF will contribute to reproducibility through standardization and maintaining the provenance of forcefields, one of the most common sources of irreproducibility in molecular-based simulations.\r\n\r\nReproducibility in scientific research has become a prominent issue. Computational scientists, along with the rest of the scientific community, are grappling with the central question: How can a study be performed and published in such a way that it can be replicated by others? Answering this question is essential to the scientific enterprise and increasingly urgent, as reproducibility issues faced in small-scale studies will only be compounded as researchers look to harness the ever expanding computational power to perform large-scale Materials Genome Initiative (MGI) inspired screening studies, thus growing the number of simulations by orders of magnitude. Addressing the issues of reproducibility in soft matter simulation is particularly challenging, given the complexity of the simulation inputs and workflows, and the all-to-common usage of closed-source software. In this proposal, nine leading research groups (from Vanderbilt, U Michigan, Notre Dame U, U Delaware, Boise State U, U Houston, Wayne State U, and U Minnesota), representing a broad range of expertise, and an equally broad range of science applications, simulation codes, algorithms and analysis tools, along with computer scientists from Vanderbilt's Institute for Software Integrated Systems (ISIS), are committing to invest their expertise and capabilities to transform the mindset of molecular simulationists to perform and publish their simulations in such a way as to be Transparent, Reproducible, Usable by others, and Extensible (TRUE). Most of the investigators are recent or current holders of grants from the software program (i.e., S2I2, SSI or SSE grants); thus, the project builds upon, and brings synergy to, an existing large investment in molecular simulation software by NSF. To drive the community towards performing simulation that are TRUE, new software tools to facilitate best practices will be developed. Specifically, this will be achieved by expanding the capabilities of the open-source molecular simulation design framework (MoSDeF), which was initiated at Vanderbilt with support from two NSF grants. MoSDeF is a modular, scriptable Python framework that includes modules for programmatic system construction, encoding and applying force field usage rules, and workflow management, allowing the exact procedures used to setup and perform a simulation to be capture, version-controlled, and preserved. Continued development of the existing MoSDeF modules will be performed to support a wider range of force fields, molecular models, and open-source simulation engines. The creation of a plugin architecture for community extension, and the development of new modules for force field optimization, free energy calculations, and screening, will further allow MoSDeF can achieve these goals.\r\n\r\nThis project is supported by the Office of Advanced Cyberinfrastructure in the Directorate for Computer & Information Science & Engineering and the Division of Materials Research and the Division of Chemistry in the Directorate of Mathematical and Physical Sciences.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jeffrey",
   "pi_last_name": "Potoff",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Jeffrey J Potoff",
   "pi_email_addr": "jpotoff@wayne.edu",
   "nsf_id": "000319533",
   "pi_start_date": "2018-09-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Wayne State University",
  "inst_street_address": "5700 CASS AVE STE 4900",
  "inst_street_address_2": "",
  "inst_city_name": "DETROIT",
  "inst_state_code": "MI",
  "inst_state_name": "Michigan",
  "inst_phone_num": "3135772424",
  "inst_zip_code": "482023692",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "MI13",
  "org_lgl_bus_name": "WAYNE STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "M6K6NTJ2MNE5"
 },
 "perf_inst": {
  "perf_inst_name": "Wayne State University",
  "perf_str_addr": "Room 1111 Engineering; 5050 Anth",
  "perf_city_name": "Detroit",
  "perf_st_code": "MI",
  "perf_st_name": "Michigan",
  "perf_zip_code": "482023900",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "MI13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171200",
   "pgm_ele_name": "DMR SHORT TERM SUPPORT"
  },
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "054Z",
   "pgm_ref_txt": "(MGI) Materials Genome Initiative"
  },
  {
   "pgm_ref_code": "077Z",
   "pgm_ref_txt": "CSSI-1: Cyberinfr for Sustained Scientif"
  },
  {
   "pgm_ref_code": "7237",
   "pgm_ref_txt": "NANO NON-SOLIC SCI & ENG AWD"
  },
  {
   "pgm_ref_code": "7569",
   "pgm_ref_txt": "CYBERINFRASTRUCTURE/SCIENCE"
  },
  {
   "pgm_ref_code": "7925",
   "pgm_ref_txt": "LARGE PROJECT"
  },
  {
   "pgm_ref_code": "8004",
   "pgm_ref_txt": "Software Institutes"
  },
  {
   "pgm_ref_code": "9216",
   "pgm_ref_txt": "ADVANCED SOFTWARE TECH & ALGOR"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 230637.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 10000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This work was focused on the development of new software, MoSDeF-GOMC, which is a Python interface for the Monte Carlo software GOMC to the Molecular Simulation Design Framework (MoSDeF) ecosystem. &nbsp;The intent of the effort was to significantly lower barriers to entry for new users of GOMC, while providing support for the automation of a large number of calculations and improving the reproducibility of simulations.&nbsp;&nbsp; These goals were all attained during the project.</p>\n<p>MoSDeF-GOMC automates the process of generating initial coordinates, assignment of force field parameters, and writing coordinate (PDB), connectivity (PSF), force field parameter, and simulation control files.&nbsp; All required simulation parameters are encoded within the workflow, ensuring the results can be reproduced by anyone simply by rerunning the same workflow. &nbsp;User developed workflows can be distributed publically via GitHub or equivalent systems.&nbsp; When used with a workflow manager, such as signac, MoSDeF-GOMC allows users to create complex HPC workflows that include simulation setup, simulation execution, and subsequent data analysis for thousands of calculations.&nbsp;&nbsp; The software provides an abstraction layer between users and the native simulation input files, significantly lowering barriers to the use of computer simulation by novices.&nbsp;</p>\n<p>py-MCMD was created, which is an open-source Python software that enables users to combine a Monte Carlo simulation engine (GOMC) with a molecular dynamics software (NAMD) to perform hybrid Monte Carlo Molecular dynamics simulations.&nbsp; Our implementation allows users to perform MC/MD simulations in a wide range of ensembles, including with the Gibbs ensemble Monte Carlo method.&nbsp; The approach used in this work had a computational efficiency that varied between 2 and 100 times that of standard Monte Carlo, or molecular dynamics simulations.</p>\n<p>Another software was created: MoSDeF-dihedral-fit, which is an open-source, transparent, and lightweight Python package capable of fitting dihedrals potentials for molecular mechanics force fields.&nbsp; The software is able to optimize dihedral parameters with respect to <em>ab initio</em> data for any Lennard-Jones + fixed point charge force field, and convert them to a variety of functional forms (e.g. periodic, Ryckaert-Bellemans ) in appropriate units for GOMC, or other simulation engines that use CHARMM-style parameter files.&nbsp;</p>\n<p>This project produced three peer reviewed publications and six conference presentations.&nbsp; This project contributed to the training and professional development of one graduate student, one post-doctoral researcher and three undergraduate researchers. The software developed in this work was used in a graduate thermodynamics course, and hands-on workshops.&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 02/01/2024<br>\nModified by: Jeffrey&nbsp;J&nbsp;Potoff</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThis work was focused on the development of new software, MoSDeF-GOMC, which is a Python interface for the Monte Carlo software GOMC to the Molecular Simulation Design Framework (MoSDeF) ecosystem. The intent of the effort was to significantly lower barriers to entry for new users of GOMC, while providing support for the automation of a large number of calculations and improving the reproducibility of simulations. These goals were all attained during the project.\n\n\nMoSDeF-GOMC automates the process of generating initial coordinates, assignment of force field parameters, and writing coordinate (PDB), connectivity (PSF), force field parameter, and simulation control files. All required simulation parameters are encoded within the workflow, ensuring the results can be reproduced by anyone simply by rerunning the same workflow. User developed workflows can be distributed publically via GitHub or equivalent systems. When used with a workflow manager, such as signac, MoSDeF-GOMC allows users to create complex HPC workflows that include simulation setup, simulation execution, and subsequent data analysis for thousands of calculations. The software provides an abstraction layer between users and the native simulation input files, significantly lowering barriers to the use of computer simulation by novices.\n\n\npy-MCMD was created, which is an open-source Python software that enables users to combine a Monte Carlo simulation engine (GOMC) with a molecular dynamics software (NAMD) to perform hybrid Monte Carlo Molecular dynamics simulations. Our implementation allows users to perform MC/MD simulations in a wide range of ensembles, including with the Gibbs ensemble Monte Carlo method. The approach used in this work had a computational efficiency that varied between 2 and 100 times that of standard Monte Carlo, or molecular dynamics simulations.\n\n\nAnother software was created: MoSDeF-dihedral-fit, which is an open-source, transparent, and lightweight Python package capable of fitting dihedrals potentials for molecular mechanics force fields. The software is able to optimize dihedral parameters with respect to ab initio data for any Lennard-Jones + fixed point charge force field, and convert them to a variety of functional forms (e.g. periodic, Ryckaert-Bellemans ) in appropriate units for GOMC, or other simulation engines that use CHARMM-style parameter files.\n\n\nThis project produced three peer reviewed publications and six conference presentations. This project contributed to the training and professional development of one graduate student, one post-doctoral researcher and three undergraduate researchers. The software developed in this work was used in a graduate thermodynamics course, and hands-on workshops.\n\n\n\t\t\t\t\tLast Modified: 02/01/2024\n\n\t\t\t\t\tSubmitted by: JeffreyJPotoff\n"
 }
}