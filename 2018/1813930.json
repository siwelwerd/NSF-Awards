{
 "awd_id": "1813930",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Small: Research in Complexity Theory",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2018-06-01",
 "awd_exp_date": "2021-12-31",
 "tot_intn_awd_amt": 499896.0,
 "awd_amount": 507896.0,
 "awd_min_amd_letter_date": "2018-05-21",
 "awd_max_amd_letter_date": "2019-06-14",
 "awd_abstract_narration": "Computational inefficiency is a common experience: the computer cannot complete a certain task due to lack of resources such as time, memory, or bandwidth. The theory of computational complexity classifies -- or aims to classify -- computational tasks according to their inherent inefficiency. Inefficiency can also be harnessed to our advantage. Indeed, modern cryptography and electronic commerce rely on the (presumed) inefficiency of certain computational tasks. From the study of computational complexity there have arisen questions that stand as grand challenges of contemporary science. The objective of this project is to enrich the theory of computational complexity with new directions and techniques, and to use these techniques to make progress on long-standing open problems. Specific areas of investigation include the complexity of sampling tasks and of distributed tasks, and randomness. The investigator has a track record of fruitful exchanges with the mathematics community and will foster further cross-fertilization between mathematics and computer science. The project will develop publicly-available educational material, including lecture notes, surveys, slides, and videos, both at the advanced and at the introductory level. \r\n \r\nIn more detail, the project will seek to prove computational lower bounds for sampling tasks. These lower bounds provide an under-explored angle for attacking problems on extractors and data structures. Preliminary results by the investigator have already found application in a breakthrough known as two-source extractors. The project will also bring a new set of techniques in group theory to bear on communication complexity and cryptography. This project will strengthen these techniques and develop more applications. Finally, the project will explore extensions of small bias generators, which have the potential to answer central open questions in pseudo-randomness and beyond.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Emanuele",
   "pi_last_name": "Viola",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Emanuele Viola",
   "pi_email_addr": "viola@ccs.neu.edu",
   "nsf_id": "000508907",
   "pi_start_date": "2018-05-21",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Northeastern University",
  "inst_street_address": "360 HUNTINGTON AVE",
  "inst_street_address_2": "",
  "inst_city_name": "BOSTON",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6173735600",
  "inst_zip_code": "021155005",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "NORTHEASTERN UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "HLTMVS2JZBS6"
 },
 "perf_inst": {
  "perf_inst_name": "Northeastern University",
  "perf_str_addr": "360 Huntington Avenue",
  "perf_city_name": "Boston",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021155005",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7927",
   "pgm_ref_txt": "COMPLEXITY & CRYPTOGRAPHY"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 499896.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 8000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Computational INefficiency is a common experience: the computer  cannot complete a certain task due to lack of resources such as time,  memory, or bandwidth. Computational complexity theory classifies -- or  aims to classify -- computational tasks according to their inherent  inefficiency. Since tasks requiring excessive resources must be avoided,  complexity theory is often indispensable in the design of a computer  system. Inefficiency can also be harnessed to our advantage. Indeed,  most modern cryptography and electronic commerce rely on the (presumed)  inefficiency of certain computational tasks.<br /><br />The objective of the  proposed research was to make progress on several, mutually enriching  directions in computational complexity theory.<br /><br />Some of the main outcomes of this project are as follows.</p>\n<p>Pseudorandom generators are algorithms that allow us to stretch a short seed into a much longer output that \"looks random.\"&nbsp; We have obtained a new generator for randomized Turing machines -- a basic model of computation -- improving on classical results from the 90's.&nbsp; On the other hand, in a series of works we have shown limitations of several recent approaches for constructing generators.</p>\n<p>Data structures are algorithms that allow us to store data in memory so that natural queries about the data can be answered efficiently.&nbsp; We have constructed a new data structure for storing a path in a graph (think an itinerary in Google maps) so that the locations at various points in the path can be retrieved efficiently.&nbsp; On the other hand, in a series of works we have shown new connections between data structures and constructing functions that are hard to compute, or to sample.</p>\n<p>We have also made progress on several other challenges in complexity theory related to constructing functions that are hard to compute.&nbsp; In particular, we have constructed new functions that are hard to approximate by polynomials, the first progress on this problem since the 80's.</p>\n<p>The results from the project are  disseminated broadly. They appear in the top venues for research in  theoretical computer science. In addition to researchers in theoretical  computer science, the results have also influenced researchers in  mathematics. The PI also maintains a blog which regularly features  expositions and discussions of technical results.<br /><br />The team working on the project included several Ph.D. students as well as one undergraduate student.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/20/2022<br>\n\t\t\t\t\tModified by: Emanuele&nbsp;Viola</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nComputational INefficiency is a common experience: the computer  cannot complete a certain task due to lack of resources such as time,  memory, or bandwidth. Computational complexity theory classifies -- or  aims to classify -- computational tasks according to their inherent  inefficiency. Since tasks requiring excessive resources must be avoided,  complexity theory is often indispensable in the design of a computer  system. Inefficiency can also be harnessed to our advantage. Indeed,  most modern cryptography and electronic commerce rely on the (presumed)  inefficiency of certain computational tasks.\n\nThe objective of the  proposed research was to make progress on several, mutually enriching  directions in computational complexity theory.\n\nSome of the main outcomes of this project are as follows.\n\nPseudorandom generators are algorithms that allow us to stretch a short seed into a much longer output that \"looks random.\"  We have obtained a new generator for randomized Turing machines -- a basic model of computation -- improving on classical results from the 90's.  On the other hand, in a series of works we have shown limitations of several recent approaches for constructing generators.\n\nData structures are algorithms that allow us to store data in memory so that natural queries about the data can be answered efficiently.  We have constructed a new data structure for storing a path in a graph (think an itinerary in Google maps) so that the locations at various points in the path can be retrieved efficiently.  On the other hand, in a series of works we have shown new connections between data structures and constructing functions that are hard to compute, or to sample.\n\nWe have also made progress on several other challenges in complexity theory related to constructing functions that are hard to compute.  In particular, we have constructed new functions that are hard to approximate by polynomials, the first progress on this problem since the 80's.\n\nThe results from the project are  disseminated broadly. They appear in the top venues for research in  theoretical computer science. In addition to researchers in theoretical  computer science, the results have also influenced researchers in  mathematics. The PI also maintains a blog which regularly features  expositions and discussions of technical results.\n\nThe team working on the project included several Ph.D. students as well as one undergraduate student.\n\n\t\t\t\t\tLast Modified: 01/20/2022\n\n\t\t\t\t\tSubmitted by: Emanuele Viola"
 }
}