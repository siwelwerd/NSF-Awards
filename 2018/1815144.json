{
 "awd_id": "1815144",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: CORE: Small: Collaborative: Enabling Precise and Automated Insecurity Analysis of Middleware on Mobile Platforms",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2021-09-30",
 "tot_intn_awd_amt": 159000.0,
 "awd_amount": 159000.0,
 "awd_min_amd_letter_date": "2018-09-04",
 "awd_max_amd_letter_date": "2018-09-04",
 "awd_abstract_narration": "During the past decade, middleware on mobile platforms (such as the Application Framework in Android and the Core Services layer in iOS) has been flourishing, but the insecurity analysis of such middleware has been lagging behind. For example, while comprehensive studies have been conducted at the application layer of the Android system, there is very limited work analyzing the Android Application Framework (Android Framework, for short), a middleware layer in the Android system. The two billion Android mobile devices and the many Android Things devices all rely on the system services provided by Android Framework. Recently, many vulnerabilities of Android Framework are exposed, showing that Android Framework is vulnerable and exploitable. Given the critical role of Android Framework, a vulnerability in the framework can be exploited to launch large-scale cyber attacks and cause serious harms to user security and privacy. However, the insecurity analysis of Android Framework has been rather ad hoc, imprecise, and requires much manual effort, mainly because there is a severe lack of techniques and tools developed for insecurity analysis of such middleware on mobile platforms (MoMP). This research project seeks to fill the gap by developing new techniques and tools for insecurity analysis of MoMP like Android Framework and consequently lead to more secure and trustworthy computing environments for the huge number of smartphone and Internet-of-Things (IoT) device users. Educational resources developed in this project, including course modules on mobile computing security and vulnerability discovery, will be disseminated through a dedicated web site. Collaborations with the industry will be sought to transfer the technology to interested software companies and government entities that perform insecurity analysis of MoMP.\r\n\r\nThe project will develop new architectural designs, algorithms and techniques for precise and automated insecurity analysis of MoMP. To make the research concrete, demonstrations will be created for the Android Framework for mobile smartphones, tablets and IoT devices, and the first platform for precise and automated insecurity analysis of Android Framework will be built, combining current software analysis techniques, such as symbolic execution, hybrid dynamic/static analysis, and cross-process and cross-layer software analysis, to make them capable of analyzing complex and large-sized MoMP like Android Framework. The platform will be evaluated and applied to discovering various types of zero-day vulnerabilities and generating proof-of-concept exploits.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Lannan",
   "pi_last_name": "Luo",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Lannan Luo",
   "pi_email_addr": "lluo4@gmu.edu",
   "nsf_id": "000763998",
   "pi_start_date": "2018-09-04",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of South Carolina at Columbia",
  "inst_street_address": "1600 HAMPTON ST",
  "inst_street_address_2": "",
  "inst_city_name": "COLUMBIA",
  "inst_state_code": "SC",
  "inst_state_name": "South Carolina",
  "inst_phone_num": "8037777093",
  "inst_zip_code": "292083403",
  "inst_country_name": "United States",
  "cong_dist_code": "06",
  "st_cong_dist_code": "SC06",
  "org_lgl_bus_name": "UNIVERSITY OF SOUTH CAROLINA",
  "org_prnt_uei_num": "Q93ZDA59ZAR5",
  "org_uei_num": "J22LNTMEDP73"
 },
 "perf_inst": {
  "perf_inst_name": "University of South Carolina at Columbia",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "SC",
  "perf_st_name": "South Carolina",
  "perf_zip_code": "292080001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "06",
  "perf_st_cong_dist": "SC06",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 159000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The project proposes architectural designs, algorithms, and techniques for precise and automated insecurity analysis of middleware on mobile platforms (MoMP). It builds the first platform for the insecurity analysis of Android Framework for vulnerability discovery and PoC exploit generation. The core of the platform is a new symbolic execution engine, which performs path exploration emulating how a malicious app may exploit Android Framework. This project makes a critical effort towards discovering security defects in Android Framework, and will consequently lead to substantial security improvement of mobile devices.&nbsp;</p>\n<p>In this project, the PIs studied the problem of insecurity analysis of Android Framework in a systematic way. Specifically, we have achieved the following major outcomes.</p>\n<p>(1) A new architecture for scalable and precise insecurity analysis of Android Framework has been designed. As Android Framework has a complex initialization phase, symbolic execution that starts from the main function of Android Framework would cause a severe state explosion problem. On the other side, the initialization phase cannot be simply skipped, as its context information is important for subsequence executions. We thus propose a creative combination of concrete execution and symbolic execution, which allows the analysis to start from any of the framework APIs, rather than tackling the millions of lines of code as a whole. To support such a combination, we have deigned a novel architecture, where the symbolic execution engine is built outside an Android system and makes use of the execution context migrated from the Android system.</p>\n<p>(2) New techniques and tools that enable the insecurity analysis have been developed. There are two main parts. a) To support the \"out-of-box\" symbolic execution, we have designed the execution context query server between the Android system and the symbolic execution engine, which migrates the context information from the former to the latter. b) A unique characteristic of Android Framework is that its system services contain not only variables representing the statuses of the services and the underlying system, but also variables for the client apps. From the perspective of finding vulnerabilities exploitable by a malicious app, variables that are derived from the malicious app are under control of attackers and should be specified as symbolic inputs. Among the large number of statuses in Android Framework, we have designed sliming tainting to precisely identify variables derived from the malicious app and selectively explore paths that can be affected by these variables.</p>\n<p>(3) Evaluation of the insecurity analysis platform of Android Framework. The proposed platform has been evaluated and applied to discovering various types of zero-day vulnerabilities and generating proof-of-concept exploits. We have also evaluated the symbolic execution engine in terms of the code coverage, analysis speed, and ratio of spurious paths. The results show that this platform is effective and efficient.</p>\n<p>The project has resulted in significant publications in top tier venues including CCS, S&amp;P, USENIX Security, NDSS, MobiCom, RADI, ACSAC, TMC, and TDSC. We have published more than 20 research papers on this project. We have also open source released the platform to facilitate further research and dissemination. The source code is available at: https://github.com/Android-Framework-Symbolic-Executor/Centaur.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/29/2022<br>\n\t\t\t\t\tModified by: Lannan&nbsp;Luo</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2022/1815144/1815144_10579594_1643469100479_platform--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1815144/1815144_10579594_1643469100479_platform--rgov-800width.jpg\" title=\"The insecurity analysis platform\"><img src=\"/por/images/Reports/POR/2022/1815144/1815144_10579594_1643469100479_platform--rgov-66x44.jpg\" alt=\"The insecurity analysis platform\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The proposed platform for insecurity analysis of Android Framework</div>\n<div class=\"imageCredit\">Lannan Lisa Luo</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Lannan&nbsp;Luo</div>\n<div class=\"imageTitle\">The insecurity analysis platform</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2022/1815144/1815144_10579594_1643469141794_se-architecture--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1815144/1815144_10579594_1643469141794_se-architecture--rgov-800width.jpg\" title=\"The symbolic execution architecture\"><img src=\"/por/images/Reports/POR/2022/1815144/1815144_10579594_1643469141794_se-architecture--rgov-66x44.jpg\" alt=\"The symbolic execution architecture\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The symbolic execution architecture</div>\n<div class=\"imageCredit\">Lannan Lisa Luo</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Lannan&nbsp;Luo</div>\n<div class=\"imageTitle\">The symbolic execution architecture</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\nThe project proposes architectural designs, algorithms, and techniques for precise and automated insecurity analysis of middleware on mobile platforms (MoMP). It builds the first platform for the insecurity analysis of Android Framework for vulnerability discovery and PoC exploit generation. The core of the platform is a new symbolic execution engine, which performs path exploration emulating how a malicious app may exploit Android Framework. This project makes a critical effort towards discovering security defects in Android Framework, and will consequently lead to substantial security improvement of mobile devices. \n\nIn this project, the PIs studied the problem of insecurity analysis of Android Framework in a systematic way. Specifically, we have achieved the following major outcomes.\n\n(1) A new architecture for scalable and precise insecurity analysis of Android Framework has been designed. As Android Framework has a complex initialization phase, symbolic execution that starts from the main function of Android Framework would cause a severe state explosion problem. On the other side, the initialization phase cannot be simply skipped, as its context information is important for subsequence executions. We thus propose a creative combination of concrete execution and symbolic execution, which allows the analysis to start from any of the framework APIs, rather than tackling the millions of lines of code as a whole. To support such a combination, we have deigned a novel architecture, where the symbolic execution engine is built outside an Android system and makes use of the execution context migrated from the Android system.\n\n(2) New techniques and tools that enable the insecurity analysis have been developed. There are two main parts. a) To support the \"out-of-box\" symbolic execution, we have designed the execution context query server between the Android system and the symbolic execution engine, which migrates the context information from the former to the latter. b) A unique characteristic of Android Framework is that its system services contain not only variables representing the statuses of the services and the underlying system, but also variables for the client apps. From the perspective of finding vulnerabilities exploitable by a malicious app, variables that are derived from the malicious app are under control of attackers and should be specified as symbolic inputs. Among the large number of statuses in Android Framework, we have designed sliming tainting to precisely identify variables derived from the malicious app and selectively explore paths that can be affected by these variables.\n\n(3) Evaluation of the insecurity analysis platform of Android Framework. The proposed platform has been evaluated and applied to discovering various types of zero-day vulnerabilities and generating proof-of-concept exploits. We have also evaluated the symbolic execution engine in terms of the code coverage, analysis speed, and ratio of spurious paths. The results show that this platform is effective and efficient.\n\nThe project has resulted in significant publications in top tier venues including CCS, S&amp;P, USENIX Security, NDSS, MobiCom, RADI, ACSAC, TMC, and TDSC. We have published more than 20 research papers on this project. We have also open source released the platform to facilitate further research and dissemination. The source code is available at: https://github.com/Android-Framework-Symbolic-Executor/Centaur.\n\n \n\n\t\t\t\t\tLast Modified: 01/29/2022\n\n\t\t\t\t\tSubmitted by: Lannan Luo"
 }
}