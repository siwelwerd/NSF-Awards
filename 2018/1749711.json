{
 "awd_id": "1749711",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: System Techniques to Improve Fuzzing Performance",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2018-03-15",
 "awd_exp_date": "2024-02-29",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 500000.0,
 "awd_min_amd_letter_date": "2018-03-09",
 "awd_max_amd_letter_date": "2022-02-17",
 "awd_abstract_narration": "Fuzzing is an automatic software-testing technique that repeatedly injects a randomly mutated input to a target program. Proven to be effective in finding bugs in complex, real-world programs, fuzzing has become a core technique for finding security vulnerabilities. There are now examples of major companies building large-scale, distributed fuzzing infrastructure, which runs on hundreds of virtual machines that relentlessly process over millions of test cases per day. The performance of fuzzers is critical, as a faster, smarter fuzzer will find more security bugs in the target program more quickly.\r\n\r\nThis project takes a novel approach to fuzzing performance by shortening the execution time of each fuzzing iteration by trying to achieve more test coverage in a fixed time interval, whereas other approaches focus on convergence to input sets that are more likely to trigger a vulnerability. In the process, the project will overcome hidden scalability and performance bottlenecks caused at the system software layers, such as operating system and hypervisor. Such technical advances can bring significant saving of the operation cost of fuzzing infrastructure and help developers to identify more security bugs in open source and commercial software in a cost-effective manner.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Taesoo",
   "pi_last_name": "Kim",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Taesoo Kim",
   "pi_email_addr": "taesoo@gatech.edu",
   "nsf_id": "000678400",
   "pi_start_date": "2018-03-09",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Georgia Tech Research Corporation",
  "inst_street_address": "926 DALNEY ST NW",
  "inst_street_address_2": "",
  "inst_city_name": "ATLANTA",
  "inst_state_code": "GA",
  "inst_state_name": "Georgia",
  "inst_phone_num": "4048944819",
  "inst_zip_code": "303186395",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "GA05",
  "org_lgl_bus_name": "GEORGIA TECH RESEARCH CORP",
  "org_prnt_uei_num": "EMW9FC8J3HN4",
  "org_uei_num": "EMW9FC8J3HN4"
 },
 "perf_inst": {
  "perf_inst_name": "Georgia Institute of Technology",
  "perf_str_addr": "225 North Avenue",
  "perf_city_name": "Atlanta",
  "perf_st_code": "GA",
  "perf_st_name": "Georgia",
  "perf_zip_code": "303320002",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "GA05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 93615.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 96693.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 99885.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 103191.0
  },
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 106616.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The primary goal of this NSF-funded project was to enhance the performance of fuzzing techniques, aiming to reduce the time required to uncover security vulnerabilities and software bugs. The project specifically addressed system-side bottlenecks, such as in-kernel locks, by leveraging systems approaches like heterogeneous architectures, and creating new system abstractions to accelerate the fuzzing processes like new OS abstraction or a unified fuzzing layer to ensemble multiple fuzzers. This performance boost is intended to lower the cost and foster the widespread adoption of fuzzing techniques across various industries.</p>\n<p><br /><strong>Accomplishments and Major Activities:</strong></p>\n<p>Over the course of the project, significant progress was made, contributing to 25 publications in top-tier security and systems conferences and resulting in 20 open-source projects. These efforts led to the discovery and reporting of over 80 high-impact vulnerabilities. Notable advancements include the development of \"autofz,\" an automated fuzzer composition tool that optimizes fuzzer configurations using genetic algorithms. This tool significantly improves the efficiency and effectiveness of fuzzing by dynamically adjusting parameters to maximize coverage and bug detection rates.</p>\n<p><br /><strong>Impact and Dissemination:</strong></p>\n<p>The project's outcomes have had a profound impact on the field of software security, particularly in the development and adoption of fuzzing methods. The research has been widely disseminated through publications, open-source projects, and educational resources. Tools like RoboFuzz and autofz have been made publicly available, contributing to the broader research community's efforts in security testing and vulnerability discovery. Additionally, the project has provided extensive training opportunities through the OMS Cyber Masters and MS Information Security programs, equipping students with hands-on experience in fuzzing techniques.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 08/11/2024<br>\nModified by: Taesoo&nbsp;Kim</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe primary goal of this NSF-funded project was to enhance the performance of fuzzing techniques, aiming to reduce the time required to uncover security vulnerabilities and software bugs. The project specifically addressed system-side bottlenecks, such as in-kernel locks, by leveraging systems approaches like heterogeneous architectures, and creating new system abstractions to accelerate the fuzzing processes like new OS abstraction or a unified fuzzing layer to ensemble multiple fuzzers. This performance boost is intended to lower the cost and foster the widespread adoption of fuzzing techniques across various industries.\n\n\n\nAccomplishments and Major Activities:\n\n\nOver the course of the project, significant progress was made, contributing to 25 publications in top-tier security and systems conferences and resulting in 20 open-source projects. These efforts led to the discovery and reporting of over 80 high-impact vulnerabilities. Notable advancements include the development of \"autofz,\" an automated fuzzer composition tool that optimizes fuzzer configurations using genetic algorithms. This tool significantly improves the efficiency and effectiveness of fuzzing by dynamically adjusting parameters to maximize coverage and bug detection rates.\n\n\n\nImpact and Dissemination:\n\n\nThe project's outcomes have had a profound impact on the field of software security, particularly in the development and adoption of fuzzing methods. The research has been widely disseminated through publications, open-source projects, and educational resources. Tools like RoboFuzz and autofz have been made publicly available, contributing to the broader research community's efforts in security testing and vulnerability discovery. Additionally, the project has provided extensive training opportunities through the OMS Cyber Masters and MS Information Security programs, equipping students with hands-on experience in fuzzing techniques.\n\n\n\n\n\n\t\t\t\t\tLast Modified: 08/11/2024\n\n\t\t\t\t\tSubmitted by: TaesooKim\n"
 }
}