{
 "awd_id": "1763512",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "NeTS: Medium: Collaborative Research: Automatic Network Repair",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Ann Von Lehmen",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2022-09-30",
 "tot_intn_awd_amt": 169909.0,
 "awd_amount": 169909.0,
 "awd_min_amd_letter_date": "2018-08-13",
 "awd_max_amd_letter_date": "2021-07-28",
 "awd_abstract_narration": "Part 1: Modern computer networks must satisfy increasingly complex security, availability, and performance objectives to meet the diverse needs of users and applications. Consequently, programming a network to satisfy these requirements has become extremely challenging, even for highly skilled network operators. While previous work has helped operators generate policy-compliant network configurations, networks can still experience unexpected behaviors such as link failures or traffic surges, which can lead to policy violations that require a repair of the network. Today, repairs are often done manually and are error-prone. This project will develop a ground-up framework for automatically and efficiently repairing networks that do not satisfy given requirements.  Building on previous work, this research lays the foundation for \"zero touch networking\", where a network's behavior is automatically managed based on high-level objectives provided by human operators. The results of this research will enable individuals without extensive training to repair network data and control planes, thus paving the way for increased stability and security in the networks on which businesses, governments, and individuals so heavily depend.\r\n\r\nPart 2: This project proposes to develop a formal framework for automatically creating optimal network repairs and for providing formal guarantees on the quality of the generated repairs. Concretely, the project will pursue research on three fronts: 1) Design formal abstractions for distributed control planes that compute high-quality repairs for a wide range of policies. 2) Design formal abstractions for centralized control planes that compute high-quality repairs for a wide range of policies. 3) Design and implement algorithms for repairing control planes in the presence of probabilistic events (e.g., to conform to traffic engineering policies).\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Aaron",
   "pi_last_name": "Gember-Jacobson",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Aaron Gember-Jacobson",
   "pi_email_addr": "agemberjacobson@colgate.edu",
   "nsf_id": "000717883",
   "pi_start_date": "2018-08-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Colgate University",
  "inst_street_address": "13 OAK DR",
  "inst_street_address_2": "",
  "inst_city_name": "HAMILTON",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "3152287457",
  "inst_zip_code": "133461386",
  "inst_country_name": "United States",
  "cong_dist_code": "22",
  "st_cong_dist_code": "NY22",
  "org_lgl_bus_name": "COLGATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "D4P7H8NWZER7"
 },
 "perf_inst": {
  "perf_inst_name": "Colgate University",
  "perf_str_addr": "13 Oak Drive",
  "perf_city_name": "Hamilton",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "133461398",
  "perf_ctry_code": "US",
  "perf_cong_dist": "22",
  "perf_st_cong_dist": "NY22",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736300",
   "pgm_ele_name": "Networking Technology and Syst"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 40681.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 43157.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 42699.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 43372.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-bf54c824-7fff-eca3-8431-f923e6bb238a\"> </span></p>\n<p dir=\"ltr\"><span>Service outages and security breaches in data center, campus, and wide area networks are the bane of network engineers and users. These issues often stem from latent configuration or programming errors in network routers. Numerous network configuration verification and synthesis tools have been developed to help mitigate these issues, but several challenges were hitherto unaddressed, including: (1) efficient verification and synthesis of desirable configuration changes, (2) efficient modeling of cross-layer interactions, and (3) verification of router software components which implement behaviors specified in configurations.</span></p>\n<p dir=\"ltr\"><span>This project addressed these challenges through the design and implementation of several new systems. To address the first challenge, we built on recent advances in dataflow programming and incremental data plane verification to incrementally compute control and data plane state and efficiently quantify differences in end-to-end behaviors resulting from changes in configurations, external routes, or available links/routers. Going a step further, we developed a constraint-based model which encodes the semantics of potential configurations (to ensure compliance with forwarding policies), the syntax of potential configurations (to satisfy network operators&rsquo; objectives for configuration structure/features), and the difference between current and potential configurations (to satisfy operators&rsquo; objectives for update size/scope) thereby enabling automatic generation of desirable configuration updates.</span></p>\n<p dir=\"ltr\"><span>To address the second challenge, we designed new modeling algorithms for constructing multilayer graphs which encode the semantics of multiple interacting protocols operating at network layers 2 and 3 and fast, custom verification algorithms optimized for three major categories of forwarding policies&ndash;policies which depend on the actual path that manifests in the network under a given failure, policies which focus on certain quantitative properties of paths that may manifest, and policies that merely care about whether a path exists. Additionally, we proposed techniques to extract syntactic patterns from the various interacting components of configurations (e.g., interfaces, packet filters, VLANs) and identify deviations which are indicative of possible configuration errors.</span></p>\n<p dir=\"ltr\"><span>Finally, we addressed the third challenge by developing a black-box technique which uses the control packets sent/received by routers to detect interoperability issues between routing protocol implementations. Additionally, we designed a system which exploits combinatorial testing to efficiently detect errors in routers&rsquo; handling of configuration changes through the routers&rsquo; command line interface (CLI).</span></p>\n<p dir=\"ltr\"><span>This project&rsquo;s broader impacts include: (1) training the next generation of innovators by involving over ten undergraduate students in this research, including students from underrepresented groups, over the lifetime of the award; (2) fostering improvements in diversity, equity, and inclusion (DEI) through the PI&rsquo;s formation and leadership of a Task Force on DEI in CS focused on improving the learning environment for CS students at Colgate, and the PI&rsquo;s contributions to DEI in STEM efforts at Colgate; and (3) making many of the systems developed as part of this project open source to allow network engineers to benefit from this research and other researchers to expand on these innovations.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/27/2023<br>\n\t\t\t\t\tModified by: Aaron&nbsp;Gember-Jacobson</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nService outages and security breaches in data center, campus, and wide area networks are the bane of network engineers and users. These issues often stem from latent configuration or programming errors in network routers. Numerous network configuration verification and synthesis tools have been developed to help mitigate these issues, but several challenges were hitherto unaddressed, including: (1) efficient verification and synthesis of desirable configuration changes, (2) efficient modeling of cross-layer interactions, and (3) verification of router software components which implement behaviors specified in configurations.\nThis project addressed these challenges through the design and implementation of several new systems. To address the first challenge, we built on recent advances in dataflow programming and incremental data plane verification to incrementally compute control and data plane state and efficiently quantify differences in end-to-end behaviors resulting from changes in configurations, external routes, or available links/routers. Going a step further, we developed a constraint-based model which encodes the semantics of potential configurations (to ensure compliance with forwarding policies), the syntax of potential configurations (to satisfy network operators\u2019 objectives for configuration structure/features), and the difference between current and potential configurations (to satisfy operators\u2019 objectives for update size/scope) thereby enabling automatic generation of desirable configuration updates.\nTo address the second challenge, we designed new modeling algorithms for constructing multilayer graphs which encode the semantics of multiple interacting protocols operating at network layers 2 and 3 and fast, custom verification algorithms optimized for three major categories of forwarding policies&ndash;policies which depend on the actual path that manifests in the network under a given failure, policies which focus on certain quantitative properties of paths that may manifest, and policies that merely care about whether a path exists. Additionally, we proposed techniques to extract syntactic patterns from the various interacting components of configurations (e.g., interfaces, packet filters, VLANs) and identify deviations which are indicative of possible configuration errors.\nFinally, we addressed the third challenge by developing a black-box technique which uses the control packets sent/received by routers to detect interoperability issues between routing protocol implementations. Additionally, we designed a system which exploits combinatorial testing to efficiently detect errors in routers\u2019 handling of configuration changes through the routers\u2019 command line interface (CLI).\nThis project\u2019s broader impacts include: (1) training the next generation of innovators by involving over ten undergraduate students in this research, including students from underrepresented groups, over the lifetime of the award; (2) fostering improvements in diversity, equity, and inclusion (DEI) through the PI\u2019s formation and leadership of a Task Force on DEI in CS focused on improving the learning environment for CS students at Colgate, and the PI\u2019s contributions to DEI in STEM efforts at Colgate; and (3) making many of the systems developed as part of this project open source to allow network engineers to benefit from this research and other researchers to expand on these innovations.\n\n \n\n\t\t\t\t\tLast Modified: 01/27/2023\n\n\t\t\t\t\tSubmitted by: Aaron Gember-Jacobson"
 }
}