{
 "awd_id": "1815186",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Natural GUI-Based Testing of Mobile Apps via Mining Software Repositories",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 450000.0,
 "awd_amount": 450000.0,
 "awd_min_amd_letter_date": "2018-07-21",
 "awd_max_amd_letter_date": "2018-07-21",
 "awd_abstract_narration": "Mobile devices have become an integral, ubiquitous part of modern society. The popularity of smartphones and tablets is largely due to the success of mobile software, colloquially referred to as \"apps\", that enable users to carry out a wide range of computing tasks in an intuitive and convenient manner. The burgeoning mobile app market is fueled by rapidly evolving performant hardware and software platforms that support increasingly complex functionality. In order for apps to achieve success in marketplaces such as Apple's App Store or Google Play, it is imperative that they function as intended and thus must be well tested. However, the unique aspects of mobile apps that make them popular, such as their touch-based interfaces, rapidly evolving platforms, and contextual features such as sensors, make them difficult to test effectively and efficiently. Additionally, as the marketplace for mobile apps matures, developers must ensure that their apps function well across a myriad of devices while addressing feedback from an increasingly large user base through app store reviews. These challenges illustrate that mobile developers require practical automated support to ensure that their apps are adequately tested. This research project aims to design, and thoroughly validate an automated testing approach for mobile apps that overcomes the challenges listed above. In turn, it is anticipated that the techniques enabled by this research will contribute to better-tested, higher quality mobile applications, benefiting both our society that increasingly depends on smartphone apps and the developers and teams that create them.  \r\n\r\nTo solve these fundamental challenges, this project aims to develop an automated testing framework that combines novel statistical representations of mobile apps and information gleaned via mining software repositories techniques to efficiently generate practical, effective test scenarios. More specifically, a novel testing framework, coined as T+, will be developed. T+ is rooted in a probabilistic model-based representation of mobile apps. This model will enable a transformative automated approach for generating feasible test cases that are decoupled from low level events, can be executed on different devices, and support multiple testing goals and adequacy criteria. Additionally, this research work will define and develop monitoring mechanisms for identifying change- and fault- prone APIs in underlying platform and third-party libraries, as well as informative reviews. Incorporation of this information into the statistical model of T+ will allow for the generation and prioritization of test cases covering these APIs and reviews. Broader impacts of this work will reside in (1) improving the state of the practice in testing mobile apps, where difficulties are faced in ensuring that apps are adequately tested with respect to changing platforms, APIs, reviews, and numerous devices; (2) demonstrating improved testing practices with industry partners, which will be documented as best practices for other development organizations and test centers to adopt; (3) developing educational course content and piloting it in the classroom as part of this research project; and (4) actively involving underrepresented categories of students in this research program.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Denys",
   "pi_last_name": "Poshyvanyk",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Denys Poshyvanyk",
   "pi_email_addr": "dposhyvanyk@wm.edu",
   "nsf_id": "000516306",
   "pi_start_date": "2018-07-21",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "College of William and Mary",
  "inst_street_address": "1314 S MOUNT VERNON AVE",
  "inst_street_address_2": "",
  "inst_city_name": "WILLIAMSBURG",
  "inst_state_code": "VA",
  "inst_state_name": "Virginia",
  "inst_phone_num": "7572213965",
  "inst_zip_code": "23185",
  "inst_country_name": "United States",
  "cong_dist_code": "08",
  "st_cong_dist_code": "VA08",
  "org_lgl_bus_name": "COLLEGE OF WILLIAM AND MARY",
  "org_prnt_uei_num": "EVWJPCY6AD97",
  "org_uei_num": "EVWJPCY6AD97"
 },
 "perf_inst": {
  "perf_inst_name": "College of William and Mary",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "VA",
  "perf_st_name": "Virginia",
  "perf_zip_code": "231878795",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "VA01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 450000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The mobile application marketplace continues to grow at an unprecedented rate, spurring wide developer interest in creating &ldquo;apps&rdquo;, which include complex functionality, in a world that is increasingly trending toward mobile computing. Unfortunately, mobile developers face several challenges, such as rapid platform/library evolution, API instability, platform fragmentation, and the impact of user reviews and ratings on the success of their apps. These challenges highlight the need for automated tools to support the development, testing, and maintenance of mobile apps.&nbsp;&nbsp;While automated tools are available, mobile app testing, in practice, is still performed mostly manually.&nbsp;&nbsp;This is mostly due to the following factors that inhibit these approaches from being&nbsp;<em>effective, efficient</em>, and&nbsp;<em>practical</em>: (i) current automated input generation tools typically do not consider&nbsp;<em>natural</em>&nbsp;event sequences representing the functional use cases of an app that are easy for developers to comprehend; (ii) automatically generated test scenarios typically cannot be used across diverse device configurations or under varying contextual settings (<em>e.g.,</em>&nbsp;network on/off); (iii) automated testing typically does not account for nor test features related to rapidly evolving mobile platforms and APIs; and (iv) testing approaches fail to consider feedback from user reviews.</p>\n<p>To address these issues, the project investigated and produced&nbsp;(1) a novel approach for automatically extracting GUI, usage, domain, and contextual models for Android apps, (2) novel statistical representations that holistically combine the models and aim at generating representative and (un)natural test cases; (3) an innovative approach for monitoring change- and fault- prone APIs in the underlying Android platform and third-party libraries as well as user reviews and (4) a suite of new tools that have been evaluated and made publicly available. Some of the broader impacts from this project have included (1) improving the state of the practice in testing mobile apps, where difficulties are faced in ensuring that apps are adequately tested with respect to changing platforms, APIs, reviews, and numerous devices; (2) demonstrating improved testing practices with our industry partners, which were document as best practices for other development organizations and test centers to adopt; (3) developing educational course content and piloting it in our courses as part of this research project and (4) actively involving underrepresented categories of students in this research program..</p>\n<p>The resulting work has been published in several high-quality software engineering conferences and journals (some gaining best/distinguished paper recognition).&nbsp;&nbsp;A number of undergraduate and graduate students, including a minority doctoral student and a minority undergraduate student, were trained and became contributing members on this project. &nbsp;&nbsp;Several of these students co-authored and presented papers at international conferences.&nbsp; Multiple graduate-level theses were derived from this project. The students graduating from this program have secured full-time employment in academia and software industry.&nbsp;The gained scientific knowledge was integrated in multiple undergraduate and graduate classes at the host institutions, which broadens STEM education.&nbsp; A number of open-source software tools and datasets were developed and made publicly available.&nbsp; The data repositories resulting from this project are made accessible to the scientific community and general public through the PI&rsquo;s web site. The project enhanced and strengthened a long-term professional collaboration not only between the PI and his students but also multiple collaborators involved.&nbsp; The computing infrastructure established during the course of the project permits the sustainability of its resources.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/21/2022<br>\n\t\t\t\t\tModified by: Denys&nbsp;Poshyvanyk</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe mobile application marketplace continues to grow at an unprecedented rate, spurring wide developer interest in creating \"apps\", which include complex functionality, in a world that is increasingly trending toward mobile computing. Unfortunately, mobile developers face several challenges, such as rapid platform/library evolution, API instability, platform fragmentation, and the impact of user reviews and ratings on the success of their apps. These challenges highlight the need for automated tools to support the development, testing, and maintenance of mobile apps.  While automated tools are available, mobile app testing, in practice, is still performed mostly manually.  This is mostly due to the following factors that inhibit these approaches from being effective, efficient, and practical: (i) current automated input generation tools typically do not consider natural event sequences representing the functional use cases of an app that are easy for developers to comprehend; (ii) automatically generated test scenarios typically cannot be used across diverse device configurations or under varying contextual settings (e.g., network on/off); (iii) automated testing typically does not account for nor test features related to rapidly evolving mobile platforms and APIs; and (iv) testing approaches fail to consider feedback from user reviews.\n\nTo address these issues, the project investigated and produced (1) a novel approach for automatically extracting GUI, usage, domain, and contextual models for Android apps, (2) novel statistical representations that holistically combine the models and aim at generating representative and (un)natural test cases; (3) an innovative approach for monitoring change- and fault- prone APIs in the underlying Android platform and third-party libraries as well as user reviews and (4) a suite of new tools that have been evaluated and made publicly available. Some of the broader impacts from this project have included (1) improving the state of the practice in testing mobile apps, where difficulties are faced in ensuring that apps are adequately tested with respect to changing platforms, APIs, reviews, and numerous devices; (2) demonstrating improved testing practices with our industry partners, which were document as best practices for other development organizations and test centers to adopt; (3) developing educational course content and piloting it in our courses as part of this research project and (4) actively involving underrepresented categories of students in this research program..\n\nThe resulting work has been published in several high-quality software engineering conferences and journals (some gaining best/distinguished paper recognition).  A number of undergraduate and graduate students, including a minority doctoral student and a minority undergraduate student, were trained and became contributing members on this project.   Several of these students co-authored and presented papers at international conferences.  Multiple graduate-level theses were derived from this project. The students graduating from this program have secured full-time employment in academia and software industry. The gained scientific knowledge was integrated in multiple undergraduate and graduate classes at the host institutions, which broadens STEM education.  A number of open-source software tools and datasets were developed and made publicly available.  The data repositories resulting from this project are made accessible to the scientific community and general public through the PI\u2019s web site. The project enhanced and strengthened a long-term professional collaboration not only between the PI and his students but also multiple collaborators involved.  The computing infrastructure established during the course of the project permits the sustainability of its resources.\n\n\t\t\t\t\tLast Modified: 12/21/2022\n\n\t\t\t\t\tSubmitted by: Denys Poshyvanyk"
 }
}