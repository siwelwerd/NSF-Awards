{
 "awd_id": "1823015",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SPX: Collaborative Research: Automated Synthesis of Extreme-Scale Computing Systems Using Non-Volatile Memory",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Damian Dechev",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 500000.0,
 "awd_min_amd_letter_date": "2018-07-05",
 "awd_max_amd_letter_date": "2018-07-05",
 "awd_abstract_narration": "The project investigates the design of a scalable computing infrastructure that uses nanoscale non-volatile memory (NVM) devices for both storage and computation. The project's novelties are (i) the use of multiple parallel flows of current through naturally occurring sneak paths in NVM crossbars for computation; (ii) the replacement of slow organic expert-driven discovery of flow-based computing designs by automated synthesis techniques for accelerated discovery of novel NVM crossbar designs; and (iii) a pervasive focus on fault-tolerance throughout the design of exact, approximate and stochastic flow-based computing designs. The project's impacts are (i) the design of an end-to-end framework that maps compute-intensive kernels written in a high-level programming language onto nanoscale NVM crossbar designs and (ii) the creation of a new scalable capability to perform exact and approximate in-memory digital computations on fault-prone nanoscale NVM crossbars. The team of computer scientists and nanoscience researchers is creating flow-based computing designs for four benchmark problems: the Feynman grand prize problem, computer vision, basic linear algebra, and simulation of dynamical systems. The automatically synthesized NVM crossbar designs are being evaluated using high-performance simulations and experimental benchmarking in a modern nanotechnology laboratory. \r\n\r\n\r\nComputing using multiple parallel flows of current through data stored in nanoscale crossbars is often fast and more energy-efficient, but the design of such crossbars is highly unintuitive for human designers. The project explores a combination of formal methods for checking satisfiability of Boolean formulae, and artificial intelligence techniques such as best-first search, to automatically synthesize NVM crossbar designs from specifications written in a high-level programming language. The team of computer scientists and nanoscience researchers is pursuing a transformative agenda for extreme-scale computing by leveraging memory devices in NVM crossbars as structurally-constrained fault-prone distributed nano-stores of data, and exploiting the natural parallel flow of current through NVM crossbars for computing over data stored in the distributed nano-stores. The NVM crossbar designs generated from OpenCV, LAPACK, and ODEINT programs are evaluated using the Xyce circuit simulation software and subsequently fabricated for experimental benchmarking. By combining storage and computation on the same device, the project circumvents the von Neumann barrier between the processor and the memory and creates scalable solutions for extreme-scale computing on fault-prone NVM crossbars without introducing substantial changes to the programming model.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Nathaniel",
   "pi_last_name": "Cady",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "Nathaniel C Cady",
   "pi_email_addr": "ncady@albany.edu",
   "nsf_id": "000088875",
   "pi_start_date": "2018-07-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "SUNY Polytechnic Institute",
  "inst_street_address": "257 FULLER RD",
  "inst_street_address_2": "",
  "inst_city_name": "ALBANY",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "5184378689",
  "inst_zip_code": "122033613",
  "inst_country_name": "United States",
  "cong_dist_code": "20",
  "st_cong_dist_code": "NY20",
  "org_lgl_bus_name": "THE RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK",
  "org_prnt_uei_num": "GMZUKXFDJMA9",
  "org_uei_num": "CDAQNZCL6287"
 },
 "perf_inst": {
  "perf_inst_name": "SUNY Polytechnic Institute",
  "perf_str_addr": "257 Fuller Road",
  "perf_city_name": "Albany",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "122033613",
  "perf_ctry_code": "US",
  "perf_cong_dist": "20",
  "perf_st_cong_dist": "NY20",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "042Y00",
   "pgm_ele_name": "PPoSS-PP of Scalable Systems"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 500000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>In this project we explored the use of resistive memory devices (memristors) for a novel computing approach called flow-based computing, which is a type of in-memory computing. This is fundamentally different than standard computing, which transfers information between memory and processor in a serial fashion. In memory computing approaches have the potential to improve overall computing efficiency, reduce the energy needed per computation, and provide improved functionality for certain types of computation, such as image processing, machine learning, and training of neural networks. The memristor devices used in this work, also known as resistive random access memory (RRAM), are readily combined with more traditional silicon-based microelectronic technologies. These devices retain their memory state even when there is no power applied to the system, and are capable of storing multiple bits of information.</p>\n<p>We combined RRAM with transistors to generate resistive memory cells in an array-based format. Each individual memory cell could be programmed to different resistance levels, giving us the ability to both encode information, and to create unique current paths through the memory array. As a result, applying voltage to various inputs across the arrays resulted in current &ldquo;flow&rdquo; through the array, following the path of least resistance. In collaboration with our partner, Prof. Sumit Jha, we implemented unique flow-based computing designs in our RRAM arrays and tested this hardware for its ability to &ldquo;compute&rdquo; using different data sets. For example, we utilized these arrays to perform edge-detection of nearby pixels for image analysis. We also were able to demonstrate this approach for the detection of simultaneous events, also known as correlation detection. Overall, RRAM arrays performed well for in-memory, flow-based computing, and are a potential candidate for implementing this type of computing in future computer hardware. Our work also showed the limitations of RRAM, especially when using the higher resistance states of these devices, which have significant variability.</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 12/01/2023<br>\nModified by: Nathaniel&nbsp;C&nbsp;Cady</p></div>\n<div class=\"porSideCol\"\n><div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImage\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls onePhoto\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation onePhoto\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2023/1823015/1823015_10555539_1701454173762_RRAM_array_and_cross_section_figure--rgov-214x142.JPG\" original=\"/por/images/Reports/POR/2023/1823015/1823015_10555539_1701454173762_RRAM_array_and_cross_section_figure--rgov-800width.JPG\" title=\"ReRAM memory array for flow-based computing\"><img src=\"/por/images/Reports/POR/2023/1823015/1823015_10555539_1701454173762_RRAM_array_and_cross_section_figure--rgov-66x44.JPG\" alt=\"ReRAM memory array for flow-based computing\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Resistive random access memory (RRAM) arrays can be used for in-memory and flow-based computing. An example array design is shown in (a) and a cross section of an RRAM cell (1 transistor, 1 RRAM) is shown in (b).</div>\n<div class=\"imageCredit\">Nathaniel Cady</div>\n<div class=\"imagePermisssions\">Public Domain</div>\n<div class=\"imageSubmitted\">Nathaniel&nbsp;C&nbsp;Cady\n<div class=\"imageTitle\">ReRAM memory array for flow-based computing</div>\n</div>\n</li></ul>\n</div>\n</div></div>\n</div>\n",
  "por_txt_cntn": "\n\nIn this project we explored the use of resistive memory devices (memristors) for a novel computing approach called flow-based computing, which is a type of in-memory computing. This is fundamentally different than standard computing, which transfers information between memory and processor in a serial fashion. In memory computing approaches have the potential to improve overall computing efficiency, reduce the energy needed per computation, and provide improved functionality for certain types of computation, such as image processing, machine learning, and training of neural networks. The memristor devices used in this work, also known as resistive random access memory (RRAM), are readily combined with more traditional silicon-based microelectronic technologies. These devices retain their memory state even when there is no power applied to the system, and are capable of storing multiple bits of information.\n\n\nWe combined RRAM with transistors to generate resistive memory cells in an array-based format. Each individual memory cell could be programmed to different resistance levels, giving us the ability to both encode information, and to create unique current paths through the memory array. As a result, applying voltage to various inputs across the arrays resulted in current flow through the array, following the path of least resistance. In collaboration with our partner, Prof. Sumit Jha, we implemented unique flow-based computing designs in our RRAM arrays and tested this hardware for its ability to compute using different data sets. For example, we utilized these arrays to perform edge-detection of nearby pixels for image analysis. We also were able to demonstrate this approach for the detection of simultaneous events, also known as correlation detection. Overall, RRAM arrays performed well for in-memory, flow-based computing, and are a potential candidate for implementing this type of computing in future computer hardware. Our work also showed the limitations of RRAM, especially when using the higher resistance states of these devices, which have significant variability.\n\n\n\t\t\t\t\tLast Modified: 12/01/2023\n\n\t\t\t\t\tSubmitted by: NathanielCCady\n"
 }
}