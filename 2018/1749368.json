{
 "awd_id": "1749368",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Syntax-Prosody in Optimality Theory",
 "cfda_num": "47.075",
 "org_code": "04040000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Tyler Kendall",
 "awd_eff_date": "2018-07-01",
 "awd_exp_date": "2021-12-31",
 "tot_intn_awd_amt": 248532.0,
 "awd_amount": 272879.0,
 "awd_min_amd_letter_date": "2018-07-02",
 "awd_max_amd_letter_date": "2020-06-04",
 "awd_abstract_narration": "Syntax is the set of linguistic rules, principles, and processes that govern the structure of sentences. Prosody deals with syllables, rhythmic groups of syllables known as \"feet\", and larger units of speech that contribute to intonation, tone, stress, and speech rhythm. The syntax-prosody interface is the study of how syntactic structures are realized in prosodic form in different languages. The fundamental problem in syntax-prosody research is to precisely predict, for any kind of syntactic structure in a given language, what kind of prosodic parse it will be assigned by the language's grammar. Languages are known to show wide variation in this respect. The tools and analyses developed in this project will enable researchers to explore and explain the extensive cross-linguistic variation observed in the relation between syntactic and prosodic structure, and will thereby extend the basic science of human language, cognition, and learning. \r\n\r\nIn order to approach the problem in a rigorous and precise way, it is necessary to consider the full set of imaginable prosodic structure candidates for any syntactic input, a task for which no formal tool has so far been developed. Automation is essential since the number of prosodic structure candidates increases exponentially, as length and syntactic complexity increase: Given a particular understanding of what constitutes a legitimate prosodic structure that reflects widely shared assumptions, 3 words receive 48 different parses, 4 words 352, 5 words 2880, etc. The aim of the project is to develop a software program SPOT (Syntax-Prosody in Optimality Theory), a JavaScript application that provides both exhaustive generation of the prosodic candidates, and automatic evaluation of each candidate in terms of a well-defined hierarchy of constraints. Beyond its immediate goals in linguistics, the program has clear application possibilities in natural language processing, speech technology (recognition and production, translation), as well as in second language research and teaching (e.g., to explicate the differences in syntactic and prosodic structure between the first and the second language).\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "SBE",
 "org_dir_long_name": "Directorate for Social, Behavioral and Economic Sciences",
 "div_abbr": "BCS",
 "org_div_long_name": "Division of Behavioral and Cognitive Sciences",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Junko",
   "pi_last_name": "Ito",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Junko Ito",
   "pi_email_addr": "ito@ucsc.edu",
   "nsf_id": "000187087",
   "pi_start_date": "2018-07-02",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Armin",
   "pi_last_name": "Mester",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Armin Mester",
   "pi_email_addr": "mester@ucsc.edu",
   "nsf_id": "000097584",
   "pi_start_date": "2018-07-02",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Santa Cruz",
  "inst_street_address": "1156 HIGH ST",
  "inst_street_address_2": "",
  "inst_city_name": "SANTA CRUZ",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8314595278",
  "inst_zip_code": "950641077",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "CA19",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA SANTA CRUZ",
  "org_prnt_uei_num": "",
  "org_uei_num": "VXUFPE4MCZH5"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Santa Cruz",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "950641077",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "CA19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "131100",
   "pgm_ele_name": "Linguistics"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1311",
   "pgm_ref_txt": "LINGUISTICS"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9179",
   "pgm_ref_txt": "GRADUATE INVOLVEMENT"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  },
  {
   "pgm_ref_code": "SMET",
   "pgm_ref_txt": "SCIENCE, MATH, ENG & TECH EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 248532.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 24347.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Linguists have discovered that every sentence has a syntactic structure and a prosodic structure. A sentence's syntactic structure is the way its words are grouped into larger units called phrases, which have familiar roles like subject, object, predicate, and modifier. Prosodic structure also consists of phrasal units, but it determines how the sentence is actually pronounced. Depending on the language, it can determine where high and low tones are pronounced, how individual sounds are realized, and whether one word can affect the pronunciation of a word next to it.</p>\n<p>Both syntactic and prosodic structures are organized in hierarchical structures called trees. A group of words can form a phrase, a group of phrases can form a larger phrase, and so on. In syntax, some words might combine into a subject and others into a predicate, while the subject and predicate combine into a larger unit called a clause. In prosody, words combine to form phrases, and phrases combine to form larger intonational units, much like beats make up measures in music, which together make up larger units.</p>\n<p>The syntactic and prosodic trees for a sentence often have very similar shapes. When this happens, prosodic phrases more or less match up with syntactic phrases. However, this resemblance is not always perfect. Sometimes, a prosodic tree may look very different from its corresponding syntactic tree. The goal of linguists working in this area is to understand why these two types of trees are sometimes matching and sometimes mismatching, and to identify rules or principles that account for the difference.</p>\n<p>A prominent approach to this question uses a grammatical theory called Optimality Theory, originated by Alan Prince and Paul Smolensky. According to this theory, grammars are made up of competing constraints on linguistic structure, which cannot all be satisfied at once. Within a grammar, the constraints are ranked so that some take precedence over others, and linguistic structures like syntactic or prosodic trees are deemed <em>optimal</em> (grammatical) when they best satisfy the constraint ranking. Researchers have proposed two types of constraints that determine how syntactic and prosodic trees are related: mapping constraints, which essentially say the trees should be the same, and purely prosodic constraints that, if ranked highly enough, can sometimes compel the trees to differ.</p>\n<p>In order to use Optimality Theory to study syntax-prosody interactions, we need to consider many constraints at once, and see how huge numbers of syntax-prosody relations (pairs of trees) are evaluated by those constraints. To do this, we have to generate thousands, or sometimes tens of thousands, of tree structures. The task is virtually impossible to do by hand, except in the simplest cases, so researchers need software in order to proceed.</p>\n<p>The SPOT project has developed a JavaScript application that does these tasks automatically. The software was built by linguistics graduate students and a department-external associate, with help from ten<strong> </strong>undergraduate research assistants, under the supervision of the PIs and postdoctoral scholars. The graduate researchers developing the software presented their work to other linguists at several academic conferences, bringing attention to how much it could facilitate research in this area.</p>\n<p>Once the SPOT application was built, it enabled us to carry out research that was previously almost impossible. The PIs and graduate research assistants used it to study syntax-prosody relations in Irish, Japanese and Basque, and the graduate researchers used it to study problems in languages as diverse as Kinyambo and Danish. The SPOT project also hosted two workshops at UC Santa Cruz, which brought together an international research community working on syntax and prosody in Optimality Theory, and presented their results at national and international venues: the American Meeting of Phonology (AMP, Fall 2018, UC San Diego), the International Conference on Phonetics and Phonology (ICPP, December 2019) at the National Institute for Japanese Language and Linguistics (NINJAL) in Tokyo, Japan, the Society for Typological Analysis (SOTA IV, January 2020 at Eckerd College), the Annual Meeting of Phonology (AMP, Fall 2020, UC Santa Cruz), the 95th Annual Meeting of the Linguistic Society of America (January 2021 in San Francisco), and a workshop in the ICU Linguistics Practical Workshops series (July 2021).</p>\n<p>The SPOT application found several eager users among the other graduate students at UC Santa Cruz, and we have collected their research output in the form of a book <em>Syntax-Prosody in Optimality Theory: Theory and Analyses </em>(https://www.equinoxpub.com/home/syntax-prosody/), appearing with Equinox Publishing. Contributors of chapters include the PIs, the postdoctoral scholars, the graduate research assistants, and two undergraduates who were hired by the SPOT project.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 04/27/2022<br>\n\t\t\t\t\tModified by: Junko&nbsp;Ito</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nLinguists have discovered that every sentence has a syntactic structure and a prosodic structure. A sentence's syntactic structure is the way its words are grouped into larger units called phrases, which have familiar roles like subject, object, predicate, and modifier. Prosodic structure also consists of phrasal units, but it determines how the sentence is actually pronounced. Depending on the language, it can determine where high and low tones are pronounced, how individual sounds are realized, and whether one word can affect the pronunciation of a word next to it.\n\nBoth syntactic and prosodic structures are organized in hierarchical structures called trees. A group of words can form a phrase, a group of phrases can form a larger phrase, and so on. In syntax, some words might combine into a subject and others into a predicate, while the subject and predicate combine into a larger unit called a clause. In prosody, words combine to form phrases, and phrases combine to form larger intonational units, much like beats make up measures in music, which together make up larger units.\n\nThe syntactic and prosodic trees for a sentence often have very similar shapes. When this happens, prosodic phrases more or less match up with syntactic phrases. However, this resemblance is not always perfect. Sometimes, a prosodic tree may look very different from its corresponding syntactic tree. The goal of linguists working in this area is to understand why these two types of trees are sometimes matching and sometimes mismatching, and to identify rules or principles that account for the difference.\n\nA prominent approach to this question uses a grammatical theory called Optimality Theory, originated by Alan Prince and Paul Smolensky. According to this theory, grammars are made up of competing constraints on linguistic structure, which cannot all be satisfied at once. Within a grammar, the constraints are ranked so that some take precedence over others, and linguistic structures like syntactic or prosodic trees are deemed optimal (grammatical) when they best satisfy the constraint ranking. Researchers have proposed two types of constraints that determine how syntactic and prosodic trees are related: mapping constraints, which essentially say the trees should be the same, and purely prosodic constraints that, if ranked highly enough, can sometimes compel the trees to differ.\n\nIn order to use Optimality Theory to study syntax-prosody interactions, we need to consider many constraints at once, and see how huge numbers of syntax-prosody relations (pairs of trees) are evaluated by those constraints. To do this, we have to generate thousands, or sometimes tens of thousands, of tree structures. The task is virtually impossible to do by hand, except in the simplest cases, so researchers need software in order to proceed.\n\nThe SPOT project has developed a JavaScript application that does these tasks automatically. The software was built by linguistics graduate students and a department-external associate, with help from ten undergraduate research assistants, under the supervision of the PIs and postdoctoral scholars. The graduate researchers developing the software presented their work to other linguists at several academic conferences, bringing attention to how much it could facilitate research in this area.\n\nOnce the SPOT application was built, it enabled us to carry out research that was previously almost impossible. The PIs and graduate research assistants used it to study syntax-prosody relations in Irish, Japanese and Basque, and the graduate researchers used it to study problems in languages as diverse as Kinyambo and Danish. The SPOT project also hosted two workshops at UC Santa Cruz, which brought together an international research community working on syntax and prosody in Optimality Theory, and presented their results at national and international venues: the American Meeting of Phonology (AMP, Fall 2018, UC San Diego), the International Conference on Phonetics and Phonology (ICPP, December 2019) at the National Institute for Japanese Language and Linguistics (NINJAL) in Tokyo, Japan, the Society for Typological Analysis (SOTA IV, January 2020 at Eckerd College), the Annual Meeting of Phonology (AMP, Fall 2020, UC Santa Cruz), the 95th Annual Meeting of the Linguistic Society of America (January 2021 in San Francisco), and a workshop in the ICU Linguistics Practical Workshops series (July 2021).\n\nThe SPOT application found several eager users among the other graduate students at UC Santa Cruz, and we have collected their research output in the form of a book Syntax-Prosody in Optimality Theory: Theory and Analyses (https://www.equinoxpub.com/home/syntax-prosody/), appearing with Equinox Publishing. Contributors of chapters include the PIs, the postdoctoral scholars, the graduate research assistants, and two undergraduates who were hired by the SPOT project.\n\n \n\n\t\t\t\t\tLast Modified: 04/27/2022\n\n\t\t\t\t\tSubmitted by: Junko Ito"
 }
}