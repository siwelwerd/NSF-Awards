{
 "awd_id": "1818833",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Fast Algorithms for Simulating the Collective Swimming of Microorganisms",
 "cfda_num": "47.049",
 "org_code": "03040000",
 "po_phone": "7032922113",
 "po_email": "ygorb@nsf.gov",
 "po_sign_block_name": "Yuliya Gorb",
 "awd_eff_date": "2018-08-01",
 "awd_exp_date": "2022-07-31",
 "tot_intn_awd_amt": 176045.0,
 "awd_amount": 176045.0,
 "awd_min_amd_letter_date": "2018-07-18",
 "awd_max_amd_letter_date": "2018-07-18",
 "awd_abstract_narration": "Hydrodynamic interactions play a crucial role in the collective dynamics of microorganisms. The main goal of this project is to explore and develop efficient algorithms for simulating the collective swimming of a large group of microorganisms in a three-dimensional viscous fluid. The computational methods resulting from this project will provide new tools to understand how micro-swimmers such as sperm and cilia collectively perform various physiological functions inside the human body. They will also help shed new light on how and why microorganisms such as bacteria and algae aggregate and form colonies. Microorganisms often have to navigate through elastic structures such as mucus and polymers; their motility in a non-Newtonian fluid has attracted significant interest in recent years. The proposed methods can be extended to study the collective swimming of microorganisms inside a viscoelastic network. Besides hydrodynamic interactions, steric and chemical interactions also have profound impacts on the collective behaviors of microorganisms. This project lays a foundation for the development of more comprehensive mathematical models for collective dynamics that incorporate a variety of interactions.\r\n\r\nAt high enough density, micro-swimmers, such as bacteria, cilia, sperm and algae, exhibit remarkable collective motions which bear significant biological implications. For example, sperm swim both competitively and collaboratively to reach the egg, and cilia in the airways beat collectively to propel mucus and foreign particles out of the lung. These phenomena can be modeled by several methods, all of which entail solving equations of fluid-structure interaction. Among them, the method of regularized Stokeslets and the Rotne-Prager-Yamakawa tensor have the advantage of not requiring a 3D Eulerian grid and using the fundamental solutions to the underlying equations instead. However, the computations required by both methods entail the use of dense matrices, and they tend to be large and very costly to work with for practical models in which the number of micro-swimmers is large. In addition, patterns can take a long time to emerge and develop in swimming microorganisms, making the simulation even more challenging. The project has the following three objectives:\r\n1.Develop fast algorithms for computing matrix-vector products and for solving linear systems with the aforementioned large, dense matrices;\r\n2.Employ these algorithms to investigate (a) the collective swimming of a large group of sperm confined by a surface, (b) the flow field induced by a dense mat of beating cilia, and (c) the flow field induced by a large number of free micro-swimmers;\r\n3.Accelerate the time-dependent simulation of collective swimming by implementing parallel-in-time methods; and compare the efficiency of spatial and temporal parallelization when hundreds of computer cores are used.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "MPS",
 "org_dir_long_name": "Directorate for Mathematical and Physical Sciences",
 "div_abbr": "DMS",
 "org_div_long_name": "Division Of Mathematical Sciences",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Minghao",
   "pi_last_name": "Rostami",
   "pi_mid_init": "W",
   "pi_sufx_name": "",
   "pi_full_name": "Minghao W Rostami",
   "pi_email_addr": "mwrostam@syr.edu",
   "nsf_id": "000731172",
   "pi_start_date": "2018-07-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Syracuse University",
  "inst_street_address": "900 S CROUSE AVE",
  "inst_street_address_2": "",
  "inst_city_name": "SYRACUSE",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "3154432807",
  "inst_zip_code": "13244",
  "inst_country_name": "United States",
  "cong_dist_code": "22",
  "st_cong_dist_code": "NY22",
  "org_lgl_bus_name": "SYRACUSE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "C4BXLBC11LC6"
 },
 "perf_inst": {
  "perf_inst_name": "Syracuse University",
  "perf_str_addr": "215 Carnegie",
  "perf_city_name": "Syracuse",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "132441150",
  "perf_ctry_code": "US",
  "perf_cong_dist": "22",
  "perf_st_cong_dist": "NY22",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "127100",
   "pgm_ele_name": "COMPUTATIONAL MATHEMATICS"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9263",
   "pgm_ref_txt": "COMPUTATIONAL SCIENCE & ENGING"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 176045.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The main goal of this project is to explore and develop efficient algorithms for simulating the collective swimming of a large group of microorganisms in a three-dimensional viscous fluid. At high enough density, micro-swimmers, such as bacteria, cilia, sperm, and algae, exhibit remarkable collective motions which bear significant biological implications. For example, sperm swim both competitively and collaboratively to reach the egg, and cilia in the airways beat collectively to propel mucus and foreign particles out of the lung. These phenomena can be modeled by several methods, all of which entail solving equations of fluid-structure interaction. Among them, the method of regularized Stokeslets and the Rotne-Prager-Yamakawa tensor have the advantage of not requiring a 3D Eulerian grid and using the fundamental solutions to the underlying equations instead. However, the computations required by both methods entail the use of dense matrices (that is, matrices with few zero entries), and they tend to be large and very costly to work with for practical models in which the number of micro-swimmers is large. In addition, patterns can take a long time to emerge and develop in swimming microorganisms, making the simulation even more challenging.</p>\n<p>&nbsp;</p>\n<p>1) The interactions between points on the swimmers are dictated by the dense matrix, which maps their hydrodynamic forces to their velocities. We developed fast solvers to uncover the forces when the velocities are known, either experimentally observed or prescribed. &nbsp;Although it is generally quite challenging to compute with large dense matrices, we have a &ldquo;stroke of luck&rdquo;: the greater the distance between a pair of points is, the weaker the hydrodynamic interactions between them are, and the smaller the sizes of the corresponding matrix entries are. Consequently, by dividing the points into a &ldquo;tree&rdquo; of clusters based on their proximity, we obtain a hierarchical partition of the matrix into smaller blocks, among which the ones corresponding to &ldquo;well-separated&rdquo; clusters have accurate low-rank approximations and are hence data-sparse. The solvers that we developed exploit this nice structure of the matrix as well as the smoothness in the geometry, force, and velocity of the swimmers. They substantially reduce the computational cost and memory usage required to find the hydrodynamic forces, which are very difficult to measure in a lab.</p>\n<p>&nbsp;</p>\n<p>2) It is difficult to simulate micro-swimmers for a period of time as we have to march forward in time in very small steps in the solver. We developed a parallel-in-time method that assigns &ldquo;slices&rdquo; of the time domain to different processors and performs the simulations on these subdomains simultaneously. As the number of processors increases, the speedup of spatial parallelization, where the simulations on different subdomains of the space are parallelized instead, tends to &ldquo;saturate&rdquo; whereas the speedup of temporal parallelization can continue to grow. The parallel-in-time method requires a &ldquo;coarse solver&rdquo; that can rapidly &ldquo;sweep&rdquo; the time domain and provide rough estimates to the true solution. We proposed to construct such a solver by interpolating a parametrized family of existing solvers. The new solver allows us to take larger time steps and is non-intrusive and easy to implement and parallelize. It drastically increases the speedup of the parallel-in-time method, making temporal parallelization more advantageous than spatial parallelization when the number of swimmers is small and/or the number of processors is large.</p>\n<p>&nbsp;</p>\n<p>We demonstrated the effectiveness and efficiency of the methods described in 1) and 2) on a variety of micro-swimmers including bacteria, sperm, cilia, and vesicles. Natural and artificial micro-swimmers are of considerable interest due to their multitude of biological implications and potential biomedical applications. The methods that we developed serve as powerful tools for understanding and eventually harnessing their motility. Although the project was motivated by the computational challenges arising from the simulation of biofluids, the fast solvers in 1) are applicable to large dense matrices with similar decay properties from other applications. To the best of our knowledge, this project marks the first time that temporal parallelization has been applied to accelerate the simulation of a biofluid. The techniques in 2) can also be used to construct coarse solvers for a wide variety of problems.</p>\n<p>&nbsp;</p>\n<p>The project provided research opportunities for two undergraduate students (including one female student), five graduate students (including two female students and one student of color), and a female postdoctoral fellow. They received training in numerical methods, computer programming, computational fluid dynamics, machine learning, scientific writing, oral and poster presentation, mathematical communication skills, proposal writing, and mentoring and leadership skills. Some problems from the project were simplified and used as examples and homework problems for a few undergraduate and graduate courses, including Numerical Methods with Programming (undergraduate) and Numerical Linear Algebra (graduate). Students in these courses got the experience of working on authentic problems.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/15/2022<br>\n\t\t\t\t\tModified by: Minghao&nbsp;W&nbsp;Rostami</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe main goal of this project is to explore and develop efficient algorithms for simulating the collective swimming of a large group of microorganisms in a three-dimensional viscous fluid. At high enough density, micro-swimmers, such as bacteria, cilia, sperm, and algae, exhibit remarkable collective motions which bear significant biological implications. For example, sperm swim both competitively and collaboratively to reach the egg, and cilia in the airways beat collectively to propel mucus and foreign particles out of the lung. These phenomena can be modeled by several methods, all of which entail solving equations of fluid-structure interaction. Among them, the method of regularized Stokeslets and the Rotne-Prager-Yamakawa tensor have the advantage of not requiring a 3D Eulerian grid and using the fundamental solutions to the underlying equations instead. However, the computations required by both methods entail the use of dense matrices (that is, matrices with few zero entries), and they tend to be large and very costly to work with for practical models in which the number of micro-swimmers is large. In addition, patterns can take a long time to emerge and develop in swimming microorganisms, making the simulation even more challenging.\n\n \n\n1) The interactions between points on the swimmers are dictated by the dense matrix, which maps their hydrodynamic forces to their velocities. We developed fast solvers to uncover the forces when the velocities are known, either experimentally observed or prescribed.  Although it is generally quite challenging to compute with large dense matrices, we have a \"stroke of luck\": the greater the distance between a pair of points is, the weaker the hydrodynamic interactions between them are, and the smaller the sizes of the corresponding matrix entries are. Consequently, by dividing the points into a \"tree\" of clusters based on their proximity, we obtain a hierarchical partition of the matrix into smaller blocks, among which the ones corresponding to \"well-separated\" clusters have accurate low-rank approximations and are hence data-sparse. The solvers that we developed exploit this nice structure of the matrix as well as the smoothness in the geometry, force, and velocity of the swimmers. They substantially reduce the computational cost and memory usage required to find the hydrodynamic forces, which are very difficult to measure in a lab.\n\n \n\n2) It is difficult to simulate micro-swimmers for a period of time as we have to march forward in time in very small steps in the solver. We developed a parallel-in-time method that assigns \"slices\" of the time domain to different processors and performs the simulations on these subdomains simultaneously. As the number of processors increases, the speedup of spatial parallelization, where the simulations on different subdomains of the space are parallelized instead, tends to \"saturate\" whereas the speedup of temporal parallelization can continue to grow. The parallel-in-time method requires a \"coarse solver\" that can rapidly \"sweep\" the time domain and provide rough estimates to the true solution. We proposed to construct such a solver by interpolating a parametrized family of existing solvers. The new solver allows us to take larger time steps and is non-intrusive and easy to implement and parallelize. It drastically increases the speedup of the parallel-in-time method, making temporal parallelization more advantageous than spatial parallelization when the number of swimmers is small and/or the number of processors is large.\n\n \n\nWe demonstrated the effectiveness and efficiency of the methods described in 1) and 2) on a variety of micro-swimmers including bacteria, sperm, cilia, and vesicles. Natural and artificial micro-swimmers are of considerable interest due to their multitude of biological implications and potential biomedical applications. The methods that we developed serve as powerful tools for understanding and eventually harnessing their motility. Although the project was motivated by the computational challenges arising from the simulation of biofluids, the fast solvers in 1) are applicable to large dense matrices with similar decay properties from other applications. To the best of our knowledge, this project marks the first time that temporal parallelization has been applied to accelerate the simulation of a biofluid. The techniques in 2) can also be used to construct coarse solvers for a wide variety of problems.\n\n \n\nThe project provided research opportunities for two undergraduate students (including one female student), five graduate students (including two female students and one student of color), and a female postdoctoral fellow. They received training in numerical methods, computer programming, computational fluid dynamics, machine learning, scientific writing, oral and poster presentation, mathematical communication skills, proposal writing, and mentoring and leadership skills. Some problems from the project were simplified and used as examples and homework problems for a few undergraduate and graduate courses, including Numerical Methods with Programming (undergraduate) and Numerical Linear Algebra (graduate). Students in these courses got the experience of working on authentic problems.\n\n \n\n\t\t\t\t\tLast Modified: 11/15/2022\n\n\t\t\t\t\tSubmitted by: Minghao W Rostami"
 }
}