{
 "awd_id": "1756000",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII:  CSR:  MPI-ACC_GIS:  Accelerating Geo-Spatial Computations on HPC Platform",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Erik Brunvand",
 "awd_eff_date": "2018-04-01",
 "awd_exp_date": "2021-03-31",
 "tot_intn_awd_amt": 174998.0,
 "awd_amount": 174998.0,
 "awd_min_amd_letter_date": "2018-02-22",
 "awd_max_amd_letter_date": "2018-02-22",
 "awd_abstract_narration": "Spatial computations are at the heart of topological and geometric analysis used in many science and engineering applications. Spatial data is used in mapping applications for navigation. Government agencies in public health, urban planning, transportation, scientific communities and private sector depend on spatial data mining and analysis to gain insights and produce actionable plans. However, with the increase in the size and complexity of spatial data, traditional desktop-based analysis is inadequate for the task, and there is a need to accelerate compute-intensive spatial applications on modern computers and supercomputers to get results in real-time. This requires new software design and implementation, as well as efficient algorithms for spatial query, join and overlay that can scale with the data and the available hardware resources. The first objective of this project is to develop practical parallel algorithms based on plane sweep for computational geometry problems. The second objective is to inject spatial data awareness into the existing Message Passing Interface (MPI)-based Geographic Information System (GIS), and incorporate new features to leverage high performace computing resources by using specialized software packages. A new load balancing technique will be developed that works during the file partitioning phase by non-contiguous file reading supported by the MPI library.\r\n\r\nThe MPI-Vector-IO library will enable efficient parallel input/output on large polygonal datasets stored on parallel filesystems, thus improving the state-of-the-art. The MPI-ACC-GIS software will enable existing sequential tools to be used in a high performance computing environment with thousands of cores. Parallelization of plane sweep algorithm based on concurrent data structures on shared memory machines will impact many computational geometry algorithms that rely on plane sweep for efficient implementation. Development of MPI-ACC-GIS software will be useful to geo-spatial data scientists. In addition, the project has a broader impact in training undergraduate and graduate students to perform research in high performance computing.\r\n\r\nMPI-ACC-GIS software implementing new algorithms and methodologies along with test data, results and benchmarks will be made publicly available on a website hosted at the university.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Satish",
   "pi_last_name": "Puri",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Satish Puri",
   "pi_email_addr": "satish.puri@mst.edu",
   "nsf_id": "000730698",
   "pi_start_date": "2018-02-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Marquette University",
  "inst_street_address": "313 N 13TH ST",
  "inst_street_address_2": "",
  "inst_city_name": "MILWAUKEE",
  "inst_state_code": "WI",
  "inst_state_name": "Wisconsin",
  "inst_phone_num": "4142887200",
  "inst_zip_code": "532332244",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "WI04",
  "org_lgl_bus_name": "MARQUETTE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "HKJCKTFJNBM7"
 },
 "perf_inst": {
  "perf_inst_name": "Marquette University",
  "perf_str_addr": "PO Box 1881",
  "perf_city_name": "Milwaukee",
  "perf_st_code": "WI",
  "perf_st_name": "Wisconsin",
  "perf_zip_code": "532011881",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "WI04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "026y00",
   "pgm_ele_name": "CRII CISE Research Initiation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 174998.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-678e1a96-7fff-e37d-f2d1-5136ecb3b8ac\"> </span></p>\n<p dir=\"ltr\"><span>Processors for advanced computing use central processing units (CPU) with multiple compute cores and graphics processing units (GPU) with many-cores. We have shown how to leverage such processors and achieve high performance in algorithms that are used in Geographic Information Systems (GIS), Spatial Databases and Computational Geometry.</span></p>\n<p dir=\"ltr\"><span>Following are the project outcomes:</span></p>\n<p dir=\"ltr\"><span>1) We developed a high performance software that can read GIS datasets in parallel and perform computations. Our software is very useful for data-intensive problems. On a compute-cluster consisting of hundreds of processors, reading large datasets quickly is very important to solve any geo-spatial computing problem. A distributed memory tool called MPI-Vector-IO was implemented to efficiently handle variable-length geometries like polygon and polyline. This tool is the first of its kind to focus on partitioning a dataset consisting of a collection of variable length records. Vector stands for shapes represented as co-ordinates namely points, segments and polygons. Shapes are of variable lengths which made the use of existing tools cumbersome. A conference paper was published in conference proceedings of the International Conference on Parallel Processing, 2018.</span></p>\n<p dir=\"ltr\"><span>2) We designed fast algorithms for a class of computational geometry algorithms that can efficiently utilize multi-core processors. Plane sweep algorithm was parallelized for segment intersection problems in computational geometry using OpenMP and OpenACC compiler directives for CPU and GPU respectively. The parallel algorithm was tested on Nvidia GPU and resulted in 40 fold speedup using data sets of 80K size compared to sequential implementation of the algorithm. A workshop paper was published in Accelerator Programming workshop, 2018 held in conjunction with International Conference for High Performance Computing, Networking, Storage and Analysis, SC 2018. Our paper was awarded the best paper of the workshop among 6 papers presented. Planesweep is a fundamental algorithm in computational geometry algorithms. Our algorithm for Voronoi diagram construction extracts fine-grained parallelism in the event-processing loop of the&nbsp; algorithm and it decreases the run-time of the algorithm when compared to sequential algorithm. This result was published as a short paper in COMPSAC-2019 conference.</span></p>\n<p dir=\"ltr\"><span>3) We developed a new technique for geospatial query processing on Graphics Processing Unit (GPU) namely PolySketch which is a hierarchical method of sketching a polyline and polygon for geometric intersection problems. This led to the \"Hierarchical Filter and Refine\" approach which is an extension to the classical \"Filter and Refine\" approach for large geometries for massively parallel platforms. This work was published in IEEE High Performance Computing, Data and Analytics conference as a full paper in 2019. We also published another full paper in ACM SIGSPATIAL 2020 (International Conference on Advances in Geographic Information Systems).</span></p>\n<p dir=\"ltr\"><span>4) We developed a scalable spatial partitioning system which is geared towards load balancing geospatial join computation that takes two data sets as input and produces an output dataset. This is similar to database join operation but with spatial data. Our method takes the data distribution of both datasets into account for finding well balanced partitions. We refer to the system as ParADP which has been implemented for distributed memory machines using Message Passing Interface (MPI). ParADP scales well upto 1152 CPU cores and performs better than uniform and quadtree partitioning. This work has been accepted as a full paper in the International Symposium on Parallel and Distributed Processing (IPDPS 2020), May 2020.</span></p>\n<p dir=\"ltr\"><span>The research project has impacted domains like Geographic Information Systems (GIS), Spatial Databases and Computational Geometry. The research produced new algorithms and techniques to accelerate common computational geometry algorithms used in GIS. New load balancing algorithms were invented which are instrumental in effective utilization of a collection of computing resources to solve a given GIS problem.&nbsp;</span></p>\n<p dir=\"ltr\"><span>This project is instrumental in training three graduate students in the field of High Performance Computing (HPC). Moreover, the educational material developed in this project will help in the development of GIS professionals in the field of HPC.</span></p>\n<p dir=\"ltr\"><span>From the project, many peer-reviewed publications resulted including 4 research papers in conferences, 1 book chapter, 1 workshop paper and 2 short papers. The workshop paper </span><span>won the best paper award in the Accelerator Programming workshop of a leading high performance computing conference in 2018. Three PhD students received funding during their dissertation work at Marquette University. A PhD dissertation resulted from the research supported by the grant - </span><span>Hierarchical and Adaptive Filter and Refinement Algorithms for Geometric Intersection Computations on GPU</span><span>, 2021.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/30/2021<br>\n\t\t\t\t\tModified by: Satish&nbsp;Puri</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nProcessors for advanced computing use central processing units (CPU) with multiple compute cores and graphics processing units (GPU) with many-cores. We have shown how to leverage such processors and achieve high performance in algorithms that are used in Geographic Information Systems (GIS), Spatial Databases and Computational Geometry.\nFollowing are the project outcomes:\n1) We developed a high performance software that can read GIS datasets in parallel and perform computations. Our software is very useful for data-intensive problems. On a compute-cluster consisting of hundreds of processors, reading large datasets quickly is very important to solve any geo-spatial computing problem. A distributed memory tool called MPI-Vector-IO was implemented to efficiently handle variable-length geometries like polygon and polyline. This tool is the first of its kind to focus on partitioning a dataset consisting of a collection of variable length records. Vector stands for shapes represented as co-ordinates namely points, segments and polygons. Shapes are of variable lengths which made the use of existing tools cumbersome. A conference paper was published in conference proceedings of the International Conference on Parallel Processing, 2018.\n2) We designed fast algorithms for a class of computational geometry algorithms that can efficiently utilize multi-core processors. Plane sweep algorithm was parallelized for segment intersection problems in computational geometry using OpenMP and OpenACC compiler directives for CPU and GPU respectively. The parallel algorithm was tested on Nvidia GPU and resulted in 40 fold speedup using data sets of 80K size compared to sequential implementation of the algorithm. A workshop paper was published in Accelerator Programming workshop, 2018 held in conjunction with International Conference for High Performance Computing, Networking, Storage and Analysis, SC 2018. Our paper was awarded the best paper of the workshop among 6 papers presented. Planesweep is a fundamental algorithm in computational geometry algorithms. Our algorithm for Voronoi diagram construction extracts fine-grained parallelism in the event-processing loop of the  algorithm and it decreases the run-time of the algorithm when compared to sequential algorithm. This result was published as a short paper in COMPSAC-2019 conference.\n3) We developed a new technique for geospatial query processing on Graphics Processing Unit (GPU) namely PolySketch which is a hierarchical method of sketching a polyline and polygon for geometric intersection problems. This led to the \"Hierarchical Filter and Refine\" approach which is an extension to the classical \"Filter and Refine\" approach for large geometries for massively parallel platforms. This work was published in IEEE High Performance Computing, Data and Analytics conference as a full paper in 2019. We also published another full paper in ACM SIGSPATIAL 2020 (International Conference on Advances in Geographic Information Systems).\n4) We developed a scalable spatial partitioning system which is geared towards load balancing geospatial join computation that takes two data sets as input and produces an output dataset. This is similar to database join operation but with spatial data. Our method takes the data distribution of both datasets into account for finding well balanced partitions. We refer to the system as ParADP which has been implemented for distributed memory machines using Message Passing Interface (MPI). ParADP scales well upto 1152 CPU cores and performs better than uniform and quadtree partitioning. This work has been accepted as a full paper in the International Symposium on Parallel and Distributed Processing (IPDPS 2020), May 2020.\nThe research project has impacted domains like Geographic Information Systems (GIS), Spatial Databases and Computational Geometry. The research produced new algorithms and techniques to accelerate common computational geometry algorithms used in GIS. New load balancing algorithms were invented which are instrumental in effective utilization of a collection of computing resources to solve a given GIS problem. \nThis project is instrumental in training three graduate students in the field of High Performance Computing (HPC). Moreover, the educational material developed in this project will help in the development of GIS professionals in the field of HPC.\nFrom the project, many peer-reviewed publications resulted including 4 research papers in conferences, 1 book chapter, 1 workshop paper and 2 short papers. The workshop paper won the best paper award in the Accelerator Programming workshop of a leading high performance computing conference in 2018. Three PhD students received funding during their dissertation work at Marquette University. A PhD dissertation resulted from the research supported by the grant - Hierarchical and Adaptive Filter and Refinement Algorithms for Geometric Intersection Computations on GPU, 2021.\n\n \n\n\t\t\t\t\tLast Modified: 07/30/2021\n\n\t\t\t\t\tSubmitted by: Satish Puri"
 }
}