{
 "awd_id": "1835499",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Elements: Software: Roundoff-Error-Free Algorithms for Large-Scale, Sparse Systems of Linear Equations and Optimization",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": "7032927937",
 "po_email": "pbangalo@nsf.gov",
 "po_sign_block_name": "Purushotham Bangalore",
 "awd_eff_date": "2019-06-01",
 "awd_exp_date": "2024-05-31",
 "tot_intn_awd_amt": 600000.0,
 "awd_amount": 600000.0,
 "awd_min_amd_letter_date": "2018-08-31",
 "awd_max_amd_letter_date": "2018-08-31",
 "awd_abstract_narration": "Solving systems of linear equations is central to solving problems in numerous applications within healthcare, power generation, national defense, economics, physics, chemistry, mathematics, computer science and engineering.  Nowadays, a large number of these critical applications have an ever-increasing need for faster, more reliable, and more accurate solutions. For example, more accurate treatment plans are proven to be less costly, less invasive, safer, and more reliable outcomes for prostate-cancer brachytherapy (placement of radioactive \"seeds\" inside a tumor). Similarly, millions of dollars can be saved, and cleaner energy can be produced, by solving the power generation dispatch optimization problem with more accuracy. Paradoxically, today's state-of-the-art software tools are limited to calculating limited-precision solutions (e.g., treatment plans and power dispatches).  This is due in part to the prevalence of computing methods relying on floating-point arithmetic (i.e., arithmetic using truncated decimal numbers). At the same time, real-life problems in a wide range of applications are becoming larger and so more prone to incorrect results due to roundoff errors (errors introduced when truncating the decimal numbers). The primary goal of this project is to design, create, and deploy computational tools to solve large-scale, sparse systems of linear equations and optimization problems without any error at all. Because of the ubiquity of solving systems of linear equations and optimization problems, the outcomes of this project will directly translate in software that is more reliable for applications across academia, industry, and government.  \r\n\r\nLarge-scale, sparse systems of linear equations (SLEs) and linear optimization problems (LPs) are routinely solved and the accuracy/correctness of solvers is taken for granted. However, state-of-the-art solvers commonly report incorrect results, some as striking as misclassifying feasible problems as infeasible and vice versa or even failing altogether.  Moreover, exactly solving SLEs and LPs is of fundamental importance for applications where fixed-precision standards have been deemed inadequate, including specific applications in healthcare, power generation, biology, combinatorial auctions, and formal verification of mathematical proofs.  Therefore, the first objective of this project is to devise efficient algorithms and implement robust software to reliably and exactly solve large-scale, sparse SLEs, free of any roundoff error. This objective will build on our recently devised roundoff-error-free (REF) LU and Cholesky factorizations for dense matrices. The second objective of this project is to devise efficient algorithms and  implement robust software to reliably and exactly (REF) solve  large-scale, sparse LPs.  The specific outcomes of this project  include: (1) Devise an efficient REF factorization framework for  large-scale sparse matrices, including devising good fill-reducing  orderings that consider the bit-size growth of the entries; (2)  Devise REF optimization algorithms to exactly solve large-scale,  sparse linear programs; (3) Our software will be rigorously tested,  with a full 100% test coverage suite and scaffolding code to test  loop invariants and data sanity. The software products will be  submitted as algorithm papers to the ACM Transactions on Mathematical  software, where the code itself, test suite and documentation undergo  rigorous peer review. Finally, we will incorporate our solvers into  our existing SuiteSparse installations, including all Linux distros  with the ultimate goal of being integrated into MATLAB and thus  accessible to a wide user base.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Erick",
   "pi_last_name": "Moreno-Centeno",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Erick Moreno-Centeno",
   "pi_email_addr": "emc@tamu.edu",
   "nsf_id": "000575840",
   "pi_start_date": "2018-08-31",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Timothy",
   "pi_last_name": "Davis",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "Timothy A Davis",
   "pi_email_addr": "davis@tamu.edu",
   "nsf_id": "000292409",
   "pi_start_date": "2018-08-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Texas A&M Engineering Experiment Station",
  "inst_street_address": "3124 TAMU",
  "inst_street_address_2": "",
  "inst_city_name": "COLLEGE STATION",
  "inst_state_code": "TX",
  "inst_state_name": "Texas",
  "inst_phone_num": "9798626777",
  "inst_zip_code": "778433124",
  "inst_country_name": "United States",
  "cong_dist_code": "10",
  "st_cong_dist_code": "TX10",
  "org_lgl_bus_name": "TEXAS A&M ENGINEERING EXPERIMENT STATION",
  "org_prnt_uei_num": "QD1MX6N5YTN4",
  "org_uei_num": "QD1MX6N5YTN4"
 },
 "perf_inst": {
  "perf_inst_name": "Texas A&M Engineering Experiment Station",
  "perf_str_addr": "3131 TAMU",
  "perf_city_name": "College Station",
  "perf_st_code": "TX",
  "perf_st_name": "Texas",
  "perf_zip_code": "778433131",
  "perf_ctry_code": "US",
  "perf_cong_dist": "10",
  "perf_st_cong_dist": "TX10",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "077Z",
   "pgm_ref_txt": "CSSI-1: Cyberinfr for Sustained Scientif"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "8004",
   "pgm_ref_txt": "Software Institutes"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 600000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><strong>Intellectual Outcomes</strong></p>\n<p>This project&rsquo;s results have significantly advanced our knowledge of exact (roundoff-error-free, REF) linear algebra algorithms. The research team's development of fast, reliable, commercial-grade exact algorithms for linear algebra is a significant leap forward in the field.</p>\n<p>Nowadays, large-scale, sparse systems of linear equations (SLEs) are commonly solved, and the accuracy and correctness of solutions are taken for granted. However, our research demonstrated that state-of-the-art floating-point solvers produce incorrect results in approximately 5% of real-world cases, even for symmetric positive definite SLEs, for which higher-accuracy floating-point algorithms exist. While these solvers generally provide sufficiently accurate solutions for most applications, there are applications where exactness is crucial. In these critical scenarios, our algorithms and implementations offer a significant improvement, ensuring reliable and accurate results.</p>\n<p>Specific intellectual outcomes:</p>\n<ol>\n<li>We devised two new sparse roundoff-error-free (REF) Cholesky factorization algorithms which exactly solve sparse symmetric-positive-definite (SPD) linear systems A<strong>x</strong> = <strong>b</strong>, where A is an n-by-n SPD matrix with integral entries, and <strong>b</strong> and <strong>x </strong>are n-dimensional vectors with integral and rational entries, respectively. The key properties of these factorizations are: (1) they exclusively use integer arithmetic and (2) the overhead related to data structures and ancillary operations (the operations that are not strictly required to perform the factorization) is subsumed by the cost of the integer-arithmetic operations that are essential/intrinsic to the factorization. Notably, to date, our algorithms are the only exact algorithms for solving SPD linear systems with this asymptotically efficient complexity bound.</li>\n<li> We devised a sparse column update algorithm for the sparse left-looking integer-preserving (SLIP) LU factorization. This algorithm is not only unique but also significantly faster, being one to two orders of magnitude faster than factorizing the new matrix from scratch. This speed and efficiency make our algorithm a valuable tool in the field of linear algebra.</li>\n<li> We derived sparse rank-one update/downdate algorithms for the sparse left-looking integer-preserving (SLIP) LU factorization and the REF Cholesky factorization. Notably, our algorithm is one to two orders of magnitude faster than factorizing the new matrix from scratch.</li>\n</ol>\n<p>Most importantly, we implemented these algorithms in a commercial-grade framework of SParse EXact (SPEX) linear algebra algorithms. Our SPEX package is written in ANSI C, comes with easy-to-use MATLAB and Python interfaces, is distributed via GitHub, and is also distributed to numerous Linux distributions as a component of SuiteSparse. Specifically, our SPEX framework is a software package for exactly solving sparse linear systems comprising the following components:</p>\n<ol>\n<li>SPEX Left LU can be applied to any linear system A<strong>x</strong> = <strong>b</strong> with integral, rational, or decimal entries and provides a solution to the system that is either exact or accurate to user-specified precision. Notable applications of this package include benchmarking the stability and accuracy of state-of-the-art linear solvers and determining whether singular-to-double-precision matrices are indeed singular. Most importantly, it is shown that SPEX Left LU outperforms current state-of-the-art exact iterative solvers in run time on <em>easy</em> instances and in stability on both easy and hard instances, as the iterative solver failed on a sizeable subset of the tested instances.</li>\n</ol><ol>\n<li>SPEX Cholesky and SPEX LDL are software packages for exactly solving sparse symmetric linear systems, A<strong>x</strong> = <strong>b </strong>with integral, rational, or decimal entries, and provide a solution to the system that is either exact or accurate to user-specified precision. SPEX Cholesky is used for symmetric positive definite (SPD) systems, and SPEX LDL is used for symmetric negative definite and symmetric indefinite matrices with exclusively nonzero leading principal minors.&nbsp; We tested the accuracy of MATLAB sparse backslash, revealing it is near perfect for 87% of the tested SPD instances but fails for about 3% of the instances.</li>\n<li>SPEX Backslash is a general-purpose exact solver that automatically determines the best ordering and factorization (between SPEX LU and SPEX LDL) to exactly solve a given system A<strong>x</strong> = <strong>b</strong> with integral, rational, or decimal entries and provides a solution that is either exact or accurate to user-specified precision (if it has a solution or correctly reports that the system is rank-deficient).</li>\n</ol>\n<p><strong>Broader Impacts</strong></p>\n<p>This project contributed to the development of unique expertise. It partially funded four Ph.D. students, including two female students, one of whom was of Hispanic descent. These students gained valuable research training through their participation in this project. In addition, these students developed commercial-grade coding expertise that sets them apart from most other graduates, a testament to their dedication and the quality of this project. Notably, one of these students is now an Assistant Professor at the United States Naval Academy; this achievement multiplies the broader societal impacts of this project as this new professor now serves as a role model and contributes to the development of a diverse next generation of professionals.</p><br>\n<p>\n Last Modified: 08/22/2024<br>\nModified by: Erick&nbsp;Moreno-Centeno</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nIntellectual Outcomes\n\n\nThis projects results have significantly advanced our knowledge of exact (roundoff-error-free, REF) linear algebra algorithms. The research team's development of fast, reliable, commercial-grade exact algorithms for linear algebra is a significant leap forward in the field.\n\n\nNowadays, large-scale, sparse systems of linear equations (SLEs) are commonly solved, and the accuracy and correctness of solutions are taken for granted. However, our research demonstrated that state-of-the-art floating-point solvers produce incorrect results in approximately 5% of real-world cases, even for symmetric positive definite SLEs, for which higher-accuracy floating-point algorithms exist. While these solvers generally provide sufficiently accurate solutions for most applications, there are applications where exactness is crucial. In these critical scenarios, our algorithms and implementations offer a significant improvement, ensuring reliable and accurate results.\n\n\nSpecific intellectual outcomes:\n\nWe devised two new sparse roundoff-error-free (REF) Cholesky factorization algorithms which exactly solve sparse symmetric-positive-definite (SPD) linear systems Ax = b, where A is an n-by-n SPD matrix with integral entries, and b and x are n-dimensional vectors with integral and rational entries, respectively. The key properties of these factorizations are: (1) they exclusively use integer arithmetic and (2) the overhead related to data structures and ancillary operations (the operations that are not strictly required to perform the factorization) is subsumed by the cost of the integer-arithmetic operations that are essential/intrinsic to the factorization. Notably, to date, our algorithms are the only exact algorithms for solving SPD linear systems with this asymptotically efficient complexity bound.\n We devised a sparse column update algorithm for the sparse left-looking integer-preserving (SLIP) LU factorization. This algorithm is not only unique but also significantly faster, being one to two orders of magnitude faster than factorizing the new matrix from scratch. This speed and efficiency make our algorithm a valuable tool in the field of linear algebra.\n We derived sparse rank-one update/downdate algorithms for the sparse left-looking integer-preserving (SLIP) LU factorization and the REF Cholesky factorization. Notably, our algorithm is one to two orders of magnitude faster than factorizing the new matrix from scratch.\n\n\n\nMost importantly, we implemented these algorithms in a commercial-grade framework of SParse EXact (SPEX) linear algebra algorithms. Our SPEX package is written in ANSI C, comes with easy-to-use MATLAB and Python interfaces, is distributed via GitHub, and is also distributed to numerous Linux distributions as a component of SuiteSparse. Specifically, our SPEX framework is a software package for exactly solving sparse linear systems comprising the following components:\n\nSPEX Left LU can be applied to any linear system Ax = b with integral, rational, or decimal entries and provides a solution to the system that is either exact or accurate to user-specified precision. Notable applications of this package include benchmarking the stability and accuracy of state-of-the-art linear solvers and determining whether singular-to-double-precision matrices are indeed singular. Most importantly, it is shown that SPEX Left LU outperforms current state-of-the-art exact iterative solvers in run time on easy instances and in stability on both easy and hard instances, as the iterative solver failed on a sizeable subset of the tested instances.\n\nSPEX Cholesky and SPEX LDL are software packages for exactly solving sparse symmetric linear systems, Ax = b with integral, rational, or decimal entries, and provide a solution to the system that is either exact or accurate to user-specified precision. SPEX Cholesky is used for symmetric positive definite (SPD) systems, and SPEX LDL is used for symmetric negative definite and symmetric indefinite matrices with exclusively nonzero leading principal minors. We tested the accuracy of MATLAB sparse backslash, revealing it is near perfect for 87% of the tested SPD instances but fails for about 3% of the instances.\nSPEX Backslash is a general-purpose exact solver that automatically determines the best ordering and factorization (between SPEX LU and SPEX LDL) to exactly solve a given system Ax = b with integral, rational, or decimal entries and provides a solution that is either exact or accurate to user-specified precision (if it has a solution or correctly reports that the system is rank-deficient).\n\n\n\nBroader Impacts\n\n\nThis project contributed to the development of unique expertise. It partially funded four Ph.D. students, including two female students, one of whom was of Hispanic descent. These students gained valuable research training through their participation in this project. In addition, these students developed commercial-grade coding expertise that sets them apart from most other graduates, a testament to their dedication and the quality of this project. Notably, one of these students is now an Assistant Professor at the United States Naval Academy; this achievement multiplies the broader societal impacts of this project as this new professor now serves as a role model and contributes to the development of a diverse next generation of professionals.\t\t\t\t\tLast Modified: 08/22/2024\n\n\t\t\t\t\tSubmitted by: ErickMoreno-Centeno\n"
 }
}