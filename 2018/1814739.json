{
 "awd_id": "1814739",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Dynamically Customizable Safety-Critical Embedded Systems",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Jason Hallstrom",
 "awd_eff_date": "2018-09-01",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 501797.0,
 "awd_amount": 501797.0,
 "awd_min_amd_letter_date": "2018-06-25",
 "awd_max_amd_letter_date": "2018-06-25",
 "awd_abstract_narration": "Major functionalities of many modern consumer products, such as smartphones are largely defined by the software that runs upon them.  Such functionalities are typically customizable, and are often dynamic in the sense that they may be modified via software updates over the lifetime of the device.  This project will extend the ability to perform such dynamic customization to safety-critical systems as well, thereby enabling one to customize safety-critical embedded systems and to extend their functionalities as and when a need arises for doing so.\r\n\r\nThe main challenge in extending dynamic customizability to safety-critical systems arises from the need to ensure the continued correctness, both functional and temporal, of all components of a system upon updating one or more components.  This project seeks to meet this need by combining formal methods, which are particularly well-suited to dealing with functional correctness, with real-time scheduling theory, which primarily deals with timing correctness. The major intellectual contribution of this project is thus integrated consideration of formal methods and scheduling theory to develop methodologies for enabling dynamic customizability in a safe and effective manner.\r\n\r\nThe benefits of dynamic customizability have been made evident by its success in consumer products;  the industrial applicability of a framework allowing dynamic customizability of safety-critical systems is potentially enormous, and the findings of this project will enable this.  Software implementing algorithmic findings will be made available on the project web-site; all software produced for this project will be open-source.  Results obtained will be incorporated into technical publications, survey papers, and perspectives articles. Teaching materials will be developed for relevant courses at the project home institution, and shared with interested instructors elsewhere.  \r\n\r\nPublications, open-source software, and teaching materials produced by this research will be made available to the public on the web at URL https://sites.wustl.edu/dcsces/ and also will be retained in an Subversion (SVN) repository at Washington University in St. Louis, both for the duration of the project and for at least 5 years following its completion.  Digital artifacts needed to reproduce results of this research also will be assigned Digital Object Identifiers (DOIs) and archived in Washington University's Open Scholarship web portal at https://openscholarship.wustl.edu/ as well as being provided on the https://sites.wustl.edu/dcsces/ project website along with their DOIs.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Sanjoy",
   "pi_last_name": "Baruah",
   "pi_mid_init": "K",
   "pi_sufx_name": "",
   "pi_full_name": "Sanjoy K Baruah",
   "pi_email_addr": "Baruah@wustl.edu",
   "nsf_id": "000762080",
   "pi_start_date": "2018-06-25",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Christopher",
   "pi_last_name": "Gill",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Christopher Gill",
   "pi_email_addr": "cdgill@cse.wustl.edu",
   "nsf_id": "000418929",
   "pi_start_date": "2018-06-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Washington University",
  "inst_street_address": "1 BROOKINGS DR",
  "inst_street_address_2": "",
  "inst_city_name": "SAINT LOUIS",
  "inst_state_code": "MO",
  "inst_state_name": "Missouri",
  "inst_phone_num": "3147474134",
  "inst_zip_code": "631304862",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "MO01",
  "org_lgl_bus_name": "WASHINGTON UNIVERSITY, THE",
  "org_prnt_uei_num": "",
  "org_uei_num": "L6NFUM28LQM5"
 },
 "perf_inst": {
  "perf_inst_name": "Washington University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "MO",
  "perf_st_name": "Missouri",
  "perf_zip_code": "631304899",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "MO01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 501797.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Dynamic customization of devices extends both their capabilities and their useful lifespan: the same device may be customized on the fly to perform different functionalities, and new functionalities may be added as they are developed (thereby obviating the need to replace the device with a newer one). This project defined a component-based approach to safety-critical real-time systems design. This required the design of a set of intefaces for components that permit device safety properties (primarily timing-based ones) to be formally expressed according to these interfaces. The approach restricted resource-allocation semantics such that inter-component interactions allow for composibility of timing and other safety properties. &nbsp;Hence the safety implications of replacing a component with a newer version, or adding an entirely new component, can be understood by simply composing the interaction between the component interfaces according to well-defined composition rules. &nbsp;Resource-allocation strategies, primarily based on principles of elastic scheduling and management of priorities and other properties of execution, were&nbsp;designed that allow for both computational and temporal&nbsp;elasticity, and were shown to be capable of achieving composable implementation of components upon a variety of platform architectures, both uniprocessor and multiprocessor/ multicore. &nbsp;</p>\n<p>The technical outcomes of this project were disseminated extensively via research publications in major journals, and presentation at and publication in the proceedings of, flagship international conferences. &nbsp;Issues arising as part of this research were shared at Open Problems sessions at international workshops and seminars. &nbsp;A postdoctoral scholar and several graduate students worked on aspects of this project, as did some undergraduate students.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/17/2022<br>\n\t\t\t\t\tModified by: Christopher&nbsp;Gill</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nDynamic customization of devices extends both their capabilities and their useful lifespan: the same device may be customized on the fly to perform different functionalities, and new functionalities may be added as they are developed (thereby obviating the need to replace the device with a newer one). This project defined a component-based approach to safety-critical real-time systems design. This required the design of a set of intefaces for components that permit device safety properties (primarily timing-based ones) to be formally expressed according to these interfaces. The approach restricted resource-allocation semantics such that inter-component interactions allow for composibility of timing and other safety properties.  Hence the safety implications of replacing a component with a newer version, or adding an entirely new component, can be understood by simply composing the interaction between the component interfaces according to well-defined composition rules.  Resource-allocation strategies, primarily based on principles of elastic scheduling and management of priorities and other properties of execution, were designed that allow for both computational and temporal elasticity, and were shown to be capable of achieving composable implementation of components upon a variety of platform architectures, both uniprocessor and multiprocessor/ multicore.  \n\nThe technical outcomes of this project were disseminated extensively via research publications in major journals, and presentation at and publication in the proceedings of, flagship international conferences.  Issues arising as part of this research were shared at Open Problems sessions at international workshops and seminars.  A postdoctoral scholar and several graduate students worked on aspects of this project, as did some undergraduate students.\n\n\t\t\t\t\tLast Modified: 12/17/2022\n\n\t\t\t\t\tSubmitted by: Christopher Gill"
 }
}