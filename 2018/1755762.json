{
 "awd_id": "1755762",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII: SHF: Building Visibility into the Cognitive Processes of Software Engineers via Biosensors",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2018-02-01",
 "awd_exp_date": "2020-01-31",
 "tot_intn_awd_amt": 159662.0,
 "awd_amount": 159662.0,
 "awd_min_amd_letter_date": "2018-01-24",
 "awd_max_amd_letter_date": "2018-01-24",
 "awd_abstract_narration": "The goal of this research project is to study cognitive effort associated with tasks that computer programmers perform. This is important because the limits of cognitive load present a barrier to improving a programmer's productivity and quality. Using newly available biometric technologies such as  fMRI, EMG and eye-tracking, it is possible to conduct studies of cognitive processes in programmers. Such studies make it possible to provide scientific answers to questions such as which programming language constructs are easier to use, what kinds of training produce better programmers, or how different programming environments and situational variables are more conducive to writing the best code. The main thrust of this project is to overcome the significant challenges that currently prevent researchers in the software engineering community from widely adopting these methods. This project performs some of the groundbreaking work that is needed to provide robust measurements of cognitive processes in programmers using the biometric technologies. The resulting tailored methodologies and measurement devices will support a community of researchers working in this space. \r\n\r\nThe project will develop techniques to use fMRI to measure difficulty in understanding certain programming constructs. This will be done by measuring cognitive effort, as measured by neural efficiency, and level of concentration via neural deactivation. Similarly, measurements of cognitive processes activated during other code comprehension tasks will be obtained.  The objective is to obtain a validated set of measures that predict the cognitive load associated with understanding code, which is necessary to create the scientific basis for the studies. The work will lead to combining different measurements, such as eye-tracking and EMG, to establish more sensitive measurement tools. The project will address technical concerns such as maintaining clean signal data from sensors and learning how to calibrate devices to maintain validity of results, as well as practical concerns such as how to perform measurements on human subjects without interfering with the measurements.  Ultimately, such studies should lead to a better understanding what constitutes best practices in software development and training of software engineers.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Christopher",
   "pi_last_name": "Parnin",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Christopher J Parnin",
   "pi_email_addr": "cjparnin@ncsu.edu",
   "nsf_id": "000688802",
   "pi_start_date": "2018-01-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "North Carolina State University",
  "inst_street_address": "2601 WOLF VILLAGE WAY",
  "inst_street_address_2": "",
  "inst_city_name": "RALEIGH",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9195152444",
  "inst_zip_code": "276950001",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "NC02",
  "org_lgl_bus_name": "NORTH CAROLINA STATE UNIVERSITY",
  "org_prnt_uei_num": "U3NVH931QJJ3",
  "org_uei_num": "U3NVH931QJJ3"
 },
 "perf_inst": {
  "perf_inst_name": "North Carolina State University",
  "perf_str_addr": "",
  "perf_city_name": "Raleigh",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "276958206",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "NC02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 159662.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span>In a NSF sponsored project, various techniques to measure the cognitive effort of programmers with biosensors were designed and evaluated. These measures can allow researchers to understand the effects of different representations and tasks on the ability for programmers to easily and correctly understand code. More generally, these measures can be used to support evaluating the effectiveness of programming tools in reducing difficulty and errors when programming, improving the software and infrastructure used by society. In designing these techniques, the project saught to overcome two main challenges---improving the fidelity (how accurate) and robustness of the cognitive measures with biosensors caused by limited sensitivity or noise due to movement. </span></p>\n<p><span>Key outcomes include discovery of widely used code complexity measures to measure the quality of code in industry that have no actual predictive relationship of observed cognitive effort, understanding how programmers integrate social signals when evaluating code contributions, discovery of ineffective interview procedures for hiring programmers that reduce hiring yield and increase frustration, stress, and bias. Finally, several novel techniques for obtaining measures of cognitive effort were discovered, including measuring neural efficiency and deactivation of the default mode network with fMRI, methods for combining eyetracking with fMRI, using unique characterics of eye movements, such as saccade velocity (how fast the eye rotates towards or away from a target), and finding robust analysis techniques for noisy measures such as eye blinks and pupil dialation. </span></p>\n<p><span>The project was also successfuly in training and mentoring graduate students who went on to work in prestigious academic or industry research positions. Furthmore, undergraduates engaged in Research Experience for Undergraduates (REU), prepared participants in advanced graduate study, applying qualitative and quantitative research skills to solve software engineering problems, enhancing the diversity of the computing research pipeline, and disseminating research results. Both graduate students and REU participants had experience in dissementing published work and presenting in top-tier conferences, including the International Conference on Software Engineering (ICSE), and the ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE).</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 05/27/2020<br>\n\t\t\t\t\tModified by: Christopher&nbsp;J&nbsp;Parnin</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIn a NSF sponsored project, various techniques to measure the cognitive effort of programmers with biosensors were designed and evaluated. These measures can allow researchers to understand the effects of different representations and tasks on the ability for programmers to easily and correctly understand code. More generally, these measures can be used to support evaluating the effectiveness of programming tools in reducing difficulty and errors when programming, improving the software and infrastructure used by society. In designing these techniques, the project saught to overcome two main challenges---improving the fidelity (how accurate) and robustness of the cognitive measures with biosensors caused by limited sensitivity or noise due to movement. \n\nKey outcomes include discovery of widely used code complexity measures to measure the quality of code in industry that have no actual predictive relationship of observed cognitive effort, understanding how programmers integrate social signals when evaluating code contributions, discovery of ineffective interview procedures for hiring programmers that reduce hiring yield and increase frustration, stress, and bias. Finally, several novel techniques for obtaining measures of cognitive effort were discovered, including measuring neural efficiency and deactivation of the default mode network with fMRI, methods for combining eyetracking with fMRI, using unique characterics of eye movements, such as saccade velocity (how fast the eye rotates towards or away from a target), and finding robust analysis techniques for noisy measures such as eye blinks and pupil dialation. \n\nThe project was also successfuly in training and mentoring graduate students who went on to work in prestigious academic or industry research positions. Furthmore, undergraduates engaged in Research Experience for Undergraduates (REU), prepared participants in advanced graduate study, applying qualitative and quantitative research skills to solve software engineering problems, enhancing the diversity of the computing research pipeline, and disseminating research results. Both graduate students and REU participants had experience in dissementing published work and presenting in top-tier conferences, including the International Conference on Software Engineering (ICSE), and the ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE).\n\n\t\t\t\t\tLast Modified: 05/27/2020\n\n\t\t\t\t\tSubmitted by: Christopher J Parnin"
 }
}