{
 "awd_id": "1814234",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: CORE: Small: Collaborative: Fine Grained Protection for Scalable Single-Use Services",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2018-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 266000.0,
 "awd_amount": 282000.0,
 "awd_min_amd_letter_date": "2018-08-24",
 "awd_max_amd_letter_date": "2021-05-19",
 "awd_abstract_narration": "Popular Internet servers and web sites may serve thousands of users simultaneously. To handle this volume of activity, these servers share resources, such as processors, memory, and hard disk space. These shared resources provide an avenue for an attacker to affect other users connected to the server if the attacker successfully exploits a vulnerability in the server. This research project aims to eliminate this risk by creating an individual, customized server instance for each user that runs within an isolated single-use container. When the container isolation is carefully managed, this technique prevents an attacker from being able to affect other users, even if the attacker exploits a server instance within a container. The project explores innovative techniques to achieve scalability and security for these containerized services. With over 3 billion people using the Internet, many of whom interact with user-facing servers multiple times a day, the project's outcomes can broadly impact society's computer security. In addition to preventing attackers from affecting other users, the container approach enables detailed forensics to allow defenders to learn from attacks. The research project additionally provides educational opportunities for undergraduate and graduate students as well as outreach activities for the community.\r\n\r\nTo create these single-use containers, the project explores new techniques across the areas of operating systems, network controllers, authentication, and capability management. The project's first research direction explores opportunities to create new operating system and network-function virtualization techniques to scale to large numbers of containers on each host. A second research direction focuses on the design and implementation of new network and container management algorithms so that flexible security policies can be applied on a per-user basis. A third research direction explores how to manage the access and identity associated with each container to tailor permissions to match those of the user on the client. A final research direction explores automated response mechanisms and forensic collection measures needed to understand and reconstruct attacks. These techniques allow defenders to learn the details surrounding container vulnerabilities each time an attacker compromises a container. In combination, these research activities shift the security advantage to the server operator by transforming previously destructive attacks into instructive lessons for the defenders.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Timothy",
   "pi_last_name": "Wood",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Timothy Wood",
   "pi_email_addr": "timwood@gwu.edu",
   "nsf_id": "000621583",
   "pi_start_date": "2018-08-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "George Washington University",
  "inst_street_address": "1918 F ST NW",
  "inst_street_address_2": "",
  "inst_city_name": "WASHINGTON",
  "inst_state_code": "DC",
  "inst_state_name": "District of Columbia",
  "inst_phone_num": "2029940728",
  "inst_zip_code": "200520042",
  "inst_country_name": "United States",
  "cong_dist_code": "00",
  "st_cong_dist_code": "DC00",
  "org_lgl_bus_name": "GEORGE WASHINGTON UNIVERSITY (THE)",
  "org_prnt_uei_num": "",
  "org_uei_num": "ECR5E2LU5BL6"
 },
 "perf_inst": {
  "perf_inst_name": "George Washington University",
  "perf_str_addr": "2121 Eye St",
  "perf_city_name": "Washington",
  "perf_st_code": "DC",
  "perf_st_name": "District of Columbia",
  "perf_zip_code": "200520001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "00",
  "perf_st_cong_dist": "DC00",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 266000.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Internet applications serve thousands of users simultaneously in order to reduce cost and increase efficiency. However, this sharing of resources gives an attacker the potential to affect other users connected to the same server. Finding a single vulnerability can allow an attacker to steal information or affect the availability or integrity of the service being provided. At the root of this problem is the inability of applications, operating systems, and networks to provide fine-grained isolation primitives without incurring unreasonably high cost. In this project we have developed new approaches to protecting applications by focusing on lightweight isolation mechanisms that can limit the impact of attackers while still supporting high throughput and low latency services. <br /><br />We have demonstrated how these ideas can be applied to web applications in order to enable \"single user services\" that are created on demand for each individual user connecting to the site. By instantiating a new container for each user, we ensure their mutual isolation. This requires careful management of cryptographic keys and network monitoring support to separate flows and identify potential compromise. Further, we have designed techniques to facilitate root cause analysis of an attack, which leverages our fine-grained protection domains to more easily identify the actions of attackers.<br /><br />Next we have explored how isolation can be provided as a lightweight primitive by the underlying operating system. Our work on EdgeOS shows that we can instantiate an isolation domain at microsecond scale, many orders of magnitude faster than prior approaches. This allows us to support even applications with extremely high performance requirements such as network function virtualization middleboxes.<br /><br />In both of these environments, we show that isolating users at fine-grain can greatly reduce the consequences of an attack. While prior approaches incurred too great an overhead to do so efficiently, our approaches are both highly scalable and incur minimal runtime overheads.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/14/2022<br>\n\t\t\t\t\tModified by: Timothy&nbsp;Wood</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nInternet applications serve thousands of users simultaneously in order to reduce cost and increase efficiency. However, this sharing of resources gives an attacker the potential to affect other users connected to the same server. Finding a single vulnerability can allow an attacker to steal information or affect the availability or integrity of the service being provided. At the root of this problem is the inability of applications, operating systems, and networks to provide fine-grained isolation primitives without incurring unreasonably high cost. In this project we have developed new approaches to protecting applications by focusing on lightweight isolation mechanisms that can limit the impact of attackers while still supporting high throughput and low latency services. \n\nWe have demonstrated how these ideas can be applied to web applications in order to enable \"single user services\" that are created on demand for each individual user connecting to the site. By instantiating a new container for each user, we ensure their mutual isolation. This requires careful management of cryptographic keys and network monitoring support to separate flows and identify potential compromise. Further, we have designed techniques to facilitate root cause analysis of an attack, which leverages our fine-grained protection domains to more easily identify the actions of attackers.\n\nNext we have explored how isolation can be provided as a lightweight primitive by the underlying operating system. Our work on EdgeOS shows that we can instantiate an isolation domain at microsecond scale, many orders of magnitude faster than prior approaches. This allows us to support even applications with extremely high performance requirements such as network function virtualization middleboxes.\n\nIn both of these environments, we show that isolating users at fine-grain can greatly reduce the consequences of an attack. While prior approaches incurred too great an overhead to do so efficiently, our approaches are both highly scalable and incur minimal runtime overheads.\n\n\t\t\t\t\tLast Modified: 01/14/2022\n\n\t\t\t\t\tSubmitted by: Timothy Wood"
 }
}