{
 "awd_id": "1814928",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Collaborative Research: Harvesting Wasted Time and Existing Circuitry for Efficient Field Testing",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927843",
 "po_email": "sabasu@nsf.gov",
 "po_sign_block_name": "Sankar Basu",
 "awd_eff_date": "2018-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 391769.0,
 "awd_amount": 391769.0,
 "awd_min_amd_letter_date": "2018-05-18",
 "awd_max_amd_letter_date": "2018-05-18",
 "awd_abstract_narration": "Digital integrated circuits (ICs) are the \"brains\" in the electronic devices used throughout modern society.  It is essential that these devices work correctly and reliably - especially in critical applications such as autonomous vehicles, infrastructure, the financial system, and health care.  In such applications, highly effective and efficient testing should be done in the field to identify problems that may arise after the device has been sent to the customer.  Thus, in this project, new ways of using circuitry already present on modern ICs while efficiently creating, applying, and transporting field-based tests to different parts of the chip will be investigated. At the same time, educational opportunities made possible through the project will be pursued, including the use of research findings in courses, the involvement of graduate and undergraduate students in the research, and outreach to high school students through summer camps and research opportunities.  The inclusion of members of underrepresented groups in these educational opportunities will be a focus of the investigators, who already have a proven record in mentoring such students in research.  \r\n\r\nTo address the field-testing issues, three major tasks will be performed in this research.  First, methods that use existing error-detection circuitry in an IC to make the field testing process more efficient will be explored.  In particular, times when the IC is operating in normal functional mode will be used to test for the presence of some faults.  Testing for those same faults in dedicated test sessions can then be avoided, reducing test time and the amount of time a circuit must be taken offline for test.  Next, methods for effectively using otherwise wasted time during dedicated test sessions to detect faults will be explored.  Finally, approaches that optimize the internal test network to efficiently send data used for test throughout a chip will be investigated.   Taken together, these approaches should enable field-based test to achieve high fault coverage while minimizing test time, thus enhancing the reliability of devices that so many people depend upon every day.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jennifer",
   "pi_last_name": "Dworak",
   "pi_mid_init": "L",
   "pi_sufx_name": "",
   "pi_full_name": "Jennifer L Dworak",
   "pi_email_addr": "jdworak@lyle.smu.edu",
   "nsf_id": "000061568",
   "pi_start_date": "2018-05-18",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Theodore",
   "pi_last_name": "Manikas",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Theodore Manikas",
   "pi_email_addr": "manikas@lyle.smu.edu",
   "nsf_id": "000550982",
   "pi_start_date": "2018-05-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Southern Methodist University",
  "inst_street_address": "6425 BOAZ ST RM 130",
  "inst_street_address_2": "",
  "inst_city_name": "DALLAS",
  "inst_state_code": "TX",
  "inst_state_name": "Texas",
  "inst_phone_num": "2147684708",
  "inst_zip_code": "752051902",
  "inst_country_name": "United States",
  "cong_dist_code": "24",
  "st_cong_dist_code": "TX24",
  "org_lgl_bus_name": "SOUTHERN METHODIST UNIVERSITY",
  "org_prnt_uei_num": "S88YPE3BLV66",
  "org_uei_num": "D33QGS3Q3DJ3"
 },
 "perf_inst": {
  "perf_inst_name": "Southern Methodist University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "TX",
  "perf_st_name": "Texas",
  "perf_zip_code": "752750302",
  "perf_ctry_code": "US",
  "perf_cong_dist": "32",
  "perf_st_cong_dist": "TX32",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7945",
   "pgm_ref_txt": "DES AUTO FOR MICRO & NANO SYST"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 391769.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Digital integrated circuits (ICs) are the \"brains\" in the electronic devices used throughout modern society.&nbsp; In this project, new ways of designing and using circuitry in modern ICs to efficiently apply field-based tests with low overhead were investigated.&nbsp;<br /><br /><strong>Intellectual Merit:</strong> Modern microprocessors may be used in mission critical embedded systems that require regular testing while a device is in the field.&nbsp; Often, where multiple cores are present, this testing could require taking a core offline to allow that core to be tested while the actual \"work\" of the machine is performed on the other cores.&nbsp; This means that the time required to detect a new defect may be larger than desired because it is necessary to wait for the next test session.&nbsp; In addition, transferring the work from core to core requires time and resources.<br /><br />To address this issue, we developed an approach that allows us to detect new defects by interspersing test patterns into a program while it is running.&nbsp; Specifically, our approach takes advantage of stall cycles that occur naturally in program execution on a pipelined machine.&nbsp; We characterized the profile of the stall cycles in the execution stage of a pipelined machine for different programs, and we identified the faults that were most likely to cause actual errors in the calculations performed by the Arithmetic Logic Unit (ALU).&nbsp; We showed that only a subset of all faults was likely to cause failures across the multiple programs studied and that these faults were most likely to cause errors that would otherwise remain undetected in program execution.&nbsp; Focusing on these faults during test allows us to significantly reduce the size of the test set applied while still maintaining high coverage of the problems likely to cause functional errors.<br /><br />We then created new circuit logic to allow test patterns present in a specialized pattern memory to be transported and applied to the execution stage whenever a stall cycle is detected.&nbsp; We designed the logic to enable detection of not only static faults that cause permanent logic errors, but excessive circuit delays modeled as transition faults as well.&nbsp; Because transition faults require the application of two consecutive test patterns for detection, additional investigation was performed to determine the best approach for test application when a single stall cycle is immediately followed by a functional clock cycle instead of another stall cycle that can be used for the second pattern in a test pattern pair.&nbsp; Here, we found that it was important to ensure that both patterns of the pair were eventually applied before continuing to the next pattern pair.&nbsp; As a result, the first pattern in the pair might be applied repeatedly for multiple single stall clock cycles until a double stall cycle occurred to allow both patterns in the pair to be applied.&nbsp; This was shown to often decrease the median time to detection of faults.<br /><br />We also explored the ability of additional logic connected to the state-holding elements in a design to enable tests patterns to be applied more efficiently&mdash;with low power and/or allowing defects to be detected even while the test pattern is being shifted into the device and test patterns are being shifted out of the device.&nbsp; We demonstrated that the number of detections of the otherwise least detected faults could be dramatically increased for many faults with no increase in test time&mdash;leading to the ability to apply tests in the field very efficiently while maximizing the chances of detecting unmodeled defects.&nbsp; Finally, we modified our approach to also allow future timing errors to be predicted in functional mode&mdash;allowing potential problems to be identified and mitigated even before an error occurs.<br /><br /><strong>Broader Impact: </strong>The research performed in this project has significant implications for the reliability, correctness, and safety of digital integrated circuits in a variety of applications, such as financial systems, transportation, control systems, and healthcare.&nbsp; Such circuits can also be used to collect data for other scientific applications.&nbsp; The work performed here has shown how additional circuitry, fault analysis, and automatic test pattern generation can be combined to detect these problems that arise in the field and possibly even prevent future errors.<br /><br />The project also provided an important opportunity for educating students in reliability and test at both the undergraduate and graduate level.&nbsp; Materials and insights that arose from the research were incorporated into classes, and students from multiple underrepresented groups in the computing sciences and engineering have contributed to different aspects of the project.&nbsp; The PIs ensured that students had ample opportunities to not only learn about research and the technical details of the project but to also gain experience in presenting their work and contributing to the writing of papers and presentations that communicated their work to the broader public.<br /><br /></p><br>\n<p>\n Last Modified: 01/27/2024<br>\nModified by: Theodore&nbsp;Manikas</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nDigital integrated circuits (ICs) are the \"brains\" in the electronic devices used throughout modern society. In this project, new ways of designing and using circuitry in modern ICs to efficiently apply field-based tests with low overhead were investigated.\n\nIntellectual Merit: Modern microprocessors may be used in mission critical embedded systems that require regular testing while a device is in the field. Often, where multiple cores are present, this testing could require taking a core offline to allow that core to be tested while the actual \"work\" of the machine is performed on the other cores. This means that the time required to detect a new defect may be larger than desired because it is necessary to wait for the next test session. In addition, transferring the work from core to core requires time and resources.\n\nTo address this issue, we developed an approach that allows us to detect new defects by interspersing test patterns into a program while it is running. Specifically, our approach takes advantage of stall cycles that occur naturally in program execution on a pipelined machine. We characterized the profile of the stall cycles in the execution stage of a pipelined machine for different programs, and we identified the faults that were most likely to cause actual errors in the calculations performed by the Arithmetic Logic Unit (ALU). We showed that only a subset of all faults was likely to cause failures across the multiple programs studied and that these faults were most likely to cause errors that would otherwise remain undetected in program execution. Focusing on these faults during test allows us to significantly reduce the size of the test set applied while still maintaining high coverage of the problems likely to cause functional errors.\n\nWe then created new circuit logic to allow test patterns present in a specialized pattern memory to be transported and applied to the execution stage whenever a stall cycle is detected. We designed the logic to enable detection of not only static faults that cause permanent logic errors, but excessive circuit delays modeled as transition faults as well. Because transition faults require the application of two consecutive test patterns for detection, additional investigation was performed to determine the best approach for test application when a single stall cycle is immediately followed by a functional clock cycle instead of another stall cycle that can be used for the second pattern in a test pattern pair. Here, we found that it was important to ensure that both patterns of the pair were eventually applied before continuing to the next pattern pair. As a result, the first pattern in the pair might be applied repeatedly for multiple single stall clock cycles until a double stall cycle occurred to allow both patterns in the pair to be applied. This was shown to often decrease the median time to detection of faults.\n\nWe also explored the ability of additional logic connected to the state-holding elements in a design to enable tests patterns to be applied more efficientlywith low power and/or allowing defects to be detected even while the test pattern is being shifted into the device and test patterns are being shifted out of the device. We demonstrated that the number of detections of the otherwise least detected faults could be dramatically increased for many faults with no increase in test timeleading to the ability to apply tests in the field very efficiently while maximizing the chances of detecting unmodeled defects. Finally, we modified our approach to also allow future timing errors to be predicted in functional modeallowing potential problems to be identified and mitigated even before an error occurs.\n\nBroader Impact: The research performed in this project has significant implications for the reliability, correctness, and safety of digital integrated circuits in a variety of applications, such as financial systems, transportation, control systems, and healthcare. Such circuits can also be used to collect data for other scientific applications. The work performed here has shown how additional circuitry, fault analysis, and automatic test pattern generation can be combined to detect these problems that arise in the field and possibly even prevent future errors.\n\nThe project also provided an important opportunity for educating students in reliability and test at both the undergraduate and graduate level. Materials and insights that arose from the research were incorporated into classes, and students from multiple underrepresented groups in the computing sciences and engineering have contributed to different aspects of the project. The PIs ensured that students had ample opportunities to not only learn about research and the technical details of the project but to also gain experience in presenting their work and contributing to the writing of papers and presentations that communicated their work to the broader public.\n\n\t\t\t\t\tLast Modified: 01/27/2024\n\n\t\t\t\t\tSubmitted by: TheodoreManikas\n"
 }
}