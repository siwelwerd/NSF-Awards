{
 "awd_id": "1813485",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Decoupling File System from Volatile Main Memory: A First Step towards a Single-Level Persistent Store",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2018-09-01",
 "awd_exp_date": "2023-08-31",
 "tot_intn_awd_amt": 336873.0,
 "awd_amount": 336873.0,
 "awd_min_amd_letter_date": "2018-06-29",
 "awd_max_amd_letter_date": "2018-06-29",
 "awd_abstract_narration": "A file system is a computer software module, which is in charge of how files are named, stored, and retrieved. Existing memory systems are based on dynamic random-access memory (DRAM), which is reaching its density and power ceiling. Emerging persistent memory technologies like phase change memory (PCM) not only provide a denser energy-efficient alternative to DRAM, but also allow file systems to be built atop them. This project will contribute to memory and storage technologies by developing a new single-level persistent memory architecture and a new file system dedicated to it. \r\n\r\nThe new architecture will turn a small-size DRAM-based main memory system to a large-capacity persistent memory system that can access files in-place. This project will proceed along two thrusts. First, it will bridge the technology gap in building high-performance persistent memory systems with an in-depth investigation. Second, it will develop the first file system devoted to a single-level persistent store to efficiently managing data, which is increasingly demanded by data-intensive applications.\r\n\r\nThis project will benefit society by developing high-performance memory systems that will significantly improve the performance and energy-efficiency of future big data applications, which are revolutionizing all aspects of human lives ranging from enterprises to consumers, from science to government. In the long term, techniques developed in this project will be transferable to servers/clusters and even to large-scale distributed storage systems for big data applications, where performance requirements are more stringent. This project will also promote teaching, learning, and training by exposing students to technological and scientific underpinnings in the field of big data storage systems. \r\n\r\nThe project outcomes including papers published, technical reports, presentations, course modules, and a repository of the software code will be made available for free download at the address http://taoxie.sdsu.edu/, where they will be kept for ten years. The source code of the new persistent file system will also be posted on GitHub.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Tao",
   "pi_last_name": "Xie",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Tao Xie",
   "pi_email_addr": "txie@sdsu.edu",
   "nsf_id": "000493568",
   "pi_start_date": "2018-06-29",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "San Diego State University Foundation",
  "inst_street_address": "5250 CAMPANILE DR",
  "inst_street_address_2": "",
  "inst_city_name": "SAN DIEGO",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "6195945731",
  "inst_zip_code": "921821901",
  "inst_country_name": "United States",
  "cong_dist_code": "51",
  "st_cong_dist_code": "CA51",
  "org_lgl_bus_name": "SAN DIEGO STATE UNIVERSITY FOUNDATION",
  "org_prnt_uei_num": "H59JKGFZKHL7",
  "org_uei_num": "H59JKGFZKHL7"
 },
 "perf_inst": {
  "perf_inst_name": "San Diego State University",
  "perf_str_addr": "5500 Campanile Drive",
  "perf_city_name": "San Diego",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "921827455",
  "perf_ctry_code": "US",
  "perf_cong_dist": "51",
  "perf_st_cong_dist": "CA51",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 336873.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Emerging byte-addressable persistent memory (PM) technologies like 3D XPoint exhibit a huge potential to become a viable DRAM (dynamic random access memory) alternative for scalable main memories. Compared with traditional DRAM, they possess several desirable features such as a much larger capacity and higher energy-efficiency. &nbsp;Besides, with the advent of a big data era, delivery and analysis of large data sets are often required by data-intensive applications like DNA sequencing and geographic information system. As a result, the conventional compute-centric computing framework is becoming increasingly inadequate as delivering these large data sets all the way from an external storage system to host CPUs (central processing units) incurs substantial data transfer latency and energy consumption. To address these challenges, near-data processing (NDP) is proposed to move computation to data.</p>\n<p>To tap the potential of PM technologies and NDP, this project developed an array of new software techniques and tools, which include: (1) a new file system that is completely decoupled from the conventional DRAM-based volatile main memory; (2) two new indexing data structures that run on persistent memory; (3) two new reconfigurable NDP-powered servers; (4) two new kNN (k-Nearest Neighbor) kernels on FPGA (Field Programmable Gate Arrays); and (5) a prototype of a file system middleware.</p>\n<p>A new persistent file system called SPFS (Single-level Persistent File System) was developed. It completely bypasses conventional DRAM-based volatile main memory. Unlike all existing PM-oriented file systems, SPFS does not leverage DRAM to manage its metadata. SPFS outperforms traditional DRAM-based in-memory file systems <em>ramfs</em> and <em>tmpfs</em> in most cases. A concurrent and persistent data indexing tree called HART (Hash-assisted Adaptive Radix Tree) was developed. In most cases, HART significantly outperforms WOART (Write Optimal Adaptive Radix Tree) and FPTree (Fingerprinting Persistent Tree), two state-of-the-art persistent trees. Also, it scales well in concurrent scenarios. A persistent dynamic hashing scheme was also developed for persistent memory. It exhibits good performance, high scalability, and quick recovery.</p>\n<p>Two reconfigurable NDP servers named RANS (Reconfigurable ARM-based NDP Server) and RFNS (Reconfigurable FPGA-based NDP Server) were developed. Several new findings were obtained, which shed light on how to apply NDP in data centers. For example, we found that while RANS can only benefit data-intensive applications, RFNS can offer benefits for both data-intensive and compute-intensive applications. Moreover, we found that for certain applications the reconfigurability of RANS/RFNS can deliver a noticeable energy efficiency without any performance degradation.</p>\n<p>To demonstrate how to achieve NDP by using a hardware accelerator such as FPGA, we implemented two kNN kernels on FPGA: MBFS-kNN (Memory-efficient Brute-Force Searching kNN) and MPCAF-kNN (Memory-efficient Principal Component Analysis based Filtering kNN). The two kernels are adaptive to all key parameters. By comparing them with two cutting-edge kNN implementations on a high-end CPU server, an existing BFS-kNN kernel on FPGA, and an existing BFS-kNN kernel on GPU (Graphics Processing Unit), our experimental results show that the two kernels substantially improve the performance by greatly reducing external memory-accesses. We also developed a file system middleware that optimizes the acquisition of bags, which are specially formatted files used to store timestamped ROS (robot operating system) messages.&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/26/2023<br>\n\t\t\t\t\tModified by: Tao&nbsp;Xie</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nEmerging byte-addressable persistent memory (PM) technologies like 3D XPoint exhibit a huge potential to become a viable DRAM (dynamic random access memory) alternative for scalable main memories. Compared with traditional DRAM, they possess several desirable features such as a much larger capacity and higher energy-efficiency.  Besides, with the advent of a big data era, delivery and analysis of large data sets are often required by data-intensive applications like DNA sequencing and geographic information system. As a result, the conventional compute-centric computing framework is becoming increasingly inadequate as delivering these large data sets all the way from an external storage system to host CPUs (central processing units) incurs substantial data transfer latency and energy consumption. To address these challenges, near-data processing (NDP) is proposed to move computation to data.\n\nTo tap the potential of PM technologies and NDP, this project developed an array of new software techniques and tools, which include: (1) a new file system that is completely decoupled from the conventional DRAM-based volatile main memory; (2) two new indexing data structures that run on persistent memory; (3) two new reconfigurable NDP-powered servers; (4) two new kNN (k-Nearest Neighbor) kernels on FPGA (Field Programmable Gate Arrays); and (5) a prototype of a file system middleware.\n\nA new persistent file system called SPFS (Single-level Persistent File System) was developed. It completely bypasses conventional DRAM-based volatile main memory. Unlike all existing PM-oriented file systems, SPFS does not leverage DRAM to manage its metadata. SPFS outperforms traditional DRAM-based in-memory file systems ramfs and tmpfs in most cases. A concurrent and persistent data indexing tree called HART (Hash-assisted Adaptive Radix Tree) was developed. In most cases, HART significantly outperforms WOART (Write Optimal Adaptive Radix Tree) and FPTree (Fingerprinting Persistent Tree), two state-of-the-art persistent trees. Also, it scales well in concurrent scenarios. A persistent dynamic hashing scheme was also developed for persistent memory. It exhibits good performance, high scalability, and quick recovery.\n\nTwo reconfigurable NDP servers named RANS (Reconfigurable ARM-based NDP Server) and RFNS (Reconfigurable FPGA-based NDP Server) were developed. Several new findings were obtained, which shed light on how to apply NDP in data centers. For example, we found that while RANS can only benefit data-intensive applications, RFNS can offer benefits for both data-intensive and compute-intensive applications. Moreover, we found that for certain applications the reconfigurability of RANS/RFNS can deliver a noticeable energy efficiency without any performance degradation.\n\nTo demonstrate how to achieve NDP by using a hardware accelerator such as FPGA, we implemented two kNN kernels on FPGA: MBFS-kNN (Memory-efficient Brute-Force Searching kNN) and MPCAF-kNN (Memory-efficient Principal Component Analysis based Filtering kNN). The two kernels are adaptive to all key parameters. By comparing them with two cutting-edge kNN implementations on a high-end CPU server, an existing BFS-kNN kernel on FPGA, and an existing BFS-kNN kernel on GPU (Graphics Processing Unit), our experimental results show that the two kernels substantially improve the performance by greatly reducing external memory-accesses. We also developed a file system middleware that optimizes the acquisition of bags, which are specially formatted files used to store timestamped ROS (robot operating system) messages. \n\n \n\n\t\t\t\t\tLast Modified: 10/26/2023\n\n\t\t\t\t\tSubmitted by: Tao Xie"
 }
}