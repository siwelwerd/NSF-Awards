{
 "awd_id": "1825406",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: Performance  Guarantees for Approximate Dynamic Programming Approaches to Pricing and Capacity Management",
 "cfda_num": "47.041",
 "org_code": "07030000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Georgia-Ann Klutke",
 "awd_eff_date": "2018-09-01",
 "awd_exp_date": "2023-08-31",
 "tot_intn_awd_amt": 356000.0,
 "awd_amount": 356000.0,
 "awd_min_amd_letter_date": "2018-07-30",
 "awd_max_amd_letter_date": "2018-07-30",
 "awd_abstract_narration": "This project will benefit the U.S. economy and public quality of life by developing new solution methods for problems that involve dynamically managing the prices and limited resources to serve uncertain customer demands. Such pricing and capacity management problems occur in many settings, including selling processing capacity in cloud computing, pricing itineraries in airlines and hotels, and matching drivers with passengers in on-demand transportation. In these problems, finding the optimal course of action at any point in time requires keeping track of a large amount of information, including remaining processing times on thousands of servers, capacities left on hundreds of flights, and locations of thousands of drivers, along with forecasts of future needs. Existing solution methods often ignore the uncertainty in demand or the detailed customer arrival process. The fundamental research of this project will provide new knowledge and techniques for solving these challenging problems. The techniques will apply to a wide range of applications, will scale to large-scale problems brought by the information age, and will help make decisions at a rapid rate. This project will also broaden the participation of underrepresented groups and positively impact engineering education through the development of online certificate programs, shared data-sets, and industry collaborations. \r\n\r\nDynamic programming is a general framework that can address dynamic decision-making problems under uncertainty, but dynamic programming formulations often end up with high-dimensional state variables, which make them difficult to solve. This research will develop approximate dynamic programming methods for a variety of pricing and capacity management problems that frequently occur in practice, including (a) pricing problems with reusable products, applicable to cloud computing systems where processing capacity is reusable, (b) pricing problems over a network of resources, applicable to airlines and hotels where there is an underlying network of resources and the sale of a product consumes a combination of resources, and (c) product pairing problems for upselling, applicable to online retail where additional product recommendations are made during checkout. The approximate dynamic programming methods will have performance guarantees. Some of these performance guarantees, especially those for pricing over a network of resources, will be the first of its kind.  The methods will be flexible for a wide range of applications and will be scalable to industrial problem instances.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "ENG",
 "org_dir_long_name": "Directorate for Engineering",
 "div_abbr": "CMMI",
 "org_div_long_name": "Division of Civil, Mechanical, and Manufacturing Innovation",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Huseyin",
   "pi_last_name": "Topaloglu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Huseyin Topaloglu",
   "pi_email_addr": "ht88@cornell.edu",
   "nsf_id": "000202531",
   "pi_start_date": "2018-07-30",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "2 West Loop Road",
  "perf_city_name": "New York",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "100440052",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "NY12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "006Y00",
   "pgm_ele_name": "OE Operations Engineering"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "5514",
   "pgm_ref_txt": "OPERATIONS RESEARCH"
  },
  {
   "pgm_ref_code": "073E",
   "pgm_ref_txt": "OPTIMIZATION & DECISION MAKING"
  },
  {
   "pgm_ref_code": "078E",
   "pgm_ref_txt": "ENTERPRISE DESIGN & LOGISTICS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 356000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>In this research project, we developed models and algorithms for high-dimensional dynamic pricing and capacity allocation problems. Our approach is based on formulating such problems as dynamic programs, which usually end up being intractable to solve due to their high-dimensional state variables. We developed approximate dynamic programming strategies to construct policies with provable performance guarantees. The types of dynamic pricing and capacity allocation problems that we studied find applications in many settings. For example, cloud computing systems sell their unused computing capacity on the spot market. Given their obligations to contracts with different service level guarantees, providers of cloud computing capacity need to dynamically manage the prices they charge on the spot market. Similarly, online travel agencies offer thousands of airline itinerary and hotel products to their customers. A flight leg can be used to fly between many different origin-destination pairs. A customer looking for a hotel in a certain part of a city can substitute among many different hotels. These considerations create complex interactions between the prices charged for the different itineraries and hotels. Dynamic programming provides a natural framework for computing optimal policies for the class of dynamic pricing and capacity allocation problems that we consider, but it often ends up with high-dimensional state variables, in which case, it becomes computationally difficult to find the optimal policy. Our approach uses approximate dynamic programming tools to develop policies with provable performance guarantees, while making sure that we can handle industrial-scale problems. Our project resulted in the following outcomes.</p>\n<p>First, we studied revenue management problems over a network of resources. In this setting, we have resources with limited inventories. Each arriving customer makes a request for a product. If we accept the request for a product, then we consume the capacities of the resources used by the product and generate a certain amount revenue that depends on the sold product. One major application area for network revenue management problems occurs when selling airline tickets. In this setting, the resources correspond to the flight legs with limited capacities, whereas the products correspond to the itineraries that connect different origins to different destinations. Network revenue management problems also find applications in other areas, such as hospitality, cloud computing and media advertising. Letting L be the maximum number of resources used by a product, we develop a policy that is guaranteed to obtain at least 1/(1+L) fraction of the optimal total expected revenue. In practice, although the number of resources can be large, the number of resources used by a particular product is usually uniformly bounded. In the airline setting, for example, it is uncommon for an itinerary to use more than two or three connecting flight legs. In such settings, our policy yields a constant-factor performance guarantee.</p>\n<p>Second, we studied multi-product dynamic pricing problems with reusable products. In this problem setting, the products are reusable in the sense that the customers return the products back to the system after using them for a random duration of time, at which point the products can be used by other customers. Thus, when making pricing decisions, we need to consider the inventories of the products available on hand, as well as the inventories of the products that are currently in use. Despite the high-dimensionality of the state variable in the dynamic programming formulation of this problem, we give an approximate dynamic programming strategy that is guaranteed to obtain at least 50% of the optimal total expected revenue. Reusable products find applications in managing cloud computing capacities and providing fashion item rentals.</p>\n<p>Third, we extended the frontiers of network revenue management problems in two practically important directions, both of which required addressing new research challenges. In one direction, we considered network revenue management problems with flexible products. In the flexible products setting, the customer decides which product to purchase, but the decision-maker decides which combination of resources to use to serve the customer with a purchase for a particular product. In the airline setting, for example, customers can purchase discounted tickets between a certain origin-destination pair, but the airline gets to decide which itinerary the customer will take. We gave a policy with 1/(1+L) approximation guarantee to handle flexible products, where L is, as before, the maximum number of resources used by a product. In another direction, we considered network revenue management problems with heterogenous resources, where each resource has a capacity of one. Heterogenous resources occur, for example, when managing the requests for a group of unique vacation units. We developed a policy that is guaranteed to obtain at least of 1/(3+(Lmax/Lmin)) fraction of the optimal total expected revenue, where Lmax and Lmin are, respectively, the largest and smallest numbers of resources used by a product. When the deviation between Lmax and Lmin is uniformly bounded, our policy has a constant-factor performance guarantee.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/27/2023<br>\n\t\t\t\t\tModified by: Huseyin&nbsp;Topaloglu</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIn this research project, we developed models and algorithms for high-dimensional dynamic pricing and capacity allocation problems. Our approach is based on formulating such problems as dynamic programs, which usually end up being intractable to solve due to their high-dimensional state variables. We developed approximate dynamic programming strategies to construct policies with provable performance guarantees. The types of dynamic pricing and capacity allocation problems that we studied find applications in many settings. For example, cloud computing systems sell their unused computing capacity on the spot market. Given their obligations to contracts with different service level guarantees, providers of cloud computing capacity need to dynamically manage the prices they charge on the spot market. Similarly, online travel agencies offer thousands of airline itinerary and hotel products to their customers. A flight leg can be used to fly between many different origin-destination pairs. A customer looking for a hotel in a certain part of a city can substitute among many different hotels. These considerations create complex interactions between the prices charged for the different itineraries and hotels. Dynamic programming provides a natural framework for computing optimal policies for the class of dynamic pricing and capacity allocation problems that we consider, but it often ends up with high-dimensional state variables, in which case, it becomes computationally difficult to find the optimal policy. Our approach uses approximate dynamic programming tools to develop policies with provable performance guarantees, while making sure that we can handle industrial-scale problems. Our project resulted in the following outcomes.\n\nFirst, we studied revenue management problems over a network of resources. In this setting, we have resources with limited inventories. Each arriving customer makes a request for a product. If we accept the request for a product, then we consume the capacities of the resources used by the product and generate a certain amount revenue that depends on the sold product. One major application area for network revenue management problems occurs when selling airline tickets. In this setting, the resources correspond to the flight legs with limited capacities, whereas the products correspond to the itineraries that connect different origins to different destinations. Network revenue management problems also find applications in other areas, such as hospitality, cloud computing and media advertising. Letting L be the maximum number of resources used by a product, we develop a policy that is guaranteed to obtain at least 1/(1+L) fraction of the optimal total expected revenue. In practice, although the number of resources can be large, the number of resources used by a particular product is usually uniformly bounded. In the airline setting, for example, it is uncommon for an itinerary to use more than two or three connecting flight legs. In such settings, our policy yields a constant-factor performance guarantee.\n\nSecond, we studied multi-product dynamic pricing problems with reusable products. In this problem setting, the products are reusable in the sense that the customers return the products back to the system after using them for a random duration of time, at which point the products can be used by other customers. Thus, when making pricing decisions, we need to consider the inventories of the products available on hand, as well as the inventories of the products that are currently in use. Despite the high-dimensionality of the state variable in the dynamic programming formulation of this problem, we give an approximate dynamic programming strategy that is guaranteed to obtain at least 50% of the optimal total expected revenue. Reusable products find applications in managing cloud computing capacities and providing fashion item rentals.\n\nThird, we extended the frontiers of network revenue management problems in two practically important directions, both of which required addressing new research challenges. In one direction, we considered network revenue management problems with flexible products. In the flexible products setting, the customer decides which product to purchase, but the decision-maker decides which combination of resources to use to serve the customer with a purchase for a particular product. In the airline setting, for example, customers can purchase discounted tickets between a certain origin-destination pair, but the airline gets to decide which itinerary the customer will take. We gave a policy with 1/(1+L) approximation guarantee to handle flexible products, where L is, as before, the maximum number of resources used by a product. In another direction, we considered network revenue management problems with heterogenous resources, where each resource has a capacity of one. Heterogenous resources occur, for example, when managing the requests for a group of unique vacation units. We developed a policy that is guaranteed to obtain at least of 1/(3+(Lmax/Lmin)) fraction of the optimal total expected revenue, where Lmax and Lmin are, respectively, the largest and smallest numbers of resources used by a product. When the deviation between Lmax and Lmin is uniformly bounded, our policy has a constant-factor performance guarantee.\n\n\t\t\t\t\tLast Modified: 09/27/2023\n\n\t\t\t\t\tSubmitted by: Huseyin Topaloglu"
 }
}