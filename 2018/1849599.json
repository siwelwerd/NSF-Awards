{
 "awd_id": "1849599",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Collaborative Research: Improving Latency in Geo-Replicated Storage by Relaxing Consistency Requirements",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Jason Hallstrom",
 "awd_eff_date": "2018-08-15",
 "awd_exp_date": "2022-07-31",
 "tot_intn_awd_amt": 249797.0,
 "awd_amount": 249797.0,
 "awd_min_amd_letter_date": "2018-08-18",
 "awd_max_amd_letter_date": "2018-08-18",
 "awd_abstract_narration": "Recent years have seen a tremendous growth in the popularity of cloud services. Distributed storage systems are a key component of the cloud computing revolution. Distributed storage systems are designed to achieve a suitable tradeoff between latency, data consistency and dependability. This project addresses development of new consistency models that take into account application characteristics and hybrid fault models. The ultimate goal is to improve our understanding of the trade-offs between consistency, latency, and dependability in distributed storage systems.\r\n \r\nThe project includes two synergistic thrusts. First, the project explores consistency models that consider graph-based application characteristics. For example, social and trust graphs model user relation and interaction for many applications. The first thrust explores graph-based consistency models that are acceptable for the applications, and yet improve latency of client operations. Second, prior storage systems typically either only tolerate benign failures, or tolerate worst-case faults with high overhead. This project considers non-colluding faults as well as Byzantine faults, and investigates approaches to reduce overhead by relaxing some of the requirements imposed by prior systems.\r\n \r\nProposed research is expected to improve the understanding of the impact of application characteristics and different types of faults on consistency-latency trade-off in distributed storage systems. Tolerance of more severe faults is likely to become important for future critical web-based services and applications. Additionally, with the tremendous growth in social and trust networks, mechanisms to improve their performance are of interest. This project helps achieve such improvements through the development of new consistency models. Additionally, the project provides research opportunities to undergraduate and graduate students, and a post-doctoral researcher.\r\n\r\nThe data from the project is to be retained for at least two years after the completion of this project, and stored in local computers and online shared storage. The URL for the repository of the data, publications and software resulting from the project is https://sites.google.com/site/nsfgeoconsistency/.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Nitin",
   "pi_last_name": "Vaidya",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "Nitin H Vaidya",
   "pi_email_addr": "nv198@georgetown.edu",
   "nsf_id": "000101142",
   "pi_start_date": "2018-08-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Georgetown University",
  "inst_street_address": "MAIN CAMPUS",
  "inst_street_address_2": "",
  "inst_city_name": "WASHINGTON",
  "inst_state_code": "DC",
  "inst_state_name": "District of Columbia",
  "inst_phone_num": "2026250100",
  "inst_zip_code": "20057",
  "inst_country_name": "United States",
  "cong_dist_code": "00",
  "st_cong_dist_code": "DC00",
  "org_lgl_bus_name": "GEORGETOWN UNIVERSITY",
  "org_prnt_uei_num": "TF2CMKY1HMX9",
  "org_uei_num": "TF2CMKY1HMX9"
 },
 "perf_inst": {
  "perf_inst_name": "Georgetown University",
  "perf_str_addr": "37th & O St NW",
  "perf_city_name": "Washington",
  "perf_st_code": "DC",
  "perf_st_name": "District of Columbia",
  "perf_zip_code": "200571789",
  "perf_ctry_code": "US",
  "perf_cong_dist": "00",
  "perf_st_cong_dist": "DC00",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 249797.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Recent years have seen a significant growth in the popularity of online services accessed over the Internet. As industry and individuals rely increasingly on the cloud services, their availability becomes increasingly important. The availability is improved in practice via replication, which brings with it the problem of maintaining consistency across the replicas. &nbsp;</p>\n<p>In this project, we investigated checkpointing and rollback mechanisms under four different consistency models: (i) linearizability, (ii) sequential consistency, (iii) causal consistency, and (iv) eventual consistency. Linearizability is the strongest consistency model among these four, and eventual consistency is the weakest consistency model. Implementing a stronger consistency model results in the state of the distributed storage replicas satisfying stronger properties, when compared to weaker models. These stronger properties may potentially be exploited to improve the overhead of checkpointing algorithms. We developed checkpointing and rollback mechanisms for each of the four implementations, and demonstrated that it is possible to exploit stronger consistency model implementations to develop more efficient checkpointing and rollback mechanisms. We also explored the problem of checkpointing and rollback for distributed shared memory under the constraint that the implementation of shared memory is not visible to the checkpointing and rollback algorithm, but instead, the checkpointing and rollback must rely on the shared memory operations and any additional suitable primitives supposed by shared memory.</p>\n<p>Modern shared memory systems, such as key-value stores, support many different consistency models. Among the consistency models that have been explored in the prior literature, causal consistency is of particular interest. Causal consistency allows for low-latency operation while supporting a causal view of the execution for the users. Intuitively, when a user reads a certain value of a shared memory location, it can also correctly obtain all causally preceding updates to other shared memory variables. In such systems, the data accessed by the users is replicated to improve latency and fault-tolerance. The system may be either fully replicated (i.e., all the shared data is replicated in each replica) or partially replicated (i.e., each replica may store only a subset of the shared data). Partial replication allows for more efficient use of storage, while introducing greater complexity in implementing the consistency model. In particular, it introduces complexity by requiring more elaborate dependency-tracking. We considered alternate mechanisms for implementing partially replicated shared memory under causal consistency, and performed an evaluation of a global stabilization approach.&nbsp;</p>\n<p>We also improved the performance of distributed storage for large data objects. In particular, we developed efficient extension protocols for Byzantine broadcast and agreement. These protocols are useful in implementing replicated storage systems in the presence of Byzantine faulty replicas. The extension protocols achieve efficiency when broadcast or agreement is performed on large inputs.</p>\n<p>Selected results from the project have been published in papers and technical reports. Due to the increasing deployment of distributed storages, the results from this project have a significant potential for impact. Also, some of our fundamental results are expected to have an impact on future research in the area.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/29/2022<br>\n\t\t\t\t\tModified by: Nitin&nbsp;H&nbsp;Vaidya</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nRecent years have seen a significant growth in the popularity of online services accessed over the Internet. As industry and individuals rely increasingly on the cloud services, their availability becomes increasingly important. The availability is improved in practice via replication, which brings with it the problem of maintaining consistency across the replicas.  \n\nIn this project, we investigated checkpointing and rollback mechanisms under four different consistency models: (i) linearizability, (ii) sequential consistency, (iii) causal consistency, and (iv) eventual consistency. Linearizability is the strongest consistency model among these four, and eventual consistency is the weakest consistency model. Implementing a stronger consistency model results in the state of the distributed storage replicas satisfying stronger properties, when compared to weaker models. These stronger properties may potentially be exploited to improve the overhead of checkpointing algorithms. We developed checkpointing and rollback mechanisms for each of the four implementations, and demonstrated that it is possible to exploit stronger consistency model implementations to develop more efficient checkpointing and rollback mechanisms. We also explored the problem of checkpointing and rollback for distributed shared memory under the constraint that the implementation of shared memory is not visible to the checkpointing and rollback algorithm, but instead, the checkpointing and rollback must rely on the shared memory operations and any additional suitable primitives supposed by shared memory.\n\nModern shared memory systems, such as key-value stores, support many different consistency models. Among the consistency models that have been explored in the prior literature, causal consistency is of particular interest. Causal consistency allows for low-latency operation while supporting a causal view of the execution for the users. Intuitively, when a user reads a certain value of a shared memory location, it can also correctly obtain all causally preceding updates to other shared memory variables. In such systems, the data accessed by the users is replicated to improve latency and fault-tolerance. The system may be either fully replicated (i.e., all the shared data is replicated in each replica) or partially replicated (i.e., each replica may store only a subset of the shared data). Partial replication allows for more efficient use of storage, while introducing greater complexity in implementing the consistency model. In particular, it introduces complexity by requiring more elaborate dependency-tracking. We considered alternate mechanisms for implementing partially replicated shared memory under causal consistency, and performed an evaluation of a global stabilization approach. \n\nWe also improved the performance of distributed storage for large data objects. In particular, we developed efficient extension protocols for Byzantine broadcast and agreement. These protocols are useful in implementing replicated storage systems in the presence of Byzantine faulty replicas. The extension protocols achieve efficiency when broadcast or agreement is performed on large inputs.\n\nSelected results from the project have been published in papers and technical reports. Due to the increasing deployment of distributed storages, the results from this project have a significant potential for impact. Also, some of our fundamental results are expected to have an impact on future research in the area.\n\n \n\n \n\n \n\n\t\t\t\t\tLast Modified: 11/29/2022\n\n\t\t\t\t\tSubmitted by: Nitin H Vaidya"
 }
}