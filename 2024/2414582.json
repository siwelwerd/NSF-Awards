{
 "awd_id": "2414582",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: End-to-End Formal Verification of Concurrent C Programs",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2024-08-15",
 "awd_exp_date": "2027-07-31",
 "tot_intn_awd_amt": 600000.0,
 "awd_amount": 620000.0,
 "awd_min_amd_letter_date": "2024-07-24",
 "awd_max_amd_letter_date": "2024-12-09",
 "awd_abstract_narration": "The C programming language is widely used in both the basic software that makes computers work, and in high-performance applications that need to perform many computations at the same time (concurrently). Unfortunately, C code is highly error-prone, and concurrent C code is even more so. The goal of this project is to guarantee that concurrent C programs always run correctly by developing tools for mathematically proving the correctness of those programs. The project\u2019s novelties are the development of an end-to-end toolchain for concurrent C programs, with interactive and automatic proof tools at the top, a precise model of the behavior of concurrent C programs (including the latest high-performance concurrency features) in the middle, and a formal connection to the code that the computer actually executes at the bottom. The project\u2019s impacts are more reliable software and a reduction in software failures, including those that lead to lost productivity, privacy and security breaches, and even physical safety incidents (for instance, due to bugs in car software).\r\n\r\nThe project builds on the newest version of the Verified Software Toolchain (VST), a tool for proving that C programs meet specifications written in separation logic. Notably, VST is formally connected to the CompCert verified compiler, so that programs verified in VST are mathematically guaranteed to compile to assembly code with the desired behavior. The project extends VST in two directions. First, it integrates RefinedC, an annotation-based verifier for C based on the Iris separation logic framework; the newest version of VST also rests on Iris foundations, so the investigator will reimplement RefinedC\u2019s annotations in VST and extend them to more features of the C language, yielding a semi-automatic end-to-end verification system for C programs. Second, the project extends VST\u2019s logic and foundational guarantees to concurrent programs, including those that use the atomic operations introduced in the C11 standard. This includes both sequentially consistent operations (where each memory address appears to contain a single value) and, ultimately, weak-memory operations (where different threads may see different values at the same address). The end result is a complete toolchain for guaranteeing that high-performance concurrent C programs meet their specifications when compiled and run.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "William",
   "pi_last_name": "Mansky",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "William Mansky",
   "pi_email_addr": "mansky1@uic.edu",
   "nsf_id": "000779474",
   "pi_start_date": "2024-07-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Illinois at Chicago",
  "inst_street_address": "809 S MARSHFIELD AVE M/C 551",
  "inst_street_address_2": "",
  "inst_city_name": "CHICAGO",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "3129962862",
  "inst_zip_code": "606124305",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "IL07",
  "org_lgl_bus_name": "UNIVERSITY OF ILLINOIS",
  "org_prnt_uei_num": "",
  "org_uei_num": "W8XEAJDKMXH3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Illinois at Chicago",
  "perf_str_addr": "809 S MARSHFIELD AVE M/C 551",
  "perf_city_name": "CHICAGO",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "606124305",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "IL07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7943",
   "pgm_ref_txt": "PROGRAMMING LANGUAGES"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002425DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002526DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2024,
   "fund_oblg_amt": 600000.0
  },
  {
   "fund_oblg_fiscal_yr": 2025,
   "fund_oblg_amt": 20000.0
  }
 ],
 "por": null
}