{
 "awd_id": "2436092",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "POSE: Phase I:  An open-source ecosystem for massive online experiments and citizen science",
 "cfda_num": "47.084",
 "org_code": "15030000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Jeffrey M. Stanton",
 "awd_eff_date": "2024-06-15",
 "awd_exp_date": "2024-08-31",
 "tot_intn_awd_amt": 296162.0,
 "awd_amount": 37656.0,
 "awd_min_amd_letter_date": "2024-07-29",
 "awd_max_amd_letter_date": "2024-07-29",
 "awd_abstract_narration": "This project is funded by Pathways to Enable Open-Source Ecosystems (POSE) which seeks to harness the power of open-source development for the creation of new technology solutions to problems of national and societal importance.  Behavioral research has historically and almost exclusively taken place in small laboratories with small numbers of participants. In the era of \"big data,\" scientists have realized that huge numbers of volunteer \"citizen scientists\" can conduct studies anywhere around the world using their own smartphones, wearables, and computers.  Data collected from one such large study can answer questions that would normally need hundreds or thousands of small laboratory experiments. This project's impact will be to facilitate and democratize large-scale behavioral research by planning a community of professional and amateur researchers who use and build upon an open-source software platform used for designing and running such studies. \r\n \r\nThe project has three components. First, the project seek to conduct ecosystem discovery to identify the needs of potential users, scope potential partnerships with other open-source projects, and find potential collaborators at non-profits and in industry. Second, the organization and governance activities will be established a formal governing structure and implemented using Open Source Security Foundation (OpenSSF) Best Practices, including enhanced automated testing, continuous integration, and robust security measures. Finally, community building activities will support existing users and contributors and onboard new collaborators through a series of workshops, hackathons, online tutorials, and targeted lab exchanges.  The project develops a long-term plan for growing and sustaining the open-source ecosystem within a well-governed and well-managed organization.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "TIP",
 "org_dir_long_name": "Directorate for Technology, Innovation, and Partnerships",
 "div_abbr": "TI",
 "org_div_long_name": "Translational Impacts",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Joshua",
   "pi_last_name": "Hartshorne",
   "pi_mid_init": "K",
   "pi_sufx_name": "",
   "pi_full_name": "Joshua K Hartshorne",
   "pi_email_addr": "joshua.hartshorne@hey.com",
   "nsf_id": "000698735",
   "pi_start_date": "2024-07-29",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "MGH Institute of Health Professions",
  "inst_street_address": "36 1ST AVE",
  "inst_street_address_2": "CHARLESTOWN NAVY YARD",
  "inst_city_name": "CHARLESTOWN",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6177268008",
  "inst_zip_code": "021294557",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "THE MGH INSTITUTE OF HEALTH PROFESSIONS, INC.",
  "org_prnt_uei_num": "PGUMBTK4AM35",
  "org_uei_num": "UE5KCLMVSHU1"
 },
 "perf_inst": {
  "perf_inst_name": "MGH Institute of Health Professions",
  "perf_str_addr": "36 1ST AVE",
  "perf_city_name": "CHARLESTOWN",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021294557",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "211Y00",
   "pgm_ele_name": "POSE"
  }
 ],
 "pgm_ref": null,
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 37656.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>During the POSE-I grant, the Pushkin project took significant steps toward sustainability by implementing and assessing methods for expanding our open-source community and making user- and developer-focused improvements to the codebase.</p>\r\n<p>&nbsp;</p>\r\n<div>The Pushkin team made many changes to support contributions from a broader userbase. The team successfully transitioned the codebase to a monorepo architecture, which streamlined development and deployment practices and made the structure of the codebase more accessible to potential contributors. This change allows new features and documentation to be combined into the same pull requests; consequently, the project can enforce a standard that all code updates are accompanied by the necessary documentation. Additionally, all components of the Pushkin ecosystem are now published on npm, moving away from GitHub releases for site and experiment templates. Although complex to implement, this makes it much easier for the broader open-source community to contribute.</div>\r\n<div>In order to better handle community contributions, we automated many aspects of the development pipeline, with package publishing, versioning, and changelogs now automated. The monorepo architecture also facilitated the development of additional integration and end-to-end testing methods, as all components have immediate access to the latest development versions of other components. Similar changes to multiple components can now be combined into a single pull request, rather than being split across separate repositories. Automated linting was introduced across the entire monorepo, running on every commit to ensure code quality. Testing was significantly expanded, with automated unit and integration testing using Jest, and end-to-end testing of a local Pushkin deployment using Playwright.</div>\r\n<div>Support for GitHub Codespaces was also introduced, allowing Pushkin users to develop their sites in a cloud development environment. This change addresses persistent Windows compatibility issues and offers all users, regardless of platform, the ability to use Codespaces. Mac users can still develop locally if they prefer.</div>\r\n<div>Documentation saw a major overhaul, transitioning from Gitbook to MkDocs. The new documentation is better organized, easier to update synchronously with the codebase, and more professional in appearance. Security and bug fixes were also a priority, with numerous existing bugs fixed and critical dependencies updated in response to security alerts and breaking changes.</div>\r\n<div>The Pushkin project focused on community engagement through events and collaborations. The most successful of these activities was a three-day hackathon in June 2023, which brought together fifteen external participants and five members of the Pushkin team. The hackathon demonstrated that such events could be used in the future to build excitement about Pushkin&rsquo;s potential and kickstart collaborations. While the projects which were developed at this hackathon did not progress into ongoing collaborations as of yet, the event exposed software bugs and pain points which the project addressed subsequently. The event also laid the groundwork for future collaborations and fostered goodwill in the community of likely Pushkin users. Survey data collected after the hackathon indicated that participants were more likely to run massive online experiments after attending the event and rated their experience there positively. The project also hosted a workshop at the CogSci annual meeting in July 2023, which served to build awareness of massive online experiments and Pushkin.</div>\r\n<div>The Pushkin team held three virtual meetings with the advisory board in 2023, which provided valuable insights for planning the hackathon, discussing project governance, and scoping future efforts to expand the community of users and contributors. The board&rsquo;s guidance was instrumental in shaping the project&rsquo;s direction.</div>\r\n<div>One of the team&rsquo;s primary objectives during the grant was scoping which approaches for building collaborative projects using Pushkin would be most successful in the future. While the project was not able to launch any experiments with the intended collaborating sites during the grant term, these difficulties highlighted that this approach is both highly resource-intensive and less likely to produce results than previously imagined. On the other hand, the success of the Pushkin hackathon suggests that more of this type of event may be the best way to grow Pushkin&rsquo;s community in the future.</div>\r\n<div>The project also produced broader impacts during the POSE-I grant period. The hackathon brought together a diverse group of researchers and students at every stage. The group included an especially strong undergraduate presence, with four Vassar students and two from Boston College in attendance. The project also provided those same Boston College students with experience working in open-source research software. Additionally, technical lessons relating to documentation, automation, and testing have been applied to another unrelated project under the PI&rsquo;s direction.</div>\r\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 01/07/2025<br>\nModified by: Joshua&nbsp;K&nbsp;Hartshorne</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nDuring the POSE-I grant, the Pushkin project took significant steps toward sustainability by implementing and assessing methods for expanding our open-source community and making user- and developer-focused improvements to the codebase.\r\n\n\n\r\nThe Pushkin team made many changes to support contributions from a broader userbase. The team successfully transitioned the codebase to a monorepo architecture, which streamlined development and deployment practices and made the structure of the codebase more accessible to potential contributors. This change allows new features and documentation to be combined into the same pull requests; consequently, the project can enforce a standard that all code updates are accompanied by the necessary documentation. Additionally, all components of the Pushkin ecosystem are now published on npm, moving away from GitHub releases for site and experiment templates. Although complex to implement, this makes it much easier for the broader open-source community to contribute.\r\nIn order to better handle community contributions, we automated many aspects of the development pipeline, with package publishing, versioning, and changelogs now automated. The monorepo architecture also facilitated the development of additional integration and end-to-end testing methods, as all components have immediate access to the latest development versions of other components. Similar changes to multiple components can now be combined into a single pull request, rather than being split across separate repositories. Automated linting was introduced across the entire monorepo, running on every commit to ensure code quality. Testing was significantly expanded, with automated unit and integration testing using Jest, and end-to-end testing of a local Pushkin deployment using Playwright.\r\nSupport for GitHub Codespaces was also introduced, allowing Pushkin users to develop their sites in a cloud development environment. This change addresses persistent Windows compatibility issues and offers all users, regardless of platform, the ability to use Codespaces. Mac users can still develop locally if they prefer.\r\nDocumentation saw a major overhaul, transitioning from Gitbook to MkDocs. The new documentation is better organized, easier to update synchronously with the codebase, and more professional in appearance. Security and bug fixes were also a priority, with numerous existing bugs fixed and critical dependencies updated in response to security alerts and breaking changes.\r\nThe Pushkin project focused on community engagement through events and collaborations. The most successful of these activities was a three-day hackathon in June 2023, which brought together fifteen external participants and five members of the Pushkin team. The hackathon demonstrated that such events could be used in the future to build excitement about Pushkins potential and kickstart collaborations. While the projects which were developed at this hackathon did not progress into ongoing collaborations as of yet, the event exposed software bugs and pain points which the project addressed subsequently. The event also laid the groundwork for future collaborations and fostered goodwill in the community of likely Pushkin users. Survey data collected after the hackathon indicated that participants were more likely to run massive online experiments after attending the event and rated their experience there positively. The project also hosted a workshop at the CogSci annual meeting in July 2023, which served to build awareness of massive online experiments and Pushkin.\r\nThe Pushkin team held three virtual meetings with the advisory board in 2023, which provided valuable insights for planning the hackathon, discussing project governance, and scoping future efforts to expand the community of users and contributors. The boards guidance was instrumental in shaping the projects direction.\r\nOne of the teams primary objectives during the grant was scoping which approaches for building collaborative projects using Pushkin would be most successful in the future. While the project was not able to launch any experiments with the intended collaborating sites during the grant term, these difficulties highlighted that this approach is both highly resource-intensive and less likely to produce results than previously imagined. On the other hand, the success of the Pushkin hackathon suggests that more of this type of event may be the best way to grow Pushkins community in the future.\r\nThe project also produced broader impacts during the POSE-I grant period. The hackathon brought together a diverse group of researchers and students at every stage. The group included an especially strong undergraduate presence, with four Vassar students and two from Boston College in attendance. The project also provided those same Boston College students with experience working in open-source research software. Additionally, technical lessons relating to documentation, automation, and testing have been applied to another unrelated project under the PIs direction.\r\n\n\n\t\t\t\t\tLast Modified: 01/07/2025\n\n\t\t\t\t\tSubmitted by: JoshuaKHartshorne\n"
 }
}