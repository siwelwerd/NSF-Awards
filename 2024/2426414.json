{
 "awd_id": "2426414",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "SaTC: CORE: Small: Auto-active Hyperproperty Verification for Security",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2024-10-01",
 "awd_exp_date": "2027-09-30",
 "tot_intn_awd_amt": 588353.0,
 "awd_amount": 387341.0,
 "awd_min_amd_letter_date": "2024-08-16",
 "awd_max_amd_letter_date": "2024-08-16",
 "awd_abstract_narration": "In principle the highest assurance of trustworthiness for software systems is achieved by mathematical proofs of correctness with respect to precise specifications of requirements.  Specifications describe the structure and intended behavior of software based on mathematical models of hardware, software, and the operating environment.  The environment may include active adversaries trying steal or tamper with sensitive information.  Creating specifications and proofs is difficult and is seldom done in current practice, but some companies have begun to adopt so-called auto-active verification tools. An auto-active verification tool enables the software engineer to produce specifications and proofs by annotating code with special comments called assertions.  Assertions are automatically checked, and the tool is integrated with commonplace development tools and workflows. This approach works well for requirements that can be expressed in terms of individual executions of a program.  However, confidentiality and privacy requirements must be specified as relationships between multiple executions. Relationships are also needed to verify equivalence between different versions of a program. Such relational  requirements are called hyperproperties. In this project, researchers are developing theory and algorithms to extend the reach of auto-active verification to include hyperproperties. The research has the potential to transform computing practice by supporting accountability of system designers and builders, and trustworthiness of software supply chains, through evidence that includes mathematically precise specifications and machine-checked proofs of security and privacy. Usable equivalence verification can lessen the risk that code improvements and bug fixes introduce new vulnerabilities. \r\n\r\nThe project plan is organized in three thrusts.  One thrust is advancing the science of security by developing theory in the form of deductive logics together with novel algebras to support automated reasoning by alignment of intermediate steps in relationships between executions.  Deductive rules are connected with annotation-oriented verification conditions and also with code-independent confidentiality and integrity properties specified with respect to a model of adversary capabilities.  The second thrust is developing algorithms for automated checking of annotations and search for alignments that facilitate annotation.  Existing prototype tools are being extended with these algorithms.  Trustworthiness of the tools is assured by the theory developed in the first thrust, which is being machine-checked using an interactive proof assistant.  In the third thrust, experiments and case studies using the prototypes serve to evaluate usability and effectiveness of verification for requirements including secure information flow, program refinement, and program equivalence.  Research products including training materials and benchmarks are being made freely available.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "David",
   "pi_last_name": "Naumann",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "David A Naumann",
   "pi_email_addr": "naumann@cs.stevens.edu",
   "nsf_id": "000331140",
   "pi_start_date": "2024-08-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Stevens Institute of Technology",
  "inst_street_address": "ONE CASTLE POINT ON HUDSON",
  "inst_street_address_2": "",
  "inst_city_name": "HOBOKEN",
  "inst_state_code": "NJ",
  "inst_state_name": "New Jersey",
  "inst_phone_num": "2012168762",
  "inst_zip_code": "070305906",
  "inst_country_name": "United States",
  "cong_dist_code": "08",
  "st_cong_dist_code": "NJ08",
  "org_lgl_bus_name": "THE TRUSTEES OF THE STEVENS INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "",
  "org_uei_num": "JJ6CN5Y5A2R5"
 },
 "perf_inst": {
  "perf_inst_name": "Stevens Institute of Technology",
  "perf_str_addr": "1 CASTLEPOINT ON HUDSON",
  "perf_city_name": "HOBOKEN",
  "perf_st_code": "NJ",
  "perf_st_name": "New Jersey",
  "perf_zip_code": "07030",
  "perf_ctry_code": "US",
  "perf_cong_dist": "08",
  "perf_st_cong_dist": "NJ08",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002425DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002627DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2024,
   "fund_oblg_amt": 387341.0
  }
 ],
 "por": null
}