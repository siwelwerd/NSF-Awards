{
 "awd_id": "2402560",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: OAC Core: Cyber-Infrastructure for Community Detection, Extraction, and Search in Large Networks",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": "7032928104",
 "po_email": "shabagch@nsf.gov",
 "po_sign_block_name": "Sharmistha Bagchi-Sen",
 "awd_eff_date": "2024-07-15",
 "awd_exp_date": "2027-06-30",
 "tot_intn_awd_amt": 250000.0,
 "awd_amount": 250000.0,
 "awd_min_amd_letter_date": "2024-07-05",
 "awd_max_amd_letter_date": "2024-07-05",
 "awd_abstract_narration": "Networks, also referred to as graphs, consist of nodes (vertices) connected by edges (links). Many  types of information can be represented as networks. For example, in social networks, vertices can represent people and edges can represent friendships, while in biological networks the vertices can represent proteins and the edges can represent interactions between proteins.  A basic problem in network analysis is to partition the vertices of a graph into non-overlapping sets so that each set represents a cohesive group.  This problem, referred to as \u201ccommunity detection\u201d or \u201cgraph clustering\u201d, has widespread application in many domains, including biology, engineering, and the social sciences. In this project, new community detection methods will be developed that can run on large networks in the order of millions and billions of vertices and will be implemented in highly efficient software that can be used in high performance computing platforms.  An educational component is included with advanced training for both undergraduate and graduate students. \r\n\r\nCommunity detection, otherwise known as graph clustering, is the problem of partitioning the vertices of a graph into disjoint sets, so that each set has desirable properties, such as being well-connected (i.e., not having a small edge cut), having high internal density, and being relatively separated from other clusters. Common approaches for graph clustering include optimizing under the modularity criterion or the Constant Potts Model.  Because these are NP-hard optimization problems, heuristic searches are used that can be very computationally intensive on large datasets.  Furthermore, recent research has revealed limitations to currently popular methods, including the tendency to produce very poorly connected clusters, i.e., clusters with small edge cuts. The Connectivity Modifier software was developed to address this problem: it modifies a given clustering by iteratively finding and removing small edge cuts from clusters and then reclustering, until all clusters are well-connected.  This project will develop new performant implementations of the Connectivity Modifier, and expand the set of clustering methods that can be used within the framework. The project will also develop a modular suite of clustering tools that address other problems in community detection, such as finding center-periphery clusters and overlapping clusters, that will enable developers to explore algorithmic approaches to clustering on large networks and also enable exploratory data analysis for applications researchers. The current implementations of these codes have not been implemented for very large networks nor for high performance computing (HPC) platforms. This project will develop parallel codes for these methods that can be deployed on a wide range of compute platforms.  The research in this project will be integrated into graduate level courses and undergraduate and graduate students will participate in advanced research under the mentorship of the project investigators.  The expected benefits include new software capable of analyzing networks with billions of vertices and that can be deployed in a wide range of hardware, enabling researchers to make discovery in a wide range of application areas, including systems biology, scientometrics, and social network analysis.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "David",
   "pi_last_name": "Bader",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "David A Bader",
   "pi_email_addr": "bader@njit.edu",
   "nsf_id": "000206826",
   "pi_start_date": "2024-07-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "New Jersey Institute of Technology",
  "inst_street_address": "323 DR MARTIN LUTHER KING JR BLVD",
  "inst_street_address_2": "",
  "inst_city_name": "NEWARK",
  "inst_state_code": "NJ",
  "inst_state_name": "New Jersey",
  "inst_phone_num": "9735965275",
  "inst_zip_code": "071021824",
  "inst_country_name": "United States",
  "cong_dist_code": "10",
  "st_cong_dist_code": "NJ10",
  "org_lgl_bus_name": "NEW JERSEY INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "",
  "org_uei_num": "SGBMHQ7VXNH5"
 },
 "perf_inst": {
  "perf_inst_name": "New Jersey Institute of Technology",
  "perf_str_addr": "323 DR MARTIN LUTHER KING JR BLVD",
  "perf_city_name": "NEWARK",
  "perf_st_code": "NJ",
  "perf_st_name": "New Jersey",
  "perf_zip_code": "071021824",
  "perf_ctry_code": "US",
  "perf_cong_dist": "10",
  "perf_st_cong_dist": "NJ10",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "090Y00",
   "pgm_ele_name": "OAC-Advanced Cyberinfrast Core"
  }
 ],
 "pgm_ref": null,
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002425DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2024,
   "fund_oblg_amt": 250000.0
  }
 ],
 "por": null
}