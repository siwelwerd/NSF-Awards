{
 "awd_id": "2333120",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CPS: Medium: GOALI: Enabling Safe Innovation for Autonomy: Making Publish/Subscribe Really Real-Time",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032928950",
 "po_email": "rwachter@nsf.gov",
 "po_sign_block_name": "Ralph Wachter",
 "awd_eff_date": "2024-01-01",
 "awd_exp_date": "2026-12-31",
 "tot_intn_awd_amt": 1200000.0,
 "awd_amount": 1220000.0,
 "awd_min_amd_letter_date": "2023-12-08",
 "awd_max_amd_letter_date": "2024-03-07",
 "awd_abstract_narration": "In the automotive industry today, companies are fiercely competing to field ever more sophisticated autonomous features in their product lines.  The hoped-for culmination of this competition is full autonomy at mass-market scales.  The stakes here are high: the companies (and countries) that get there first will be in a commanding position to influence how autonomy-related capabilities evolve for decades to come.  This high-stakes competition has resulted in significant pressure to innovate quickly with respect to key technologies for autonomous driving, such as perception and decision-making capabilities.  This pressure has led to a \u201cblack-box\u201d approach to system design, with off-the-shelf software and hardware components, originally intended for other contexts, repurposed to implement autonomous-driving functions.  One of the most widely used repurposed black-box components is ROS (the Robot Operating System).  ROS enables separately developed software programs that implement different functions (e.g., camera-based perception, correct lane following, etc.) to be combined to form a system that provides broader capabilities (e.g., a car that drives itself).  Unfortunately, as its name suggests, ROS was originally designed and implemented to support the development of robotics applications, which have very different requirements from autonomous vehicles.  As a result, ROS lacks features needed to ensure safe automotive system designs.  A key issue here is a lack of support for ensuring real-time safety, i.e., that certain functions (e.g., braking) are performed \u201con time\u201d (e.g., before an obstacle is hit).  This project is directed at producing an alternative to ROS that takes real-time safety as a first-class concern.\r\n\r\nDespite its name, ROS is really not an operating system (OS) but rather a set of user-level middleware libraries that facilitate constructing processing graphs typical of robotics applications.  These libraries support modular system development via a publish/subscribe (pub/sub) notion of message communication between graph nodes that allows different software packages to be loosely coupled.  This loose coupling enables software reuse, which has been a key to ROS\u2019s success in enabling rapid innovation.  ROS\u2019s success convincingly demonstrates the importance of pub/sub in fueling innovation in autonomy.  However, pub/sub must be safe to apply.  This project is directed at this very issue, specifically in the context of multicore+acclerator platforms as used in autonomous vehicles.  In such a platform, a CPU-only multicore computer is augmented with co-processors like graphics processing units (GPUs) that can speed up certain mathematical computations that commonly occur in AI-based software for autonomy.  The specific aim of this project is to produce a pub/sub alternative to ROS that facilities real-time safety certification.  Key research tasks include resolving fundamental resource-allocation concerns at the OS and middleware levels, producing analysis for validating response-time bounds in real-time pub/sub graphs, producing a reference pub/sub middleware implementation, and experimentally comparing this implementation to ROS.  While evolving ROS itself is beyond the scope of this project, this project will expose fundamental tradeoffs of relevance to such an evolution.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "James",
   "pi_last_name": "Anderson",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "James H Anderson",
   "pi_email_addr": "anderson@cs.unc.edu",
   "nsf_id": "000481767",
   "pi_start_date": "2023-12-08",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Ron",
   "pi_last_name": "Alterovitz",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ron Alterovitz",
   "pi_email_addr": "ron@cs.unc.edu",
   "nsf_id": "000514481",
   "pi_start_date": "2023-12-08",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Shige",
   "pi_last_name": "Wang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Shige Wang",
   "pi_email_addr": "shige.wang@motional.com",
   "nsf_id": "000525202",
   "pi_start_date": "2023-12-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of North Carolina at Chapel Hill",
  "inst_street_address": "104 AIRPORT DR STE 2200",
  "inst_street_address_2": "",
  "inst_city_name": "CHAPEL HILL",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9199663411",
  "inst_zip_code": "275995023",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "NC04",
  "org_lgl_bus_name": "UNIVERSITY OF NORTH CAROLINA AT CHAPEL HILL",
  "org_prnt_uei_num": "D3LHU66KBLD5",
  "org_uei_num": "D3LHU66KBLD5"
 },
 "perf_inst": {
  "perf_inst_name": "University of North Carolina at Chapel Hill",
  "perf_str_addr": "Brooks Computer Science Building",
  "perf_city_name": "CHAPEL HILL",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "275993175",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "NC04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "791800",
   "pgm_ele_name": "CPS-Cyber-Physical Systems"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  },
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "7918",
   "pgm_ref_txt": "CYBER-PHYSICAL SYSTEMS (CPS)"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002425DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2024,
   "fund_oblg_amt": 1220000.0
  }
 ],
 "por": null
}