{
 "awd_id": "1906829",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "OAC Core: Small: Collaborative Research: Scalable distributed algorithms for tree structured astronomical data",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": "7032922625",
 "po_email": "jjli@nsf.gov",
 "po_sign_block_name": "Juan Li",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 145817.0,
 "awd_amount": 145817.0,
 "awd_min_amd_letter_date": "2019-07-09",
 "awd_max_amd_letter_date": "2019-07-09",
 "awd_abstract_narration": "Spatial astronomical data is often extremely large and it is highly non-uniformly distributed. Algorithms that deal with such data have to be parallelized over large distributed memory supercomputers to deal with its size. The non-uniformity in the spatial distribution can be extreme, with some regions of space having million times more particles than other similar size regions. This creates significant challenges for scalable and efficient performance, as well as for the productive programming of such algorithms. Yet, the field of computational astronomy increasingly needs such scalable algorithms in the coming era. The raw computing capability unleashed by modern PetaFLOP/s  and ExaFLOP/s computers, respectively, executing up to quadrillions  and quintillions of calculations per second, is making it potentially feasible to get answers via simulations to some fundamental questions in the field, including those of galaxy formation and the properties of dark matter and dark energy. As the Large Synoptic Survey Telescope maps out the entire visible sky every few nights, it is expected to generate more than 10 terabytes per day, and this data needs to be analyzed in a timely fashion to fulfill its scientific goals of discovering hazardous asteroids, new minor planets, and exploding stars. This project provides new techniques and tools for researchers to use for high-performance simulations of non-uniform data. This enables previously untenable computer simulations to be done by astrophysicists, unlocking new insights and answering questions about the nature of the cosmos. The results are also used as case studies and educational material in classes taught by the investigators. Additionally, the project aim to involve women and undergraduate students in performing this research, continuing their experience of having done so in the past. This project thus aligns with the NSF's mission: to promote the progress of science and to advance the national health, prosperity and welfare.\r\n \r\nThis project aims at developing novel parallel algorithms, data structures, and application demonstrations for computational problems involving data organized into hierarchical trees. A canonical example of such a domain is astronomical data, where particles representing clustered mass (stars or galaxies) are spread over the space of a simulation box or survey field in a highly non-uniform manner. Organizing them into trees, with multiple alternative tree organizations possible, including k-d trees, octrees, space-filling-curve based trees, etc., allows the efficient computation of various quantities such as gravitational forces, densities (and therefore hydrodynamics), two-point or three-point correlations, etc. The optimum choice of tree structure and algorithm depends both on the problem and the parameters of the parallel machine. The research methods used will include complexity analysis and, more significantly, empirical comparisons over a range of possible application scenarios including particle distributions and classes of traversals and algorithms. This will include formulation of algorithms and their implementations on parallel machines. The main outcomes of this project will be research papers describing effective algorithms and comparison and evaluation of particle decomposition techniques and tree types. This project is funded by the Office of Advanced Cyberinfrastructure in the Directorate for Computer and Information Science and Engineering and the Division of Astronomical Sciences in the Directorate for Mathematical & Physical Sciences.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Thomas",
   "pi_last_name": "Quinn",
   "pi_mid_init": "R",
   "pi_sufx_name": "",
   "pi_full_name": "Thomas R Quinn",
   "pi_email_addr": "TRQ@astro.washington.edu",
   "nsf_id": "000219146",
   "pi_start_date": "2019-07-09",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Washington",
  "inst_street_address": "4333 BROOKLYN AVE NE",
  "inst_street_address_2": "",
  "inst_city_name": "SEATTLE",
  "inst_state_code": "WA",
  "inst_state_name": "Washington",
  "inst_phone_num": "2065434043",
  "inst_zip_code": "981951016",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "WA07",
  "org_lgl_bus_name": "UNIVERSITY OF WASHINGTON",
  "org_prnt_uei_num": "",
  "org_uei_num": "HD1WMN6945W6"
 },
 "perf_inst": {
  "perf_inst_name": "University of Washington",
  "perf_str_addr": "",
  "perf_city_name": "Seattle",
  "perf_st_code": "WA",
  "perf_st_name": "Washington",
  "perf_zip_code": "981951580",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "WA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "090Y00",
   "pgm_ele_name": "OAC-Advanced Cyberinfrast Core"
  },
  {
   "pgm_ele_code": "125300",
   "pgm_ele_name": "OFFICE OF MULTIDISCIPLINARY AC"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "1206",
   "pgm_ref_txt": "THEORETICAL & COMPUTATIONAL ASTROPHYSICS"
  },
  {
   "pgm_ref_code": "7569",
   "pgm_ref_txt": "CYBERINFRASTRUCTURE/SCIENCE"
  },
  {
   "pgm_ref_code": "9179",
   "pgm_ref_txt": "GRADUATE INVOLVEMENT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 145817.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p id=\"docs-internal-guid-196897a9-7fff-5d15-e9dd-8e4e7166a0fc\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 12pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Many scientific calculations and analyses are most easily described by a ``divide and conquer&rsquo;&rsquo; type algorithm.&nbsp; I.e., a large problem is solved by dividing it into to smaller problems, and then recursively continuing this division until the solution becomes trivial. The data structure to organize these types of algorithms is called a ``tree''.&nbsp; Objects organized in geometric trees are used in many domains including astronomy, molecular dynamics, visualization/graphics, and</span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">&nbsp;</span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> computational fluid dynamics.&nbsp; Tree structures can be optimized for performance for a particular problem, usually by considering trade offs between utilization of the processor and the computer&rsquo;s memory.&nbsp; However, the size of datasets, particularly in Astronomy, require the use of supercomputers with many thousands of computer processors connected with a high speed network.&nbsp; On such machines, the trade offs become more complex as the data is now distributed across many processors, and some of those processors are specialized hardware such as Graphics Processing Units (GPUs).&nbsp; This project developed and tested tree-based algorithms designed to work well on such supercomputers.&nbsp; The algorithms have been implemented in a toolkit &ldquo;Paratreet&rdquo; which provides an infrastructure for rapid prototyping of tree algorithms on a parallel machine.</span></p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">A significant part of the implementation effort was conducted by University graduate and undergraduate students.&nbsp; This provided training opportunities for the students in advanced parallel languages and the use of high performance computing.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">This project's toolkit software is available on the web through the project github site.&nbsp; The project also contributed improvements to the astrophysical simulation code for galaxy and planet formation, ``ChaNGa''.&nbsp; This code is also freely available via github.</span></p><br>\n<p>\n Last Modified: 05/16/2024<br>\nModified by: Thomas&nbsp;R&nbsp;Quinn</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nMany scientific calculations and analyses are most easily described by a ``divide and conquer type algorithm. I.e., a large problem is solved by dividing it into to smaller problems, and then recursively continuing this division until the solution becomes trivial. The data structure to organize these types of algorithms is called a ``tree''. Objects organized in geometric trees are used in many domains including astronomy, molecular dynamics, visualization/graphics, and computational fluid dynamics. Tree structures can be optimized for performance for a particular problem, usually by considering trade offs between utilization of the processor and the computers memory. However, the size of datasets, particularly in Astronomy, require the use of supercomputers with many thousands of computer processors connected with a high speed network. On such machines, the trade offs become more complex as the data is now distributed across many processors, and some of those processors are specialized hardware such as Graphics Processing Units (GPUs). This project developed and tested tree-based algorithms designed to work well on such supercomputers. The algorithms have been implemented in a toolkit Paratreet which provides an infrastructure for rapid prototyping of tree algorithms on a parallel machine.\n\n\nA significant part of the implementation effort was conducted by University graduate and undergraduate students. This provided training opportunities for the students in advanced parallel languages and the use of high performance computing.\n\n\n\n\n\nThis project's toolkit software is available on the web through the project github site. The project also contributed improvements to the astrophysical simulation code for galaxy and planet formation, ``ChaNGa''. This code is also freely available via github.\t\t\t\t\tLast Modified: 05/16/2024\n\n\t\t\t\t\tSubmitted by: ThomasRQuinn\n"
 }
}