{
 "awd_id": "1850317",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII: CSR: System Techniques to Exploit the Byte-Accessibility of Solid-State Drives",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2019-02-15",
 "awd_exp_date": "2023-01-31",
 "tot_intn_awd_amt": 175000.0,
 "awd_amount": 175000.0,
 "awd_min_amd_letter_date": "2019-02-13",
 "awd_max_amd_letter_date": "2019-02-13",
 "awd_abstract_narration": "Flash-based solid-state drive (SSD) has been the backbone of modern storage systems to support a growing number of data-intensive applications such as graph analytics and databases. For decades, systems software and applications used a generic block interface to access data in SSDs. Today it is feasible to access SSDs in both byte and block granularity through memory mapped input/output interfaces. However, it is still unclear how byte-addressable SSDs will be integrated in today's memory-storage hierarchy, how will they affect the design and implementation of systems software such as file systems, and how applications will benefit from the byte-accessible property of SSDs.\r\n\r\nThis project proposes to investigate the systems techniques to support and exploit the byte-accessibility of SSDs in modern memory-storage hierarchy. First, the project proposes to rethink the unified memory-storage hierarchy and efficiently use byte-addressable SSD as part of the main memory to ease the management and programmability of the dual byte and block-accessible interfaces. Second, the project proposes adaptive page migration mechanisms to enable applications to gain benefits from both byte-addressable, large-scale SSD and fast dynamic random-access memory (DRAM) concurrently and transparently. Third, the project proposes a new abstraction of fine-grained data persistence which will rethink the design and implementation of data persistency mechanisms and further reduce the associated performance overhead and redundant writes to storage devices. \r\n\r\nAs SSDs have been widely deployed in various computing platforms, the proposed research activities will benefit many fields of study with high-performance persistent storage requirements including scientific computing, big data analytics, and financial services. The project will also carve a path for technology transition to practice through  industrial collaborations, as well as facilitate research activities for undergraduate and underrepresented students. \r\n\r\nThis project will integrate the research developments and results into a new course that centers around memory and storage technologies. The resulting software, dataset, publications, and course materials will be released through an open-source repository on GitHub: https://github.com/sprlab/uniflash and maintained for at least five years beyond the completion of this project.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jian",
   "pi_last_name": "Huang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Jian Huang",
   "pi_email_addr": "jianh@illinois.edu",
   "nsf_id": "000757472",
   "pi_start_date": "2019-02-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Illinois at Urbana-Champaign",
  "inst_street_address": "506 S WRIGHT ST",
  "inst_street_address_2": "",
  "inst_city_name": "URBANA",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "2173332187",
  "inst_zip_code": "618013620",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "IL13",
  "org_lgl_bus_name": "UNIVERSITY OF ILLINOIS",
  "org_prnt_uei_num": "V2PHZ2CSCH63",
  "org_uei_num": "Y8CWNJRCNN91"
 },
 "perf_inst": {
  "perf_inst_name": "University of Illinois at Urbana-Champaign",
  "perf_str_addr": "506 S. Wright St.",
  "perf_city_name": "Urbana",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "618013620",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "IL13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "026Y00",
   "pgm_ele_name": "CRII CISE Research Initiation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 175000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p id=\"docs-internal-guid-6ed58ce4-7fff-a054-1ae9-3d194fcd5654\" style=\"line-height: 1.38; text-align: justify; margin-top: 0pt; margin-bottom: 12pt;\" dir=\"ltr\"><span style=\"font-size: 12.499999999999998pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Using Solid State Drives (SSDs) as memory has been proposed as a practical solution towards scaling memory capacity for data-intensive applications. However, almost all existing approaches rely on the paging mechanism to move data between the SSD and the host DRAM. This inevitably incurs significant performance overhead and extra I/O traffic. Thanks to the byte-accessibility supported by the PCIe interconnect and the internal memory in SSD controllers, it is feasible to access SSDs in both byte and block granularity today. Exploiting the benefits of SSD's byte-accessibility in today's memory-storage hierarchy is, however, challenging as it lacks system support and abstractions for programs and applications. It remains unclear how the byte-addressable SSD will be integrated in today's memory-storage hierarchy.&nbsp;</span></p>\n<p style=\"line-height: 1.38; text-align: justify; margin-top: 0pt; margin-bottom: 12pt;\" dir=\"ltr\"><span style=\"font-size: 12.499999999999998pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">In this project, the PI investigated the systems techniques to support and exploit the byte-accessibility of SSDs in the modern memory-storage hierarchy, and developed a system prototype to demonstrate the feasibility of supporting both byte and block interfaces in computer systems today.&nbsp; We extended the virtual memory management to provide a unified memory interface so that programs can access data across SSD and DRAM in byte granularity seamlessly. Such a unified memory interface simplifies the programmability of byte-addressable SSDs. Applications can directly access the SSD using regular memory requests without the need of paging mechanism. We also developed a lightweight, adaptive page promotion mechanism between SSD and DRAM associated with systems and hardware techniques for ensuring the data consistency during promotion. Therefore, applications can gain benefits from both byte-addressable large-scale SSD and fast DRAM concurrently and transparently, while avoiding unnecessary page movements. We applied byte-addressable SSDs to representative data-intensive applications such as graph analytics and transactional databases. Our experiments demonstrated that the proposed techniques improved the performance of these applications significantly.&nbsp;</span></p>\n<p style=\"line-height: 1.38; text-align: justify; margin-top: 0pt; margin-bottom: 12pt;\" dir=\"ltr\"><span style=\"font-size: 12.499999999999998pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">This project integrated the research developments and results into a new course ECE522: Emerging Memory and Storage Systems at the University of Illinois at Urbana-Champaign. It also generated a joint patent with IBM. The research results are published at the top-tier systems and architecture conferences.&nbsp;</span></p>\n<p><br /><br /></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/17/2023<br>\n\t\t\t\t\tModified by: Jian&nbsp;Huang</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "Using Solid State Drives (SSDs) as memory has been proposed as a practical solution towards scaling memory capacity for data-intensive applications. However, almost all existing approaches rely on the paging mechanism to move data between the SSD and the host DRAM. This inevitably incurs significant performance overhead and extra I/O traffic. Thanks to the byte-accessibility supported by the PCIe interconnect and the internal memory in SSD controllers, it is feasible to access SSDs in both byte and block granularity today. Exploiting the benefits of SSD's byte-accessibility in today's memory-storage hierarchy is, however, challenging as it lacks system support and abstractions for programs and applications. It remains unclear how the byte-addressable SSD will be integrated in today's memory-storage hierarchy. \nIn this project, the PI investigated the systems techniques to support and exploit the byte-accessibility of SSDs in the modern memory-storage hierarchy, and developed a system prototype to demonstrate the feasibility of supporting both byte and block interfaces in computer systems today.  We extended the virtual memory management to provide a unified memory interface so that programs can access data across SSD and DRAM in byte granularity seamlessly. Such a unified memory interface simplifies the programmability of byte-addressable SSDs. Applications can directly access the SSD using regular memory requests without the need of paging mechanism. We also developed a lightweight, adaptive page promotion mechanism between SSD and DRAM associated with systems and hardware techniques for ensuring the data consistency during promotion. Therefore, applications can gain benefits from both byte-addressable large-scale SSD and fast DRAM concurrently and transparently, while avoiding unnecessary page movements. We applied byte-addressable SSDs to representative data-intensive applications such as graph analytics and transactional databases. Our experiments demonstrated that the proposed techniques improved the performance of these applications significantly. \nThis project integrated the research developments and results into a new course ECE522: Emerging Memory and Storage Systems at the University of Illinois at Urbana-Champaign. It also generated a joint patent with IBM. The research results are published at the top-tier systems and architecture conferences. \n\n\n\n\n\n\t\t\t\t\tLast Modified: 03/17/2023\n\n\t\t\t\t\tSubmitted by: Jian Huang"
 }
}