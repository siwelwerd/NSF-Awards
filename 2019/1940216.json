{
 "awd_id": "1940216",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: Collaborative Research: Inexactness and Data-Awareness in Network Stacks for Distributed Machine Learning",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Darleen Fisher",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2020-09-30",
 "tot_intn_awd_amt": 150000.0,
 "awd_amount": 150000.0,
 "awd_min_amd_letter_date": "2019-08-22",
 "awd_max_amd_letter_date": "2019-08-22",
 "awd_abstract_narration": "The architectures underlying modern network hardware and software have their roots in designs that were developed decades ago. Even though these architectures have evolved in many ways over the years, they remain unchanged in two key aspects: (1) They support ?exact? or complete/absolute reliable communication (either hop-by-hop, or end-to-end, or both); (2) They adhere to strict layering, and the resulting encapsulation and interfaces hide from lower network layers the semantics of the data applications transmit over the network.\r\n\r\nThese design principles place serious impediments for emerging distributed machine learning (ML) training and inference applications. These applications are seeing adoption in a wide variety of important domains, such as, computer vision, robotics, data science, graphics, and speech recognition. Two distinguishing attributes of these applications are: (1) their computations are intrinsically inexact in nature, because these applications rely on computing or utilizing statistical models, and (2) their input and intermediate data have well-defined structure, i.e., tensors, or multi-dimensional arrays of typed data. Give these attributes, enforcing exact communication in a data semantics-unaware fashion limits the potentially enormous benefits of embracing inexactness in these approximate applications.\r\n\r\nThis project explores co-designing ML applications with layers of the network software and hardware stack to allow application-driven cross-layer optimization for energy efficiency, hardware density/capacity, and performance. Given an application-provided overall inexactness budget, this research will explore both how to systematically apportion the budget across network layers, and how different layers can reconfigure their functionality to achieve different levels of approximation.\r\n\t\r\nThis project will develop strawman approaches to encoding structured data and to achieving budget-driven inexact computation over it. The research will use experiments, simulations, and analysis to identify performance benefits to ML applications, and fundamental trade-offs that determine the feasibility of this approach. The resulting inexactness-aware ML software stack could drive hitherto unseen performance and accuracy improvements, and potentially drive future innovations in ML algorithms, systems, and applications.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Rachit",
   "pi_last_name": "Agarwal",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Rachit Agarwal",
   "pi_email_addr": "ra625@cornell.edu",
   "nsf_id": "000728107",
   "pi_start_date": "2019-08-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "107 Hoy Road",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148537501",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736300",
   "pgm_ele_name": "Networking Technology and Syst"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 150000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span> </span>Traditionally, computer networks have offered two abstractions to applications: one that guarantees perfect, in-order, reliable delivery of all the data sent by the sender; and, second that provides no reliability guarantees whatsoever. These two abstractions are a good match for applications that are either willing to incur the overheads of achieving perfect reliability or could tolerate arbitrarily unreliable errors in data transmission. However, for many modern applications that are already statistical in nature and can tolerate some (but not arbitrarily many) errors in data delivery, existing network abstractions result in high tail latencies, unnecessary complexity and poor application-level performance.</p>\n<p><span> </span><span> </span>Motivated by such statistical applications, this project explores a new abstraction --- Approximately Reliable Channel (ARC) --- that allows applications to specify any desirable error guarantee for data transmission, and guarantees in-order delivery of at least (1-e) fraction of the data. This project also designed Approximate Transport Protocol (ATP), a datacenter protocol that realizes ARC on modern datacenter networks. Preliminary evaluation suggests that ATP improves the job execution time of machine learning applications by 25% without any impact on concurrently running applications that use the perfectly reliable abstraction.</p>\n<p>Intellectual Merits:&nbsp;<span id=\"docs-internal-guid-c3d6318c-7fff-1368-f4fc-511df164515e\"><span>This project explores&nbsp;</span><span>the novel idea of alleviating the mismatch between the semantics required by the applications, and those supported by the network protocols and algorithms, by exploiting approximate networking.</span><span> It sheds initial light on a variety of fundamental issues, such as, how much inexactness is tolerable for machine learning applications; how to optimally apportion approximation budget between applications and network; and, how much can the application benefit as a result. The project lays the foundation for faster, more flexible, and more energy and cost efficient machine learning applications and infrastructure, and spur innovation in machine learning.</span></span></p>\n<p><span><span>Broader Impacts:&nbsp;<span id=\"docs-internal-guid-b7006c17-7fff-65f8-f18c-cdfc5b865e87\"><span>This research is conducted collaboratively by a postdoctoral researcher and a senior graduate student, making them the intellectual leads for a potentially exciting new area of computer systems. We have already incorporated the results from this research into a graduate class at Cornell.</span></span></span></span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/09/2021<br>\n\t\t\t\t\tModified by: Rachit&nbsp;Agarwal</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n Traditionally, computer networks have offered two abstractions to applications: one that guarantees perfect, in-order, reliable delivery of all the data sent by the sender; and, second that provides no reliability guarantees whatsoever. These two abstractions are a good match for applications that are either willing to incur the overheads of achieving perfect reliability or could tolerate arbitrarily unreliable errors in data transmission. However, for many modern applications that are already statistical in nature and can tolerate some (but not arbitrarily many) errors in data delivery, existing network abstractions result in high tail latencies, unnecessary complexity and poor application-level performance.\n\n  Motivated by such statistical applications, this project explores a new abstraction --- Approximately Reliable Channel (ARC) --- that allows applications to specify any desirable error guarantee for data transmission, and guarantees in-order delivery of at least (1-e) fraction of the data. This project also designed Approximate Transport Protocol (ATP), a datacenter protocol that realizes ARC on modern datacenter networks. Preliminary evaluation suggests that ATP improves the job execution time of machine learning applications by 25% without any impact on concurrently running applications that use the perfectly reliable abstraction.\n\nIntellectual Merits: This project explores the novel idea of alleviating the mismatch between the semantics required by the applications, and those supported by the network protocols and algorithms, by exploiting approximate networking. It sheds initial light on a variety of fundamental issues, such as, how much inexactness is tolerable for machine learning applications; how to optimally apportion approximation budget between applications and network; and, how much can the application benefit as a result. The project lays the foundation for faster, more flexible, and more energy and cost efficient machine learning applications and infrastructure, and spur innovation in machine learning.\n\nBroader Impacts: This research is conducted collaboratively by a postdoctoral researcher and a senior graduate student, making them the intellectual leads for a potentially exciting new area of computer systems. We have already incorporated the results from this research into a graduate class at Cornell.\n\n\t\t\t\t\tLast Modified: 02/09/2021\n\n\t\t\t\t\tSubmitted by: Rachit Agarwal"
 }
}