{
 "awd_id": "1909446",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "RI: Small: Collaborative Research: Minimum-Cost Strategies for Sequential Search and Evaluation",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032920000",
 "po_email": "eplaku@nsf.gov",
 "po_sign_block_name": "Erion Plaku",
 "awd_eff_date": "2019-08-01",
 "awd_exp_date": "2023-07-31",
 "tot_intn_awd_amt": 141773.0,
 "awd_amount": 141773.0,
 "awd_min_amd_letter_date": "2019-07-26",
 "awd_max_amd_letter_date": "2019-07-26",
 "awd_abstract_narration": "In many situations, tasks are performed sequentially.  For example, a robot searching a building for a hidden bomb will search room by room, in some order, until the bomb is found. An automated medical diagnosis procedure might first perform one medical test, observe its outcome, then perform another test, and so forth, until the diagnosis becomes clear. It is becoming increasingly important to improve the way intelligent systems operate in these types of situations.  This project will develop algorithms and software that systems can use to determine the order in which to perform tasks, so as to minimize costs incurred or time spent. Because the outcomes of tasks are often unknown until the tasks are performed, the algorithms will be designed to enable systems to quickly make dynamic decisions, based on new information obtained as tasks are performed.  In addition to the robot search and medical diagnosis applications described above, this project has applications to many other areas, including determining network connectivity, quality testing of manufactured products, and evaluating database queries. The project will provide research opportunities to graduate and talented undergraduate students, and the researchers will engage in outreach activities, both at the college and K-12 levels, to students in groups that are under-represented in computer science.\r\n\r\nThe project research will focus on fundamental sequential ordering problems for search and evaluation in two settings. In the first setting, uncertainty about outcomes is modeled by a known probability distribution, and the goal is to minimize expected cost for the distribution. In the second, outcomes are determined by an adversary. Here a robust solution is desired, which  minimizes expected cost in the worst case.  This is equivalent to regarding the problem as a zero-sum game. In either setting, the search environment could be a discrete set of locations or it could have a more complex network structure. The project will bring together approaches from algorithms, machine learning and game theory.  Central goals are as follows: (1) Developing intelligent and adaptable search and evaluation policies that have good theoretical guarantees and can be easily implemented and deployed in practice, (2) Developing algorithmic techniques that will constitute an algorithmic toolkit for researchers working on search and evaluation problems, and (3) Integrating insights and techniques from different areas to give unified approaches to solving broad classes of related problems.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Thomas",
   "pi_last_name": "Lidbetter",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Thomas Lidbetter",
   "pi_email_addr": "tlidbetter@business.rutgers.edu",
   "nsf_id": "000743021",
   "pi_start_date": "2019-07-26",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Rutgers University Newark",
  "inst_street_address": "123 WASHINGTON ST",
  "inst_street_address_2": "",
  "inst_city_name": "NEWARK",
  "inst_state_code": "NJ",
  "inst_state_name": "New Jersey",
  "inst_phone_num": "9739720283",
  "inst_zip_code": "071023026",
  "inst_country_name": "United States",
  "cong_dist_code": "10",
  "st_cong_dist_code": "NJ10",
  "org_lgl_bus_name": "RUTGERS, THE STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "T3NGNR66YK89"
 },
 "perf_inst": {
  "perf_inst_name": "Rutgers University Newark",
  "perf_str_addr": "",
  "perf_city_name": "Newark",
  "perf_st_code": "NJ",
  "perf_st_name": "New Jersey",
  "perf_zip_code": "071021896",
  "perf_ctry_code": "US",
  "perf_cong_dist": "10",
  "perf_st_cong_dist": "NJ10",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "749500",
   "pgm_ele_name": "Robust Intelligence"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7495",
   "pgm_ref_txt": "ROBUST INTELLIGENCE"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 141773.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The aim of this project was to develop smart ways for agents, such as robots or machines, to carry out tasks effectively. We focused on sequential tasks, such as a robot searching a building, room by room, for a hidden bomb, or an automated medical diagnosis procedure that performs medical tests one by one, observing their outcomes, until the diagnosis becomes clear. For problems of this form, the objective is to determine which order to perform a sequence of tasks so as to minimize some cost incurred (or time spent).</p>\n<p>&nbsp;</p>\n<p>The first part of the project involved making some assumptions about the probabilities of the outcomes of each of the tasks. For example, in the case of searching for bombs, we might have intelligence about the likelihood the bomb is in each of the possible rooms of the building. We developed a very general framework that encompasses many problems of this form. However, the framework we proposed is so general that in most cases, finding an optimal solution would require an impractical amount of computing power.&nbsp; Therefore, we focused on finding solutions that may not be optimal but are easy to implement, and whose cost is not too much higher than the optimal solutions.&nbsp; For instance, we found a way of splitting the set of tasks into &ldquo;chunks&rdquo;, and showed that if these chunks are carried out in a specific order, then the whatever the order is <em>within </em>the chunks, the total cost will not be more than four times the cost of an optimal solution.&nbsp;</p>\n<p>&nbsp;</p>\n<p>We also analyzed simple &ldquo;greedy&rdquo; algorithms both in the context of our general framework and also for a specific scheduling problem. In the scheduling problem, the objective is to decide what order for a machine to process a set of tasks, where there is a chance that the machine will crash at some point during the execution of the tasks. A greedy algorithm is an algorithm that at each stage chooses the next task using some simple measure of attractiveness. Greedy algorithms do not always produce optimal solutions to problems, but we were able to show that they could perform measurably well for the problems we analyzed.</p>\n<p>&nbsp;</p>\n<p>The second part of the project was still focused on sequential decision making, but this time not making any assumptions about probabilities of the outcomes of the tasks. Thinking back to the example of searching for a bomb, this would correspond to the case where we have no intelligence about the location of the bomb. In this case, our objective was to find solutions that minimize the worst-case cost. We found that many problems of this form could be viewed as a special case of a more abstract problem that has a particularly nice geometric structure. We were able to leverage this structure, along with well-established theory to find optimal solutions.</p>\n<p>&nbsp;</p>\n<p>We were particularly interested in a search and rescue problem in which we wish to find a lost hiker, for example, but in an environment that poses a threat to the searcher (such as dangerous weather conditions), so that there is a danger that the search effort could come to an end before the hiker is found. We were able to find optimal or near optimal solutions for this problem in some situations, depending on the layout of the search region &ndash; we focused on regions that are tree-like or in the form of a cycle.</p>\n<p>&nbsp;</p>\n<p>This project has generated six peer reviewed journal publications and one peer reviewed conference paper. The results of the research have been disseminated all over the world in conferences and seminar series in such locations as Munich, London and Athens.</p><br>\n<p>\n Last Modified: 11/30/2023<br>\nModified by: Thomas&nbsp;Lidbetter</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe aim of this project was to develop smart ways for agents, such as robots or machines, to carry out tasks effectively. We focused on sequential tasks, such as a robot searching a building, room by room, for a hidden bomb, or an automated medical diagnosis procedure that performs medical tests one by one, observing their outcomes, until the diagnosis becomes clear. For problems of this form, the objective is to determine which order to perform a sequence of tasks so as to minimize some cost incurred (or time spent).\n\n\n\n\n\nThe first part of the project involved making some assumptions about the probabilities of the outcomes of each of the tasks. For example, in the case of searching for bombs, we might have intelligence about the likelihood the bomb is in each of the possible rooms of the building. We developed a very general framework that encompasses many problems of this form. However, the framework we proposed is so general that in most cases, finding an optimal solution would require an impractical amount of computing power. Therefore, we focused on finding solutions that may not be optimal but are easy to implement, and whose cost is not too much higher than the optimal solutions. For instance, we found a way of splitting the set of tasks into chunks, and showed that if these chunks are carried out in a specific order, then the whatever the order is within the chunks, the total cost will not be more than four times the cost of an optimal solution.\n\n\n\n\n\nWe also analyzed simple greedy algorithms both in the context of our general framework and also for a specific scheduling problem. In the scheduling problem, the objective is to decide what order for a machine to process a set of tasks, where there is a chance that the machine will crash at some point during the execution of the tasks. A greedy algorithm is an algorithm that at each stage chooses the next task using some simple measure of attractiveness. Greedy algorithms do not always produce optimal solutions to problems, but we were able to show that they could perform measurably well for the problems we analyzed.\n\n\n\n\n\nThe second part of the project was still focused on sequential decision making, but this time not making any assumptions about probabilities of the outcomes of the tasks. Thinking back to the example of searching for a bomb, this would correspond to the case where we have no intelligence about the location of the bomb. In this case, our objective was to find solutions that minimize the worst-case cost. We found that many problems of this form could be viewed as a special case of a more abstract problem that has a particularly nice geometric structure. We were able to leverage this structure, along with well-established theory to find optimal solutions.\n\n\n\n\n\nWe were particularly interested in a search and rescue problem in which we wish to find a lost hiker, for example, but in an environment that poses a threat to the searcher (such as dangerous weather conditions), so that there is a danger that the search effort could come to an end before the hiker is found. We were able to find optimal or near optimal solutions for this problem in some situations, depending on the layout of the search region  we focused on regions that are tree-like or in the form of a cycle.\n\n\n\n\n\nThis project has generated six peer reviewed journal publications and one peer reviewed conference paper. The results of the research have been disseminated all over the world in conferences and seminar series in such locations as Munich, London and Athens.\t\t\t\t\tLast Modified: 11/30/2023\n\n\t\t\t\t\tSubmitted by: ThomasLidbetter\n"
 }
}