{
 "awd_id": "1853374",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF:Small: Holistic Analysis: integrating the semantics of the world and the code",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2018-08-01",
 "awd_exp_date": "2021-07-31",
 "tot_intn_awd_amt": 416001.0,
 "awd_amount": 416001.0,
 "awd_min_amd_letter_date": "2018-12-07",
 "awd_max_amd_letter_date": "2018-12-07",
 "awd_abstract_narration": "Systems interacting with the physical world (e.g., robots, embedded systems, cyber-physical systems) depend on the interplay of code and the physical environment. Yet, techniques and tools to support quality assurance efforts on such systems typically decouple code from the physical world to simplify the process. This research effort attempts to unlock the potential of reuniting these separate worlds, integrating the rules of the physical world with the logic of code to improve the quality of the systems we build.\r\n\r\nThe key intellectual challenges of this investigation include:  1) integrating the rules of the physical world into program analysis to help developers identify faults associated with the manipulation of physical units; 2) incorporating physical attributes manifested in code into simulation scenarios so that system designers can better explore the interplay between physical software and potential environments; and 3) inserting spatial reasoning into program analysis to help developers understand and verify how a system may translate and rotate in space over time.  These efforts impact research communities by generating artifacts and tools currently lacking at the intersection of the software engineering and robotic communities, preparing several graduate students including those from underrepresented groups, and developing case studies on the faults and failures present in such systems to assist instructors, students, and practitioners to cultivate an informed perspective about the unique challenges these systems bring.  The longer, broader aim is to improve the quality of these systems that increasingly affect all aspects of society.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Sebastian",
   "pi_last_name": "Elbaum",
   "pi_mid_init": "G",
   "pi_sufx_name": "",
   "pi_full_name": "Sebastian G Elbaum",
   "pi_email_addr": "selbaum@virginia.edu",
   "nsf_id": "000412723",
   "pi_start_date": "2018-12-07",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Virginia Main Campus",
  "inst_street_address": "1001 EMMET ST N",
  "inst_street_address_2": "",
  "inst_city_name": "CHARLOTTESVILLE",
  "inst_state_code": "VA",
  "inst_state_name": "Virginia",
  "inst_phone_num": "4349244270",
  "inst_zip_code": "229034833",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "VA05",
  "org_lgl_bus_name": "RECTOR & VISITORS OF THE UNIVERSITY OF VIRGINIA",
  "org_prnt_uei_num": "",
  "org_uei_num": "JJG6HU8PA4S5"
 },
 "perf_inst": {
  "perf_inst_name": "University of Virginia Main Campus",
  "perf_str_addr": "P.O. BOX 400195",
  "perf_city_name": "CHARLOTTESVILLE",
  "perf_st_code": "VA",
  "perf_st_name": "Virginia",
  "perf_zip_code": "229044195",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "VA05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 416001.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><strong>Intellectual Merit. </strong>The work conducted under this proposal was among the first to explore the subtle and often loosely specified connection between the code that runs systems that operate in the real world, like robots, and the physical attributes of those systems. It brought attention to the insidious presence of physical inconsistencies in code that drives such robotic systems, that is, code operations on variables that represent physical entities that are not treated according to the semantics of the physical world and can cause unintended behaviors. To address this challenge, this project: 1) quantified the challenges faced by engineers and the impact of current practices, 2) pioneered static analysis approaches to automatically detect physical type inconsistencies in code (in terms of misused dimensions and frames of references) in large bodies of code and also in other software artifacts like configuration and deployment files, and it 3) prototyped some of the first approaches for test case generation and debugging that blend physical robot models (kinematics and dynamics, complex simulated physical environments) and code to generate richer tests to validate robot systems.</p>\n<p>&nbsp;</p>\n<p><strong>Broader impact.</strong> This project helped prepare multiple graduate and undergraduate students in the development and application of unique techniques to analyze and validate the software that drives robots. Five graduate students (including one that earned a Ph.D. and is now a faculty member) and two undergraduates co-authored over 12 papers that have appeared at the top conferences in both software engineering and robotics venues. This work also resulted in multiple analysis tools and datasets that have been made publicly available. Last, the project insights were instrumental in the development of a new course that blends software engineering and robotics&nbsp;to prepare students to face the unique challenges of the increasingly important multidisciplinary domain of robot system development.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/03/2021<br>\n\t\t\t\t\tModified by: Sebastian&nbsp;G&nbsp;Elbaum</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIntellectual Merit. The work conducted under this proposal was among the first to explore the subtle and often loosely specified connection between the code that runs systems that operate in the real world, like robots, and the physical attributes of those systems. It brought attention to the insidious presence of physical inconsistencies in code that drives such robotic systems, that is, code operations on variables that represent physical entities that are not treated according to the semantics of the physical world and can cause unintended behaviors. To address this challenge, this project: 1) quantified the challenges faced by engineers and the impact of current practices, 2) pioneered static analysis approaches to automatically detect physical type inconsistencies in code (in terms of misused dimensions and frames of references) in large bodies of code and also in other software artifacts like configuration and deployment files, and it 3) prototyped some of the first approaches for test case generation and debugging that blend physical robot models (kinematics and dynamics, complex simulated physical environments) and code to generate richer tests to validate robot systems.\n\n \n\nBroader impact. This project helped prepare multiple graduate and undergraduate students in the development and application of unique techniques to analyze and validate the software that drives robots. Five graduate students (including one that earned a Ph.D. and is now a faculty member) and two undergraduates co-authored over 12 papers that have appeared at the top conferences in both software engineering and robotics venues. This work also resulted in multiple analysis tools and datasets that have been made publicly available. Last, the project insights were instrumental in the development of a new course that blends software engineering and robotics to prepare students to face the unique challenges of the increasingly important multidisciplinary domain of robot system development.\n\n \n\n\t\t\t\t\tLast Modified: 08/03/2021\n\n\t\t\t\t\tSubmitted by: Sebastian G Elbaum"
 }
}