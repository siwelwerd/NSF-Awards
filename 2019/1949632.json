{
 "awd_id": "1949632",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII: SaTC: Vetting and Improving the Usage of Trusted Execution Environments for Authentication in Mobile Devices",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2019-08-12",
 "awd_exp_date": "2021-12-31",
 "tot_intn_awd_amt": 174972.0,
 "awd_amount": 174972.0,
 "awd_min_amd_letter_date": "2019-09-20",
 "awd_max_amd_letter_date": "2019-09-20",
 "awd_abstract_narration": "In mobile devices, authentication protocols are used to ensure that users' intentions are communicated untampered to the applications' backend servers. Unfortunately, traditional authentication protocols do not defend against \"root-attackers,\" i.e., attackers able to fully compromise the main operating system of a victim's device. Trusted Execution Environments (TEEs), specific hardware components available in modern mobile devices, can be used to mitigate this threat, since they run a separate, smaller codebase than the main operating system. This project explores how it is possible to use TEEs to implement \"root-resilient\" authentication protocols, i.e., authentication protocols effective against root-attackers.\r\n\r\nThis project is divided into three main tasks. The first task consists in performing a comprehensive study of the existing Application Programming Interfaces (APIs) that developers of mobile apps can use to interact with TEEs. This study will concentrate on understanding if and how these APIs can be used to implement root-resilient authentication protocols. The second task focuses on developing an automated analysis system that will be used to perform a large-scale study assessing the security of TEE-based authentication protocols implemented by existing applications. The third task consists of implementing an authentication framework helping developers in using TEEs for authentication purposes.\r\n\r\nThe project has the potential to improve the security of millions of mobile device users by enabling root-resilient authentication in thousands of mobile application programs. By performing a large-scale analysis of such mobile \"apps\", this project will identify weaknesses in existing programs. Additionally, the authentication framework developed by this project could potentially allow thousands of developers to implement root-resilient authentication protocols with reduced effort. The developed software, techniques, and findings will be disseminated by releasing the source code of the implemented software, publishing academic articles, and presenting results at academic conferences.\r\n\r\nIn addition, produced software and data will also be shared on a dedicated website (http://homepage.divms.uiowa.edu/~bianch/mobiletees/). After project completion, produced software and data will be available for at least three years.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Antonio",
   "pi_last_name": "Bianchi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Antonio Bianchi",
   "pi_email_addr": "antoniob@purdue.edu",
   "nsf_id": "000784760",
   "pi_start_date": "2019-09-20",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Purdue University",
  "inst_street_address": "2550 NORTHWESTERN AVE # 1100",
  "inst_street_address_2": "",
  "inst_city_name": "WEST LAFAYETTE",
  "inst_state_code": "IN",
  "inst_state_name": "Indiana",
  "inst_phone_num": "7654941055",
  "inst_zip_code": "479061332",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IN04",
  "org_lgl_bus_name": "PURDUE UNIVERSITY",
  "org_prnt_uei_num": "YRXVL4JYCEF5",
  "org_uei_num": "YRXVL4JYCEF5"
 },
 "perf_inst": {
  "perf_inst_name": "Purdue University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "IN",
  "perf_st_name": "Indiana",
  "perf_zip_code": "479072114",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "IN04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "026Y00",
   "pgm_ele_name": "CRII CISE Research Initiation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 174972.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Modern mobile devices are used to perform an increasing amount of security-sensitive functionality (such as performing monetary transactions). Developing this functionality requires app developers to implement authentication and authorization schemes. To ease the implementation of such schemes and their overall security, modern mobile operating systems provide different APIs, some of which are backed by Trusted Execution Environments (TEEs). In this project, we studied how developers implemented authentication and authorization systems in mobile apps, focusing, in particular, on the usage of TEE-based APIs.<br /><br />As an initial step, we studied how apps (and their corresponding backend servers) attempt to perform attestation of the security state of the devices on which they run. Our studies revealed several security issues in how apps use different anti-tampering techniques, including the Android-provided device attestation API (i.e., SafetyNet).<br /><br />Furthermore, we studied how apps implement authentication based on text messages, systematically analyzing the APIs modern operating systems provide to ease the implementation of this type of authentication. Our study revealed both design issues in these APIs (which lead to security vulnerabilities in the apps using them) and implementation issues in how existing apps use them.<br /><br />Regarding the usage of TEE-based APIs, we started by studying their design in Android. Our analysis, corroborated by a user study involving experienced Android developers, revealed that using them correctly is a challenging task for app developers. In fact, using these APIs requires the implementation of complex cryptographic checks and specific software components both in the mobile app and in its connected remote backend server. <br /><br />As a solution, we designed and implemented SARA. SARA is a software package composed of a library (to be included by an Android mobile app) and a server-side component (to be integrated into the app's backend server). SARA allows developers to easily implement TEE-based authorization schemes in Andriod since it transparently takes care of the different aspects required to implement a strong, TEE-based authorization scheme. These aspects include: generating and using cryptographic keys inside the TEE (i.e., ARM TrustZone, in Android), biometrically authenticating users (utilizing the fingerprint reader sensor available in many Android devices), communicating with the app's user utilizing a secure, TEE-enforced graphical user interface, and cryptographically verifying, on the app's backend server, the validity of any user-authorized transaction. <br /><br />To ensure SARA's security, we formally verified its security properties using a protocol verifier (i.e., ProVerif). In addition, we evaluated SARA's usability with a user study. The user study revealed that, by using SARA, developers were generally able to implement secure, TEE-based authorization schemes. On the contrary, developers could not perform the same task using only the Android-provided APIs.<br /><br />In terms of broader impact, during the completion of this project, we have been in contact with the parties affected by the identified security issues, and we helped them improve the security of their products. Moreover, we publicly released SARA so that future app developers can benefit from it. The results of our research have also been disseminated through peer-reviewed publications and conference presentations. Some of the results of this project have also been integrated into the class \"Mobile Systems and Smartphone Security\" taught at Purdue University.<br /><br /><br /><br /></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/16/2022<br>\n\t\t\t\t\tModified by: Antonio&nbsp;Bianchi</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nModern mobile devices are used to perform an increasing amount of security-sensitive functionality (such as performing monetary transactions). Developing this functionality requires app developers to implement authentication and authorization schemes. To ease the implementation of such schemes and their overall security, modern mobile operating systems provide different APIs, some of which are backed by Trusted Execution Environments (TEEs). In this project, we studied how developers implemented authentication and authorization systems in mobile apps, focusing, in particular, on the usage of TEE-based APIs.\n\nAs an initial step, we studied how apps (and their corresponding backend servers) attempt to perform attestation of the security state of the devices on which they run. Our studies revealed several security issues in how apps use different anti-tampering techniques, including the Android-provided device attestation API (i.e., SafetyNet).\n\nFurthermore, we studied how apps implement authentication based on text messages, systematically analyzing the APIs modern operating systems provide to ease the implementation of this type of authentication. Our study revealed both design issues in these APIs (which lead to security vulnerabilities in the apps using them) and implementation issues in how existing apps use them.\n\nRegarding the usage of TEE-based APIs, we started by studying their design in Android. Our analysis, corroborated by a user study involving experienced Android developers, revealed that using them correctly is a challenging task for app developers. In fact, using these APIs requires the implementation of complex cryptographic checks and specific software components both in the mobile app and in its connected remote backend server. \n\nAs a solution, we designed and implemented SARA. SARA is a software package composed of a library (to be included by an Android mobile app) and a server-side component (to be integrated into the app's backend server). SARA allows developers to easily implement TEE-based authorization schemes in Andriod since it transparently takes care of the different aspects required to implement a strong, TEE-based authorization scheme. These aspects include: generating and using cryptographic keys inside the TEE (i.e., ARM TrustZone, in Android), biometrically authenticating users (utilizing the fingerprint reader sensor available in many Android devices), communicating with the app's user utilizing a secure, TEE-enforced graphical user interface, and cryptographically verifying, on the app's backend server, the validity of any user-authorized transaction. \n\nTo ensure SARA's security, we formally verified its security properties using a protocol verifier (i.e., ProVerif). In addition, we evaluated SARA's usability with a user study. The user study revealed that, by using SARA, developers were generally able to implement secure, TEE-based authorization schemes. On the contrary, developers could not perform the same task using only the Android-provided APIs.\n\nIn terms of broader impact, during the completion of this project, we have been in contact with the parties affected by the identified security issues, and we helped them improve the security of their products. Moreover, we publicly released SARA so that future app developers can benefit from it. The results of our research have also been disseminated through peer-reviewed publications and conference presentations. Some of the results of this project have also been integrated into the class \"Mobile Systems and Smartphone Security\" taught at Purdue University.\n\n\n\n\n\n\t\t\t\t\tLast Modified: 03/16/2022\n\n\t\t\t\t\tSubmitted by: Antonio Bianchi"
 }
}