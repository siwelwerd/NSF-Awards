{
 "awd_id": "1918396",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "FMitF: Track I: Petr4: Formal Foundations for Programmable Networks",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2024-09-30",
 "tot_intn_awd_amt": 749995.0,
 "awd_amount": 749995.0,
 "awd_min_amd_letter_date": "2019-06-27",
 "awd_max_amd_letter_date": "2019-06-27",
 "awd_abstract_narration": "Most networks today achieve robustness not by adhering to precise formal specifications but by building implementations that tolerate modest deviations from correct behavior. But as networks have grown in scale and complexity, the frequency of faults caused by these deviations has increased, leading to new interest in techniques for formally specifying and verifying network behavior. The goal of the Petr4 (\"petra\") project is to build a new foundation for networking by developing a precise, formal semantics for the programs that execute on network devices such as Internet routers. The project's novelties are in applying programming language-based techniques to an emerging area and building verified software tools, such as a compiler that generates code guaranteed to correctly implement the semantics of a given source program. The project's impacts are in developing open-source software, pursuing technology transfer with industry partners, and designing material for an outreach workshop aimed at undergraduates from under-represented groups.\r\n\r\nAt a technical level, the project will focus on four distinct research thrusts: (1) Developing a formal semantics for the P4 Programming Language, realized as a set of mathematical definitions and an accompanying reference implementation; (2) Building a verified compiler from P4 to eBPF, the language used to express custom packet-processing in the Linux kernel; (3) Investigating new control-plane APIs that are rich enough to capture key invariants and facilitate correct composition of control applications; and (4) Developing a library of executable protocol implementations that can be assembled into a modular Internet router. The project will be guided by an interdisciplinary research team with expertise in both formal methods and networking, and seeks to not only develop a new foundation for networking, but also serve as a catalyst for follow-on efforts that target higher layers of the networking stack.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Foster",
   "pi_mid_init": "N",
   "pi_sufx_name": "",
   "pi_full_name": "John N Foster",
   "pi_email_addr": "jnfoster@cs.cornell.edu",
   "nsf_id": "000569694",
   "pi_start_date": "2019-06-27",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Morrisett",
   "pi_mid_init": "G",
   "pi_sufx_name": "",
   "pi_full_name": "John G Morrisett",
   "pi_email_addr": "greg.morrisett@cornell.edu",
   "nsf_id": "000347145",
   "pi_start_date": "2019-06-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "107 Hoy Road, Gates Hall",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148502820",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "094Y00",
   "pgm_ele_name": "FMitF: Formal Methods in the F"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "062Z",
   "pgm_ref_txt": "Harnessing the Data Revolution"
  },
  {
   "pgm_ref_code": "071Z",
   "pgm_ref_txt": "FMitF-Formal Methods in the Field"
  },
  {
   "pgm_ref_code": "7943",
   "pgm_ref_txt": "PROGRAMMING LANGUAGES"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 749995.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The primary objective of this project was to develop a formal semantics for the P4 programming language, providing a basis for formally verifying network programs and evolving the language design in a sound manner. The major intellectual contributions relate to semantics engineering&mdash;specifically, extracting a clean formal model from a large, real-world programming language actively developed by an industry consortium.</p>\r\n<p>To this end, we developed Petr4, a clean-slate reference interpreter for P4 in OCaml. In the process, we identified and fixed dozens of bugs in the official language specification. We tested the Petr4 semantics against the suite of compiler and packet simulator tests provided in the open-source compiler for P4. Additionally, we mechanized Petr4's semantics in the Coq proof assistant and designed a minimal intermediate representation (IR) for P4 compiler backends.</p>\r\n<p>We also developed a new course on software-defined networking, featuring hands-on programming assignments on routing, traffic engineering, and load balancing, all implemented in Petr4. This course has been taught to graduate students at Cornell and to industry professionals through an online platform. Furthermore, we provided research opportunities for undergraduates and engaged in outreach efforts in partnership with Cornell's SoNIC workshop series.</p>\r\n<p>The Petr4 front-end has been used by several other academic groups (e.g., P4Light, HOL4P4, and p4-cherry). We continue to work with the P4 Language Design Working Group to facilitate technology transfer to the open-source community.</p>\r\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 01/29/2025<br>\nModified by: John&nbsp;N&nbsp;Foster</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe primary objective of this project was to develop a formal semantics for the P4 programming language, providing a basis for formally verifying network programs and evolving the language design in a sound manner. The major intellectual contributions relate to semantics engineeringspecifically, extracting a clean formal model from a large, real-world programming language actively developed by an industry consortium.\r\n\n\nTo this end, we developed Petr4, a clean-slate reference interpreter for P4 in OCaml. In the process, we identified and fixed dozens of bugs in the official language specification. We tested the Petr4 semantics against the suite of compiler and packet simulator tests provided in the open-source compiler for P4. Additionally, we mechanized Petr4's semantics in the Coq proof assistant and designed a minimal intermediate representation (IR) for P4 compiler backends.\r\n\n\nWe also developed a new course on software-defined networking, featuring hands-on programming assignments on routing, traffic engineering, and load balancing, all implemented in Petr4. This course has been taught to graduate students at Cornell and to industry professionals through an online platform. Furthermore, we provided research opportunities for undergraduates and engaged in outreach efforts in partnership with Cornell's SoNIC workshop series.\r\n\n\nThe Petr4 front-end has been used by several other academic groups (e.g., P4Light, HOL4P4, and p4-cherry). We continue to work with the P4 Language Design Working Group to facilitate technology transfer to the open-source community.\r\n\n\n\t\t\t\t\tLast Modified: 01/29/2025\n\n\t\t\t\t\tSubmitted by: JohnNFoster\n"
 }
}