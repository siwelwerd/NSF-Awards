{
 "awd_id": "1925485",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CCRI: ENS: Collaborative Research: Modernizing gem5: Expanding the Reach of Computer Architecture Simulation",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Damian Dechev",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 362817.0,
 "awd_amount": 378817.0,
 "awd_min_amd_letter_date": "2019-08-16",
 "awd_max_amd_letter_date": "2021-06-02",
 "awd_abstract_narration": "Computer systems are increasingly important to society and the advancement of science.  In recent years, technological trends have made it increasingly difficult to continue scaling their performance.  As a result, research to further improve computer systems is vital.  Traditionally, this research has relied on cycle-level software simulation of these computer systems to model the potential improvements of novel techniques.  However, much of the software was written 15 years ago, and it is currently maintained by students and researchers.  This project will make a concerted effort to improve the underlying simulation infrastructure, which will enable increased research output by the computer systems community.  It will specifically focus on the gem5 infrastructure, which is widely used in the community (e.g., cited over 3000 times) and considered the de facto tool for simulating all components of the computing system.\r\n\r\nThis project will enhance and rejuvenate the aging gem5 community infrastructure through improvements to the underlying gem5 components, community outreach and improved user's services, and developing new models for emerging devices required for evaluating important applications (e.g., machine learning, augmented and virtual reality, high performance computing, and system security).  These improvements will increase the research output of gem5's broad user base and extend the ability to perform hardware-software co-design to the entire computer systems community. This project will broaden the already vibrant gem5 community through reducing the barrier to entry by (1) running two gem5 summer schools to introduce junior graduate students to gem5 and computer systems research, (2) simplifying gem5's interface, (3) improving the community's documentation and communication channels, and (4) supervising a community code shepherd to help researchers integrate their code with the community infrastructure. The investigators will also create a set of 'known-good' system configurations that will significantly increase the productivity of researchers performing detailed cycle-level research studies. These system configurations will be proxies for current state-of-the-art systems and will be publicly validated against real systems and workloads suggested by the community.\r\n\r\nThis project will create a sustainable path for the future of the gem5 infrastructure by improving the code testing coverage and increasing the robustness of hardware device models. Additionally, community outreach efforts will broaden the community increasing the impact of gem5 and providing more contributors to continue development of this infrastructure after this project completes.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Matthew",
   "pi_last_name": "Sinclair",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "Matthew D Sinclair",
   "pi_email_addr": "sinclair@cs.wisc.edu",
   "nsf_id": "000754273",
   "pi_start_date": "2019-08-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Wisconsin-Madison",
  "inst_street_address": "21 N PARK ST STE 6301",
  "inst_street_address_2": "",
  "inst_city_name": "MADISON",
  "inst_state_code": "WI",
  "inst_state_name": "Wisconsin",
  "inst_phone_num": "6082623822",
  "inst_zip_code": "537151218",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "WI02",
  "org_lgl_bus_name": "UNIVERSITY OF WISCONSIN SYSTEM",
  "org_prnt_uei_num": "",
  "org_uei_num": "LCLSJAGTNZQ7"
 },
 "perf_inst": {
  "perf_inst_name": "University of Wisconsin-Madison",
  "perf_str_addr": "",
  "perf_city_name": "Madison",
  "perf_st_code": "WI",
  "perf_st_name": "Wisconsin",
  "perf_zip_code": "537151218",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "WI02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735900",
   "pgm_ele_name": "CCRI-CISE Cmnty Rsrch Infrstrc"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7359",
   "pgm_ref_txt": "COMPUTING RES INFRASTRUCTURE"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 362817.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>&lt;p&gt;The major goal of this work was to improve the research productivity of the gem5 simulator. The gem5 simulator is used to research and design new computer architecture designs. A significant fraction of computer architecture research presented at top conferences uses gem5 to evaluate the efficacy of their research proposals. Accordingly, in this project we have significantly improved gem5's shared community infrastructure by improving its accuracy, documentation, usability, support, and sustainability.&lt;/p&gt;<br />&lt;p&gt;To improve gem5's accuracy, we first updated gem5's statistics infrastructure to make it easier to extend and better able to report statistics for a variety of components. Next, we introduced new, much more accurate models of HBM2 and DRAMSys2 simulator in main memory, which we have integrated into gem5's CPU models and are integrating into its GPU models. Moreover, we also created the GPU Accuracy Profiler (GAP), which we used to iteratively refine the accuracy of gem5's GPU models and better reflect the behavior of real GPUs.&lt;/p&gt;<br />&lt;p&gt;To improve gem5's documentation, we revamped the gem5 website (http://www.gem5.org), which continues to be the main touchstone for those seeking gem5 related materials. The most popular resource is the &amp;ldquo;Learning gem5 pages (https://www.gem5.org/documentation/learning_gem5/introduction) where we provide an entry level, step-by-step tutorial for new users to understand how to use gem5. Additionally, we also created a a gem5 YouTube channel (https://www.youtube.com/channel/UCCpCGEj_835WYmbB0g96lZw). The channel hosts a variety of gem5-related videos, most importantly videos from the gem5 bootcamp we ran as part of this grant, where we provide a number of examples and details about the behavior and functionality of many gem5 components -- making it easier for users to use features.&lt;/p&gt;<br />&lt;p&gt;To improve gem5's usability,we introduced validated baselines (\"known good models\") for a variety of different components. These models are also tested as part of our sustainability vector, and provide users with models that are known to work well without modification. Moreover, we also introduced a new components library (standard library, or \"stdlib\"), which supports &amp;ldquo;components: which are models with specific parameters and a set interface; &amp;ldquo;resources: which are binaries and other external resources required to run gem5 simulations; &amp;ldquo;simulate: which is a package to make simulations simpler; and &amp;ldquo;prebuilt: which are a set of prebuilt boards which require little to no input from the user.&lt;/p&gt;<br />&lt;p&gt;Finally, we developed a public website, gem5-resources (resources.gem5.org), which provides the infrastructure for running gem5 simulations. This website enables users to find and download workloads, kernels, binaries, disk images and other resources for gem5 simulations and shows examples of how to apply them. Moreover, we enhanced gem5 to support the integration of these resources in gem5 configuration scripts. This infrastructure will advance the reproducibility of computer architecture research as it allows the computer architecture research community to use the same workloads and resources for their experiments. This infrastructure also facilitates computer architecture research as researchers can build on the existing infrastructure rather than creating everything from scratch. Collectively, these improvements make it easier for users to immediately start using gem5 productively.&lt;/p&gt;<br />&lt;p&gt;To improve gem5's support, we added a number of features to gem5's models across a number of vendors. For example, we enhanced gem5's CPU support in a number of ways: RISC-V PMP vector, and full system (FS) mode support, 64-bit mode support for IBM's PowerPC ISA, many ARM architectural extensions (including SVE/SVE2/SVM vectors), DVM messages, EL2/EL3 support, KVM GIGv3, TLB improvements, SST integration, and CHI coherence protocol support. We also integrated gem5 with SST, a simulator focused on modeling large HPC-scale systems, to enable gem5 to scalably, flexibly model larger systems. Finally, we also significantly improved gem5's GPU support to help enable future co-design. First, we integrated support for AMD's GCN3- and Vega-class GPUs in syscall emulation (SE) mode. Next, we extended this support to run newer versions of AMD's ROCm stack, and added support to run machine learning (ML) models. We also integrated support to run gem5 GPU models in FS mode. Finally, we also added models for AR/VR sensors. We used these new models in conjunction with our efforts to improve accuracy and usability to create high fidelity, known good models.&lt;/p&gt;<br />&lt;p&gt;To improve gem5's sustainability,we introduced a number of improvements. &lt;br /&gt; For example, we introduced stable APIs and releases -- providing a lead time of several releases when interfaces changed for others to update their code and preventing these interfaces from changing rapidly. Moreover, we also introduced rigorous per-commit, daily, and weekly stability testing. For example, we run over 500 tests before any change can be added to gem5&amp;rsquo;s code. This significantly improved the robustness of the codebase and reduced the number of bugs inadvertently introduced. Finally, we developed a new infrastructure for improving the reproducibility of large-scale gem5 experiments, called gem5art (https://gem5art.readthedocs.io/en/latest/).&lt;/p&gt;<br />&lt;p&gt;The work also resulted in a number of research publications, tutorials at major conferences, workshops, and an increasingly thriving gem5 ecosystem.&lt;/p&gt;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/09/2023<br>\n\t\t\t\t\tModified by: Matthew&nbsp;D&nbsp;Sinclair</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n&lt;p&gt;The major goal of this work was to improve the research productivity of the gem5 simulator. The gem5 simulator is used to research and design new computer architecture designs. A significant fraction of computer architecture research presented at top conferences uses gem5 to evaluate the efficacy of their research proposals. Accordingly, in this project we have significantly improved gem5's shared community infrastructure by improving its accuracy, documentation, usability, support, and sustainability.&lt;/p&gt;\n&lt;p&gt;To improve gem5's accuracy, we first updated gem5's statistics infrastructure to make it easier to extend and better able to report statistics for a variety of components. Next, we introduced new, much more accurate models of HBM2 and DRAMSys2 simulator in main memory, which we have integrated into gem5's CPU models and are integrating into its GPU models. Moreover, we also created the GPU Accuracy Profiler (GAP), which we used to iteratively refine the accuracy of gem5's GPU models and better reflect the behavior of real GPUs.&lt;/p&gt;\n&lt;p&gt;To improve gem5's documentation, we revamped the gem5 website (http://www.gem5.org), which continues to be the main touchstone for those seeking gem5 related materials. The most popular resource is the &amp;ldquo;Learning gem5 pages (https://www.gem5.org/documentation/learning_gem5/introduction) where we provide an entry level, step-by-step tutorial for new users to understand how to use gem5. Additionally, we also created a a gem5 YouTube channel (https://www.youtube.com/channel/UCCpCGEj_835WYmbB0g96lZw). The channel hosts a variety of gem5-related videos, most importantly videos from the gem5 bootcamp we ran as part of this grant, where we provide a number of examples and details about the behavior and functionality of many gem5 components -- making it easier for users to use features.&lt;/p&gt;\n&lt;p&gt;To improve gem5's usability,we introduced validated baselines (\"known good models\") for a variety of different components. These models are also tested as part of our sustainability vector, and provide users with models that are known to work well without modification. Moreover, we also introduced a new components library (standard library, or \"stdlib\"), which supports &amp;ldquo;components: which are models with specific parameters and a set interface; &amp;ldquo;resources: which are binaries and other external resources required to run gem5 simulations; &amp;ldquo;simulate: which is a package to make simulations simpler; and &amp;ldquo;prebuilt: which are a set of prebuilt boards which require little to no input from the user.&lt;/p&gt;\n&lt;p&gt;Finally, we developed a public website, gem5-resources (resources.gem5.org), which provides the infrastructure for running gem5 simulations. This website enables users to find and download workloads, kernels, binaries, disk images and other resources for gem5 simulations and shows examples of how to apply them. Moreover, we enhanced gem5 to support the integration of these resources in gem5 configuration scripts. This infrastructure will advance the reproducibility of computer architecture research as it allows the computer architecture research community to use the same workloads and resources for their experiments. This infrastructure also facilitates computer architecture research as researchers can build on the existing infrastructure rather than creating everything from scratch. Collectively, these improvements make it easier for users to immediately start using gem5 productively.&lt;/p&gt;\n&lt;p&gt;To improve gem5's support, we added a number of features to gem5's models across a number of vendors. For example, we enhanced gem5's CPU support in a number of ways: RISC-V PMP vector, and full system (FS) mode support, 64-bit mode support for IBM's PowerPC ISA, many ARM architectural extensions (including SVE/SVE2/SVM vectors), DVM messages, EL2/EL3 support, KVM GIGv3, TLB improvements, SST integration, and CHI coherence protocol support. We also integrated gem5 with SST, a simulator focused on modeling large HPC-scale systems, to enable gem5 to scalably, flexibly model larger systems. Finally, we also significantly improved gem5's GPU support to help enable future co-design. First, we integrated support for AMD's GCN3- and Vega-class GPUs in syscall emulation (SE) mode. Next, we extended this support to run newer versions of AMD's ROCm stack, and added support to run machine learning (ML) models. We also integrated support to run gem5 GPU models in FS mode. Finally, we also added models for AR/VR sensors. We used these new models in conjunction with our efforts to improve accuracy and usability to create high fidelity, known good models.&lt;/p&gt;\n&lt;p&gt;To improve gem5's sustainability,we introduced a number of improvements. &lt;br /&gt; For example, we introduced stable APIs and releases -- providing a lead time of several releases when interfaces changed for others to update their code and preventing these interfaces from changing rapidly. Moreover, we also introduced rigorous per-commit, daily, and weekly stability testing. For example, we run over 500 tests before any change can be added to gem5&amp;rsquo;s code. This significantly improved the robustness of the codebase and reduced the number of bugs inadvertently introduced. Finally, we developed a new infrastructure for improving the reproducibility of large-scale gem5 experiments, called gem5art (https://gem5art.readthedocs.io/en/latest/).&lt;/p&gt;\n&lt;p&gt;The work also resulted in a number of research publications, tutorials at major conferences, workshops, and an increasingly thriving gem5 ecosystem.&lt;/p&gt;\n\n\t\t\t\t\tLast Modified: 10/09/2023\n\n\t\t\t\t\tSubmitted by: Matthew D Sinclair"
 }
}