{
 "awd_id": "1846230",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: Securing Mobile Devices by Hardening their System Software",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Karen Karavanic",
 "awd_eff_date": "2019-06-01",
 "awd_exp_date": "2024-05-31",
 "tot_intn_awd_amt": 496670.0,
 "awd_amount": 496670.0,
 "awd_min_amd_letter_date": "2019-03-01",
 "awd_max_amd_letter_date": "2023-06-12",
 "awd_abstract_narration": "Modern mobile devices, such as smartphones, tablets, and wearables, are targets of an increasing number of security attacks. Moreover, according to Google, an increasing number of attacks on (Android-based) mobile devices are targeting the operating system kernel. For example, 44% of attacks in 2016 targeted the kernel versus 9% and 4% respectively in 2015 and 2014. Unfortunately, contemporary mobile operating systems are large, complex, and full of vulnerabilities; hence they fall victims to these attacks more often than not. This project attempts at improving the state of the art in security of mobile devices through a complementary and comprehensive set of approaches that can alleviate the problem of operating system vulnerability to attacks. This project enhances the security of mobile devices. As mobile devices play an increasingly important role in today's world, this project will have a high impact on global societies and economies. The project will also train students in systems software programming through outreach and tutorial activities. \r\n\r\nThe project targets three approaches to enhancing the security of mobile devices: (i) a security monitor to provide important security and privacy guarantees despite a compromised operating system, (ii) novel and mobile-specific tools to find (and then fix) mobile operating system vulnerabilities, and (iii) a vetting layer to efficiently safeguard the operating system interface against malicious applications. This project will be conducted in three research thrusts, each of which will address the challenges of one of the aforementioned approaches. The first research thrust builds a trustworthy and extensible security monitor for mobile devices. The key idea in this thrust is the use of security domains, which are isolated domains each hosting a different security service providing a unique security or privacy guarantee. The second research thrust investigates techniques to find vulnerabilities in the mobile operating system. In particular, it investigates solutions to apply existing dynamic analysis techniques to mobile operating system codebase in order to find and patch its vulnerabilities. Most such techniques are only applicable to software running within a virtual machine (VM). Hence, the key idea in this research thrust is to either automatically port mobile operating system code to run within a virtual machine or run these techniques on the device itself. The third research thrust investigates methods to safeguard the operating system interface against malicious applications. It does so by incorporating an extensive set of security checks on system calls and other operating system application programming interface calls to limit the application's attack vector. This thrust consists of two tasks including an in-process shield space capable of securely and efficiently executing the vetting layer's security checks as well as solutions to automatically generate such security checks.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Ardalan",
   "pi_last_name": "Amiri Sani",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ardalan Amiri Sani",
   "pi_email_addr": "ardalan@uci.edu",
   "nsf_id": "000702468",
   "pi_start_date": "2019-03-01",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Irvine",
  "inst_street_address": "160 ALDRICH HALL",
  "inst_street_address_2": "",
  "inst_city_name": "IRVINE",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "9498247295",
  "inst_zip_code": "926970001",
  "inst_country_name": "United States",
  "cong_dist_code": "47",
  "st_cong_dist_code": "CA47",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA IRVINE",
  "org_prnt_uei_num": "MJC5FCYQTPE6",
  "org_uei_num": "MJC5FCYQTPE6"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Irvine",
  "perf_str_addr": "3204 Bren Hall",
  "perf_city_name": "Irvine",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "926973425",
  "perf_ctry_code": "US",
  "perf_cong_dist": "47",
  "perf_st_cong_dist": "CA47",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002324DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 168363.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 100785.0
  },
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 118530.0
  },
  {
   "fund_oblg_fiscal_yr": 2023,
   "fund_oblg_amt": 108992.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-723e1733-7fff-ab1a-5730-ee879a4a1634\">\n<p dir=\"ltr\"><span>A core challenge to securing mobile devices today is the large number of vulnerabilities in the operating system. This is because (i) mobile operating systems, such as Android and iOS, leverage monolithic kernels, which encompass many functionalities and hence have large codebases (in the order of several millions of lines) and (ii) these kernels are developed in C, which is an unsafe language.&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>The goal of this project is to improve the state of the art in security of mobile devices through a complementary and comprehensive set of approaches that can alleviate the problem of operating system vulnerability to attacks. The project targets three research thrusts to enhance the security of mobile devices: (i) a security monitor to provide important security and privacy guarantees despite a compromised operating system, (ii) novel and mobile-specific tools to find (and then fix) mobile operating system vulnerabilities, and (iii) a vetting layer to efficiently safeguard the operating system interface against malicious applications.&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>The team built several systems to achieve these goals.</span></p>\n<br />\n<p dir=\"ltr\"><span>For the first thrust, we built the split-trust architecture and its </span><span>operating system</span><span>, OctopOS for mobile devices. This system solution provides a highly secure environment for running security-critical programs in mobile devices despite a compromised operating system. It achieves so by minimizing the hardware and software trusted computing base using the principle of physical isolation. We have also developed solutions that enable achieving high performance and hardware utilization on this system. In addition, we built Hora on top of this system, which achieves a high assurance periodic availability guarantee for life-critical programs in mobile devices.</span></p>\n<br />\n<p dir=\"ltr\"><span>For the second research thrust, we developed Hecaton, a tool for undoing syscalls that result in a crash or other unexpected behavior in the </span><span>operating system</span><span> kernel. Moreover, we built GLeeFuzz for fuzzing the browser graphics (WebGL) interface, which is intended to find bugs and vulnerabilities in the graphics stacks of the operating system and the web browser.</span></p>\n<br />\n<p dir=\"ltr\"><span>For the third research thrust, we built MegaMind, a vetting layer to safeguard the input/output interface of a voice assistant (running on mobile devices such as smartphones and standalone voice assistants) against malicious and unintended behavior. We also built Sifter, a vetting layer to safeguard the syscalls issued to the operating system kernel in mobile devices. It uses eBPF to implement its highly-selective filters. We also developed a fuzzer to fuzz the eBPF runtime in order to find bugs and vulnerabilities in it.</span></p>\n</span></p><br>\n<p>\n Last Modified: 09/30/2024<br>\nModified by: Ardalan&nbsp;Amiri Sani</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n\n\n\nA core challenge to securing mobile devices today is the large number of vulnerabilities in the operating system. This is because (i) mobile operating systems, such as Android and iOS, leverage monolithic kernels, which encompass many functionalities and hence have large codebases (in the order of several millions of lines) and (ii) these kernels are developed in C, which is an unsafe language.\n\n\n\n\nThe goal of this project is to improve the state of the art in security of mobile devices through a complementary and comprehensive set of approaches that can alleviate the problem of operating system vulnerability to attacks. The project targets three research thrusts to enhance the security of mobile devices: (i) a security monitor to provide important security and privacy guarantees despite a compromised operating system, (ii) novel and mobile-specific tools to find (and then fix) mobile operating system vulnerabilities, and (iii) a vetting layer to efficiently safeguard the operating system interface against malicious applications.\n\n\n\n\nThe team built several systems to achieve these goals.\n\n\n\n\nFor the first thrust, we built the split-trust architecture and its operating system, OctopOS for mobile devices. This system solution provides a highly secure environment for running security-critical programs in mobile devices despite a compromised operating system. It achieves so by minimizing the hardware and software trusted computing base using the principle of physical isolation. We have also developed solutions that enable achieving high performance and hardware utilization on this system. In addition, we built Hora on top of this system, which achieves a high assurance periodic availability guarantee for life-critical programs in mobile devices.\n\n\n\n\nFor the second research thrust, we developed Hecaton, a tool for undoing syscalls that result in a crash or other unexpected behavior in the operating system kernel. Moreover, we built GLeeFuzz for fuzzing the browser graphics (WebGL) interface, which is intended to find bugs and vulnerabilities in the graphics stacks of the operating system and the web browser.\n\n\n\n\nFor the third research thrust, we built MegaMind, a vetting layer to safeguard the input/output interface of a voice assistant (running on mobile devices such as smartphones and standalone voice assistants) against malicious and unintended behavior. We also built Sifter, a vetting layer to safeguard the syscalls issued to the operating system kernel in mobile devices. It uses eBPF to implement its highly-selective filters. We also developed a fuzzer to fuzz the eBPF runtime in order to find bugs and vulnerabilities in it.\n\t\t\t\t\tLast Modified: 09/30/2024\n\n\t\t\t\t\tSubmitted by: ArdalanAmiri Sani\n"
 }
}