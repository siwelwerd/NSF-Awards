{
 "awd_id": "1925583",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CCRI: Planning: Algorithmically Updating Repository of Reductions in Fine-Grained Complexity",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Yuanyuan Yang",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2021-03-31",
 "tot_intn_awd_amt": 100000.0,
 "awd_amount": 100000.0,
 "awd_min_amd_letter_date": "2019-08-16",
 "awd_max_amd_letter_date": "2019-08-16",
 "awd_abstract_narration": "This project develops a community-maintained central repository for recording reductions between computational problems. This infrastructure enables theoretical computer scientists to keep track of progress and the best known results for each problem. Fine-grained complexity is a recent branch of computational complexity theory where the goal is to understand which computational problems can be solved in linear time (where the time required grows proportional to the problem size), and which fundamentally require quadratic time (where the time grows as the square of the problem size), etc. The basis for this field is reductions, which show how to convert problems of one type into problems of another type, and therefore prove relations between those problem types.\r\n\r\nBy recording reductions and their properties in a machine-understandable form, the project enables algorithmic generation of the best known relationships between problems. These automatically derived reductions can strengthen our knowledge of both algorithms and hardness results, and let people identify gaps in their knowledge and thereby define future research directions. The proposed infrastructure could transform the way research is done in fine-grained complexity, and more broadly, theoretical computer science.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Erik",
   "pi_last_name": "Demaine",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "Erik D Demaine",
   "pi_email_addr": "edemaine@mit.edu",
   "nsf_id": "000159772",
   "pi_start_date": "2019-08-16",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Ryan",
   "pi_last_name": "Williams",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ryan Williams",
   "pi_email_addr": "rrw@mit.edu",
   "nsf_id": "000606346",
   "pi_start_date": "2019-08-16",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Virginia",
   "pi_last_name": "Williams",
   "pi_mid_init": "V",
   "pi_sufx_name": "",
   "pi_full_name": "Virginia V Williams",
   "pi_email_addr": "virgito@gmail.com",
   "nsf_id": "000640555",
   "pi_start_date": "2019-08-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Massachusetts Institute of Technology",
  "inst_street_address": "77 MASSACHUSETTS AVE",
  "inst_street_address_2": "",
  "inst_city_name": "CAMBRIDGE",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6172531000",
  "inst_zip_code": "021394301",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "E2NYLCDML6V1",
  "org_uei_num": "E2NYLCDML6V1"
 },
 "perf_inst": {
  "perf_inst_name": "Massachusetts Institute of Technology",
  "perf_str_addr": "77 MASSACHUSETTS AVE",
  "perf_city_name": "Cambridge",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021394301",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735900",
   "pgm_ele_name": "CCRI-CISE Cmnty Rsrch Infrstrc"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7359",
   "pgm_ref_txt": "COMPUTING RES INFRASTRUCTURE"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 100000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>In this planning project, we have worked out many details of the Reduction Database project, which aims to be a community-maintained central repository for recording fine-grained reductions between computational problems. At the simplest level, this infrastructure enables theoretical computer scientists to keep track of progress and the best known results for each problem. Fine-grained complexity is a recent branch of computational complexity theory where the goal is to understand which problems can be solved in linear time, and which fundamentally require quadratic time, or cubic time, or n^2.5 time, etc. The basis for this field is reductions, specifically multi-call (Cook-style) reductions, that control the exponent in polynomial running times in a controlled fashion.</p>\n<p>Our progress has focused primarily on detailing the data representation of the various structures and information that we want to capture.&nbsp; Our general approach was to consider a result that we wanted to capture, and to work out by hand a semi-formal representation of the result and any auxiliary structures that it needed to represent it. We have assembled these representations into a machine-readable YAML document, which could be easily ingested into an object-oriented database such as MongoDB.</p>\n<p>So far we have successfully represented 20 problems, 10 input types, 9 fine-grained reductions, 8 other reductions, and 10 hypotheses/assumptions.&nbsp; These problems were chosen to help insure our data model was expressive enough to handle likely edge cases.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 05/16/2021<br>\n\t\t\t\t\tModified by: Erik&nbsp;D&nbsp;Demaine</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIn this planning project, we have worked out many details of the Reduction Database project, which aims to be a community-maintained central repository for recording fine-grained reductions between computational problems. At the simplest level, this infrastructure enables theoretical computer scientists to keep track of progress and the best known results for each problem. Fine-grained complexity is a recent branch of computational complexity theory where the goal is to understand which problems can be solved in linear time, and which fundamentally require quadratic time, or cubic time, or n^2.5 time, etc. The basis for this field is reductions, specifically multi-call (Cook-style) reductions, that control the exponent in polynomial running times in a controlled fashion.\n\nOur progress has focused primarily on detailing the data representation of the various structures and information that we want to capture.  Our general approach was to consider a result that we wanted to capture, and to work out by hand a semi-formal representation of the result and any auxiliary structures that it needed to represent it. We have assembled these representations into a machine-readable YAML document, which could be easily ingested into an object-oriented database such as MongoDB.\n\nSo far we have successfully represented 20 problems, 10 input types, 9 fine-grained reductions, 8 other reductions, and 10 hypotheses/assumptions.  These problems were chosen to help insure our data model was expressive enough to handle likely edge cases.\n\n\t\t\t\t\tLast Modified: 05/16/2021\n\n\t\t\t\t\tSubmitted by: Erik D Demaine"
 }
}