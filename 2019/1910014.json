{
 "awd_id": "1910014",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "III: Small: Task-aware Materialization for Fast Data Analytics",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032927347",
 "po_email": "sspengle@nsf.gov",
 "po_sign_block_name": "Sylvia Spengler",
 "awd_eff_date": "2019-09-01",
 "awd_exp_date": "2023-08-31",
 "tot_intn_awd_amt": 428998.0,
 "awd_amount": 428998.0,
 "awd_min_amd_letter_date": "2019-08-16",
 "awd_max_amd_letter_date": "2020-07-17",
 "awd_abstract_narration": "The data-to-knowledge pipeline is central to our data-driven world. It consumes data in raw format and then cleans, transforms, integrates, stores, processes, and analyzes the data to obtain knowledge in a usable format. Data analytics pipelines are complex and their workflows typically consist of several simpler tasks chained together. To speed up such pipelines, a ubiquitous optimization technique is to materialize the intermediate result of a task, so that downstream tasks can access the intermediate data as efficiently as possible. Existing materialization techniques suffer from several drawbacks, including prohibitively large cost in terms of storage and preprocessing time. To address these drawbacks, this proposal will develop smart materialization algorithms that can significantly accelerate the performance of data analytics applications. As a result, it will enable data scientists to obtain actionable insights faster and will impact research in areas such as biology, economics, sociology and the medical sciences.   \r\n\r\nThe goal of this project is to design, implement and evaluate materialization techniques using three novel ideas: task-aware materialization; fine-grained decisions on what and how to materialize; and multiple design points that can trade off space for time to achieve optimal performance of data analytics pipelines. The project will also explore how to design data structures for materialization that are adaptive to changes in the data and the downstream workload. From a theoretical viewpoint, the proposed research will aim to obtain theoretical guarantees on the tradeoff between space and time for materialization for different tasks. From a practical viewpoint, it will result in implementing and evaluating the developed algorithms on real-world data analytics applications, including visualization through lineage tracking, statistical inference, pattern retrieval in graphs and social network analysis.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Paraschos",
   "pi_last_name": "Koutris",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Paraschos Koutris",
   "pi_email_addr": "paris@cs.wisc.edu",
   "nsf_id": "000702081",
   "pi_start_date": "2019-08-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Wisconsin-Madison",
  "inst_street_address": "21 N PARK ST STE 6301",
  "inst_street_address_2": "",
  "inst_city_name": "MADISON",
  "inst_state_code": "WI",
  "inst_state_name": "Wisconsin",
  "inst_phone_num": "6082623822",
  "inst_zip_code": "537151218",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "WI02",
  "org_lgl_bus_name": "UNIVERSITY OF WISCONSIN SYSTEM",
  "org_prnt_uei_num": "",
  "org_uei_num": "LCLSJAGTNZQ7"
 },
 "perf_inst": {
  "perf_inst_name": "University of Wisconsin-Madison",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "WI",
  "perf_st_name": "Wisconsin",
  "perf_zip_code": "537061613",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "WI02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736400",
   "pgm_ele_name": "Info Integration & Informatics"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7364",
   "pgm_ref_txt": "INFO INTEGRATION & INFORMATICS"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 287734.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 141264.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project aimed to develop novel materialization algorithms that can significantly improve the performance of data analytics applications. Materialization is an optimization technique that stores the intermediate result of a task (typically a relational query) in a space-efficient data&nbsp;structure so that downstream tasks in a data pipeline can access the intermediate results efficiently. The project had successful outcomes in several directions.</p>\n<div>First, we developed a general algorithmic framework for obtaining space-time tradeoffs for join queries with access patterns. Our framework proposes a&nbsp;common approach to obtaining such tradeoffs by unifying prior disparate algorithmic techniques. Technically, it builds upon recently developed techniques in database theory, such as tree decompositions and&nbsp;entropy-aware worst-case join algorithms. As a consequence of our framework, we achieve the best currently known space-time tradeoff results by significantly improving the prior state-of-the-art.&nbsp;</div>\n<div>\n<div>\n<div>Second, we introduced new algorithms for the case where the user is interested only in viewing the top-k results of a query after these results have been ordered according to some ranking function. For instance, a user may be interested in extracting the patterns (e.g., triangles, squares) in a labeled graph with the highest total weight. In such a scenario, materializing and sorting the join result is a very expensive approach. Instead, we proposed a data structure that allows us to enumerate the join results in ranked order with the smallest possible overhead.&nbsp; We also showed how to extend and implement this ranking algorithm to join queries with projections. Our experiments show that we can obtain a dramatic improvement in performance over state-of-the-art methods.</div>\n<div>For our final contribution, we applied materialization techniques to the problem of computing join queries with projections. Projections pose a unique challenge since they often require an expensive deduplication step to remove copies of the tuples. Our key idea to overcome was to use matrix multiplication to avoid materializing intermediate join results. However, matrix multiplication is effective only when the data has high density. Thus, we introduce a novel technique that partitions the input into a dense and sparse component and then applies matrix multiplication selectively. In addition, we introduced methods that minimize the delay of enumerating joins with projections by careful interleaving of the computation in the sparse and dense parts of the data.</div>\n<div>To show the&nbsp;practical applications of our proposed algorithms, we have applied our algorithms to several areas, including processing large graphs extracted from relational databases, pattern extraction in graphs, and analytical tasks such as set intersection and set containment. Our code used throughout this project has been released and is publicly accessible.</div>\n</div>\n</div>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 12/28/2023<br>\nModified by: Paraschos&nbsp;Koutris</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThis project aimed to develop novel materialization algorithms that can significantly improve the performance of data analytics applications. Materialization is an optimization technique that stores the intermediate result of a task (typically a relational query) in a space-efficient datastructure so that downstream tasks in a data pipeline can access the intermediate results efficiently. The project had successful outcomes in several directions.\nFirst, we developed a general algorithmic framework for obtaining space-time tradeoffs for join queries with access patterns. Our framework proposes acommon approach to obtaining such tradeoffs by unifying prior disparate algorithmic techniques. Technically, it builds upon recently developed techniques in database theory, such as tree decompositions andentropy-aware worst-case join algorithms. As a consequence of our framework, we achieve the best currently known space-time tradeoff results by significantly improving the prior state-of-the-art.\n\n\nSecond, we introduced new algorithms for the case where the user is interested only in viewing the top-k results of a query after these results have been ordered according to some ranking function. For instance, a user may be interested in extracting the patterns (e.g., triangles, squares) in a labeled graph with the highest total weight. In such a scenario, materializing and sorting the join result is a very expensive approach. Instead, we proposed a data structure that allows us to enumerate the join results in ranked order with the smallest possible overhead. We also showed how to extend and implement this ranking algorithm to join queries with projections. Our experiments show that we can obtain a dramatic improvement in performance over state-of-the-art methods.\nFor our final contribution, we applied materialization techniques to the problem of computing join queries with projections. Projections pose a unique challenge since they often require an expensive deduplication step to remove copies of the tuples. Our key idea to overcome was to use matrix multiplication to avoid materializing intermediate join results. However, matrix multiplication is effective only when the data has high density. Thus, we introduce a novel technique that partitions the input into a dense and sparse component and then applies matrix multiplication selectively. In addition, we introduced methods that minimize the delay of enumerating joins with projections by careful interleaving of the computation in the sparse and dense parts of the data.\nTo show thepractical applications of our proposed algorithms, we have applied our algorithms to several areas, including processing large graphs extracted from relational databases, pattern extraction in graphs, and analytical tasks such as set intersection and set containment. Our code used throughout this project has been released and is publicly accessible.\n\n\n\n\n\t\t\t\t\tLast Modified: 12/28/2023\n\n\t\t\t\t\tSubmitted by: ParaschosKoutris\n"
 }
}