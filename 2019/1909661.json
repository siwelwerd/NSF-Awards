{
 "awd_id": "1909661",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Architectural Synthesis for Programmable Accelerators",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927843",
 "po_email": "sabasu@nsf.gov",
 "po_sign_block_name": "Sankar Basu",
 "awd_eff_date": "2019-07-01",
 "awd_exp_date": "2023-06-30",
 "tot_intn_awd_amt": 484094.0,
 "awd_amount": 484094.0,
 "awd_min_amd_letter_date": "2019-06-07",
 "awd_max_amd_letter_date": "2019-06-07",
 "awd_abstract_narration": "Targeted acceleration of functionality in hardware has shown great promise to bring in orders of magnitude improvement in computational capability for a broad range of applications such as artificial intelligence, autonomous vehicles, web search, and virtual reality. However, it is incredibly time consuming and costly to manually design a hardware accelerator that is both high performance and easily programmable for software. This project aims to develop new design automation framework that can automatically generate a high-quality programmable accelerator from architecture specifications defined in a software program.  \r\n\r\nThis project builds on the recent advances in high-level synthesis, which is capable of compiling un-timed behavioral specifications into cycle-accurate register-transfer-level circuits. In contrast to conventional high-level synthesis approaches, the proposed framework generates domain-specific instruction-programmable accelerators as opposed to application-specific fixed-function hardware. This research provides a new class of hardware synthesis infrastructure that integrates domain-specific languages, combinatorial optimization algorithms, and data-driven machine learning capabilities to achieve high quality of results on par with those produced by human experts.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Zhiru",
   "pi_last_name": "Zhang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhiru Zhang",
   "pi_email_addr": "zhiruz@cornell.edu",
   "nsf_id": "000631474",
   "pi_start_date": "2019-06-07",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "136 Hoy Road",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148533801",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7945",
   "pgm_ref_txt": "DES AUTO FOR MICRO & NANO SYST"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 484094.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-48fdc476-7fff-a52f-7ad9-ff5518a0dfc2\">\n<p dir=\"ltr\"><span>Domain-specific hardware acceleration has shown great promise to bring in orders of magnitude improvement in computational capability for a broad range of applications such as artificial intelligence, autonomous vehicles, web search, and virtual reality. Yet, the manual design of high-performance, software-programmable accelerators is laborious and expensive.&nbsp;&nbsp;</span></p>\n<p dir=\"ltr\"><span>The project aims to create customizable accelerator templates and an automated design framework capable of generating efficient accelerators from high-level software program specifications. More specifically, this effort leverages recent advancements in high-level synthesis (HLS), which can transform functional specifications into register-transfer-level circuits. The PI and his research team have explored the use of HLS in designing novel domain-specific accelerators optimized for sparse data processing, including sparse linear algebra and graph linear algebra computations. This research is vital as modern applications increasingly deal with data-intensive workloads, with a substantial portion of the data exhibiting high sparsity. Along this direction, the team has achieved success in designing and implementing a series of highly efficient accelerators, including Tensaurus, MatRaptor, HiSparse, and GraphLily. These accelerators can achieve an energy efficiency that is at least an order of magnitude higher than that of general-purpose computing substrates like GPUs and GPUs. Furthermore, the research team has developed several novel domain-specific languages and compilers, including HeteroFlow and SuSy, to facilitate efficient design and automated generation of high-performance accelerators like systolic arrays.</span><span> </span><span>These studies have resulted in 10 publications in top conferences and journals in computer architecture, EDA, and FPGA, and were put into practice using several hardware prototypes. In addition, we have released tools and designs in open-source format.</span></p>\n<p dir=\"ltr\"><span>As part of this project's outreach efforts, the PI has developed a new course that integrates domain-specific computing concepts into the computer engineering curriculum. Collaborating with Diversity Programs in Engineering (DPE) and the Cornell University Louis Stokes Alliance for Minority Participation Summer Research Experience for Undergraduates (CU LSAMP), the PI has provided research opportunities for talented undergraduates from underrepresented backgrounds. Additionally, the PI co-organized the inaugural Languages, Tools, and Techniques for Accelerator Design (LATTE) workshop, held in conjunction with ASPLOS. </span></p>\n<div><span><br /></span></div>\n</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/01/2023<br>\n\t\t\t\t\tModified by: Zhiru&nbsp;Zhang</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nDomain-specific hardware acceleration has shown great promise to bring in orders of magnitude improvement in computational capability for a broad range of applications such as artificial intelligence, autonomous vehicles, web search, and virtual reality. Yet, the manual design of high-performance, software-programmable accelerators is laborious and expensive.  \nThe project aims to create customizable accelerator templates and an automated design framework capable of generating efficient accelerators from high-level software program specifications. More specifically, this effort leverages recent advancements in high-level synthesis (HLS), which can transform functional specifications into register-transfer-level circuits. The PI and his research team have explored the use of HLS in designing novel domain-specific accelerators optimized for sparse data processing, including sparse linear algebra and graph linear algebra computations. This research is vital as modern applications increasingly deal with data-intensive workloads, with a substantial portion of the data exhibiting high sparsity. Along this direction, the team has achieved success in designing and implementing a series of highly efficient accelerators, including Tensaurus, MatRaptor, HiSparse, and GraphLily. These accelerators can achieve an energy efficiency that is at least an order of magnitude higher than that of general-purpose computing substrates like GPUs and GPUs. Furthermore, the research team has developed several novel domain-specific languages and compilers, including HeteroFlow and SuSy, to facilitate efficient design and automated generation of high-performance accelerators like systolic arrays. These studies have resulted in 10 publications in top conferences and journals in computer architecture, EDA, and FPGA, and were put into practice using several hardware prototypes. In addition, we have released tools and designs in open-source format.\nAs part of this project's outreach efforts, the PI has developed a new course that integrates domain-specific computing concepts into the computer engineering curriculum. Collaborating with Diversity Programs in Engineering (DPE) and the Cornell University Louis Stokes Alliance for Minority Participation Summer Research Experience for Undergraduates (CU LSAMP), the PI has provided research opportunities for talented undergraduates from underrepresented backgrounds. Additionally, the PI co-organized the inaugural Languages, Tools, and Techniques for Accelerator Design (LATTE) workshop, held in conjunction with ASPLOS. \n\n\n\n\n \n\n\t\t\t\t\tLast Modified: 11/01/2023\n\n\t\t\t\t\tSubmitted by: Zhiru Zhang"
 }
}