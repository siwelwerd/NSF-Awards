{
 "awd_id": "1910088",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Premonition: A Methodology for Predictive Monitoring with Probabilistic Guarantees",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922585",
 "po_email": "pprabhak@nsf.gov",
 "po_sign_block_name": "Pavithra Prabhakar",
 "awd_eff_date": "2019-07-01",
 "awd_exp_date": "2024-06-30",
 "tot_intn_awd_amt": 499997.0,
 "awd_amount": 499997.0,
 "awd_min_amd_letter_date": "2019-06-14",
 "awd_max_amd_letter_date": "2019-06-14",
 "awd_abstract_narration": "Autonomous systems such as unmanned aerial vehicles, medical devices and self-driving cars are challenging to design because of the inherent software complexity, as well as uncertainty in their operating environment.  Unfortunately, many of these autonomous systems are also safety-critical; there are real tragic implications on human life and property when these systems malfunction.  Monitoring the safety of such autonomous cyber-physical system while they are operating has long been viewed as scalable solution to ensure safety of these systems. Such safety properties can often be written using logical formalisms such as Signal Temporal Logic (STL).  The project develops a modular framework called Premonition for monitoring temporal-logic properties of autonomous cyber-physical systems.  The following abilities of Premonition framework highlight its novelty: (1) Predictive monitoring to forecast the failure of a safety property before a violation actually occurs; (2) Resource-awareness for monitoring that is performed with low memory and sensing overhead; and finally, 3) Probabilistic guarantees for providing quantifiable bounds on the accuracy of the predictions made.\r\n\r\nThe Premonition framework is highly interdisciplinary: it combines statistical methods for predicting future values of time-series data with techniques from formal methods.  The key site for innovation is in new techniques for obtaining probabilistic guarantees on whether a safety property will be violated by the system in the future. Such guarantees are obtained for different kinds of system models.  For data-driven system models, Premonition weaves prior work on forecasting for stochastic processes with monitoring algorithms for STL. For dynamical system models, the framework introduces new algorithms to monitor STL properties on over-approximations of future reachable states of the system.  For system models with explicit uncertainty models, the framework focuses on resource-aware predictive monitoring. For systems with unobservable states, it provides new algorithms for latent- xstate predictive monitoring, i.e. algorithms that give probabilistic guarantees on whether the hidden system states violate a given property in the future, by monitoring the observable states of the system.  Probabilistic guarantees are useful for designing enforcement and warning mechanisms to provide safety assurance for systems. This project's impacts are in making dynamic safety-assurance cases for autonomous systems such as automated insulin-delivery systems, unmanned aerial vehicles and self-driving cars.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jyotirmoy",
   "pi_last_name": "Deshmukh",
   "pi_mid_init": "V",
   "pi_sufx_name": "",
   "pi_full_name": "Jyotirmoy V Deshmukh",
   "pi_email_addr": "jdeshmuk@usc.edu",
   "nsf_id": "000758462",
   "pi_start_date": "2019-06-14",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Southern California",
  "inst_street_address": "3720 S FLOWER ST FL 3",
  "inst_street_address_2": "",
  "inst_city_name": "LOS ANGELES",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "2137407762",
  "inst_zip_code": "90033",
  "inst_country_name": "United States",
  "cong_dist_code": "34",
  "st_cong_dist_code": "CA34",
  "org_lgl_bus_name": "UNIVERSITY OF SOUTHERN CALIFORNIA",
  "org_prnt_uei_num": "",
  "org_uei_num": "G88KLJR3KYT5"
 },
 "perf_inst": {
  "perf_inst_name": "University of Southern California",
  "perf_str_addr": "3720 S. Flower St.",
  "perf_city_name": "Los Angeles",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "900890001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "37",
  "perf_st_cong_dist": "CA37",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 499997.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p id=\"docs-internal-guid-35372450-7fff-7e06-f08c-90ecaf212479\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Autonomous cyber-physical systems such as self-driving cars, unmanned aerial vehicles, and general-purpose robots are safety-critical systems &ndash; any failure in these systems can cause serious loss of human lives and property. The uncertain operating conditions for such systems makes it difficult to guarantee their safety at design-time. An alternative is to use approaches like runtime monitoring and verification. Here, the developer characterizes the specification for the system as logic-based formulas that must be satisfied by the system behaviors. Then, a suitable </span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: italic; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">probabilistic model </span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">is used to forecast possible behavior, and we can obtain probabilistic guarantees on future behaviors satisfying the specification. Such guarantees can be used by a mitigation system to prevent failures before they occur. The Premonition project formulated an abstract framework for such </span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: italic; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">predictive monitoring </span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">algorithms. There are two main thrusts for Premonition: (1) new predictive monitoring algorithms for specifications written in a logic-based formalisms known as Signal Temporal Logic (STL), and (2) a new, expressive logical formalisms to capture signal patterns that are either unwieldy or impossible to express using STL.</span></p>\r\n<p>&nbsp;</p>\r\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">In the first thrust, we considered various data-driven, predictive monitoring algorithms. In a 2020 paper published in the international conference on formal analysis of timed systems (FORMATS), we fit an auto-regressive (AR) model on an observed signal of interest and use it to predict future values of the signal. AR models assume a linear dependence between predictions and the past signal values, and exogenous noise. With these assumptions, we are able to give precise bounds on the probability of violating a specification. However, this is restrictive when the system is nonlinear. To overcome this, we investigated surrogate models; a surrogate model is an approximation of the system dynamics trained using design-time data. We explored the use of deep neural networks for predicting the satisfaction probability and the robustness degree of a specification in a 2022 paper published in the international conference on cyber-physical systems (ICCPS). The robustness degree can be roughly thought of as the signed distance between a system behavior and a specification. In an ICCPS 2023 paper, we extended this idea to using long short-term memory (LSTM) networks, which are a type of a recurrent neural network used for trajectory prediction. In this paper, we devised two new algorithms: a direct algorithm that predicted the robustness degree of the system, and an indirect algorithm that predicts system trajectories, which are then used to calculate the predicted robustness degree. A crucial assumption in our ICCPS papers is that the design-time environment is the same as the runtime environment; an assumption that is often untrue. To account for this, we developed a new algorithm in an ICCPS 2024 paper that takes into account </span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: italic; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">distribution shifts </span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">between the design-time and runtime environments. A distribution shift is a quantitative estimate of how different the two systems can behave. An extended version of this work was presented in the ACM Transactions on Cyber-Physical Systems. All of the above papers included example systems from the autonomous systems such as a trained controller in an autonomous vehicle, an AI-based ground collision avoidance system for an aircraft model, and a manipulator for an industrial robot.&nbsp;</span></p>\r\n<p>&nbsp;</p>\r\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">The second thrust focused on a new formalism for expressing signal patterns in cyber-physical systems. Along with collaborators from the Austrian Institute Technology, we devised a new language called shape expressions. The language of regular expressions is commonly used in programming and other text processing tasks to represent string patterns. In shape expressions, we consider sequential patterns over primitive shape types such as linear shapes, polynomials, sinusoids, and exponential curves. A shape expression allows expressing patterns such as sequences of pulses, spikes, steps, etc. In the Best Paper award winning 2019 paper published in the conference on runtime verification (RV), we proposed the language of shape expressions and formulated algorithms to monitor a shape expression. In the 2020 conference on embedded software, we proposed an algorithm to learn shape expressions from data and used it to explain EKG patterns that correspond to certain kinds of (human) heart conditions. This work was published in the IEEE transactions on computer-aided design. A tool called ShapeIt was presented in the 2021 conference on software engineering and formal methods, and the code for the tool is available here: </span><a style=\"text-decoration: none;\" href=\"https://zenodo.org/records/5569447\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #1155cc; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\">https://zenodo.org/records/5569447</span></a><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">.&nbsp;</span></p>\r\n<p>&nbsp;</p>\r\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">In summary, the Premonition project laid the foundation for future work on predictive monitoring with probabilistic guarantees and new formal languages for describing specifications of cyber-physical systems. The research in this project was also used for outreach activities, such as a color-by-numbers puzzle for K-3 children that appeared in the USC Viterbi magazine; this puzzle was used to explain core ideas of predictive monitoring. Predictive monitoring has also been introduced in courses at USC, and has seen interest from industrial collaborators at Toyota and Lockheed Martin.</span></p><br>\n<p>\n Last Modified: 01/11/2025<br>\nModified by: Jyotirmoy&nbsp;V&nbsp;Deshmukh</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nAutonomous cyber-physical systems such as self-driving cars, unmanned aerial vehicles, and general-purpose robots are safety-critical systems  any failure in these systems can cause serious loss of human lives and property. The uncertain operating conditions for such systems makes it difficult to guarantee their safety at design-time. An alternative is to use approaches like runtime monitoring and verification. Here, the developer characterizes the specification for the system as logic-based formulas that must be satisfied by the system behaviors. Then, a suitable probabilistic model is used to forecast possible behavior, and we can obtain probabilistic guarantees on future behaviors satisfying the specification. Such guarantees can be used by a mitigation system to prevent failures before they occur. The Premonition project formulated an abstract framework for such predictive monitoring algorithms. There are two main thrusts for Premonition: (1) new predictive monitoring algorithms for specifications written in a logic-based formalisms known as Signal Temporal Logic (STL), and (2) a new, expressive logical formalisms to capture signal patterns that are either unwieldy or impossible to express using STL.\r\n\n\n\r\n\n\nIn the first thrust, we considered various data-driven, predictive monitoring algorithms. In a 2020 paper published in the international conference on formal analysis of timed systems (FORMATS), we fit an auto-regressive (AR) model on an observed signal of interest and use it to predict future values of the signal. AR models assume a linear dependence between predictions and the past signal values, and exogenous noise. With these assumptions, we are able to give precise bounds on the probability of violating a specification. However, this is restrictive when the system is nonlinear. To overcome this, we investigated surrogate models; a surrogate model is an approximation of the system dynamics trained using design-time data. We explored the use of deep neural networks for predicting the satisfaction probability and the robustness degree of a specification in a 2022 paper published in the international conference on cyber-physical systems (ICCPS). The robustness degree can be roughly thought of as the signed distance between a system behavior and a specification. In an ICCPS 2023 paper, we extended this idea to using long short-term memory (LSTM) networks, which are a type of a recurrent neural network used for trajectory prediction. In this paper, we devised two new algorithms: a direct algorithm that predicted the robustness degree of the system, and an indirect algorithm that predicts system trajectories, which are then used to calculate the predicted robustness degree. A crucial assumption in our ICCPS papers is that the design-time environment is the same as the runtime environment; an assumption that is often untrue. To account for this, we developed a new algorithm in an ICCPS 2024 paper that takes into account distribution shifts between the design-time and runtime environments. A distribution shift is a quantitative estimate of how different the two systems can behave. An extended version of this work was presented in the ACM Transactions on Cyber-Physical Systems. All of the above papers included example systems from the autonomous systems such as a trained controller in an autonomous vehicle, an AI-based ground collision avoidance system for an aircraft model, and a manipulator for an industrial robot.\r\n\n\n\r\n\n\nThe second thrust focused on a new formalism for expressing signal patterns in cyber-physical systems. Along with collaborators from the Austrian Institute Technology, we devised a new language called shape expressions. The language of regular expressions is commonly used in programming and other text processing tasks to represent string patterns. In shape expressions, we consider sequential patterns over primitive shape types such as linear shapes, polynomials, sinusoids, and exponential curves. A shape expression allows expressing patterns such as sequences of pulses, spikes, steps, etc. In the Best Paper award winning 2019 paper published in the conference on runtime verification (RV), we proposed the language of shape expressions and formulated algorithms to monitor a shape expression. In the 2020 conference on embedded software, we proposed an algorithm to learn shape expressions from data and used it to explain EKG patterns that correspond to certain kinds of (human) heart conditions. This work was published in the IEEE transactions on computer-aided design. A tool called ShapeIt was presented in the 2021 conference on software engineering and formal methods, and the code for the tool is available here: https://zenodo.org/records/5569447.\r\n\n\n\r\n\n\nIn summary, the Premonition project laid the foundation for future work on predictive monitoring with probabilistic guarantees and new formal languages for describing specifications of cyber-physical systems. The research in this project was also used for outreach activities, such as a color-by-numbers puzzle for K-3 children that appeared in the USC Viterbi magazine; this puzzle was used to explain core ideas of predictive monitoring. Predictive monitoring has also been introduced in courses at USC, and has seen interest from industrial collaborators at Toyota and Lockheed Martin.\t\t\t\t\tLast Modified: 01/11/2025\n\n\t\t\t\t\tSubmitted by: JyotirmoyVDeshmukh\n"
 }
}