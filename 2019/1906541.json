{
 "awd_id": "1906541",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CNS Core: Small: RUI: A Holistic Approach to Taming Unaligned Writes in Flash Drives",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 256658.0,
 "awd_amount": 256658.0,
 "awd_min_amd_letter_date": "2019-06-13",
 "awd_max_amd_letter_date": "2019-06-13",
 "awd_abstract_narration": "Flash based solid-state disks (SSDs) are replacing hard-disk drives in various storage systems from high-end servers in data centers to mobile computers on the edges of the cloud. Due to the architectural nature of SSDs, performance-sensitive applications may generate a large number of unaligned writes, which may lead to load imbalance and write space amplification in the constituent non-volatile memory chips. This project will investigate a new approach called WAFlash, to alleviate the side-effects of unaligned writes in SSDs.\r\nTo eliminate the unaligned writes caused by suboptimal data layout, this project will investigate new strategies to store multiple valid versions of the data in flash to remove the read-modify-write operations from the critical I/O (Input/Output) path, and a page-compaction scheme to further reduce the number of partial-page writes to circumvent write amplification.  This project includes four research tasks: (1) design of partial-page congestion-aware buffer replacement schemes, (2) design of flash translation layer (FTL) to support multi-version partial-pages in SSDs, (3) FTL algorithms supporting partial page compaction, and (4) system implementation and evaluation.\r\n\r\nThe project will benefit a wide variety of scientific, and business intelligence applications that are mission-critical, latency-sensitive, and/or data-intensive because SSDs play an important role in the storage market. Research findings will be integrated into undergraduate-level courses as OpenSSD labs. As an RUI (Research in Undergraduate Institution) project, the investigator will provide research training for undergraduate students. Investigator will also involve high schools, delivering lectures on computer systems research, and encourage women and minority students to pursue information technology related careers. Post-publication data including code and results from the WAFlash project will be stored in a public code repository https://gitlab.encs.vancouver.wsu.edu/xuechen.zhang/waflash.git as open source. All data are stored in electronic format for at least 5 years.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Xuechen",
   "pi_last_name": "Zhang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Xuechen Zhang",
   "pi_email_addr": "xuechen.zhang@wsu.edu",
   "nsf_id": "000701735",
   "pi_start_date": "2019-06-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Washington State University",
  "inst_street_address": "240 FRENCH ADMINISTRATION BLDG",
  "inst_street_address_2": "",
  "inst_city_name": "PULLMAN",
  "inst_state_code": "WA",
  "inst_state_name": "Washington",
  "inst_phone_num": "5093359661",
  "inst_zip_code": "991640001",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "WA05",
  "org_lgl_bus_name": "WASHINGTON STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "XRJSGX384TD6"
 },
 "perf_inst": {
  "perf_inst_name": "Washington State University Vancouver",
  "perf_str_addr": "14204 NE SALMON CREEK AVE, ENCS",
  "perf_city_name": "Vancouver",
  "perf_st_code": "WA",
  "perf_st_name": "Washington",
  "perf_zip_code": "986869600",
  "perf_ctry_code": "US",
  "perf_cong_dist": "03",
  "perf_st_cong_dist": "WA03",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 256658.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span>NAND flash-memory-based SSDs are adopted as an important storage medium for supporting applications that demand low I/O latency or high I/O throughput. They are increasingly used as hard disks (HDDs) replacement for both scientific and enterprise applications. Because I/O request sizes can be smaller than the page sizes of SSDs, applications may generate many writes that are not aligned with the flash page boundary of SSDs. We call them <em>unaligned writes.</em></span> <span>Serving the unaligned writes in SSDs can significantly degrade system efficiency.</span> <span>In this project, we design a new flash drive WAF</span><span>LASH </span><span>that significantly alleviates the side-effects of unaligned writes to flash memory with cooperative management of SSD write buffer and its flash translation layer (FTL).</span></p>\n<p><span>First, </span><span>we designed a new page replacement algorithm, partial-page and congestion-aware LRU (</span><span>PC-LRU</span><span>). It differentiates writes to partial pages from those to full pages. Without compromising data locality, </span><span>PC-LRU </span><span>prioritizes the eviction of full pages over partial pages in the buffer when chip congestion happens to reduce the number of unaligned writes sent to FTL.</span></p>\n<p>Second, we devised a new FTL, called MV-FTL. It serves a partial-page overwrite just like a regular write to a full page by directly writing the data to a new flash page without performing the read and modification operation. Assume a logical page was written at t<sub>i</sub>, for serving an unaligned write to the page at t<sub>j</sub> (t<sub>i</sub> &lt; t<sub>j</sub>), instead of invalidating the old version of the data (t<sub>i</sub>) as those in the conventional FTLs, MV-FTL keeps both of the copies (t<sub>i</sub> and t<sub>j</sub>) valid until they are merged. Due to the out-of-place update nature of flash, MV-FTL does not need additional space for keeping the two valid versions of the data.</p>\n<p><span>Third, we compacted multiple partial pages to further reduce the number of unaligned writes to flash, consequently, minimizing write amplifications of SSDs. We designed a novel data compaction technique to effectively merge and index multiple partial pages stored on a single physical page.</span></p>\n<p><span>Finally, </span><span>we implemented WAF</span><span>LASH </span><span>in SSDSim &nbsp;for trace-driven simulations and in QEMU/KVM-based platform based on VSSIM and Cosmos+ OpenSSD platform to run real file systems and applications. The results show that with our method the average latency and I/O throughput are improved by up to 62% and 125%, respectively.</span></p>\n<p><span>Many of the research results have been integrated with the education curricula (e.g., course projects for CS 565 File and Storage Systems and CS 460 Operating Systems) at Washington State University Vancouver. We trained up to 30 graduate students and 180 undergraduate students using the course projects as of 2023. The project has supported three M.S. students working on their thesis. It also provided research experience for undergraduate students who published three conference papers. All of the undergraduate students continued pursuing Master degree at WSU Vancouver. We released WAFlash as an open-source software.</span></p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 11/19/2023<br>\nModified by: Xuechen&nbsp;Zhang</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nNAND flash-memory-based SSDs are adopted as an important storage medium for supporting applications that demand low I/O latency or high I/O throughput. They are increasingly used as hard disks (HDDs) replacement for both scientific and enterprise applications. Because I/O request sizes can be smaller than the page sizes of SSDs, applications may generate many writes that are not aligned with the flash page boundary of SSDs. We call them unaligned writes. Serving the unaligned writes in SSDs can significantly degrade system efficiency. In this project, we design a new flash drive WAFLASH that significantly alleviates the side-effects of unaligned writes to flash memory with cooperative management of SSD write buffer and its flash translation layer (FTL).\n\n\nFirst, we designed a new page replacement algorithm, partial-page and congestion-aware LRU (PC-LRU). It differentiates writes to partial pages from those to full pages. Without compromising data locality, PC-LRU prioritizes the eviction of full pages over partial pages in the buffer when chip congestion happens to reduce the number of unaligned writes sent to FTL.\n\n\nSecond, we devised a new FTL, called MV-FTL. It serves a partial-page overwrite just like a regular write to a full page by directly writing the data to a new flash page without performing the read and modification operation. Assume a logical page was written at ti, for serving an unaligned write to the page at tj (ti j), instead of invalidating the old version of the data (ti) as those in the conventional FTLs, MV-FTL keeps both of the copies (ti and tj) valid until they are merged. Due to the out-of-place update nature of flash, MV-FTL does not need additional space for keeping the two valid versions of the data.\n\n\nThird, we compacted multiple partial pages to further reduce the number of unaligned writes to flash, consequently, minimizing write amplifications of SSDs. We designed a novel data compaction technique to effectively merge and index multiple partial pages stored on a single physical page.\n\n\nFinally, we implemented WAFLASH in SSDSim for trace-driven simulations and in QEMU/KVM-based platform based on VSSIM and Cosmos+ OpenSSD platform to run real file systems and applications. The results show that with our method the average latency and I/O throughput are improved by up to 62% and 125%, respectively.\n\n\nMany of the research results have been integrated with the education curricula (e.g., course projects for CS 565 File and Storage Systems and CS 460 Operating Systems) at Washington State University Vancouver. We trained up to 30 graduate students and 180 undergraduate students using the course projects as of 2023. The project has supported three M.S. students working on their thesis. It also provided research experience for undergraduate students who published three conference papers. All of the undergraduate students continued pursuing Master degree at WSU Vancouver. We released WAFlash as an open-source software.\n\n\n\t\t\t\t\tLast Modified: 11/19/2023\n\n\t\t\t\t\tSubmitted by: XuechenZhang\n"
 }
}