{
 "awd_id": "1918225",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "FMitF: Track I: NLP-Assisted Formal Verification of the NFS Distributed File System Protocol",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922585",
 "po_email": "pprabhak@nsf.gov",
 "po_sign_block_name": "Pavithra Prabhakar",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2024-09-30",
 "tot_intn_awd_amt": 748300.0,
 "awd_amount": 764300.0,
 "awd_min_amd_letter_date": "2019-07-12",
 "awd_max_amd_letter_date": "2020-06-11",
 "awd_abstract_narration": "The Internet's success and growth is owed to standards that ensure computers can talk to each other.  These standards are human-written, technical design documents that take years to develop and implement.  However, such design documents are often imprecise, and their software implementations do not always conform to their designs.  This project aims to speed up the process of designing and implementing Internet standards using: (1) Artificial Intelligence (AI) techniques to automatically process design documents so that flaws in them can be detected and reported quickly, and (2) runtime analysis of software implementations to detect deviations from their respective designs. The project artifacts - software, source code, verified and fixed RFCs, data sets, traces, and results will all be embodied in a system we call \"NFS Validator\".  Results will be disseminated using peer-reviewed publications and arxiv.org. All artifacts will be made public through the project Website: https://www.filesystems.org/nfsval, and will be available for at least ten years following the end of the project.\r\n\r\nThis project will: (1) conduct  a major case study involving the complex, distributed Network File System version 4 (NFSv4) protocol; (2) develop a theoretical model of NFSv4's expected behavior using Natural Language Processing (NLP) AI techniques; (3) analyze the model to detect inconsistencies; (4) check the model against another reference implementation that is known to be correct; and (5) monitor an actual running NFS implementation for compliance with our verified theoretical model. The NFS is a popular and growing protocol that enables users to access their files and data across any network.  The NFSv4 design documents are fairly complex and over 500 pages long. This project will (1) help accelerate NFSv4's ongoing design, development, and adoption; (2) advance the state of the art in NLP/AI techniques to understand human-written design documents; (3) advance the state of the art in formally modeling and verifying such designs; (4) train and educate graduate and undergraduate students; and (5) produce results that are applicable to many other Internet standards.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Erez",
   "pi_last_name": "Zadok",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Erez Zadok",
   "pi_email_addr": "ezk@cs.stonybrook.edu",
   "nsf_id": "000182603",
   "pi_start_date": "2019-07-12",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Scott",
   "pi_last_name": "Smolka",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "Scott A Smolka",
   "pi_email_addr": "sas@cs.stonybrook.edu",
   "nsf_id": "000172536",
   "pi_start_date": "2019-07-12",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Niranjan",
   "pi_last_name": "Balasubramanian",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Niranjan Balasubramanian",
   "pi_email_addr": "niranjan@cs.stonybrook.edu",
   "nsf_id": "000678413",
   "pi_start_date": "2019-07-12",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "SUNY at Stony Brook",
  "inst_street_address": "W5510 FRANKS MELVILLE MEMORIAL LIBRARY",
  "inst_street_address_2": "",
  "inst_city_name": "STONY BROOK",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6316329949",
  "inst_zip_code": "117940001",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "NY01",
  "org_lgl_bus_name": "THE RESEARCH FOUNDATION FOR THE STATE UNIVERSITY OF NEW YORK",
  "org_prnt_uei_num": "M746VC6XMNH9",
  "org_uei_num": "M746VC6XMNH9"
 },
 "perf_inst": {
  "perf_inst_name": "SUNY at Stony Brook",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "117944400",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "NY01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "094Y00",
   "pgm_ele_name": "FMitF: Formal Methods in the F"
  },
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "062Z",
   "pgm_ref_txt": "Harnessing the Data Revolution"
  },
  {
   "pgm_ref_code": "071Z",
   "pgm_ref_txt": "FMitF-Formal Methods in the Field"
  },
  {
   "pgm_ref_code": "7354",
   "pgm_ref_txt": "COMPUTER SYSTEMS"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 748300.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-2b133a54-7fff-b0a9-18c9-14c309676263\"> </span></p>\r\n<p dir=\"ltr\"><span>Bugs in computer systems wreak havoc on the world&rsquo;s economy.&nbsp; Bugs in data storage systems are some of the most serious, because the data is often the most important intellectual property that must be preserved and secured.&nbsp; This project develops techniques to find bugs more quickly, using &ldquo;model-checking&rdquo; techniques that include providing a reproducible set of steps to trigger any bugs found.&nbsp; Moreover, the IETF defines and details thousands of specifications of computer technologies.&nbsp; This project helps analyze these human-written documents to find ambiguities and inconsistencies, using natural-language processing (NLP) AI techniques.&nbsp; Such problems are reported with examples to help designers improve and correct their design documents.</span></p>\r\n<p>&nbsp;</p>\r\n<p dir=\"ltr\"><span>First, the project produced an innovative file system model checking framework that efficiently and thoroughly explores both the input and state space of file systems.&nbsp; Our model checking approach imposes fewer restrictions: it requires no abstract model, no kernel modifications or instrumentation, and supports out-of-tree kernel file systems.&nbsp; The project also developed a novel user-space file system to accelerate model checking and facilitate bug reproducibility.&nbsp; In addition, we introduced new coverage metrics for file system testing, enabling developers to more easily improve their testing tools.&nbsp; These efforts led to the discovery of many previously unknown file system bugs and identified untested cases in existing file system testing tools.&nbsp; See Figure 1 for an overview of our approach.</span></p>\r\n<p>&nbsp;</p>\r\n<p dir=\"ltr\"><span>Second, the project yielded a tangible advance in systems that can translate natural language specifications into complex formal language statements, one in an intermediate representation and the other in signal temporal logic. The project also developed novel methods for incorporating expert user inputs on-the-fly when parsing natural language sentences. This method does not require retraining and is thus computationally cheaper. Furthermore, the method is also judicious in terms of obtaining expert inputs. It is more effective at reusing expert inputs and thus reduces the burden on experts when using the system. The project also contributed new methods for training models using synthetic data, which is particularly useful for settings where training data is difficult and expensive to obtain. See Figure 2.</span></p>\r\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 11/26/2024<br>\nModified by: Erez&nbsp;Zadok</p></div>\n<div class=\"porSideCol\"\n><div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls onePhoto\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2024/1918225/1918225_10620715_1732660129842_Picture2--rgov-214x142.png\" original=\"/por/images/Reports/POR/2024/1918225/1918225_10620715_1732660129842_Picture2--rgov-800width.png\" title=\"Figure 2\"><img src=\"/por/images/Reports/POR/2024/1918225/1918225_10620715_1732660129842_Picture2--rgov-66x44.png\" alt=\"Figure 2\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Visualization of the process for parsing natural language specifications into formal language statements in our system</div>\n<div class=\"imageCredit\">Stony Brook University</div>\n<div class=\"imagePermisssions\">Copyright owner is an institution with an existing agreement allowing use by NSF</div>\n<div class=\"imageSubmitted\">Erez&nbsp;Zadok\n<div class=\"imageTitle\">Figure 2</div>\n</div>\n</li><li>\n<a href=\"/por/images/Reports/POR/2024/1918225/1918225_10620715_1732660092196_Picture1--rgov-214x142.png\" original=\"/por/images/Reports/POR/2024/1918225/1918225_10620715_1732660092196_Picture1--rgov-800width.png\" title=\"Figure 1\"><img src=\"/por/images/Reports/POR/2024/1918225/1918225_10620715_1732660092196_Picture1--rgov-66x44.png\" alt=\"Figure 1\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">This image illustrates the architecture of the file system model-checking framework</div>\n<div class=\"imageCredit\">Stony Brook University</div>\n<div class=\"imagePermisssions\">Copyright owner is an institution with an existing agreement allowing use by NSF</div>\n<div class=\"imageSubmitted\">Erez&nbsp;Zadok\n<div class=\"imageTitle\">Figure 1</div>\n</div>\n</li></ul>\n</div>\n</div></div>\n</div>\n",
  "por_txt_cntn": "\n\n \r\n\n\nBugs in computer systems wreak havoc on the worlds economy. Bugs in data storage systems are some of the most serious, because the data is often the most important intellectual property that must be preserved and secured. This project develops techniques to find bugs more quickly, using model-checking techniques that include providing a reproducible set of steps to trigger any bugs found. Moreover, the IETF defines and details thousands of specifications of computer technologies. This project helps analyze these human-written documents to find ambiguities and inconsistencies, using natural-language processing (NLP) AI techniques. Such problems are reported with examples to help designers improve and correct their design documents.\r\n\n\n\r\n\n\nFirst, the project produced an innovative file system model checking framework that efficiently and thoroughly explores both the input and state space of file systems. Our model checking approach imposes fewer restrictions: it requires no abstract model, no kernel modifications or instrumentation, and supports out-of-tree kernel file systems. The project also developed a novel user-space file system to accelerate model checking and facilitate bug reproducibility. In addition, we introduced new coverage metrics for file system testing, enabling developers to more easily improve their testing tools. These efforts led to the discovery of many previously unknown file system bugs and identified untested cases in existing file system testing tools. See Figure 1 for an overview of our approach.\r\n\n\n\r\n\n\nSecond, the project yielded a tangible advance in systems that can translate natural language specifications into complex formal language statements, one in an intermediate representation and the other in signal temporal logic. The project also developed novel methods for incorporating expert user inputs on-the-fly when parsing natural language sentences. This method does not require retraining and is thus computationally cheaper. Furthermore, the method is also judicious in terms of obtaining expert inputs. It is more effective at reusing expert inputs and thus reduces the burden on experts when using the system. The project also contributed new methods for training models using synthetic data, which is particularly useful for settings where training data is difficult and expensive to obtain. See Figure 2.\r\n\n\n\t\t\t\t\tLast Modified: 11/26/2024\n\n\t\t\t\t\tSubmitted by: ErezZadok\n"
 }
}