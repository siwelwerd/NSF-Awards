{
 "awd_id": "1917990",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "FMitF:Collaborative Research:Track I:Formal Techniques for Monitoring Low-level Cross-chain Functions",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 375000.0,
 "awd_amount": 375000.0,
 "awd_min_amd_letter_date": "2019-07-12",
 "awd_max_amd_letter_date": "2019-07-12",
 "awd_abstract_narration": "A blockchain is a data structure distributed over a network of computers, often used to manage assets such as cryptocurrencies. A blockchain protocols is a distributed application that allows participating parties who do not trust one another to benefit by trading assets in a secure way. The project will investigate the design, analysis, and implementation of protocols capable of making coordinated changes to multiple blockchains. The project will develop techniques where a monitor observes a running system of blockchains to detect and react to changing conditions that might threaten the protocol's integrity and safety.\r\n\r\nThe project focuses on three important cross-chain protocols: atomic swaps, off-chain recurring swaps, and atomic transactions. These protocols require the underlying network to display certain critical properties, and runtime verification is expected to play a prime role in monitoring  their health. The project will investigate (1) how algorithms  and techniques adapted from distributed runtime verification can make  cross-chain protocols robust and effective, and (2) how runtime verification  algorithms can be augmented with classic results from distributed computing to develop low-bandwidth distributed monitoring systems appropriate for blockchain applications and beyond.\r\n\r\nSociety will benefit through more secure and trustworthy software and electronic commerce. As modern society becomes increasingly reliant on software systems for commerce and governance, it becomes increasingly vulnerable to disruption from security breaches. More trustworthy software will provide economic benefits through faster, cheaper, and simpler electronic commerce, cheaper and more effective regulatory compliance, and more transparent and accessible public records. Trustworthy software will enhance individual privacy, making sensitive data accessible only to authorized parties. Truly trustworthy software requires making formal methods a core aspect of distributed system design, not an afterthought.\r\n\r\nData generated as part of this project, including software artifacts, papers and reports, logs generated by experimentation, programming projects, lecture materials, and the project website, will be managed using existing IT and data-protection infrastructures provided by the participating institutions Brown University and Iowa State University. The project will maintain active repositories in BitBucket (www.bitbucket.org) and GitHub (www.github.com).\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Maurice",
   "pi_last_name": "Herlihy",
   "pi_mid_init": "P",
   "pi_sufx_name": "",
   "pi_full_name": "Maurice P Herlihy",
   "pi_email_addr": "herlihy@cs.brown.edu",
   "nsf_id": "000333742",
   "pi_start_date": "2019-07-12",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Brown University",
  "inst_street_address": "1 PROSPECT ST",
  "inst_street_address_2": "",
  "inst_city_name": "PROVIDENCE",
  "inst_state_code": "RI",
  "inst_state_name": "Rhode Island",
  "inst_phone_num": "4018632777",
  "inst_zip_code": "029129100",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "RI01",
  "org_lgl_bus_name": "BROWN UNIVERSITY",
  "org_prnt_uei_num": "E3FDXZ6TBHW3",
  "org_uei_num": "E3FDXZ6TBHW3"
 },
 "perf_inst": {
  "perf_inst_name": "Brown University",
  "perf_str_addr": "115 Waterman St.",
  "perf_city_name": "Providence",
  "perf_st_code": "RI",
  "perf_st_name": "Rhode Island",
  "perf_zip_code": "029129002",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "RI01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "094Y00",
   "pgm_ele_name": "FMitF: Formal Methods in the F"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "062Z",
   "pgm_ref_txt": "Harnessing the Data Revolution"
  },
  {
   "pgm_ref_code": "071Z",
   "pgm_ref_txt": "FMitF-Formal Methods in the Field"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 375000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project focused on developing concurrent data structures, microarchitecture, and supporting software to exploit emerging forms of memory to provide simple, faster, and more energy-efficient memory access and crash recovery. This research has the potential to benefit society by enhancing the robustness and fault-tolerance of systems on which modern society increasingly depends. The results of this research may also significantly improve energy efficiency, since such systems would require smaller caches and fewer accesses to energy-hungry secondary storage devices. Additional broader impacts include new curriculum development activities and outreach to graduate and undergraduate students, including women and under-represented minorities through research opportunities, mentoring, and workshop participation.<br />Our main investigations centered around 1) the use of near-memory processing to improve the performance of applications that access large data structures, and 2) hardware/software protocols for providing integrity-protected non-volatile memory that is fast, secure, and quickly recoverable.<br />We have shown that near-memory-processing (NMP) architectures can significantly improve the performanceand energy savings of common pointer-chasing data structures such as linked lists, which consist of nodes that store pointer references to connected nodes. This includes hierarchical data structures that are widely used in in-memory online transaction processing (OLTP) systems. The access process of these data structures often results in irregular and unpredictable memory access patterns, which leads to slow performance from memory access stalls.<br />This project designed and evaluated NMP-enabled hybrid data structures for such hierarchical datastructures, which combine the cache-conscious benefits of conventional hierarchical data structures with the benefits of NMP. The key insight in our hybrid data structure design was leveraging the skew in accessfrequency that stems from the data structure?s topology. Essentially, we partitioned each data structure into a host-managed portion consisting of the higher levels of the data structure and an NMP-managed portionconsisting of the lower levels.<br />Despite the simplicity of this idea, rigorous technical detail with respect to the architectureand algorithms is required to ensure high concurrency and correctness. In particular, with this partition, thedata structure must still be kept coherent throughout the entire operation execution, even as multipleoperations are applied concurrently. Careful coordination among the host threads, among the near-memorycompute units, and between the host threads and near-memory compute units is required to meet highconcurrency and correctness guarantees.<br />We proposed a data structure applicable to any generic NMP architecture and provided a concrete hybrid implementation of two data structures widely used in OLTP systems (a skiplist and B+ tree). We demonstrated through rigorous simulation that our NMP-hybrid approach can improve performance by up to3.1X and 2.1X for the skiplist and B+ tree, respectively, compared to non-NMP implementations.<br />We also showed some promising results indicating potential benefits of using NMP architectures to reduce latencies incurred during garbage collection memory management. The mark-and-sweep algorithm,which identifies the live objects of a program, is fundamentally pointer-chasing and thus subject tobottlenecks arising from large amounts of irregular memory accesses, similar to pointer-chasing we have found other data structures explored in this project.<br />The last part of the project focused on providing fast and efficient integrity protection for non-volatile main memory (NVMM). Non-volatile main memory (NVMM) technology provides both increased data resilience by preventing data loss on power failure, and improved quality-of-service, by reducing reboot times.&nbsp; However, these features come with their own challenges. First, the continued use of volatile write-back caches and registers, whose contents are lost at power failure, means that writes must be forwarded all the way to NVMM to survive power loss, necessitating special care. Secondly, NVMM opens the system to novelphysical attacks through a system crash.<br />Ideally, hardware enforced integrity protected NVMM should be fast, secure, and quickly recoverable. State-of-the-art solutions typically sacrifice one or more of these features to accomplish its goals. In this last part ofthe project, we have begun exploring potential solutions that aim to achieve each of these properties. Our idea is to implement a hot/cold tracking mechanism for metadata such that we provide crash consistent integrity with low runtime overhead while limiting on-chip area for security metadata. Initial simulation results show significant improvements (up to 41% reduction in execution overhead) for in-memory storage applications while significantly reducing the required on-chip area to implement the protocol.</p><br>\n<p>\n Last Modified: 11/29/2023<br>\nModified by: Maurice&nbsp;P&nbsp;Herlihy</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThis project focused on developing concurrent data structures, microarchitecture, and supporting software to exploit emerging forms of memory to provide simple, faster, and more energy-efficient memory access and crash recovery. This research has the potential to benefit society by enhancing the robustness and fault-tolerance of systems on which modern society increasingly depends. The results of this research may also significantly improve energy efficiency, since such systems would require smaller caches and fewer accesses to energy-hungry secondary storage devices. Additional broader impacts include new curriculum development activities and outreach to graduate and undergraduate students, including women and under-represented minorities through research opportunities, mentoring, and workshop participation.\nOur main investigations centered around 1) the use of near-memory processing to improve the performance of applications that access large data structures, and 2) hardware/software protocols for providing integrity-protected non-volatile memory that is fast, secure, and quickly recoverable.\nWe have shown that near-memory-processing (NMP) architectures can significantly improve the performanceand energy savings of common pointer-chasing data structures such as linked lists, which consist of nodes that store pointer references to connected nodes. This includes hierarchical data structures that are widely used in in-memory online transaction processing (OLTP) systems. The access process of these data structures often results in irregular and unpredictable memory access patterns, which leads to slow performance from memory access stalls.\nThis project designed and evaluated NMP-enabled hybrid data structures for such hierarchical datastructures, which combine the cache-conscious benefits of conventional hierarchical data structures with the benefits of NMP. The key insight in our hybrid data structure design was leveraging the skew in accessfrequency that stems from the data structure?s topology. Essentially, we partitioned each data structure into a host-managed portion consisting of the higher levels of the data structure and an NMP-managed portionconsisting of the lower levels.\nDespite the simplicity of this idea, rigorous technical detail with respect to the architectureand algorithms is required to ensure high concurrency and correctness. In particular, with this partition, thedata structure must still be kept coherent throughout the entire operation execution, even as multipleoperations are applied concurrently. Careful coordination among the host threads, among the near-memorycompute units, and between the host threads and near-memory compute units is required to meet highconcurrency and correctness guarantees.\nWe proposed a data structure applicable to any generic NMP architecture and provided a concrete hybrid implementation of two data structures widely used in OLTP systems (a skiplist and B+ tree). We demonstrated through rigorous simulation that our NMP-hybrid approach can improve performance by up to3.1X and 2.1X for the skiplist and B+ tree, respectively, compared to non-NMP implementations.\nWe also showed some promising results indicating potential benefits of using NMP architectures to reduce latencies incurred during garbage collection memory management. The mark-and-sweep algorithm,which identifies the live objects of a program, is fundamentally pointer-chasing and thus subject tobottlenecks arising from large amounts of irregular memory accesses, similar to pointer-chasing we have found other data structures explored in this project.\nThe last part of the project focused on providing fast and efficient integrity protection for non-volatile main memory (NVMM). Non-volatile main memory (NVMM) technology provides both increased data resilience by preventing data loss on power failure, and improved quality-of-service, by reducing reboot times. However, these features come with their own challenges. First, the continued use of volatile write-back caches and registers, whose contents are lost at power failure, means that writes must be forwarded all the way to NVMM to survive power loss, necessitating special care. Secondly, NVMM opens the system to novelphysical attacks through a system crash.\nIdeally, hardware enforced integrity protected NVMM should be fast, secure, and quickly recoverable. State-of-the-art solutions typically sacrifice one or more of these features to accomplish its goals. In this last part ofthe project, we have begun exploring potential solutions that aim to achieve each of these properties. Our idea is to implement a hot/cold tracking mechanism for metadata such that we provide crash consistent integrity with low runtime overhead while limiting on-chip area for security metadata. Initial simulation results show significant improvements (up to 41% reduction in execution overhead) for in-memory storage applications while significantly reducing the required on-chip area to implement the protocol.\t\t\t\t\tLast Modified: 11/29/2023\n\n\t\t\t\t\tSubmitted by: MauricePHerlihy\n"
 }
}