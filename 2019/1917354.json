{
 "awd_id": "1917354",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: Research in Improving Computational Thinking in the Formation of Engineers, a Multi-Institution Initiative",
 "cfda_num": "47.041",
 "org_code": "07050000",
 "po_phone": "7032922961",
 "po_email": "mverlege@nsf.gov",
 "po_sign_block_name": "Matthew A. Verleger",
 "awd_eff_date": "2019-09-01",
 "awd_exp_date": "2024-08-31",
 "tot_intn_awd_amt": 63474.0,
 "awd_amount": 63474.0,
 "awd_min_amd_letter_date": "2019-06-06",
 "awd_max_amd_letter_date": "2019-06-06",
 "awd_abstract_narration": "Title:\r\nUnderstanding the Role of Computational Thinking in Engineering Education\r\nAbstract:\r\nThe need for undergraduate engineering students to learn computing has dramatically increased as computing has become more important in engineering practice. Many engineering colleges have responded to this change by requiring their engineering students to take computing classes. Some of these classes are now central to the first year of college engineering education. Computing classes are considered to be extremely difficult by many students, especially those who have not been exposed to computing in high school. Inequities in the K-12 education system mean that some students often have less opportunity to be exposed to computing before college than others. As a result, integrating computing into engineering education may exacerbate existing inequities in engineering education and reduce diversity and inclusion in engineering. This research examines the integration of computing in engineering at three institutions that incorporate computing into engineering education in different ways. A computational thinking diagnostic, which measures the degree to which students are learning critical computing concepts in engineering classes, will be used to determine how much computing the engineering students are learning. A survey will examine how students with different backgrounds are responding to the challenges of doing computing in their engineering education program. Students will also be surveyed as the term progresses to identify students who are feeling increasing, steady or decreasing stress as the complexity of the material increases. Students will be interviewed about how computing is affecting their desire to become an engineer and their confidence in their ability to excel in engineering. Taken together this information will provide new knowledge of how the integration of computing in beginning engineering classes is changing engineering education and impacting who becomes an engineer.\r\nPrevious research has demonstrated that while engineering and computational skills have substantial overlap, many engineering students have little or no prior experience with computational thinking. The goal of this project is to improve the way that computational thinking is taught in colleges of engineering by understanding multiple factors that affect computational thinking development. A mixed-methods research design involving a computational thinking diagnostic paired with qualitative analysis of interviews will explore answers to three research questions: (1) How does the integration of computing into the foundational engineering courses affect the formation of engineers? (2) In what ways do social identities (e.g. gender, ethnicity, first-generation college attending), choices (e.g. major, transfer status), and other factors impact the engineering student experience with computational thinking? (3) In what ways do computational thinking skills develop over time in engineering students? The PI team has direct access to the target population at three institutions (a large, public, land grant institution (Texas A&M), a medium sized, public, state flagship institution (University of Oklahoma), and a small, private, undergraduate university focused on engineering degrees (Milwaukee School of Engineering). Each institution has unique ways of integrating computational thinking into engineering programs. Having these three institutions collaborate provides varied curricular models for integrating computation into engineering, making comparative analysis powerful. The novelty and creativity of this project lies in the capacity of the research team to answer critical questions about why students succeed or fail to become engineers based on unique computational thinking opportunities that three diverse institutions and environments provide.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "ENG",
 "org_dir_long_name": "Directorate for Engineering",
 "div_abbr": "EEC",
 "org_div_long_name": "Division of Engineering Education and Centers",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Deborah",
   "pi_last_name": "Trytten",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "Deborah A Trytten",
   "pi_email_addr": "dtrytten@ou.edu",
   "nsf_id": "000328845",
   "pi_start_date": "2019-06-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Oklahoma Norman Campus",
  "inst_street_address": "660 PARRINGTON OVAL RM 301",
  "inst_street_address_2": "",
  "inst_city_name": "NORMAN",
  "inst_state_code": "OK",
  "inst_state_name": "Oklahoma",
  "inst_phone_num": "4053254757",
  "inst_zip_code": "730193003",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "OK04",
  "org_lgl_bus_name": "UNIVERSITY OF OKLAHOMA",
  "org_prnt_uei_num": "",
  "org_uei_num": "EVTSTTLCEWS5"
 },
 "perf_inst": {
  "perf_inst_name": "University of Oklahoma Norman Campus",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "OK",
  "perf_st_name": "Oklahoma",
  "perf_zip_code": "730199705",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "OK04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "134000",
   "pgm_ele_name": "EngEd-Engineering Education"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "110E",
   "pgm_ref_txt": "EDUCATION RESEARCH"
  },
  {
   "pgm_ref_code": "1340",
   "pgm_ref_txt": "ENGINEERING EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 63474.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Computers have touched every element of modern life. Learning how to leverage the potential of a computer to solve problems is necessary for all college students, but especially engineers. Computational thinking is a skill set that enables people to break problems down into manageable parts, recognize known solutions to common problems, store and manipulate data in a computer, discover the information content of data, and consider what impact computing might have on society.</p>\r\n<p>We created a multiple-choice questionnaire, called the Engineering Computational Thinking Diagnostic (ECTD), that engineering educators can use to determine how well individual engineering students have developed their computational thinking skills. The ECTD has been extensively tested and shown to reflect and predict computational thinking skills. The testing of the ECTD has met the highest level of scientific scrutiny, including publication for other scientists to critique and engineering faculty and instructors to use. The ECTD is freely available to engineering educators from around the world.</p>\r\n<p>There are many possible uses for the ECTD. We implemented three uses in this project. First, we used the ECTD to identify students who needed additional support to succeed in computational thinking tasks. We used this information to create balanced teams that had both programmers and non-programmers contributing to solutions. This support can help engineering students remain in their majors, progress to graduation, and join the engineering workforce.</p>\r\n<p>Second, we used the ECTD to demonstrate that faculty teaching computational thinking were successfully supporting their students&rsquo; learning. This is important because many institutions measure how well their faculty teach with student surveys that focus on factors other than student learning. Having faculty rewarded for student learning moves engineering education forward.</p>\r\n<p>Third, we used the ECTD to demonstrate that students who enter the university with prior computer programming experience showed more developed computational thinking skills than students without the same experience. This created a classroom climate where students with prior programming experience scared students without this experience. Scared students have more difficultly seeing themselves as future engineers, especially during the first year of college when students can be insecure.</p>\r\n<p>As artificial intelligence moves from the laboratory into mainstream culture, society increases its dependence on computational thinking. Computational thinking skills are the foundation that future engineers will use to collaborate with each other and artificial intelligence tools to solve the problems of the future. These skills will help the U.S. workforce remain as world leaders in technology.</p><br>\n<p>\n Last Modified: 02/06/2025<br>\nModified by: Deborah&nbsp;A&nbsp;Trytten</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nComputers have touched every element of modern life. Learning how to leverage the potential of a computer to solve problems is necessary for all college students, but especially engineers. Computational thinking is a skill set that enables people to break problems down into manageable parts, recognize known solutions to common problems, store and manipulate data in a computer, discover the information content of data, and consider what impact computing might have on society.\r\n\n\nWe created a multiple-choice questionnaire, called the Engineering Computational Thinking Diagnostic (ECTD), that engineering educators can use to determine how well individual engineering students have developed their computational thinking skills. The ECTD has been extensively tested and shown to reflect and predict computational thinking skills. The testing of the ECTD has met the highest level of scientific scrutiny, including publication for other scientists to critique and engineering faculty and instructors to use. The ECTD is freely available to engineering educators from around the world.\r\n\n\nThere are many possible uses for the ECTD. We implemented three uses in this project. First, we used the ECTD to identify students who needed additional support to succeed in computational thinking tasks. We used this information to create balanced teams that had both programmers and non-programmers contributing to solutions. This support can help engineering students remain in their majors, progress to graduation, and join the engineering workforce.\r\n\n\nSecond, we used the ECTD to demonstrate that faculty teaching computational thinking were successfully supporting their students learning. This is important because many institutions measure how well their faculty teach with student surveys that focus on factors other than student learning. Having faculty rewarded for student learning moves engineering education forward.\r\n\n\nThird, we used the ECTD to demonstrate that students who enter the university with prior computer programming experience showed more developed computational thinking skills than students without the same experience. This created a classroom climate where students with prior programming experience scared students without this experience. Scared students have more difficultly seeing themselves as future engineers, especially during the first year of college when students can be insecure.\r\n\n\nAs artificial intelligence moves from the laboratory into mainstream culture, society increases its dependence on computational thinking. Computational thinking skills are the foundation that future engineers will use to collaborate with each other and artificial intelligence tools to solve the problems of the future. These skills will help the U.S. workforce remain as world leaders in technology.\t\t\t\t\tLast Modified: 02/06/2025\n\n\t\t\t\t\tSubmitted by: DeborahATrytten\n"
 }
}