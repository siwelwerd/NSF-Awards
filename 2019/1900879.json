{
 "awd_id": "1900879",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CNS Core: Large: Collaborative Research: Towards an Evolvable Public Key Infrastructure",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032922594",
 "po_email": "kkaravan@nsf.gov",
 "po_sign_block_name": "Karen Karavanic",
 "awd_eff_date": "2019-06-01",
 "awd_exp_date": "2023-05-31",
 "tot_intn_awd_amt": 600000.0,
 "awd_amount": 600000.0,
 "awd_min_amd_letter_date": "2019-04-04",
 "awd_max_amd_letter_date": "2021-06-21",
 "awd_abstract_narration": "The importance of the Transport Layer Security (TLS) public key infrastructure (PKI) to the success of the Internet cannot be overstated.  From social networking to banking, from mobile devices to cloud computing, the PKI allows communicating parties to be sure of whom they are communicating with, that their communication is confidential, and that their communication has not been tampered with.  Despite its incredible importance, the PKI has been notoriously difficult to evolve to meet new security concerns and Internet demands.  This project introduces new, deployable alternatives to key parts of the PKI to make it more evolvable, manageable, and secure.\r\n\r\nThe project has three primary thrusts.  The first introduces a key enabling technology behind the subsequent thrusts, called assertion-carrying certificates (ACCs).  ACCs expand today's certificates with the capability of including a small amount of code (in the form of assertions) to be evaluated as part of the certificate validation process.  The second thrust applies ACCs to enable certificate authorities to more readily evolve to new demands for certificate delegation and automated issuance.  The third thrust applies ACCs and trusted execution environments to enable web-hosting services like content delivery networks to securely manage their customers' cryptographic keys.\r\n\r\nCorrect operation of the PKI is paramount to ensuring a secure, authenticated Internet.  Recent efforts have proven that progress towards a more secure PKI is possible, but a more fundamental focus is needed to address the underlying challenges.  This project will do just that by developing a new, extensible approach to constraining when identities on the Internet should be trusted.  This project will make it straightforward and safe to extend the basic abstractions offered by the PKI, thereby enabling it to evolve to meet changing trends.\r\n\r\nThe project's code and data will be made publicly available and maintained at https://securepki.org\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Alan",
   "pi_last_name": "Mislove",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Alan Mislove",
   "pi_email_addr": "amislove@ccs.neu.edu",
   "nsf_id": "000542179",
   "pi_start_date": "2019-04-04",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Christopher",
   "pi_last_name": "Wilson",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Christopher Wilson",
   "pi_email_addr": "c.wilson@neu.edu",
   "nsf_id": "000635458",
   "pi_start_date": "2019-04-04",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Northeastern University",
  "inst_street_address": "360 HUNTINGTON AVE",
  "inst_street_address_2": "",
  "inst_city_name": "BOSTON",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6173735600",
  "inst_zip_code": "021155005",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "NORTHEASTERN UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "HLTMVS2JZBS6"
 },
 "perf_inst": {
  "perf_inst_name": "Northeastern University",
  "perf_str_addr": "360 Huntington Ave",
  "perf_city_name": "Boston",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021155005",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  },
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7925",
   "pgm_ref_txt": "LARGE PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 400936.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 199064.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-dc9c4a79-7fff-3c36-eadb-4e984afcd944\">\n<p dir=\"ltr\"><span>The SSL/TLS public key infrastructure (PKI) is responsible for securing Internet transactions such as social networking, email, and banking; it allows communicating parties to be sure of who they are communicating with, that their communication is confidential, and that their communication has not been tampered with. Despite its importance, the PKI has suffered from a number of issues including certificate authorities (CAs) mis-issuing certificates, difficulties with updating the PKI ecosystem, and revocation problems. In this project, we endeavored to move today's PKI towards a more evolvable, flexible, and manageable PKI by identifying and addressing a number of outstanding research challenges.&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>First, we focused on TLS clients (e.g., web browsers).&nbsp; Unfortunately, validation logic is tightly bound into clients or the TLS libraries they use, which makes it challenging to understand what validation policies clients have adopted, adapt these policies over time, or understand differences between the validation behavior of different clients. For example, browsers typically implement the most sophisticated validation policies&mdash;yet their policies do not always agree&mdash;while other systemically important tools like scripting languages perform little-to-no validation at all. We developed Hammurabi, a tool that takes a certificate validation policy as input (written in a high-level, declarative language like Prolog). Hammurabi can be run as a system service or compiled into clients as a library, and it allows tool developers to adopt and adapt sophisticated certificate validation policies with ease. As proof of concept, we reimplemented Firefox and Chrome&rsquo;s validation policies in Prolog for Hammurabi, as well as the test suite of the ZLint tool.</span></p>\n<br />\n<p dir=\"ltr\"><span>Second, we focused on the network itself.&nbsp; Unfortunately, there are many adversarial networks that attack the security of the web&rsquo;s PKI by actively intercepting and manipulating users&rsquo; HTTP and DNS traffic. We developed the first techniques to automate the discovery of new censorship evasion techniques purely in the application layer. We extended our Geneva censorship evasion tool to support HTTP and DNS evasion techniques, and have used it to study how such traffic is intercepted in several countries, as well as new ways to circumvent them.</span></p>\n<br />\n<p dir=\"ltr\"><span>Third, we focused on mobile applications.&nbsp; TLS certificate pinning is a security mechanism used by apps to protect their network traffic against malicious CAs, in-path monitoring, and other TLS tampering. Pinning can provide enhanced security to defend against malicious third-party access to sensitive data in transit (e.g.,to protect sensitive banking and health care information), but can also hide an app&rsquo;s personal data collection from users and auditors. Prior studies found pinning was rarely used in the Android ecosystem; however, little is known about recent pinning usage on iOS and across mobile platforms.&nbsp; We collected a large number of unique apps from the two official app stores. We developed novel, cross-platform, static and dynamic analysis techniques to detect certificate pinning, not only based on static configurations, but also its run-time use.&nbsp;&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>Finally, we focused on content distribution networks (CDNs), as these are commonly the entities that serve certificates on the web.&nbsp; In particular, operating these CDNs often requires substantial upfront investment in IP addresses to ensure that a large number of HTTPS/TLS sites can be supported. &nbsp; In collaboration with Cloudflare, we explored the extent to which the bindings between DNS names, IP addresses, and application network sockets can be fully un-bound to allow much more efficient and flexible use of IP space.&nbsp; Specifically, we re-architected authoritative DNS to match on policies instead of names, and then designed a programmable sockets mechanism to resolve socket inflexibility, thereby removing limitations on IP+port pair selection, and enabling IP+port reassignment to existing listening sockets.</span></p>\n</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/04/2023<br>\n\t\t\t\t\tModified by: Alan&nbsp;Mislove</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nThe SSL/TLS public key infrastructure (PKI) is responsible for securing Internet transactions such as social networking, email, and banking; it allows communicating parties to be sure of who they are communicating with, that their communication is confidential, and that their communication has not been tampered with. Despite its importance, the PKI has suffered from a number of issues including certificate authorities (CAs) mis-issuing certificates, difficulties with updating the PKI ecosystem, and revocation problems. In this project, we endeavored to move today's PKI towards a more evolvable, flexible, and manageable PKI by identifying and addressing a number of outstanding research challenges. \n\n\nFirst, we focused on TLS clients (e.g., web browsers).  Unfortunately, validation logic is tightly bound into clients or the TLS libraries they use, which makes it challenging to understand what validation policies clients have adopted, adapt these policies over time, or understand differences between the validation behavior of different clients. For example, browsers typically implement the most sophisticated validation policies&mdash;yet their policies do not always agree&mdash;while other systemically important tools like scripting languages perform little-to-no validation at all. We developed Hammurabi, a tool that takes a certificate validation policy as input (written in a high-level, declarative language like Prolog). Hammurabi can be run as a system service or compiled into clients as a library, and it allows tool developers to adopt and adapt sophisticated certificate validation policies with ease. As proof of concept, we reimplemented Firefox and Chrome\u2019s validation policies in Prolog for Hammurabi, as well as the test suite of the ZLint tool.\n\n\nSecond, we focused on the network itself.  Unfortunately, there are many adversarial networks that attack the security of the web\u2019s PKI by actively intercepting and manipulating users\u2019 HTTP and DNS traffic. We developed the first techniques to automate the discovery of new censorship evasion techniques purely in the application layer. We extended our Geneva censorship evasion tool to support HTTP and DNS evasion techniques, and have used it to study how such traffic is intercepted in several countries, as well as new ways to circumvent them.\n\n\nThird, we focused on mobile applications.  TLS certificate pinning is a security mechanism used by apps to protect their network traffic against malicious CAs, in-path monitoring, and other TLS tampering. Pinning can provide enhanced security to defend against malicious third-party access to sensitive data in transit (e.g.,to protect sensitive banking and health care information), but can also hide an app\u2019s personal data collection from users and auditors. Prior studies found pinning was rarely used in the Android ecosystem; however, little is known about recent pinning usage on iOS and across mobile platforms.  We collected a large number of unique apps from the two official app stores. We developed novel, cross-platform, static and dynamic analysis techniques to detect certificate pinning, not only based on static configurations, but also its run-time use.  \n\n\nFinally, we focused on content distribution networks (CDNs), as these are commonly the entities that serve certificates on the web.  In particular, operating these CDNs often requires substantial upfront investment in IP addresses to ensure that a large number of HTTPS/TLS sites can be supported.   In collaboration with Cloudflare, we explored the extent to which the bindings between DNS names, IP addresses, and application network sockets can be fully un-bound to allow much more efficient and flexible use of IP space.  Specifically, we re-architected authoritative DNS to match on policies instead of names, and then designed a programmable sockets mechanism to resolve socket inflexibility, thereby removing limitations on IP+port pair selection, and enabling IP+port reassignment to existing listening sockets.\n\n\n\t\t\t\t\tLast Modified: 07/04/2023\n\n\t\t\t\t\tSubmitted by: Alan Mislove"
 }
}