{
 "awd_id": "1931208",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: CORE: Small: Checking Security Checks in OS Kernels",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032922594",
 "po_email": "kkaravan@nsf.gov",
 "po_sign_block_name": "Karen Karavanic",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 499996.0,
 "awd_amount": 499996.0,
 "awd_min_amd_letter_date": "2019-08-12",
 "awd_max_amd_letter_date": "2019-08-12",
 "awd_abstract_narration": "Operating system (OS) kernels play a critical role in computer systems by virtually having complete control over the systems. OS kernels not only manage hardware and system resources, but also provide services and protection. Given these tasks, OS kernels have to process external untrusted inputs and perform complicated operations, both of which are error-prone. To avoid entering into erroneous states, OS kernels tend to enforce a large number of security checks---\"if\" and \"switch\" statements that are used to validate states.  Unfortunately, security checks themselves are often buggy.  In particular, a security check may be missing or incomplete, be placed in an improper location, target a wrong variable, etc. Buggy security checks often cause critical security impact because the intended validation for potential errors can be void.  This project aims to systematically investigate security checks in OS kernels, to automatically identify security checks, and to develop a set of new techniques to detect the common classes of security-check bugs.  This project is expected to effectively find a potentially large number of previously unknown security-check bugs in widely used OS kernels, and thus to significantly improve the security of computer systems with billions of users.  The broader educational activities of this project include integrating research with outreach, organizing Capture The Flag competitions among universities and industries in Minnesota, and developing courses for training interdisciplinary and underrepresented students.\r\n\r\nThe goal of this project is to systematically investigate security checks and effectively detect the common and critical security-check bugs in popular OS kernels, including the Linux kernel, the Android kernel, the FreeBSD kernel, Darwin-XNU (MacOS), and ReactOS (Windows-like). The project is comprised of two main research thrusts: (1) identifying security checks and (2) detecting security-check bugs. Both research thrusts are challenging because they require the understanding of code semantics and contexts, and even developer logic. Therefore, this project develops a set of semantic-and context-aware approaches. This project also enhances existing techniques such as fuzzing and symbolic execution to effectively and scalably detect security-check bugs. Multiple general techniques developed in this project, such as accurately finding indirect-call targets, identifying semantically-similar peer code paths, modeling OS-kernel boundary, would also advance future research on systems analysis and protection.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Kangjie",
   "pi_last_name": "Lu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Kangjie Lu",
   "pi_email_addr": "kjlu@umn.edu",
   "nsf_id": "000763690",
   "pi_start_date": "2019-08-12",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Minnesota-Twin Cities",
  "inst_street_address": "2221 UNIVERSITY AVE SE STE 100",
  "inst_street_address_2": "",
  "inst_city_name": "MINNEAPOLIS",
  "inst_state_code": "MN",
  "inst_state_name": "Minnesota",
  "inst_phone_num": "6126245599",
  "inst_zip_code": "554143074",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "MN05",
  "org_lgl_bus_name": "REGENTS OF THE UNIVERSITY OF MINNESOTA",
  "org_prnt_uei_num": "",
  "org_uei_num": "KABJZBBJ4B54"
 },
 "perf_inst": {
  "perf_inst_name": "University of Minnesota-Twin Cities",
  "perf_str_addr": "200 Union St SE",
  "perf_city_name": "Minneapolis",
  "perf_st_code": "MN",
  "perf_st_name": "Minnesota",
  "perf_zip_code": "554552070",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "MN05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 499996.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Executive Summary</p>\n<p>This project aimed to systematically investigate and enhance the security of Operating System (OS) kernels by identifying and rectifying bugs related to security checks. Given the critical role OS kernels play in managing hardware, system resources, and ensuring system security, the project focused on automatically identifying security checks and detecting three common classes of security-check bugs: insufficient, incorrect, and ineffective checks. Through this project, we have developed a set of open-sourced tools that have found more than a thousand of related bugs in widely used OS kernels including Linux, Android, and FreeBSD. The resulting tools have also been used by many research groups and major software vendors such as Linux, Google, and IBM for code analysis and bug finding.&nbsp;</p>\n<p>&nbsp;</p>\n<p><br />Intellectual Merit</p>\n<p>The project's core objective was to improve OS kernel security by detecting critical security-check bugs through two main research thrusts: identifying security checks and detecting security-check bugs. Challenges were addressed by developing semantic- and context-aware techniques, including precise and scalable static analysis, check-semantic analysis, directed fuzzing, and enhanced symbolic execution. Innovative methods like type-based analysis and iterative mechanisms for security check identification were also developed, significantly advancing the field of systems analysis and protection.</p>\n<p>&nbsp;</p>\n<p><br />Key Findings and Achievements<br />- Precise and scalable static analysis. We develop type-based analysis to precisely and scalably construct control-flow graph, which is the foundation to all inter-procedural analysis. The work won the best paper award from ACM CCS 2019.</p>\n<p>- Security Check Identification: Successfully automated the identification of security checks across multiple OS kernels by leveraging error-handling primitives with clear patterns.</p>\n<p>- Bug Detection: Introduced novel techniques and bug-detection oracles that led to the discovery of a large number of security-check bugs in widely used projects.</p>\n<p>&nbsp;</p>\n<p><br />Broader Impacts</p>\n<p><br />- Improved System Security: Significantly enhanced the security of widely used computer systems, contributing to the protection of user data and privacy.</p>\n<p>- Open Source Contribution: Tools of this project have been made available as an open-source projects, enabling software vendors and enterprises to preemptively identify and fix security bugs.</p>\n<p>- Industry and Academic Interest: The project's outcomes have attracted attention from major software vendors and academia, fostering collaboration and further research.</p>\n<p>- Educational Advancements: Integrated cutting-edge systems and security knowledge into undergraduate and graduate curricula and developed courses for interdisciplinary and underrepresented student groups.</p>\n<p>&nbsp;</p>\n<p><br />Conclusion</p>\n<p>The systematic approach to investigating security checks in OS kernels has led to significant advancements in kernel security, which plays a pivotal role in detecting and addressing security-check bugs. The project not only contributes to the technical domain by enhancing the security of OS kernels but also has broader impacts on education, industry collaboration, and open-source communities. The methodologies and techniques developed through this project pave the way for future research in systems analysis, security, and beyond, marking a substantial step forward in the protection and reliability of computer systems worldwide.</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 02/12/2024<br>\nModified by: Kangjie&nbsp;Lu</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nExecutive Summary\n\n\nThis project aimed to systematically investigate and enhance the security of Operating System (OS) kernels by identifying and rectifying bugs related to security checks. Given the critical role OS kernels play in managing hardware, system resources, and ensuring system security, the project focused on automatically identifying security checks and detecting three common classes of security-check bugs: insufficient, incorrect, and ineffective checks. Through this project, we have developed a set of open-sourced tools that have found more than a thousand of related bugs in widely used OS kernels including Linux, Android, and FreeBSD. The resulting tools have also been used by many research groups and major software vendors such as Linux, Google, and IBM for code analysis and bug finding.\n\n\n\n\n\n\nIntellectual Merit\n\n\nThe project's core objective was to improve OS kernel security by detecting critical security-check bugs through two main research thrusts: identifying security checks and detecting security-check bugs. Challenges were addressed by developing semantic- and context-aware techniques, including precise and scalable static analysis, check-semantic analysis, directed fuzzing, and enhanced symbolic execution. Innovative methods like type-based analysis and iterative mechanisms for security check identification were also developed, significantly advancing the field of systems analysis and protection.\n\n\n\n\n\n\nKey Findings and Achievements\n- Precise and scalable static analysis. We develop type-based analysis to precisely and scalably construct control-flow graph, which is the foundation to all inter-procedural analysis. The work won the best paper award from ACM CCS 2019.\n\n\n- Security Check Identification: Successfully automated the identification of security checks across multiple OS kernels by leveraging error-handling primitives with clear patterns.\n\n\n- Bug Detection: Introduced novel techniques and bug-detection oracles that led to the discovery of a large number of security-check bugs in widely used projects.\n\n\n\n\n\n\nBroader Impacts\n\n\n\n- Improved System Security: Significantly enhanced the security of widely used computer systems, contributing to the protection of user data and privacy.\n\n\n- Open Source Contribution: Tools of this project have been made available as an open-source projects, enabling software vendors and enterprises to preemptively identify and fix security bugs.\n\n\n- Industry and Academic Interest: The project's outcomes have attracted attention from major software vendors and academia, fostering collaboration and further research.\n\n\n- Educational Advancements: Integrated cutting-edge systems and security knowledge into undergraduate and graduate curricula and developed courses for interdisciplinary and underrepresented student groups.\n\n\n\n\n\n\nConclusion\n\n\nThe systematic approach to investigating security checks in OS kernels has led to significant advancements in kernel security, which plays a pivotal role in detecting and addressing security-check bugs. The project not only contributes to the technical domain by enhancing the security of OS kernels but also has broader impacts on education, industry collaboration, and open-source communities. The methodologies and techniques developed through this project pave the way for future research in systems analysis, security, and beyond, marking a substantial step forward in the protection and reliability of computer systems worldwide.\n\n\n\t\t\t\t\tLast Modified: 02/12/2024\n\n\t\t\t\t\tSubmitted by: KangjieLu\n"
 }
}