{
 "awd_id": "1923791",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Proposal: CyberTraining: Pilot: Aligning Learning Materials with Curriculum Standards to Integrate Parallel and Distributed Computing Topics in Early CS Education",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Ashok Srinivasan",
 "awd_eff_date": "2019-08-01",
 "awd_exp_date": "2022-07-31",
 "tot_intn_awd_amt": 49930.0,
 "awd_amount": 49930.0,
 "awd_min_amd_letter_date": "2019-06-10",
 "awd_max_amd_letter_date": "2019-06-10",
 "awd_abstract_narration": "Driven by recent trends in computing hardware and architectures, the project investigators are working with the larger community of computer science educators to introduce parallel computing concepts into early courses in computer science.  A smart repository of available learning materials (e.g., lectures, exercises, assignments, assessments) is being developed that enables computer science educators to easily find and adopt learning materials developed by other educators. Educators are being trained to work with the investigators and the repository system.  The project serves the national interest as stated by NSF's mission: to promote the progress of science, by incorporating current and critical concepts in parallel computing at an early stage in a way that is available for all computer science students.\r\n\r\nThe project takes a scalable and robust approach to building a large collection of materials from a diverse group of instructors and institutions. This pilot study is taking the needed initial steps to reaching this goal: obtaining a sound understanding of the current materials and curricula used in early computer science and parallel computing courses and enable their reuse.  To achieve this goal, the project develops a system to classify learning materials against two national standards: the 2013 ACM Computer Science Curriculum Guidelines and the 2012 NSF/IEEE-TCPP Parallel and Distributed Computing curriculum. The system aims to support advanced search features for educational materials, help identify similarity and differences between large sets of materials, and reveal potential gaps in existing materials. The system is accessible through a web interface to maximize adoption by CS educators looking to introduce parallel computing concepts, especially those in early CS courses. The project engages early users of the system coming from the Computer Science Education community and the Parallel Computing community through a series of workshops held at various computer science education community events and parallel computing community events.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jamie",
   "pi_last_name": "Payton",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Jamie J Payton",
   "pi_email_addr": "jamie.payton@temple.edu",
   "nsf_id": "000723533",
   "pi_start_date": "2019-06-10",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Temple University",
  "inst_street_address": "1805 N BROAD ST",
  "inst_street_address_2": "",
  "inst_city_name": "PHILADELPHIA",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "2157077547",
  "inst_zip_code": "191226104",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "PA02",
  "org_lgl_bus_name": "TEMPLE UNIVERSITY-OF THE COMMONWEALTH SYSTEM OF HIGHER EDUCATION",
  "org_prnt_uei_num": "QD4MGHFDJKU1",
  "org_uei_num": "QD4MGHFDJKU1"
 },
 "perf_inst": {
  "perf_inst_name": "Temple University",
  "perf_str_addr": "",
  "perf_city_name": "Philadelphia",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "191226003",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "PA02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "044Y00",
   "pgm_ele_name": "CyberTraining - Training-based"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 49930.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Interest in advancing and applying Parallel and Distributed Computing (PDC) has substantially grown over the last decade. In higher education, the NSF/IEEE-TCPP curriculum guidelines were first published in 2012 to encourage coverage of PDC topics, and the 2013 ACM/IEEE Computer Science Curriculum Guidelines recommended that all degree programs include PDC topics. A plausible strategy for degree programs to meet these recommendations is to integrate PDC topics all across the undergraduate curriculum, from early CS courses (introductory programming, data structures and algorithms) to more advanced courses, such as operating systems and computer architecture. A key challenge is that most instructors of CS1/CS2 do not have expertise in Parallel and Distributed Computing. A set of well-designed learning materials (assignments, videos, textbooks, course descriptions, and so on) can be incredibly helpful to instructors who are asked to introduce PDC concepts in their courses. However, while there are some PDC materials available that can be adopted for this purpose, the effort required on the part of the instructor to figure out what is relevant to a particular class can be daunting.&nbsp;</p>\n<p>In this work, we contend that simultaneously classifying pedagogical materials against the CS13 and the PDC12 curriculum guidelines can address some ofthe challenges faced by instructors and can promote broader adoption of PDC materials in early CS courses. Ultimately, the goal of this project is to develop highly scalable tools and methods that will facilitate wider-scale adoption of parallel and distributed computing topics into early CS courses in higher education, in line with nationally accepted curriculum guidelines. To that end, we have developed CS Materials, a system that can be used to categorize pedagogical materials according to well-known and established curricular guidelines. CS Materials can be leveraged 1) by instructors of early CS courses to find materials that are similar to the one that they use but that also cover PDC topics, and 2) by instructors to check the coverage of topics (and gaps) in a course, and 3) by PDC experts to identify topics for which PDC instructional materials do not exist or are insufficient in order to inform development of additional PDC curricular materials. To date, we have included over 200 materials in the CS Materials system. These materials include more than 50 Nifty Assignments, all Peachy assignments created prior to 2019, and materials from 8 courses, including a CS1 course, multiple sections of data structures courses, a capstone software development course, an elective parallel computing course, and object-oriented programming course.</p>\n<p>The system is available for public use at https://cs-materials.herokuapp.com/. The project team welcomes new users, whether to search for existing PDC materials for use in introductory CS courses, to review coverage of PDC topics in their curriculum, or to contribute new PDC curricular materials to the repository for use by others.&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/25/2023<br>\n\t\t\t\t\tModified by: Jamie&nbsp;Payton</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nInterest in advancing and applying Parallel and Distributed Computing (PDC) has substantially grown over the last decade. In higher education, the NSF/IEEE-TCPP curriculum guidelines were first published in 2012 to encourage coverage of PDC topics, and the 2013 ACM/IEEE Computer Science Curriculum Guidelines recommended that all degree programs include PDC topics. A plausible strategy for degree programs to meet these recommendations is to integrate PDC topics all across the undergraduate curriculum, from early CS courses (introductory programming, data structures and algorithms) to more advanced courses, such as operating systems and computer architecture. A key challenge is that most instructors of CS1/CS2 do not have expertise in Parallel and Distributed Computing. A set of well-designed learning materials (assignments, videos, textbooks, course descriptions, and so on) can be incredibly helpful to instructors who are asked to introduce PDC concepts in their courses. However, while there are some PDC materials available that can be adopted for this purpose, the effort required on the part of the instructor to figure out what is relevant to a particular class can be daunting. \n\nIn this work, we contend that simultaneously classifying pedagogical materials against the CS13 and the PDC12 curriculum guidelines can address some ofthe challenges faced by instructors and can promote broader adoption of PDC materials in early CS courses. Ultimately, the goal of this project is to develop highly scalable tools and methods that will facilitate wider-scale adoption of parallel and distributed computing topics into early CS courses in higher education, in line with nationally accepted curriculum guidelines. To that end, we have developed CS Materials, a system that can be used to categorize pedagogical materials according to well-known and established curricular guidelines. CS Materials can be leveraged 1) by instructors of early CS courses to find materials that are similar to the one that they use but that also cover PDC topics, and 2) by instructors to check the coverage of topics (and gaps) in a course, and 3) by PDC experts to identify topics for which PDC instructional materials do not exist or are insufficient in order to inform development of additional PDC curricular materials. To date, we have included over 200 materials in the CS Materials system. These materials include more than 50 Nifty Assignments, all Peachy assignments created prior to 2019, and materials from 8 courses, including a CS1 course, multiple sections of data structures courses, a capstone software development course, an elective parallel computing course, and object-oriented programming course.\n\nThe system is available for public use at https://cs-materials.herokuapp.com/. The project team welcomes new users, whether to search for existing PDC materials for use in introductory CS courses, to review coverage of PDC topics in their curriculum, or to contribute new PDC curricular materials to the repository for use by others. \n\n\t\t\t\t\tLast Modified: 01/25/2023\n\n\t\t\t\t\tSubmitted by: Jamie Payton"
 }
}