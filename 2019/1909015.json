{
 "awd_id": "1909015",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "OAC Core: Small: Collaborative Research: Scalable Run-Time for Highly Parallel, Heterogeneous Systems",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": "7032922625",
 "po_email": "jjli@nsf.gov",
 "po_sign_block_name": "Juan Li",
 "awd_eff_date": "2019-07-01",
 "awd_exp_date": "2023-06-30",
 "tot_intn_awd_amt": 249995.0,
 "awd_amount": 249995.0,
 "awd_min_amd_letter_date": "2019-06-19",
 "awd_max_amd_letter_date": "2019-06-19",
 "awd_abstract_narration": "Supercomputing has become an essential tool in many scientific fields, including advances in engineering and medicine, and contributes to national security. Progress in many areas depends on continued improvements in the performance of supercomputers and their usability. Communication between processes is a critical component of this effort and is the target of this project. This project departs from the traditional communication protocols. Rather, the project  focuses on providing middle ground solutions between hardware and software. This approach potentially  reduces communication overheads and better matches the functionality of the communication library to the capabilities of modern communication adapters and also improves the match between the requirements of modern parallel computing frameworks and applications. By improving the communication capabilities of computational platforms, this project will promote faster and more flexible communication capabilities and will improve the time to completion of scientific applications.  It, therefore, increases the scientific throughput of existing and future cyberinfrastructure platforms. The research and educational outcomes of this project are closely related, resulting in highly trained new generations of researchers and engineers leading to a more efficient and globally competent workforce. Therefore, this project aligns with the NSF's mission to promote the progress of science and to advance national prosperity and welfare through science, and serves the national interest.\r\n \r\nThis project brings together a multidisciplinary team and aims at breaking away from the limitation of standards such as Message Passing Interface and pointing the way for handling the needs of future computational frameworks and high-end systems. To this end the project (1) designs and implements a communication library with new communication primitives to enable fast coordination with no serial bottleneck, to manage irregular, fine grain communication, and to provide new efficient synchronization mechanisms; (2) demonstrates the value of this library by using it to accelerate multiple task-based runtimes (Legion, PaRSEC) and communication libraries (MPI and GasNET); (3) demonstrates the value of hardware support by porting key components to a programmable NIC; and (4) delivers improvements and extensions to mainstream communication libraries to provide the new functionality. This work puts a special emphasis on emerging programming models, such as Legion or PaRSEC, and on emerging application domains, such as graph analytics. It aims at an orthogonal design where different mechanisms for associating producer buffer with consumer buffer can be composed with different mechanisms for synchronizing producer and consumer; and where mechanisms can be specialized so as to allow efficient hardware support.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "George",
   "pi_last_name": "Bosilca",
   "pi_mid_init": "M",
   "pi_sufx_name": "",
   "pi_full_name": "George M Bosilca",
   "pi_email_addr": "bosilca@icl.utk.edu",
   "nsf_id": "000348594",
   "pi_start_date": "2019-06-19",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Tennessee Knoxville",
  "inst_street_address": "201 ANDY HOLT TOWER",
  "inst_street_address_2": "",
  "inst_city_name": "KNOXVILLE",
  "inst_state_code": "TN",
  "inst_state_name": "Tennessee",
  "inst_phone_num": "8659743466",
  "inst_zip_code": "379960001",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "TN02",
  "org_lgl_bus_name": "UNIVERSITY OF TENNESSEE",
  "org_prnt_uei_num": "LXG4F9K8YZK5",
  "org_uei_num": "FN2YCS2YAUW3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Tennessee Knoxville",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "TN",
  "perf_st_name": "Tennessee",
  "perf_zip_code": "379960003",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "TN02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "9179",
   "pgm_ref_txt": "GRADUATE INVOLVEMENT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 249995.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-dfc430da-7fff-b0ee-9225-cc7dfde8d86d\">\n<p dir=\"ltr\"><span>This project investigated the communication middleware for distributed applications outside the current acknowledged frontiers for these communication middleware, looking for versatile ways to complete and compose communications and increasing the opportunities for the programming model or the runtime to optimize communication and synchronization. We have put a special emphasis on emerging programming models, such as task-based runtimes, Legion, HPX or PaRSEC, and on emerging application domains, such as graph analytics.&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>We have highlighted that dominant communication paradigms, such as those provided by MPI or GasNET, despite having evolved over the last twenty years, increasingly show their age. By their mainstream position, they indirectly compel new communication middlewares, such as UCX or Libfabric, to primarily cater at supporting those old paradigms, instead of providing drastically different ways to interact with the growing capabilities of network infrastructure (devices and switches). It became clear that new communication paradigms are needed to support emerging programming models, such as asynchronous task models; to support those efficiently on heterogeneous systems where nodes have thousands of concurrent tasks, hundreds of them running simultaneously; and to support message rates that could reach 100M msg/sec, where each message can trigger a different action. In particular, one needs to improve end-to-end latency, reduce software overheads, reduce contention when many threads communicate simultaneously, reduce the overheads of CPU-GPU synchronization caused by internode communication, and offload synchronization operations to the NIC.</span></p>\n<br />\n<p dir=\"ltr\"><span>We have proposed new constructs, many of them integrated into the LCI communication middleware, and call attention to how they impact the needs for more dynamic programming paradigms, and how they can be extended to provide a nimbler communication middleware for a growing range of distributed programming paradigms.</span></p>\n<div><span><br /></span></div>\n</span></p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 05/03/2024<br>\nModified by: George&nbsp;M&nbsp;Bosilca</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n\n\n\nThis project investigated the communication middleware for distributed applications outside the current acknowledged frontiers for these communication middleware, looking for versatile ways to complete and compose communications and increasing the opportunities for the programming model or the runtime to optimize communication and synchronization. We have put a special emphasis on emerging programming models, such as task-based runtimes, Legion, HPX or PaRSEC, and on emerging application domains, such as graph analytics.\n\n\n\n\nWe have highlighted that dominant communication paradigms, such as those provided by MPI or GasNET, despite having evolved over the last twenty years, increasingly show their age. By their mainstream position, they indirectly compel new communication middlewares, such as UCX or Libfabric, to primarily cater at supporting those old paradigms, instead of providing drastically different ways to interact with the growing capabilities of network infrastructure (devices and switches). It became clear that new communication paradigms are needed to support emerging programming models, such as asynchronous task models; to support those efficiently on heterogeneous systems where nodes have thousands of concurrent tasks, hundreds of them running simultaneously; and to support message rates that could reach 100M msg/sec, where each message can trigger a different action. In particular, one needs to improve end-to-end latency, reduce software overheads, reduce contention when many threads communicate simultaneously, reduce the overheads of CPU-GPU synchronization caused by internode communication, and offload synchronization operations to the NIC.\n\n\n\n\nWe have proposed new constructs, many of them integrated into the LCI communication middleware, and call attention to how they impact the needs for more dynamic programming paradigms, and how they can be extended to provide a nimbler communication middleware for a growing range of distributed programming paradigms.\n\n\n\n\n\n\t\t\t\t\tLast Modified: 05/03/2024\n\n\t\t\t\t\tSubmitted by: GeorgeMBosilca\n"
 }
}