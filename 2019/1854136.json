{
 "awd_id": "1854136",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "FRG: Collaborative Research: Computability-Theoretic Aspects of Combinatorics",
 "cfda_num": "47.049",
 "org_code": "03040000",
 "po_phone": "7032924885",
 "po_email": "tbartosz@nsf.gov",
 "po_sign_block_name": "Tomek Bartoszynski",
 "awd_eff_date": "2019-07-01",
 "awd_exp_date": "2023-06-30",
 "tot_intn_awd_amt": 271989.0,
 "awd_amount": 271989.0,
 "awd_min_amd_letter_date": "2019-05-14",
 "awd_max_amd_letter_date": "2019-05-14",
 "awd_abstract_narration": "Computability theory arose out of the development by Turing and others of a mathematically precise definition of the notion of algorithm. One of the most fruitful developments in this field has been the study of the algorithmic content of mathematics. At the same time, concerns about the foundations of mathematics have led to the analysis of different formal systems for mathematical reasoning, and the study of the relative power of such systems. The computability-theoretic approach has turned out to play a key role in this project. Combinatorics is an area of mathematics whose methods and results underlie a great deal of mathematical reasoning, so the study of its algorithmic content and of the systems required to formalize its methods is particularly important. Computable combinatorics has a long history, but has seen a recent surge of interest highlighting the fact that computability-theoretically natural notions tend to be combinatorially natural, and vice-versa. This project aims to strengthen the connections between computability theory and combinatorics by increasing our understanding of the algorithmic content of combinatorial principles, through a concerted group effort to use what we have learned in recent years to systematize the area further, work toward solving a number of its outstanding questions, and explore its outward-facing aspects.\r\n\r\nThis project will address major open problems such as determining whether Hindman's Theorem holds arithmetically, and whether it is equivalent to its restriction to sums of length at most two; determining the first-order part of Ramsey's Theorem for pairs, and clarifying the computability-theoretic relationship between this principle and its stable version; and determining the exact proof-theoretic strength of Laver's Theorem. More importantly, it will focus on the development of lines of research particularly relevant to the growing interest in connections between computability theory and combinatorics, including the study of questions of methodological interest to combinatorialists, for instance ones involving Hindman's Theorem and the use of ultrafilters in combinatorics; the development of new proofs of combinatorial theorems inspired by questions regarding the computational content of these theorems, along the lines of Montalban's new proof of Laver's Theorem; the analysis and comparison of different general methods, such as the use of ultrafilters, topological dynamics, and probabilistic methods; the development of notions of comparison between theorems that, while still computability-theoretic in spirit, are closer to being direct reflections of combinatorial differences; the understanding of splittings of combinatorial principles into computationally and combinatorially simpler parts; the study of the usefulness of combinatorially-defined objects as computational oracles; and the study of the first-order consequences of the existence of combinatorially-defined second-order objects. This project is thus aimed at developing the study of the connections between computability theory and combinatorics along a large number of related directions, making use of the computability-theoretic, proof-theoretic, and combinatorial expertise of its PIs, senior personnel, and key collaborators.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "MPS",
 "org_dir_long_name": "Directorate for Mathematical and Physical Sciences",
 "div_abbr": "DMS",
 "org_div_long_name": "Division Of Mathematical Sciences",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Peter",
   "pi_last_name": "Cholak",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "Peter A Cholak",
   "pi_email_addr": "Peter.Cholak.1@nd.edu",
   "nsf_id": "000275141",
   "pi_start_date": "2019-05-14",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Notre Dame",
  "inst_street_address": "940 GRACE HALL",
  "inst_street_address_2": "",
  "inst_city_name": "NOTRE DAME",
  "inst_state_code": "IN",
  "inst_state_name": "Indiana",
  "inst_phone_num": "5746317432",
  "inst_zip_code": "465565708",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "IN02",
  "org_lgl_bus_name": "UNIVERSITY OF NOTRE DAME DU LAC",
  "org_prnt_uei_num": "FPU6XGFXMBE9",
  "org_uei_num": "FPU6XGFXMBE9"
 },
 "perf_inst": {
  "perf_inst_name": "University of Notre Dame",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "IN",
  "perf_st_name": "Indiana",
  "perf_zip_code": "465565708",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "IN02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "126800",
   "pgm_ele_name": "FOUNDATIONS"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1616",
   "pgm_ref_txt": "FOCUSED RESEARCH GROUPS IN MATH SCIENCES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 271989.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-33fcb658-7fff-a650-52bf-aa586749320f\">\n<p dir=\"ltr\"><span>One might consider Computability Theory as the study of sets which are computable or accepted by a Turing machine. In reality, it is the study of the sets which cannot be accepted by a Turing machine and comparing these sets in a number of ways.&nbsp; The most well known non computable set is the halting set, 0&rsquo;, or the jump. The most straightforward way to compare two sets is via Turing reducibility. We say a set of naturals A is Turing reducible to another set B if there is a Turing machine which can compute A using B as an oracle. Much of Cholak&rsquo;s recent work supported by this grant has been exploring the dividing line between whether a given set computes the halting set or not.&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>Cholak works within mathematics (mostly countable combinatorics and other areas of mathematical logic) with an eye towards understanding the computational power of sets which arise as solutions to various problems.&nbsp; As a classic example, consider Ramsey&rsquo;s Theorem.&nbsp; Here, we are given a coloring (an instance of a problem) and asked to find a homogenous set (a solution to this instance). &nbsp; For coloring of triples, by a result by Jockusch (1972), there is a coloring where all of the homogenous sets must compute the halting set.&nbsp; By a result of Seetapun (1996), for all colorings of pairs, there is a homogeneous set which avoids computing the halting set. By a result of Cholak, Jockusch and Slaman (2001), for pairs we can find a homogeneous set H whose double jump, H&rsquo;&rsquo;, is as low as possible.&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>Cholak&rsquo;s recent work supported by this grant continues this trend. In the work on Milliken&rsquo;s Tree Theorem, Thin Set Theorem, and the Rado Path Decomposition, we are given an instance of a problem, here a coloring, and want to understand the computational power of the possible solutions. While the solutions to these problems are different, they all share the same motivating questions:&nbsp; is there an instance where all the solutions code the halting set? Or, for every instance can we find a solution which avoids computing the halting set?&nbsp; And, in the latter case, how complex are the solutions? More precisely, what can be computed from these solutions?&nbsp;&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>Cholak also enjoys doing computability-theoretic constructions.&nbsp; For example, within the r.e. sets, n-REA sets, or the omega-REA sets.&nbsp; These constructions help us understand the limits of what is possible effectively. Anything that can happen with computable objects occurs in some fashion in these computability-theoretic constructions.&nbsp; One of the papers published under FRG support in this area.&nbsp;</span></p>\n<br />\n<p dir=\"ltr\"><span>Even though today's Computability Theory and Cholak focus on non computable sets, Turing and his model of computation, the Turing machine, guided the evolution of the modern computer. It is useful to take our knowledge of computation and reflect on what is currently occurring with modern computation.&nbsp; Hence, Cholak&rsquo;s projects on transformers, logics, and regular languages. Two of the papers published with FRG support are in this area.&nbsp;</span></p>\n</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/06/2023<br>\n\t\t\t\t\tModified by: Peter&nbsp;A&nbsp;Cholak</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nOne might consider Computability Theory as the study of sets which are computable or accepted by a Turing machine. In reality, it is the study of the sets which cannot be accepted by a Turing machine and comparing these sets in a number of ways.  The most well known non computable set is the halting set, 0\u2019, or the jump. The most straightforward way to compare two sets is via Turing reducibility. We say a set of naturals A is Turing reducible to another set B if there is a Turing machine which can compute A using B as an oracle. Much of Cholak\u2019s recent work supported by this grant has been exploring the dividing line between whether a given set computes the halting set or not. \n\n\nCholak works within mathematics (mostly countable combinatorics and other areas of mathematical logic) with an eye towards understanding the computational power of sets which arise as solutions to various problems.  As a classic example, consider Ramsey\u2019s Theorem.  Here, we are given a coloring (an instance of a problem) and asked to find a homogenous set (a solution to this instance).   For coloring of triples, by a result by Jockusch (1972), there is a coloring where all of the homogenous sets must compute the halting set.  By a result of Seetapun (1996), for all colorings of pairs, there is a homogeneous set which avoids computing the halting set. By a result of Cholak, Jockusch and Slaman (2001), for pairs we can find a homogeneous set H whose double jump, H\u2019\u2019, is as low as possible. \n\n\nCholak\u2019s recent work supported by this grant continues this trend. In the work on Milliken\u2019s Tree Theorem, Thin Set Theorem, and the Rado Path Decomposition, we are given an instance of a problem, here a coloring, and want to understand the computational power of the possible solutions. While the solutions to these problems are different, they all share the same motivating questions:  is there an instance where all the solutions code the halting set? Or, for every instance can we find a solution which avoids computing the halting set?  And, in the latter case, how complex are the solutions? More precisely, what can be computed from these solutions?  \n\n\nCholak also enjoys doing computability-theoretic constructions.  For example, within the r.e. sets, n-REA sets, or the omega-REA sets.  These constructions help us understand the limits of what is possible effectively. Anything that can happen with computable objects occurs in some fashion in these computability-theoretic constructions.  One of the papers published under FRG support in this area. \n\n\nEven though today's Computability Theory and Cholak focus on non computable sets, Turing and his model of computation, the Turing machine, guided the evolution of the modern computer. It is useful to take our knowledge of computation and reflect on what is currently occurring with modern computation.  Hence, Cholak\u2019s projects on transformers, logics, and regular languages. Two of the papers published with FRG support are in this area. \n\n\n \n\n\t\t\t\t\tLast Modified: 07/06/2023\n\n\t\t\t\t\tSubmitted by: Peter A Cholak"
 }
}