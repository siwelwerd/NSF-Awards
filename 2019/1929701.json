{
 "awd_id": "1929701",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: TTP: Medium: Collaborative: Deployment-quality and Accessible Solutions for Cryptography Code Development",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925147",
 "po_email": "dmassey@nsf.gov",
 "po_sign_block_name": "Daniel F. Massey",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2024-08-31",
 "tot_intn_awd_amt": 700000.0,
 "awd_amount": 700000.0,
 "awd_min_amd_letter_date": "2019-09-01",
 "awd_max_amd_letter_date": "2019-09-01",
 "awd_abstract_narration": "Vulnerabilities in cryptographic implementations seriously reduce the security guarantees of algorithms in practice and lead to attacks. An effective fix to the vulnerable code problem is automatic code checking. However, existing code verification tools cannot adequately cover cryptographic properties due to deficiencies in both accuracy, in terms of missed detection and false alarms, and scalability, in terms of complexity and runtime. The technology in this transition-to-practice project is to help secure cryptographic implementations, which are the foundation of many advanced systems. By making relevant research solutions deployment-grade, this effort can substantially improve the cryptographic coding practice and benefit software developers in all professions. \r\n\r\nThe project's objective is to transition multiple secure cryptographic coding research solutions to practice and make it convenient and accessible to automatically screen programs against a wide range of cryptographic implementation vulnerabilities or misuses. The main technical enabler is a high precision and high throughput approach based on specialized program analysis techniques called CryptoGuard. CryptoGuard can detect a wide range of cryptographic misuses with ultra-low false alarm rates when used on complex and large-scale Java programs. The project leverages multiple popular software development and software security platforms, including the Software Assurance Marketplace, to make these tools effective in production environments. The systematic benchmark and measurement work is designed to advance the science of security and substantially raises the standard and quality of cryptographic code screening.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Danfeng",
   "pi_last_name": "Yao",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Danfeng Yao",
   "pi_email_addr": "danfeng@cs.vt.edu",
   "nsf_id": "000197002",
   "pi_start_date": "2019-09-01",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Na",
   "pi_last_name": "Meng",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Na Meng",
   "pi_email_addr": "nm8247@cs.vt.edu",
   "nsf_id": "000702964",
   "pi_start_date": "2019-09-01",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Virginia Polytechnic Institute and State University",
  "inst_street_address": "300 TURNER ST NW",
  "inst_street_address_2": "STE 4200",
  "inst_city_name": "BLACKSBURG",
  "inst_state_code": "VA",
  "inst_state_name": "Virginia",
  "inst_phone_num": "5402315281",
  "inst_zip_code": "240603359",
  "inst_country_name": "United States",
  "cong_dist_code": "09",
  "st_cong_dist_code": "VA09",
  "org_lgl_bus_name": "VIRGINIA POLYTECHNIC INSTITUTE & STATE UNIVERSITY",
  "org_prnt_uei_num": "X6KEFGLHSJX7",
  "org_uei_num": "QDE5UHE5XD16"
 },
 "perf_inst": {
  "perf_inst_name": "Virginia Tech",
  "perf_str_addr": "2202 Kraft Dr., KWII",
  "perf_city_name": "Blacksburg",
  "perf_st_code": "VA",
  "perf_st_name": "Virginia",
  "perf_zip_code": "240600001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "09",
  "perf_st_cong_dist": "VA09",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 700000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-aa0fd393-7fff-a3a8-d721-2f80f71c64aa\">\r\n<p dir=\"ltr\"><span>Cryptographic code is the foundation of many advanced systems. However, vulnerabilities in cryptographic implementations reduce the security guarantees and lead to attacks. An effective countermeasure to the vulnerable code problem is automatic code screening. Code screening tools need to cover various cryptographic properties adequately. More importantly, their design needs to satisfy several requirements for real-world deployment. Specifically, the screening operation needs to be accurate and fast. Accuracy is in terms of missed detection and false alarm rates. Fast detection means code analysis needs to handle large software codebases efficiently.</span></p>\r\n<p dir=\"ltr\"><span>This transition-to-practice project aims to develop deployable technologies to secure cryptographic code. By making relevant research solutions deployment-grade, this effort can substantially improve the cryptographic coding practice and benefit software developers in all professions.</span></p>\r\n<p dir=\"ltr\"><span>Our team has made substantial advancements on multiple fronts, including new program analysis techniques specialized for cryptographic properties, machine learning methods for code suggestion, industrial integration, benchmark development, performance comparison of leading commercial and academic solutions, and outreach to practitioners. Specifically, we open-sourced CryptoGuard, our high precision and high throughput tool for detecting Java cryptographic misuses. CryptoGuard can detect a wide range of Java cryptographic misuses with ultra-low false alarm rates. Our detection approach was successfully integrated by Oracle Labs into their code screening framework and used to harden codebases in production environments. We generalized our detection approach to other scenarios, including Python programming language. We designed detection methods to recognize Python-specific language features. We also invented new machine learning methods for automatically suggesting cryptographic code. In addition, we created multiple benchmarks (i.e., sets of test cases), first-of-its-kind for testing cryptographic code screening solutions. Our benchmarks help advance the science of security and substantially raise the standard and quality of cryptographic code screening. Throughout the project, our team also actively disseminated the principles and practice of secure coding to practitioners in the field.</span></p>\r\n<div><span><br /></span></div>\r\n</span></p>\r\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 01/06/2025<br>\nModified by: Danfeng&nbsp;Yao</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n\r\n\n\nCryptographic code is the foundation of many advanced systems. However, vulnerabilities in cryptographic implementations reduce the security guarantees and lead to attacks. An effective countermeasure to the vulnerable code problem is automatic code screening. Code screening tools need to cover various cryptographic properties adequately. More importantly, their design needs to satisfy several requirements for real-world deployment. Specifically, the screening operation needs to be accurate and fast. Accuracy is in terms of missed detection and false alarm rates. Fast detection means code analysis needs to handle large software codebases efficiently.\r\n\n\nThis transition-to-practice project aims to develop deployable technologies to secure cryptographic code. By making relevant research solutions deployment-grade, this effort can substantially improve the cryptographic coding practice and benefit software developers in all professions.\r\n\n\nOur team has made substantial advancements on multiple fronts, including new program analysis techniques specialized for cryptographic properties, machine learning methods for code suggestion, industrial integration, benchmark development, performance comparison of leading commercial and academic solutions, and outreach to practitioners. Specifically, we open-sourced CryptoGuard, our high precision and high throughput tool for detecting Java cryptographic misuses. CryptoGuard can detect a wide range of Java cryptographic misuses with ultra-low false alarm rates. Our detection approach was successfully integrated by Oracle Labs into their code screening framework and used to harden codebases in production environments. We generalized our detection approach to other scenarios, including Python programming language. We designed detection methods to recognize Python-specific language features. We also invented new machine learning methods for automatically suggesting cryptographic code. In addition, we created multiple benchmarks (i.e., sets of test cases), first-of-its-kind for testing cryptographic code screening solutions. Our benchmarks help advance the science of security and substantially raise the standard and quality of cryptographic code screening. Throughout the project, our team also actively disseminated the principles and practice of secure coding to practitioners in the field.\r\n\n\r\n\r\n\n\n\t\t\t\t\tLast Modified: 01/06/2025\n\n\t\t\t\t\tSubmitted by: DanfengYao\n"
 }
}