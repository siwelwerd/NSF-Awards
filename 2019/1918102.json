{
 "awd_id": "1918102",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "FMitF: Collaborative Research: Track I: Embedding Constraint Reasoning in Machine Learning for Better Prediction and Decision-making",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032928074",
 "po_email": "jdonlon@nsf.gov",
 "po_sign_block_name": "James Donlon",
 "awd_eff_date": "2019-09-01",
 "awd_exp_date": "2024-08-31",
 "tot_intn_awd_amt": 343185.0,
 "awd_amount": 343185.0,
 "awd_min_amd_letter_date": "2019-06-03",
 "awd_max_amd_letter_date": "2019-06-03",
 "awd_abstract_narration": "The emergence of large-scale data-driven machine learning and optimization methods has led to successful applications in areas as diverse as finance, marketing, retail, and health care.  Yet, many application domains remain out of reach for these methods, when applied in isolation.  In the area of medical robotics, for example, it is crucial to develop systems that can recognize, guide, support, or correct surgical procedures. This is particularly important for next-generation trauma care systems that allow life-saving surgery to be performed remotely in the presence of unreliable bandwidth communications. For such systems, machine learning models have been developed that can recognize certain patterns, but they are unable to perform under complex physical or operational constraints. Using constraint-based optimization methods, on the other hand, would allow the generation of feasible surgical plans; but currently, there is no mechanism to represent and evaluate such knowledge under complex environments. To leverage the required capabilities for real-life applications, this project develops an integrated method that Embeds Constraint Reasoning in Machine Learning (ECOR-ML). The researchers intend to demonstrate the effectiveness of ECOR-ML in the context of medical robotics. Prior research indicates that the integration of constraint reasoning and machine learning is essential for the development of safe and efficient technologies in this domain. The project aims to advance both machine learning and constraint reasoning technology, and will promote the cross-fertilization of formal and applied research in the areas of machine learning, constraint learning, and robotics.\r\n\r\nThe approach in this project provides a scalable method for machine learning over structured domains. The core idea is to augment machine learning algorithms with a constraint reasoning module that represents physical and operational requirements. Specifically, this research proposes to embed decision diagrams, a popular constraint reasoning tool, as a fully-differentiable layer in deep neural networks.  By enforcing the constraints, the output of generative models can now provide assurances of safety, correctness, and/or fairness. Moreover, ECOR-ML possesses a smaller modeling space than traditional machine learning approaches, allowing machine learning algorithms to learn faster and generalize better.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Willem-Jan",
   "pi_last_name": "van Hoeve",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Willem-Jan van Hoeve",
   "pi_email_addr": "vanhoeve@andrew.cmu.edu",
   "nsf_id": "000568207",
   "pi_start_date": "2019-06-03",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "5000 Forbes Avenue",
  "perf_city_name": "Pittsburgh",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133890",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "094Y00",
   "pgm_ele_name": "FMitF: Formal Methods in the F"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "062Z",
   "pgm_ref_txt": "Harnessing the Data Revolution"
  },
  {
   "pgm_ref_code": "071Z",
   "pgm_ref_txt": "FMitF-Formal Methods in the Field"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 343185.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The emergence of large-scale data-driven machine learning and optimization methods has led to successful applications in areas as diverse as finance, marketing, operations, retail, and health care.&nbsp; This project has developed technology that combines constraint-based reasoning from optimization and pattern recognition from machine learning to enable decision support systems that learn from past data while respecting domain-specific requirements.</p>\r\n<p>The first focus area of this research is machine learning over structured domains.&nbsp; Specifically, we embed decision diagrams, a popular constraint reasoning tool, as a fully differentiable layer in deep neural networks. By enforcing the constraints, the output of generative models can now provide assurances of safety, correctness, and/or fairness. Moreover, the constraints induce a smaller modeling space than traditional machine learning approaches, allowing machine learning algorithms to learn faster and generalize better.&nbsp; Our research demonstrated that these benefits over application domains ranging from vehicle routing to computer program synthesis and automated code generation from natural language.</p>\r\n<p>The second area of focus applied decision diagrams for constrained sequential pattern mining.&nbsp; In this case, the decision diagram functions both as a database to store the patterns and as the constraint reasoning tool.&nbsp; We showed that our approach not only handles more constraint types than prior approaches but also scales to much larger data sets.&nbsp; This work has been made available as the Seq2Pat Python library, jointly developed with researchers from Fidelity&rsquo;s AI Lab, and is used by researchers and practitioners from science and industry.</p>\r\n<p>The third area of focus is the development of decision diagrams to represent not just constraints, but also the objective function of optimization problems.&nbsp; The first system we developed under this area is called Haddock, which automates the design and implementation of decision diagram-based propagation in constraint programming.&nbsp; It generalizes earlier work and demonstrates how this technology can be seamlessly integrated into existing constraint programming solvers.&nbsp; We also developed a stand-alone optimization solver based on decision diagrams, called CODD (Combinatorial Optimization with Decision Diagrams).&nbsp; It takes as input a dynamic programming model, defined as a labeled transition system, and automatically compiles relaxed and restricted decision diagrams to infer dual and primal bounds.&nbsp; CODD then executes an exact state-based branch-and-bound search to solve the problem optimally.</p>\r\n<p>The fourth area of focus is the integration of decision diagrams into mathematical programming solvers.&nbsp; Specifically, we use decision diagrams to represent sequential decisions (e.g., representing a truck route as a sequence of stops), from which a subset must be selected to satisfy problem constraints (e.g., each stop must be visited by a truck).&nbsp; To enforce the constraints, we define an arc flow formulation over the network defined by the decision diagram, which we solve using integer linear programming. &nbsp;We show that this approach can be particularly effective when starting from a small, relaxed decision diagram, which is iteratively refined to eliminate conflicts in the solution.&nbsp; Using this approach, called Column Elimination, we solved several open benchmark instances from domains including vehicle routing with time windows, pickup-and-delivery routing problems, and graph multi-coloring.&nbsp; Our column elimination technology has already been adopted by industry, including the commercial generic optimization solver Hexaly.</p><br>\n<p>\n Last Modified: 03/30/2025<br>\nModified by: Willem-Jan&nbsp;van Hoeve</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe emergence of large-scale data-driven machine learning and optimization methods has led to successful applications in areas as diverse as finance, marketing, operations, retail, and health care. This project has developed technology that combines constraint-based reasoning from optimization and pattern recognition from machine learning to enable decision support systems that learn from past data while respecting domain-specific requirements.\r\n\n\nThe first focus area of this research is machine learning over structured domains. Specifically, we embed decision diagrams, a popular constraint reasoning tool, as a fully differentiable layer in deep neural networks. By enforcing the constraints, the output of generative models can now provide assurances of safety, correctness, and/or fairness. Moreover, the constraints induce a smaller modeling space than traditional machine learning approaches, allowing machine learning algorithms to learn faster and generalize better. Our research demonstrated that these benefits over application domains ranging from vehicle routing to computer program synthesis and automated code generation from natural language.\r\n\n\nThe second area of focus applied decision diagrams for constrained sequential pattern mining. In this case, the decision diagram functions both as a database to store the patterns and as the constraint reasoning tool. We showed that our approach not only handles more constraint types than prior approaches but also scales to much larger data sets. This work has been made available as the Seq2Pat Python library, jointly developed with researchers from Fidelitys AI Lab, and is used by researchers and practitioners from science and industry.\r\n\n\nThe third area of focus is the development of decision diagrams to represent not just constraints, but also the objective function of optimization problems. The first system we developed under this area is called Haddock, which automates the design and implementation of decision diagram-based propagation in constraint programming. It generalizes earlier work and demonstrates how this technology can be seamlessly integrated into existing constraint programming solvers. We also developed a stand-alone optimization solver based on decision diagrams, called CODD (Combinatorial Optimization with Decision Diagrams). It takes as input a dynamic programming model, defined as a labeled transition system, and automatically compiles relaxed and restricted decision diagrams to infer dual and primal bounds. CODD then executes an exact state-based branch-and-bound search to solve the problem optimally.\r\n\n\nThe fourth area of focus is the integration of decision diagrams into mathematical programming solvers. Specifically, we use decision diagrams to represent sequential decisions (e.g., representing a truck route as a sequence of stops), from which a subset must be selected to satisfy problem constraints (e.g., each stop must be visited by a truck). To enforce the constraints, we define an arc flow formulation over the network defined by the decision diagram, which we solve using integer linear programming. We show that this approach can be particularly effective when starting from a small, relaxed decision diagram, which is iteratively refined to eliminate conflicts in the solution. Using this approach, called Column Elimination, we solved several open benchmark instances from domains including vehicle routing with time windows, pickup-and-delivery routing problems, and graph multi-coloring. Our column elimination technology has already been adopted by industry, including the commercial generic optimization solver Hexaly.\t\t\t\t\tLast Modified: 03/30/2025\n\n\t\t\t\t\tSubmitted by: Willem-Janvan Hoeve\n"
 }
}