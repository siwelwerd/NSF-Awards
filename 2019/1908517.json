{
 "awd_id": "1908517",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Small: Looking Under Rocks: A Search for a Provably Stronger TSP Relaxation",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "A. Funda Ergun",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2021-09-30",
 "tot_intn_awd_amt": 105587.0,
 "awd_amount": 105587.0,
 "awd_min_amd_letter_date": "2019-07-23",
 "awd_max_amd_letter_date": "2019-07-23",
 "awd_abstract_narration": "The traveling salesman problem is one of the most widely known problems of computational difficulty. The goal of the problem is to find the cheapest route for a salesman to visit a number of cities and return to home. It is not known whether there is a means of finding the best possible tour short of enumerating the exponentially large number of possible tours. Widely used algorithms for finding the best possible solution involve computing lower bounds on the length of the tour, and the closer the bound is to cost of the best possible tour, the quicker these algorithms run. This project will investigate alternative lower bounds for the traveling salesman problem to the ones widely used in practice, in the hopes of finding a provably better lower bound. A better understanding of lower bounds for the traveling salesman problem should help with solving other computationally difficult problems. The traveling salesman problem is one that is easy to explain to undergraduates and high school students. The PI and his graduate student plan to use their research as a means of outreach to such students, and to involve undergraduates in their project.\r\n\r\nCurrent methods for computing the optimal solution to the traveling salesman problem involve repeatedly solving a well-known linear programming relaxation of the problem. Although this bound is extremely good in practice (that is, it is very close to value of an optimal solution), its worst-case behavior is not well understood, despite decades of research. This project intends to study alternative lower bounds for the traveling salesman problem: it will start by studying semidefinite programming relaxations of the problem, and also consider other constraints that might be added to the linear program in order to be able to prove stronger statements about its worst-case behavior than are currently known.  In addition, the project will consider some variants of the traveling salesman problem that have not been as well-studied, including the circulant TSP; for this variant, we are not even sure if the problem is NP-hard or has a polynomial-time algorithm.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "David",
   "pi_last_name": "Williamson",
   "pi_mid_init": "P",
   "pi_sufx_name": "",
   "pi_full_name": "David P Williamson",
   "pi_email_addr": "davidpwilliamson@cornell.edu",
   "nsf_id": "000474139",
   "pi_start_date": "2019-07-23",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148502820",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 105587.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The traveling salesman problem is one of the most famous problems in all of computer science; given an input describing n cities and the cost of traveling between each pair of cities, the goal is to find the cheapest tour that visits each city exactly once and returns to its starting point.&nbsp; There is significant evidence that there is no efficient algorithm that can always find the cheapest tour for every input as the number of cities gets large.&nbsp; However, clever algorithmic engineering has produced codes for finding cheapest tours in many cases, even when the input has several thousands of cities.&nbsp; These codes rely on 'relaxations' that give good lower bounds on the cost of the cheapest tour and can be computed quickly.<br /><br />Our main work explored several new types of relaxations that were proposed in the mathematical programming literature involving a mathematical tool called semidefinite programming.&nbsp; In small experiments, these new relaxations looked quite promising; it appeared that they could sometimes find better lower bounds than the relaxations used by popular codes.&nbsp; However, our work has shown that in the worst-case these relaxations can give results that are significantly worse than the standard relaxations used by the codes; the bounds can be off by a factor that grows with the number of cities, n.&nbsp; So it would appear that these relaxations will not be as useful for codes as we had hoped.<br /><br />In other work, we looked at a special case of the traveling salesman problem called the 'circulant' traveling salesman problem, in which the cost of traveling between two cities numbered i and j depends just on the difference between the numbers i and j.&nbsp; We were able to give an exact characterization of what the standard relaxation does for such instances.&nbsp; In the case in which there are only two finite costs (for two distinct differences in the numbers of the cities), we can show that there is an efficient algorithm for the traveling salesman problem in this case.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/06/2021<br>\n\t\t\t\t\tModified by: David&nbsp;P&nbsp;Williamson</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe traveling salesman problem is one of the most famous problems in all of computer science; given an input describing n cities and the cost of traveling between each pair of cities, the goal is to find the cheapest tour that visits each city exactly once and returns to its starting point.  There is significant evidence that there is no efficient algorithm that can always find the cheapest tour for every input as the number of cities gets large.  However, clever algorithmic engineering has produced codes for finding cheapest tours in many cases, even when the input has several thousands of cities.  These codes rely on 'relaxations' that give good lower bounds on the cost of the cheapest tour and can be computed quickly.\n\nOur main work explored several new types of relaxations that were proposed in the mathematical programming literature involving a mathematical tool called semidefinite programming.  In small experiments, these new relaxations looked quite promising; it appeared that they could sometimes find better lower bounds than the relaxations used by popular codes.  However, our work has shown that in the worst-case these relaxations can give results that are significantly worse than the standard relaxations used by the codes; the bounds can be off by a factor that grows with the number of cities, n.  So it would appear that these relaxations will not be as useful for codes as we had hoped.\n\nIn other work, we looked at a special case of the traveling salesman problem called the 'circulant' traveling salesman problem, in which the cost of traveling between two cities numbered i and j depends just on the difference between the numbers i and j.  We were able to give an exact characterization of what the standard relaxation does for such instances.  In the case in which there are only two finite costs (for two distinct differences in the numbers of the cities), we can show that there is an efficient algorithm for the traveling salesman problem in this case.\n\n\t\t\t\t\tLast Modified: 12/06/2021\n\n\t\t\t\t\tSubmitted by: David P Williamson"
 }
}