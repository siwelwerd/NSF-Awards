{
 "awd_id": "1908488",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: The Compiler-Architecture Solution to the Data Dependent, Circuit-Level Critical-Paths Variations",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 499741.0,
 "awd_amount": 523741.0,
 "awd_min_amd_letter_date": "2019-06-13",
 "awd_max_amd_letter_date": "2020-06-02",
 "awd_abstract_narration": "Computing performance translates to opportunities for innovations, which positively impact our society. Systems have experienced a steady performance improvement in the past. Unfortunately, recent developments in the semiconductor industry have made this progress hard to maintain, which has slowed down innovations in science and engineering. System performance depends on the capabilities of the compiler used and the underlying computer architecture. Usually, a compiler can control system activities at the instruction granularity while the underlying architecture hides finer-grained information. The compiler's inability to access fine-grained information, however, limits the overall performance obtainable in future systems. The project's novelty is a new compiler and computer architecture co-design where the latter enables the former to control activities at a much finer granularity compared to what has been explored before. This allows the underlying computer architecture to automatically boost the overall system performance as well as to save energy. The project's impact is to enable programmers to automatically make better use of the commodity processors. With processor performance increased, society will benefit from increased productivity and innovation in all areas involving computation.  \r\n\r\nRecent developments in computer architecture have generated tremendous advances in single-chip core count as well as remarkable performance benefits brought by accelerators. However, Amdahl's Law reminds us that single-thread execution will always be the limiting factor for system performance -- a dire warning considering that the processor industry has fallen well short of the decades old sequential code performance growth trend. The team of researchers found that an important performance roadblock is in the sub-cycle domain where the circuit-level critical path latency depends on the data computed. This project designs a new compiler co-designed with the underlying architecture to access and control data-dependent, circuit-level critical path latencies. The impact of this design is the elimination of sub-cycle performance inefficiencies across the computation stack for commodity processors widely used in the whole computing spectrum, ranging from mobile to high performance computing. Code, data, and results emanating from the project will be maintained publicly at the website: http://users.cs.northwestern.edu/~simonec/SCDVCA.html\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Simone",
   "pi_last_name": "Campanoni",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Simone Campanoni",
   "pi_email_addr": "simonec@eecs.northwestern.edu",
   "nsf_id": "000710339",
   "pi_start_date": "2019-06-13",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Russell",
   "pi_last_name": "Joseph",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Russell E Joseph",
   "pi_email_addr": "rjoseph@eecs.northwestern.edu",
   "nsf_id": "000478134",
   "pi_start_date": "2019-06-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Northwestern University",
  "inst_street_address": "633 CLARK ST",
  "inst_street_address_2": "",
  "inst_city_name": "EVANSTON",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "3125037955",
  "inst_zip_code": "602080001",
  "inst_country_name": "United States",
  "cong_dist_code": "09",
  "st_cong_dist_code": "IL09",
  "org_lgl_bus_name": "NORTHWESTERN UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "EXZVPWZBLUE8"
 },
 "perf_inst": {
  "perf_inst_name": "Northwestern University",
  "perf_str_addr": "2145 Sheridan Rd",
  "perf_city_name": "Evanston",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "602083113",
  "perf_ctry_code": "US",
  "perf_cong_dist": "09",
  "perf_st_cong_dist": "IL09",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7943",
   "pgm_ref_txt": "PROGRAMMING LANGUAGES"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 499741.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 24000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p class=\"p1\">The investigators explored compiler-architecture co-designs that aim to exploit data-dependent timing variation (DDTV).</p>\n<p class=\"p1\"><span class=\"s1\">The goal of the project was to boost single-threaded performance by reducing the circuit-level timing slack generated by the DDTV of commodity processors.</span></p>\n<p class=\"p2\"><span class=\"s1\">&nbsp;</span></p>\n<p class=\"p1\"><span class=\"s1\">This project demonstrated how to extend existing compilers as well as energy-efficient, in-order commodity processors to translate circuit-level timing slack into energy efficiency.</span></p>\n<p class=\"p1\"><span class=\"s1\">This is obtained by the investigators by designing, implementing, and evaluating<span>&nbsp;</span></span></p>\n<p class=\"p2\"><span class=\"s1\">&nbsp;</span></p>\n<p class=\"p1\"><span class=\"s1\">1- new instruction selection techniques for the DDTV problem, and</span></p>\n<p class=\"p2\"><span class=\"s1\">&nbsp;</span></p>\n<p class=\"p1\"><span class=\"s1\">2- new register allocation techniques for the DDTV problem, and</span></p>\n<p class=\"p2\"><span class=\"s1\">&nbsp;</span></p>\n<p class=\"p1\"><span class=\"s1\">3- new code scheduling techniques for the DDTV problem, and</span></p>\n<p class=\"p2\"><span class=\"s1\">&nbsp;</span></p>\n<p class=\"p1\"><span class=\"s1\">4- new instruction set extensions to permit speculative operations to circumvent the DDTV problem.</span></p>\n<p class=\"p2\"><span class=\"s1\">&nbsp;</span></p>\n<p class=\"p1\"><span class=\"s1\">The result is significant energy efficiency with only relatively minor changes to the architecture of existing in-order processors.</span></p>\n<p class=\"p1\"><span class=\"s1\">To obtain this result, the compilers we designed have different algorithms compared to those included in conventional compilers (e.g., LLVM-based compilers, gcc) for code scheduling, instruction selection, and register allocation.</span></p>\n<p class=\"p1\"><span class=\"s1\">The new algorithms we introduced are needed to be able to fit more variables within a single architecture register.</span></p>\n<p class=\"p1\"><span class=\"s1\">This ability allowed us to overcome the limiting factor of the DDTV problem.</span></p>\n<p class=\"p1\"><span class=\"s1\">Finally, the architecture needs to support speculations on the timing constraints of the core pipeline.</span></p><br>\n<p>\n Last Modified: 02/06/2024<br>\nModified by: Simone&nbsp;Campanoni</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe investigators explored compiler-architecture co-designs that aim to exploit data-dependent timing variation (DDTV).\n\n\nThe goal of the project was to boost single-threaded performance by reducing the circuit-level timing slack generated by the DDTV of commodity processors.\n\n\n\n\n\nThis project demonstrated how to extend existing compilers as well as energy-efficient, in-order commodity processors to translate circuit-level timing slack into energy efficiency.\n\n\nThis is obtained by the investigators by designing, implementing, and evaluating\n\n\n\n\n\n1- new instruction selection techniques for the DDTV problem, and\n\n\n\n\n\n2- new register allocation techniques for the DDTV problem, and\n\n\n\n\n\n3- new code scheduling techniques for the DDTV problem, and\n\n\n\n\n\n4- new instruction set extensions to permit speculative operations to circumvent the DDTV problem.\n\n\n\n\n\nThe result is significant energy efficiency with only relatively minor changes to the architecture of existing in-order processors.\n\n\nTo obtain this result, the compilers we designed have different algorithms compared to those included in conventional compilers (e.g., LLVM-based compilers, gcc) for code scheduling, instruction selection, and register allocation.\n\n\nThe new algorithms we introduced are needed to be able to fit more variables within a single architecture register.\n\n\nThis ability allowed us to overcome the limiting factor of the DDTV problem.\n\n\nFinally, the architecture needs to support speculations on the timing constraints of the core pipeline.\t\t\t\t\tLast Modified: 02/06/2024\n\n\t\t\t\t\tSubmitted by: SimoneCampanoni\n"
 }
}