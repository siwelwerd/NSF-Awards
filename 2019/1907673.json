{
 "awd_id": "1907673",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF:Small: Algorithmic Management of Heterogeneous Resources",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922095",
 "po_email": "kwimmer@nsf.gov",
 "po_sign_block_name": "Karl Wimmer",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2024-09-30",
 "tot_intn_awd_amt": 239352.0,
 "awd_amount": 239352.0,
 "awd_min_amd_letter_date": "2019-07-01",
 "awd_max_amd_letter_date": "2019-07-01",
 "awd_abstract_narration": "Energy arguably ascended over time as the dominant computational resource circa 2000, when standard information technologies could no longer cope with the consequences of Moore's law, which states that the density of computational units doubles every couple of years. Thus the community is about a decade or two into an information-technology revolution in which a wide range of technologies are being redesigned with energy as a first-class design constraint.  Over the last several decades, when time and space were the dominant computational resources, computer-science researchers developed many techniques for designing algorithms that made efficient use of these resources, and for analyzing the time and space required by particular algorithms on simple models of a computer. These techniques are commonly taught in algorithms and theory/complexity classes that are required for computer scientists. The ability to reason abstractly about time and space in simple computational models is undoubtedly a valuable skill for computer scientists and software engineers, and many of the most successful computing companies are famous for job interviews that tests these reasoning skills. The PI's long term goal is to build a body of knowledge related to algorithm design and analysis techniques for problems related to managing heterogeneous resources, and managing energy as a computational resource. The PI expects that this body of knowledge will eventually be taught to future software engineers, and will serve these software engineers, when faced with problems in which power/energy/temperature is the key scarce resource, just as the current algorithmic theory of time as a computation resource now serves them.  \r\n\r\nOne of the most common mechanisms for achieving energy efficiency is building a system with heterogeneous devices with different energy/performance characteristics. For a given area and power budget, heterogeneous designs often give significantly better performance, for a given energy/hardware budget, for standard workloads than homogeneous designs.  The PI will address algorithmic problems related to managing heterogeneous resources in several technologies arising from this information-technology revolution. Briefly, these problems are online convex optimization with applications to energy-efficient load balancing of data centers, energy-efficient routing in a network, designing combinatorial circuits that optimally trade-off energy efficiency and reliability, determining the complexity of finding schedules that optimally trade-off energy and performance, and analyzing scheduling algorithms on a heterogeneous multiprocessor.  Managing heterogeneous resources is algorithmically significantly more challenging than managing heterogeneous resources, and many existing algorithmic techniques are not sufficient for handling these algorithmic problems. This project aims to invent new algorithmic techniques for solving these problems.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Kirk",
   "pi_last_name": "Pruhs",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Kirk Pruhs",
   "pi_email_addr": "kirk@cs.pitt.edu",
   "nsf_id": "000388694",
   "pi_start_date": "2019-07-01",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Pittsburgh",
  "inst_street_address": "4200 FIFTH AVENUE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4126247400",
  "inst_zip_code": "152600001",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "UNIVERSITY OF PITTSBURGH - OF THE COMMONWEALTH SYSTEM OF HIGHER EDUCATION",
  "org_prnt_uei_num": "",
  "org_uei_num": "MKAGLD59JRL1"
 },
 "perf_inst": {
  "perf_inst_name": "Universtity of Pittsburgh",
  "perf_str_addr": "123 University Place",
  "perf_city_name": "Pittsburgh",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152132303",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 239352.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><br />Energy arguably ascended over time as the dominant computational resource circa 2000, when information technologies could no longer handle the exponentiality of Moore's law.&nbsp; Since then a wide range of information technologies were&nbsp; redesigned with energy as a first class design constraint.&nbsp; One of the most common mechanisms for achieving energy efficiency is building a system with heterogeneous devices with different energy/performance characteristics.&nbsp; For a given area and power budget, heterogeneous designs often give significantly better performance, for a given energy/hardware budget,&nbsp; for standard workloads than homogeneous designs.&nbsp; Thus the goal of the project was to address algorithmic problems related to managing heterogeneous resources in several technologies arising from this information technology revolution. <br /><br /><br />Intellectual Merits: As part of this project the PI design and analyzed various algorithm for various natural algorithmic problems related to managing&nbsp; heterogeneous resources.&nbsp; Two examples follow.<br /><br />In the first example, the PI considered a setting where selfish agents want to schedule jobs on machines with various speeds. The agent submitting a job picks a server that minimizes a linear combination of the server price and the resulting response time for that job on the selected server. The manager's task is to maintain server prices to (approximately) optimize the maximum response time, which is a measure of social good. The PI showed that the existence of a pricing scheme with certain competitiveness is equivalent to the existence of a monotone immediate-dispatch algorithm. The&nbsp; main result was then a monotone immediate-dispatch algorithm with bounded relative error.<br /><br />In the second example, the PI considered a wide range of problems related to establishing virtual circuit connections in a network with components that have various energy related properties.&nbsp; In this setting, there is a network of routers that are speed scalable and that may be shut down when idle. The PI assumed the standard model for power: the power consumed by a router with load (speed) is , where is the static power and the exponent. The PI obtain the first&nbsp; algorithm for this problem with a reasonable guarantee on the relative error.&nbsp; The PI&nbsp; use a variety of techniques, including single-sink confluent flows, low-load set cover, random sampling, and cut-sparsification. We also develop new techniques for clustering multicommodity demands into (nearly) node-disjoint clusters, which may be of independent interest. <br /><br />The PI wrote a survey on green computing algorithmics for a special 10,000 edition of Lecture Notes on Computer Science devoted to Computing and Software Science. The goal of the survey was to educate the wider computer field of the algorithmic issues that arise when managing energy as a computational resource, and some of the common algorithmic techniques that are useful in this regard. <br /><br /><br />Broader Impacts: Over the last several decades, when time and space were the dominant computational resources, computer science researchers developed many techniques for designing time and space efficient algorithms, and for analyzing the time and space required by particular algorithms on simple models of a computer.&nbsp; These techniques are commonly taught in algorithms and theory/complexity classes that are required for computer scientists.&nbsp; The ability to reason abstractly about time and space in simple computational models is undoubtedly a valuable skill for computer scientists and software engineers.&nbsp; The project helped build a body of knowledge related algorithm design and analysis techniques for problems related to managing heterogeneous resources, and managing energy as a computational resource.&nbsp; The PI expects that this body of knowledge will eventually be taught to future software engineers, and will serve these software engineers, when faced with problems in which power/energy/temperature is the key scarce resource, just as the current algorithmic theory of time as a computation resource now serves them.&nbsp; The project supported two Ph.D. students, and three undergraduate students who went on to join Ph.D. programs. <br /><br /><br /><br /><br /><br /></p><br>\n<p>\n Last Modified: 10/21/2024<br>\nModified by: Kirk&nbsp;Pruhs</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n\nEnergy arguably ascended over time as the dominant computational resource circa 2000, when information technologies could no longer handle the exponentiality of Moore's law. Since then a wide range of information technologies were redesigned with energy as a first class design constraint. One of the most common mechanisms for achieving energy efficiency is building a system with heterogeneous devices with different energy/performance characteristics. For a given area and power budget, heterogeneous designs often give significantly better performance, for a given energy/hardware budget, for standard workloads than homogeneous designs. Thus the goal of the project was to address algorithmic problems related to managing heterogeneous resources in several technologies arising from this information technology revolution. \n\n\nIntellectual Merits: As part of this project the PI design and analyzed various algorithm for various natural algorithmic problems related to managing heterogeneous resources. Two examples follow.\n\nIn the first example, the PI considered a setting where selfish agents want to schedule jobs on machines with various speeds. The agent submitting a job picks a server that minimizes a linear combination of the server price and the resulting response time for that job on the selected server. The manager's task is to maintain server prices to (approximately) optimize the maximum response time, which is a measure of social good. The PI showed that the existence of a pricing scheme with certain competitiveness is equivalent to the existence of a monotone immediate-dispatch algorithm. The main result was then a monotone immediate-dispatch algorithm with bounded relative error.\n\nIn the second example, the PI considered a wide range of problems related to establishing virtual circuit connections in a network with components that have various energy related properties. In this setting, there is a network of routers that are speed scalable and that may be shut down when idle. The PI assumed the standard model for power: the power consumed by a router with load (speed) is , where is the static power and the exponent. The PI obtain the first algorithm for this problem with a reasonable guarantee on the relative error. The PI use a variety of techniques, including single-sink confluent flows, low-load set cover, random sampling, and cut-sparsification. We also develop new techniques for clustering multicommodity demands into (nearly) node-disjoint clusters, which may be of independent interest. \n\nThe PI wrote a survey on green computing algorithmics for a special 10,000 edition of Lecture Notes on Computer Science devoted to Computing and Software Science. The goal of the survey was to educate the wider computer field of the algorithmic issues that arise when managing energy as a computational resource, and some of the common algorithmic techniques that are useful in this regard. \n\n\nBroader Impacts: Over the last several decades, when time and space were the dominant computational resources, computer science researchers developed many techniques for designing time and space efficient algorithms, and for analyzing the time and space required by particular algorithms on simple models of a computer. These techniques are commonly taught in algorithms and theory/complexity classes that are required for computer scientists. The ability to reason abstractly about time and space in simple computational models is undoubtedly a valuable skill for computer scientists and software engineers. The project helped build a body of knowledge related algorithm design and analysis techniques for problems related to managing heterogeneous resources, and managing energy as a computational resource. The PI expects that this body of knowledge will eventually be taught to future software engineers, and will serve these software engineers, when faced with problems in which power/energy/temperature is the key scarce resource, just as the current algorithmic theory of time as a computation resource now serves them. The project supported two Ph.D. students, and three undergraduate students who went on to join Ph.D. programs. \n\n\n\n\n\n\t\t\t\t\tLast Modified: 10/21/2024\n\n\t\t\t\t\tSubmitted by: KirkPruhs\n"
 }
}