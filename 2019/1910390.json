{
 "awd_id": "1910390",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CNS Core: Small: Scaling Coordination for Microservices with Pangaea",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 500000.0,
 "awd_min_amd_letter_date": "2019-08-09",
 "awd_max_amd_letter_date": "2021-09-13",
 "awd_abstract_narration": "An increasingly popular way to design applications is using an architecture that splits out the functionality of an application into many distinct micro-services. It remains challenging, however, to implement micro-services that store and update because building them requires solving many hard problems each time: providing fault tolerance, handling many concurrent operations, and scaling up the work they can do. This proposal aims to solve these hard problems in a way that can be reused across many micro-services that store and update state. It builds on an emerging design that uses a single machine, called a sequencer, to order operations to state. Compared to more traditional designs, sequencers provide better scaling of the work the micro-service does, but make providing fault tolerance and handling concurrency harder. This proposal seeks to address the shortcomings of sequencers by finding a general way to provide fault tolerance, tame concurrency, and provide even greater scaling.\r\n\r\nThe proposed work has the potential to improve the performance and decrease the development time of micro-service-based systems. Given the popularity of micro-service-based systems, this has the potential to improve many applications that are an integral part of modern life. The project plans include developing software prototypes and working with large Internet services to increase the likelihood of technology transfer. In addition, the research in the project will be conducted by graduate students and undergraduate students that will learn how micro-service-based systems work as well as how to build and improve them. Each of these skills is likely to be increasingly important in the future.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Wyatt",
   "pi_last_name": "Lloyd",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Wyatt Lloyd",
   "pi_email_addr": "wlloyd@princeton.edu",
   "nsf_id": "000679081",
   "pi_start_date": "2019-08-09",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Princeton University",
  "inst_street_address": "1 NASSAU HALL",
  "inst_street_address_2": "",
  "inst_city_name": "PRINCETON",
  "inst_state_code": "NJ",
  "inst_state_name": "New Jersey",
  "inst_phone_num": "6092583090",
  "inst_zip_code": "085442001",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "NJ12",
  "org_lgl_bus_name": "THE TRUSTEES OF PRINCETON UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "NJ1YPQXQG7U5"
 },
 "perf_inst": {
  "perf_inst_name": "Princeton University",
  "perf_str_addr": "87 Prospect Avenue",
  "perf_city_name": "Princeton",
  "perf_st_code": "NJ",
  "perf_st_name": "New Jersey",
  "perf_zip_code": "085442020",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "NJ12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 154517.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 158976.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 186507.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The design of large-scale systems has changed with a shift to the microservice architecture. The microservice architecture splits out the different functions of a system into distinct microservices that are each specialized to do one thing and communicate with each other over the network. What is new and challenging in the microservice architecture is enabling the development of many stateful services that can be iterated on and improved quickly. Developing many stateful services is challenging because each must individually deal with some of the hardest problems in distributed systems: fault tolerance, consistency, and scalability. The primary goal of this project was to bring this velocity of improvement to stateful microservices by making it easy to develop and iterate on them, while still providing fault tolerance, consistency, and scalability.&#8232;&#8232;<br /><br />The primary outcome of this project was the Mason system. Mason introduces a new abstraction, called the contiguous multi-sequence, that makes it much easier to build consistent stateful microservices. The design and implementation of the Mason system then makes stateful microservices developed with this abstraction scalable and fault tolerant. The scalability that Mason provides is particularly noteworthy. It provides scalability, i.e., number of operations per second the microservice can handle, that is at least an order-of-magnitude beyond what is possible with traditional designs.<br /><br /><br /></p><br>\n<p>\n Last Modified: 02/20/2024<br>\nModified by: Wyatt&nbsp;Lloyd</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe design of large-scale systems has changed with a shift to the microservice architecture. The microservice architecture splits out the different functions of a system into distinct microservices that are each specialized to do one thing and communicate with each other over the network. What is new and challenging in the microservice architecture is enabling the development of many stateful services that can be iterated on and improved quickly. Developing many stateful services is challenging because each must individually deal with some of the hardest problems in distributed systems: fault tolerance, consistency, and scalability. The primary goal of this project was to bring this velocity of improvement to stateful microservices by making it easy to develop and iterate on them, while still providing fault tolerance, consistency, and scalability.&#8232;&#8232;\n\nThe primary outcome of this project was the Mason system. Mason introduces a new abstraction, called the contiguous multi-sequence, that makes it much easier to build consistent stateful microservices. The design and implementation of the Mason system then makes stateful microservices developed with this abstraction scalable and fault tolerant. The scalability that Mason provides is particularly noteworthy. It provides scalability, i.e., number of operations per second the microservice can handle, that is at least an order-of-magnitude beyond what is possible with traditional designs.\n\n\n\t\t\t\t\tLast Modified: 02/20/2024\n\n\t\t\t\t\tSubmitted by: WyattLloyd\n"
 }
}