{
 "awd_id": "1931425",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Elements: Can Empirical SE be Adapted to Computational Science?",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": "7032925147",
 "po_email": "dmassey@nsf.gov",
 "po_sign_block_name": "Daniel F. Massey",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2024-09-30",
 "tot_intn_awd_amt": 592129.0,
 "awd_amount": 592129.0,
 "awd_min_amd_letter_date": "2019-09-05",
 "awd_max_amd_letter_date": "2019-09-05",
 "awd_abstract_narration": "Today the computer is just as important a tool for chemists as the test tube.   For example, the 2013 Nobel Prize was awarded to chemists using computer models to explore very fast chemical reactions during photosynthesis. Other scientific areas where software is used intensively are astronomy, astrophysics, chemistry, weather prediction, economics, genomics, molecular biology, oceanography, physics, political science, and many other engineering fields. It is important to ensure the quality of these software-driven fields since its results    accelerate global innovations by improving quality and quantity of computational scientific studies. But many software developers in this area have not formally studied computer science or software engineering. This proposal will create SEnTRY, a workbench containing methods adapted from empirical software engineering, that would help bridge the skill gap via automatic agents by suggesting to developers when they should investigate or redo part of their code. \r\n\r\n\r\nSoftware is used intensively in scientific areas such as astronomy, astrophysics, chemistry, weather prediction, economics, genomics, molecular biology, oceanography, physics, political science, and many other engineering fields. It is important to ensure the quality of these software-driven fields since its results  accelerate global innovations by improving quality and quantity of computational scientific studies. But many software developers in this area have not formally studied computer science or software engineering. This proposal will create SEnTRY, a workbench containing methods adapted from empirical software engineering, that would help bridge the skill gap via automatic agents by suggesting to developers when they should investigate or redo part of their code. To achieve these goals, methods developed for traditional kinds of software must be extensively adapted for computational science. For example,  language models describing software defects must be created, especially for the  computational science community; test case prioritization algorithms must be re-tuned to appropriately prioritize   \"tests\" that are  really \"tests of scientific concepts\"; and  static code analysis warnings have to be re-engineered to manage the  kinds of software tools used within the computational science community. To that end, this project will apply data miners, hyperparameter optimizers and active learning to project data from the computational science community. When successful, SEnTRY will reduce the associated cost (time, money, etc.) required to handle many of the large and more tedious aspects of software development. This will free up more time of the computational scientists, and allow them to focus on core scientific issues. As an additional benefit, SEnTRY will also ensure the reproducibility and credibility of the computational science researches which, in turn, will naturally encourage more adoption of current work as well as adaptation and innovation in future work.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Timothy",
   "pi_last_name": "Menzies",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Timothy J Menzies",
   "pi_email_addr": "timm@ieee.org",
   "nsf_id": "000248284",
   "pi_start_date": "2019-09-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "North Carolina State University",
  "inst_street_address": "2601 WOLF VILLAGE WAY",
  "inst_street_address_2": "",
  "inst_city_name": "RALEIGH",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9195152444",
  "inst_zip_code": "276950001",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "NC02",
  "org_lgl_bus_name": "NORTH CAROLINA STATE UNIVERSITY",
  "org_prnt_uei_num": "U3NVH931QJJ3",
  "org_uei_num": "U3NVH931QJJ3"
 },
 "perf_inst": {
  "perf_inst_name": "North Carolina State University",
  "perf_str_addr": "Oval Drive",
  "perf_city_name": "Raleigh,",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "276958206",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "NC02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "077Z",
   "pgm_ref_txt": "CSSI-1: Cyberinfr for Sustained Scientif"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 592129.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-0d26eeb3-7fff-81a8-ff84-47d4792e3841\"> </span></p>\n<p style=\"text-align: center;\" dir=\"ltr\"><strong>Will your software&nbsp;</strong><strong>THRIVE&nbsp;&nbsp;</strong><strong>or DIE?</strong></p>\n<p>&nbsp;</p>\n<p><span id=\"docs-internal-guid-cad4f852-7fff-ca18-7e2b-526b105da705\"><span>Data mining can predict future health of open source software. Can it also find and fix projects in trouble?</span></span></p>\n<p><span id=\"docs-internal-guid-cad4f852-7fff-ca18-7e2b-526b105da705\"><span>We think yes. Like&nbsp;<span id=\"docs-internal-guid-92b1972f-7fff-7c3b-4711-3d50c2512788\"><span>&nbsp;many other&nbsp;</span><span>stochastic processes, t</span></span></span>he future state of software projects can be predicted (with small degrees of uncertainty)</span></p>\n<p><span id=\"docs-internal-guid-e77e501f-7fff-b4f8-e33a-38d8b8603a37\"> </span></p>\n<ul>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Gradient</span><span>-boost ensemble methods</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Contrast set learning</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Nystr&ouml;m </span><span>algorithms</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Hyper-parameter optimization</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Landscape</span><span> analysis</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Explanation algorithms (LIME)</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Generalization via </span><span>hierarchical</span><span> clustering</span></p>\n</li>\n</ul>\n<p>&nbsp;</p>\n<p><span id=\"docs-internal-guid-a9512348-7fff-05c1-f81f-cd9def490beb\"> </span></p>\n<p dir=\"ltr\"><span>Software deployed (v0.1)&nbsp;</span></p>\n<p><span id=\"docs-internal-guid-b738b788-7fff-1df2-b50f-6983c390e191\"> </span></p>\n<ul>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>As self-contained DOCKER containers</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Hosted at MolSSI (contact: Dr. Paul Saxe)</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>(But only trained on a few dozen, older projects. </span><span><br /></span><span>Need more. See below.)</span></p>\n</li>\n</ul>\n<p><span id=\"docs-internal-guid-a7a60f8a-7fff-398b-a7ef-e3b90a2a8de5\"> </span></p>\n<p dir=\"ltr\"><span>Implications for NSF Projects</span></p>\n<p>&nbsp;</p>\n<p><span id=\"docs-internal-guid-682a0cc9-7fff-4ecc-3e73-342ab12ab72a\"> </span></p>\n<ul>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Find generalizable conclusions across CSSI projects</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Predict how many&nbsp; CSSI projects will </span><span>fail</span><span> to thrive</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Find and fix projects in trouble</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\">Stop projects being&nbsp; forgotten by research community.&nbsp;</p>\n</li>\n</ul>\n<p><span id=\"docs-internal-guid-97908950-7fff-8a0d-517a-f7d4accadf57\"> </span></p>\n<p dir=\"ltr\"><span>Proposed next step: &ldquo;THRIVE&rdquo;</span></p>\n<p><span id=\"docs-internal-guid-33965d8d-7fff-a747-275e-485aa72e1ef9\"> </span></p>\n<ul>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Need new goal: How early, within a standard&nbsp; three year NSF project, can we </span><span>predict</span><span> if new software is destined to die, not thrive?</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>Need new software. </span><span>THRIVE</span><span> =</span></p>\n<ul>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>find current (and prior) examples of successful computational science </span><span>software</span><span> projects;&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>cluster and generalize&nbsp; those projects;&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>map&nbsp; new projects into what is </span><span>known</span><span> about those clusters;&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>offer a&nbsp; </span><span>scorecard</span><span> on that project, makes suggestions to improve those scores</span></p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>References:</strong></p>\n<p><span id=\"docs-internal-guid-a7a60f8a-7fff-398b-a7ef-e3b90a2a8de5\"> </span></p>\n<div><span><span id=\"docs-internal-guid-4e859967-7fff-fc96-123b-c7ae3fc6b720\"> \n<ul>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>IEEE TSE &rsquo;21</span><span> :</span><span> for OSS github projects, can predict future levels of activity.&nbsp; </span><span>10.1007/s10664-022-10171-0</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>ACM TOSEM &rsquo;21 </span><span>:</span><span> with landscape analysis and HPO,&nbsp; predictions can be remarkable accurate. </span><span>10.1145/3630252</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>IEEE TSE &rsquo;21 </span><span>:</span><span> can find plans to change (e.g.) future defect rates. </span><span>10.1109/TSE.2021.3062968</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>MSR &rsquo;22 :</span><span>&nbsp; 100s of projects can be hierarchically clustered to find a dozen (or less) exemplars for the rest </span><span>10.1145/3524842.3527934</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>ACM TOSEM &rsquo;23 :</span><span> models built from very early lifecycle data can be effective for years to&nbsp; come. </span><span>10.1145/3583565</span></p>\n</li>\n</ul>\n</span><br /></span></div>\n<p>&nbsp;</p>\n<p><span id=\"docs-internal-guid-a9512348-7fff-05c1-f81f-cd9def490beb\"> </span></p>\n<p dir=\"ltr\"><span><br /></span></p>\n<div><span><br /></span></div>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span><br /></span></p>\n<div><span><br /></span></div>\n<p>&nbsp;</p>\n<p><span id=\"docs-internal-guid-cad4f852-7fff-ca18-7e2b-526b105da705\"><span><br /></span></span></p><br>\n<p>\n Last Modified: 11/18/2024<br>\nModified by: Timothy&nbsp;J&nbsp;Menzies</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n \n\n\nWill your softwareTHRIVEor DIE?\n\n\n\n\n\nData mining can predict future health of open source software. Can it also find and fix projects in trouble?\n\n\nWe think yes. Likemany otherstochastic processes, the future state of software projects can be predicted (with small degrees of uncertainty)\n\n\n \n\n\n\n\nGradient-boost ensemble methods\n\n\n\n\nContrast set learning\n\n\n\n\nNystrm algorithms\n\n\n\n\nHyper-parameter optimization\n\n\n\n\nLandscape analysis\n\n\n\n\nExplanation algorithms (LIME)\n\n\n\n\nGeneralization via hierarchical clustering\n\n\n\n\n\n\n\n \n\n\nSoftware deployed (v0.1)\n\n\n \n\n\n\n\nAs self-contained DOCKER containers\n\n\n\n\nHosted at MolSSI (contact: Dr. Paul Saxe)\n\n\n\n\n(But only trained on a few dozen, older projects. \nNeed more. See below.)\n\n\n\n\n \n\n\nImplications for NSF Projects\n\n\n\n\n\n \n\n\n\n\nFind generalizable conclusions across CSSI projects\n\n\n\n\nPredict how many CSSI projects will fail to thrive\n\n\n\n\nFind and fix projects in trouble\n\n\n\n\nStop projects being forgotten by research community.\n\n\n\n\n \n\n\nProposed next step: THRIVE\n\n\n \n\n\n\n\nNeed new goal: How early, within a standard three year NSF project, can we predict if new software is destined to die, not thrive?\n\n\n\n\nNeed new software. THRIVE =\n\n\n\n\nfind current (and prior) examples of successful computational science software projects;\n\n\n\n\ncluster and generalize those projects;\n\n\n\n\nmap new projects into what is known about those clusters;\n\n\n\n\noffer a scorecard on that project, makes suggestions to improve those scores\n\n\n\n\n\n\nReferences:\n\n\n \n \n\n\n\n\nIEEE TSE 21 : for OSS github projects, can predict future levels of activity. 10.1007/s10664-022-10171-0\n\n\n\n\nACM TOSEM 21 : with landscape analysis and HPO, predictions can be remarkable accurate. 10.1145/3630252\n\n\n\n\nIEEE TSE 21 : can find plans to change (e.g.) future defect rates. 10.1109/TSE.2021.3062968\n\n\n\n\nMSR 22 : 100s of projects can be hierarchically clustered to find a dozen (or less) exemplars for the rest 10.1145/3524842.3527934\n\n\n\n\nACM TOSEM 23 : models built from very early lifecycle data can be effective for years to come. 10.1145/3583565\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tLast Modified: 11/18/2024\n\n\t\t\t\t\tSubmitted by: TimothyJMenzies\n"
 }
}