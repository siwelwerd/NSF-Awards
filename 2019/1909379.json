{
 "awd_id": "1909379",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "OAC Core: Small: Enabling High-fidelity Turbulent Reacting-Flow Simulations through Advanced Algorithms, Code Acceleration, and High-order Methods for Extreme-scale Computing",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": "7032922625",
 "po_email": "jjli@nsf.gov",
 "po_sign_block_name": "Juan Li",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 500000.0,
 "awd_min_amd_letter_date": "2019-06-10",
 "awd_max_amd_letter_date": "2019-06-10",
 "awd_abstract_narration": "Accurate numerical simulations of turbulent flows are of practical importance for several applications, including gas turbines and internal-combustion engines for power generation and transportation, the risk mitigation associate with reactor safety, and for scientific discovery of novel energy-conversion strategies. However, commonly employed software employ simplifications and exhibit deficiencies in accurately representing the underlying physical processes. The so-called discontinuous Galerkin (DG) methods have been identified as a promising alternative. These methods are characterized by utilizing a formulation that significantly improves fidelity. Other advantages are the flexibility in representation complex physical processes and the excellent performance on high-performance computing systems. While the potential of these DG-methods has been recognized, major roadblocks to adoption include the lack of suitable cyberinfrastructure (CI) methods and tools for scientific discovery and engineering analysis as well as the need for innovative programming techniques to enable scalable simulations on modern machines. This project addresses these research challenges and develops novel numerical methods and advanced programming paradigms for high-performance simulations of turbulent reacting flows. Integrated into this research are several education and outreach activities that address the need for training the next generation of interdisciplinary scientists and engineers. High-school students participate in several research activities, and a mentoring program is established that brings together students from engineering and computer science to work together on interdisciplinary research problems. This project, thus, serves the national interest, as stated by NSF's mission: to promote the progress of science and to secure the national defense.\r\n\r\nThe long runtime costs of simulating turbulent flows inhibit explorations and studies of realistic flames and the engineering analysis of complex combustion geometries. The approach to improving the quality and performance of turbulent flow simulations is to use high-order discontinuous Galerkin (DG) methods backed by high-performance algorithmic implementations suitable for execution on heterogeneous compute platforms. The work specifically uses task level parallelism coupled with load-balancing and adaptive techniques to achieve high throughput simulation capabilities on heterogeneous hardware. Research on advanced CI-ecosystems is conducted to develop task-based programming techniques for accelerating multi-physics flow simulations on heterogeneous computing systems. To this end, Legion is employed for the dynamic runtime mapping of compute-intense kernel functions to heterogeneous processors under consideration of computational load, data complexity, and heterogeneity of the computing system. Novel integration schemes and advanced adaptation techniques are developed to enable efficient simulations of turbulent reacting flows. These techniques are incorporated into a multi-physics DG-method that is made available to the research community as an open-source software platform for scientific discovery and engineering analysis. The close collaboration of graduate students with national laboratories and industrial partners facilitates an effective transition of the numerical methods and programming techniques that are developed in this project into other software environments.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Matthias",
   "pi_last_name": "Ihme",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Matthias Ihme",
   "pi_email_addr": "mihme@stanford.edu",
   "nsf_id": "000500463",
   "pi_start_date": "2019-06-10",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Alexander",
   "pi_last_name": "Aiken",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Alexander Aiken",
   "pi_email_addr": "aiken@cs.stanford.edu",
   "nsf_id": "000281933",
   "pi_start_date": "2019-06-10",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Stanford University",
  "inst_street_address": "450 JANE STANFORD WAY",
  "inst_street_address_2": "",
  "inst_city_name": "STANFORD",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "6507232300",
  "inst_zip_code": "943052004",
  "inst_country_name": "United States",
  "cong_dist_code": "16",
  "st_cong_dist_code": "CA16",
  "org_lgl_bus_name": "THE LELAND STANFORD JUNIOR UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "HJD6G4D6TJY5"
 },
 "perf_inst": {
  "perf_inst_name": "Stanford University",
  "perf_str_addr": "488 Escondido Mall",
  "perf_city_name": "Stanford",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "943053024",
  "perf_ctry_code": "US",
  "perf_cong_dist": "16",
  "perf_st_cong_dist": "CA16",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "090Y00",
   "pgm_ele_name": "OAC-Advanced Cyberinfrast Core"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "9179",
   "pgm_ref_txt": "GRADUATE INVOLVEMENT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 500000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Commonly employed computational methods for simulating turbulent reacting flows rely on low-order discretization schemes. However, these methods suffer poor convergence properties and require significant computational resources to achieve mesh convergence. High-order discontinuous Galerkin (DG) methods have been identified as a promising alternative. While the potential of these high-order methods has been recognized, major roadblocks to adoption include the lack of cyberinfrastructure (CI) for scientific discovery and engineering analysis as well as the need for innovative methods and programming techniques to enable scalable high-performance simulations on distributed machines with heterogeneous processors and complex memory hierarchies.<br />By addressing these advanced research CI-challenges, this research has contributed to the development of improved numerial methods that leverage high-order solution techniques and the creating of an open-source high-order DG methods to support education, training, and rapid prototyping. This solver was developing in python to emphasize code readability, modularly and easy of use. The code solves first- and second-order partial differential equations that describe compressible flows. Different time-stepping methods, quadrature rules, and equation set and examples have been established to familiarize user with thse advanced solution methods. More recently, this solver was also extended to multiphase flows, enabling the predictive of liquid-vapor systems, and phase transition processes.</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 01/09/2024<br>\nModified by: Matthias&nbsp;Ihme</p></div>\n<div class=\"porSideCol\"\n><div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImage\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls onePhoto\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation onePhoto\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2024/1909379/1909379_10609880_1704785477878_quailPresentation--rgov-214x142.jpeg\" original=\"/por/images/Reports/POR/2024/1909379/1909379_10609880_1704785477878_quailPresentation--rgov-800width.jpeg\" title=\"Quail: A Lightweight Open-source Discontinuous Galerkin Code for Teaching and Prototyping\"><img src=\"/por/images/Reports/POR/2024/1909379/1909379_10609880_1704785477878_quailPresentation--rgov-66x44.jpeg\" alt=\"Quail: A Lightweight Open-source Discontinuous Galerkin Code for Teaching and Prototyping\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Quail: A Lightweight Open-source Discontinuous Galerkin Code for Teaching and Prototyping</div>\n<div class=\"imageCredit\">Matthias Ihme</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Matthias&nbsp;Ihme\n<div class=\"imageTitle\">Quail: A Lightweight Open-source Discontinuous Galerkin Code for Teaching and Prototyping</div>\n</div>\n</li></ul>\n</div>\n</div></div>\n</div>\n",
  "por_txt_cntn": "\n\nCommonly employed computational methods for simulating turbulent reacting flows rely on low-order discretization schemes. However, these methods suffer poor convergence properties and require significant computational resources to achieve mesh convergence. High-order discontinuous Galerkin (DG) methods have been identified as a promising alternative. While the potential of these high-order methods has been recognized, major roadblocks to adoption include the lack of cyberinfrastructure (CI) for scientific discovery and engineering analysis as well as the need for innovative methods and programming techniques to enable scalable high-performance simulations on distributed machines with heterogeneous processors and complex memory hierarchies.\nBy addressing these advanced research CI-challenges, this research has contributed to the development of improved numerial methods that leverage high-order solution techniques and the creating of an open-source high-order DG methods to support education, training, and rapid prototyping. This solver was developing in python to emphasize code readability, modularly and easy of use. The code solves first- and second-order partial differential equations that describe compressible flows. Different time-stepping methods, quadrature rules, and equation set and examples have been established to familiarize user with thse advanced solution methods. More recently, this solver was also extended to multiphase flows, enabling the predictive of liquid-vapor systems, and phase transition processes.\n\n\n\t\t\t\t\tLast Modified: 01/09/2024\n\n\t\t\t\t\tSubmitted by: MatthiasIhme\n"
 }
}