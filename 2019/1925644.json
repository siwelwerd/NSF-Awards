{
 "awd_id": "1925644",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CCRI: ENS: Collaborative Research: Enhancing R for Scalability and Deployment",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2019-10-01",
 "awd_exp_date": "2024-09-30",
 "tot_intn_awd_amt": 1799705.0,
 "awd_amount": 1799705.0,
 "awd_min_amd_letter_date": "2019-09-12",
 "awd_max_amd_letter_date": "2023-05-11",
 "awd_abstract_narration": "Data analytics software systems are integral to the fabric of science. The ability to acquire, process, and analyze complex data is at the core of disciplines that range from high-energy physics, astronomy, chemistry, and biology. While scientists can exploit repositories of tools optimized and refined over the years, significant new challenges are posed by the rapidly evolving characteristics of modern scientific datasets. New analyzes rely on interactive computer programming languages that are open source and that allow rapid, interactive, data exploration. This project aims to strengthen and enhance the R software infrastructure. R is the language and environment with the largest collection of free and reusable data analytics software packages. This project will help R adapt to the evolving needs of researchers in diverse fields. The technical enhancements, embodied by new and updated software components, will open opportunities for researchers to contribute to the community infrastructure and enable a number of new research directions building on R as a platform. Lastly, this project's engagement and outreach plans address both outreach to user- and developer-communities and create a pipeline of future contributors.   \r\n\r\nThe proposed enhancements to the R infrastructure address four key needs and are enablers to research. In terms of scalability, the R environment needs support for both scaling up computation to support out-of-core data and scaling down computations with compact data formats. In terms of deployment, the R language needs to support multiple deployment formats. This project envisions addressing this need by supporting separate compilation of a subset of R to both native binaries and to WebAssembly where the former would have the benefit of performance and could be linked as a library, while the latter would benefit from the ubiquity of JavaScript, running in any browser. In terms of robustness, the R language needs tools to verify and validate native code. This project will extend existing checkers with a detailed understanding of R semantics and to automatically check for a variety of errors statically, and optionally insert run-time checks for cases which cannot be proved statically. In terms of community outreach, there is a need for a pipeline for training potential R developers. This project will create educational material and operate two yearly summer schools.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jan",
   "pi_last_name": "Vitek",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Jan Vitek",
   "pi_email_addr": "j.vitek@neu.edu",
   "nsf_id": "000290862",
   "pi_start_date": "2019-09-12",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Olga",
   "pi_last_name": "Vitek",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Olga Vitek",
   "pi_email_addr": "o.vitek@neu.edu",
   "nsf_id": "000513686",
   "pi_start_date": "2019-09-12",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Northeastern University",
  "inst_street_address": "360 HUNTINGTON AVE",
  "inst_street_address_2": "",
  "inst_city_name": "BOSTON",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6173735600",
  "inst_zip_code": "021155005",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "NORTHEASTERN UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "HLTMVS2JZBS6"
 },
 "perf_inst": {
  "perf_inst_name": "Northeastern University",
  "perf_str_addr": "360 Huntington Avenue",
  "perf_city_name": "Boston",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021155005",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "689200",
   "pgm_ele_name": "CI REUSE"
  },
  {
   "pgm_ele_code": "735900",
   "pgm_ele_name": "CCRI-CISE Cmnty Rsrch Infrstrc"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "7359",
   "pgm_ref_txt": "COMPUTING RES INFRASTRUCTURE"
  },
  {
   "pgm_ref_code": "8004",
   "pgm_ref_txt": "Software Institutes"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 1799705.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><br />The R programming language and environment is designed to facilitate statistical computing and data analysis. Since its inception in the mid-1990s, it has been widely adopted across various scientific fields. Despite its extensive use, R has begun to show signs of strain due to accumulating technical debt. Additionally, its core group of developers is aging, and, as an open-source project, no single industrial partner has been permitted to take over its maintenance.<br />This project achieved two main objectives. Scientifically, it expanded empirical knowledge on how dynamic languages are utilized and how they can be compiled into efficient code through a just-in-time (JIT) approach that speculates on future program behavior. The second objective was to fortify the software foundations of the R environment and simplify maintenance tasks for developers.<br />The project resulted in a series of published papers that conducted large-scale corpus analyses of thousands of R programs. These papers explored how features like laziness, dynamic code generation, and types are used in real-world scenarios, marking the first extensive investigation of a programming language at this scale. Additionally, the project led to the creation of open-source tools for querying vast code repositories like GitHub, which have since been utilized in related research endeavors.<br />Furthermore, the project produced a series of foundational papers on JIT compilation, including proofs of correctness for certain optimizations. These papers were the first to investigate speculative optimizations in modern JIT compilers and introduced innovative techniques such as *context dispatch* and *deoptless compilation*. Additional publications on compiler design and code reuse expanded the field&rsquo;s understanding of efficient compilation strategies.<br />On the maintenance front, the project contributed hundreds of accepted patches to the R environment and led to two significant developments. One was **Rcheck**, a tool built on Clang's compiler infrastructure to detect bugs in the C code of user packages. The project not only facilitated the creation of Rcheck but also convinced the R community to integrate it into their regular integration workflow. The second major contribution was **Rtools**, a toolchain for building R packages from source on Windows. This was particularly impactful as the Windows port of R was beginning to show signs of stress, making Rtools a vital asset for maintaining platform stability.</p><br>\n<p>\n Last Modified: 12/03/2024<br>\nModified by: Jan&nbsp;Vitek</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n\nThe R programming language and environment is designed to facilitate statistical computing and data analysis. Since its inception in the mid-1990s, it has been widely adopted across various scientific fields. Despite its extensive use, R has begun to show signs of strain due to accumulating technical debt. Additionally, its core group of developers is aging, and, as an open-source project, no single industrial partner has been permitted to take over its maintenance.\nThis project achieved two main objectives. Scientifically, it expanded empirical knowledge on how dynamic languages are utilized and how they can be compiled into efficient code through a just-in-time (JIT) approach that speculates on future program behavior. The second objective was to fortify the software foundations of the R environment and simplify maintenance tasks for developers.\nThe project resulted in a series of published papers that conducted large-scale corpus analyses of thousands of R programs. These papers explored how features like laziness, dynamic code generation, and types are used in real-world scenarios, marking the first extensive investigation of a programming language at this scale. Additionally, the project led to the creation of open-source tools for querying vast code repositories like GitHub, which have since been utilized in related research endeavors.\nFurthermore, the project produced a series of foundational papers on JIT compilation, including proofs of correctness for certain optimizations. These papers were the first to investigate speculative optimizations in modern JIT compilers and introduced innovative techniques such as *context dispatch* and *deoptless compilation*. Additional publications on compiler design and code reuse expanded the fields understanding of efficient compilation strategies.\nOn the maintenance front, the project contributed hundreds of accepted patches to the R environment and led to two significant developments. One was **Rcheck**, a tool built on Clang's compiler infrastructure to detect bugs in the C code of user packages. The project not only facilitated the creation of Rcheck but also convinced the R community to integrate it into their regular integration workflow. The second major contribution was **Rtools**, a toolchain for building R packages from source on Windows. This was particularly impactful as the Windows port of R was beginning to show signs of stress, making Rtools a vital asset for maintaining platform stability.\t\t\t\t\tLast Modified: 12/03/2024\n\n\t\t\t\t\tSubmitted by: JanVitek\n"
 }
}