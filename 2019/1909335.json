{
 "awd_id": "1909335",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "RI: Small: Collaborative Research: Minimum-Cost Strategies for Sequential Search and Evaluation",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032924768",
 "po_email": "jyang@nsf.gov",
 "po_sign_block_name": "Jie Yang",
 "awd_eff_date": "2019-08-01",
 "awd_exp_date": "2024-07-31",
 "tot_intn_awd_amt": 357511.0,
 "awd_amount": 365511.0,
 "awd_min_amd_letter_date": "2019-07-26",
 "awd_max_amd_letter_date": "2022-06-17",
 "awd_abstract_narration": "In many situations, tasks are performed sequentially.  For example, a robot searching a building for a hidden bomb will search room by room, in some order, until the bomb is found. An automated medical diagnosis procedure might first perform one medical test, observe its outcome, then perform another test, and so forth, until the diagnosis becomes clear. It is becoming increasingly important to improve the way intelligent systems operate in these types of situations.  This project will develop algorithms and software that systems can use to determine the order in which to perform tasks, so as to minimize costs incurred or time spent. Because the outcomes of tasks are often unknown until the tasks are performed, the algorithms will be designed to enable systems to quickly make dynamic decisions, based on new information obtained as tasks are performed.  In addition to the robot search and medical diagnosis applications described above, this project has applications to many other areas, including determining network connectivity, quality testing of manufactured products, and evaluating database queries. The project will provide research opportunities to graduate and talented undergraduate students, and the researchers will engage in outreach activities, both at the college and K-12 levels, to students in groups that are under-represented in computer science.\r\n\r\nThe project research will focus on fundamental sequential ordering problems for search and evaluation in two settings. In the first setting, uncertainty about outcomes is modeled by a known probability distribution, and the goal is to minimize expected cost for the distribution. In the second, outcomes are determined by an adversary. Here a robust solution is desired, which  minimizes expected cost in the worst case.  This is equivalent to regarding the problem as a zero-sum game. In either setting, the search environment could be a discrete set of locations or it could have a more complex network structure. The project will bring together approaches from algorithms, machine learning and game theory.  Central goals are as follows: (1) Developing intelligent and adaptable search and evaluation policies that have good theoretical guarantees and can be easily implemented and deployed in practice, (2) Developing algorithmic techniques that will constitute an algorithmic toolkit for researchers working on search and evaluation problems, and (3) Integrating insights and techniques from different areas to give unified approaches to solving broad classes of related problems.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Lisa",
   "pi_last_name": "Hellerstein",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Lisa Hellerstein",
   "pi_email_addr": "lisa.hellerstein@nyu.edu",
   "nsf_id": "000340245",
   "pi_start_date": "2019-07-26",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "New York University",
  "inst_street_address": "70 WASHINGTON SQ S",
  "inst_street_address_2": "",
  "inst_city_name": "NEW YORK",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "2129982121",
  "inst_zip_code": "100121019",
  "inst_country_name": "United States",
  "cong_dist_code": "10",
  "st_cong_dist_code": "NY10",
  "org_lgl_bus_name": "NEW YORK UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "NX9PXMKW5KW8"
 },
 "perf_inst": {
  "perf_inst_name": "NYU Tandon School of Engineering; Dept. of CSE",
  "perf_str_addr": "6 Metrotech Center",
  "perf_city_name": "Brooklyn",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "112013840",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "NY07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "749500",
   "pgm_ele_name": "Robust Intelligence"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7495",
   "pgm_ref_txt": "ROBUST INTELLIGENCE"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 357511.0
  },
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 8000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The project focused on algorithms for determining the order in which to perform a sequence of tests or probes, or to search a sequence of locations, as quickly or cheaply as possible.&nbsp; For example, an automated medical diagnosis procedure might specify a sequence of tests to be used in diagnosing a patient.&nbsp; As soon as enough tests have been performed to confirm the diagnosis, testing can stop.&nbsp; We want the tests to be ordered so that the diagnosis can be confirmed before incurring large testing cost.&nbsp;&nbsp; Similarly, a robot might search for a hidden bomb in a building, room by room, in some order.&nbsp; In this case, we want the bomb to be found as quickly as possible. <br /><br />Much of our work concerned sequence ordering problems where we have information about the probability of the outcome of each test or search.&nbsp; Finding the best ordering, using this information, can require excessive time to compute.&nbsp; We therefore focused mainly on finding orderings that are relatively simple to compute and implement, and are guaranteed to have a cost that is not too far from that of the best ordering. &nbsp;<br /><br />For instance, for one very general problem, we introduced an approach that splits tasks such as searches into \"chunks,\" and then puts the chunks in a specific order.&nbsp; We showed that the resulting ordering has a total cost that is no more than 4 times the total cost of the optimal ordering, no matter how the tasks are ordered within the chunks.&nbsp; For another general problem, we proved a new guarantee on the expected cost of orderings produced by a well-known greedy algorithm, which effectively shows that no computationally efficient algorithm could do better.<br /><br />We considered a problem where voters are choosing among candidates, and we can survey each person individually to determine their vote. The goal is to find the order in which to conduct the surveys, so that the winning candidate can be determined as cheaply as possible.&nbsp; For this problem, we identified two simple orderings that are far from optimal on their own, and showed how to combine them to yield an ordering whose expected cost is within a small factor of optimal.&nbsp; For another, challenging new problem, involving deciding when to switch between different groups of tests, we developed a novel approach to making those decisions.<br /><br />We also did some research on search ordering problems where we do not have any information about the probability of search outcomes.&nbsp; In the bomb searching example above, this would correspond to not knowing anything about the likelihood that the bomb was hidden in any particular room.&nbsp; Absent this information, our goal was to find orderings that minimize worst-case cost.&nbsp; We found that a number of search ordering problems of this form could be viewed as a special case of a more abstract problem that has a particularly nice geometric structure. We were able to leverage this structure, along with well-established theory, to give an effective method for computing optimal orderings.<br /><br />The project spanned the fields of computer science and operations research.&nbsp; Results were disseminated in journals in both fields, and in conferences and workshops involving participants from both fields.&nbsp; The project included mentoring of PhD students and undergraduates.&nbsp; It also involved the co-organization of an upcoming workshop on related research topics that will include the participation of PhD students, postdocs, and junior faculty from multiple universities.</p><br>\n<p>\n Last Modified: 01/02/2025<br>\nModified by: Lisa&nbsp;Hellerstein</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe project focused on algorithms for determining the order in which to perform a sequence of tests or probes, or to search a sequence of locations, as quickly or cheaply as possible. For example, an automated medical diagnosis procedure might specify a sequence of tests to be used in diagnosing a patient. As soon as enough tests have been performed to confirm the diagnosis, testing can stop. We want the tests to be ordered so that the diagnosis can be confirmed before incurring large testing cost. Similarly, a robot might search for a hidden bomb in a building, room by room, in some order. In this case, we want the bomb to be found as quickly as possible. \n\nMuch of our work concerned sequence ordering problems where we have information about the probability of the outcome of each test or search. Finding the best ordering, using this information, can require excessive time to compute. We therefore focused mainly on finding orderings that are relatively simple to compute and implement, and are guaranteed to have a cost that is not too far from that of the best ordering. \n\nFor instance, for one very general problem, we introduced an approach that splits tasks such as searches into \"chunks,\" and then puts the chunks in a specific order. We showed that the resulting ordering has a total cost that is no more than 4 times the total cost of the optimal ordering, no matter how the tasks are ordered within the chunks. For another general problem, we proved a new guarantee on the expected cost of orderings produced by a well-known greedy algorithm, which effectively shows that no computationally efficient algorithm could do better.\n\nWe considered a problem where voters are choosing among candidates, and we can survey each person individually to determine their vote. The goal is to find the order in which to conduct the surveys, so that the winning candidate can be determined as cheaply as possible. For this problem, we identified two simple orderings that are far from optimal on their own, and showed how to combine them to yield an ordering whose expected cost is within a small factor of optimal. For another, challenging new problem, involving deciding when to switch between different groups of tests, we developed a novel approach to making those decisions.\n\nWe also did some research on search ordering problems where we do not have any information about the probability of search outcomes. In the bomb searching example above, this would correspond to not knowing anything about the likelihood that the bomb was hidden in any particular room. Absent this information, our goal was to find orderings that minimize worst-case cost. We found that a number of search ordering problems of this form could be viewed as a special case of a more abstract problem that has a particularly nice geometric structure. We were able to leverage this structure, along with well-established theory, to give an effective method for computing optimal orderings.\n\nThe project spanned the fields of computer science and operations research. Results were disseminated in journals in both fields, and in conferences and workshops involving participants from both fields. The project included mentoring of PhD students and undergraduates. It also involved the co-organization of an upcoming workshop on related research topics that will include the participation of PhD students, postdocs, and junior faculty from multiple universities.\t\t\t\t\tLast Modified: 01/02/2025\n\n\t\t\t\t\tSubmitted by: LisaHellerstein\n"
 }
}