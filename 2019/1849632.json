{
 "awd_id": "1849632",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII: SHF: Towards a Cognizant Virtual Software Modeling Assistant using Model Clones",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2019-08-15",
 "awd_exp_date": "2021-07-31",
 "tot_intn_awd_amt": 161861.0,
 "awd_amount": 161861.0,
 "awd_min_amd_letter_date": "2019-02-05",
 "awd_max_amd_letter_date": "2019-02-05",
 "awd_abstract_narration": "Software is growing increasingly omnipresent in society. Correspondingly, software quality, which includes both security and reliability, is more important than ever. Software failures can cause significant problems to both individuals and national economies. Security is also a paramount societal concern. This research project helps address quality by improving software modeling, a critical stage in software development where engineers specify what the software does and how it works.  It takes the first step in allowing engineers to leverage knowledge from data in the form of others' experiences and best practices to incorporate established models for use in their software. This project tackles the fundamental issues of how to 1) gather this data properly, 2) derive useful insights about that data, and 3) best present these insights and suggestions to engineers. By providing this assistance and information, engineers can make better-informed decisions, thus yielding higher quality software for all society.  In addition to helping engineers, software modeling is an important aspect of the STEM curriculum, including computer science, software engineering, and other engineering disciplines. Instructors can utilize the approaches and tools derived from this award as a teaching tool by helping students think critically about design decisions.  This will yield better computer scientists and engineers who are more comfortable and versed in formal software modeling.\r\n\r\nModel-driven engineering (MDE) is an established formal methodology for building large-scale secure quality software systems.  This award will improve that quality by realizing a cognizant virtual software-modeling assistant to improve software design and MDE.  This project uses model-clone detection to analyze models during development, finds similar models from the same domain and/or best practices, and treats those similar models as training data to reason about in order to suggest model additions and modifications to users. Such assistance will yield similar benefits to those afforded by analogous source-code approaches based on past usage statistics. This involves an exploratory investigation to develop a new approach and prototype virtual software-modeling assistant using an established model clone detector.  In the first phase of this research, the investigator will build a prototype with the capability to analyze incomplete models being constructed/extended by engineers to suggest completed models for insertion based on similarity to those from the same domain and/or best practices.  In the second phase, the investigator will create an assistant that produces granular suggestions based on analyzing similar models, and presents options to engineers of operations they may want to do next based on those operations' prevalence in the knowledge base formed by those similar models.  This research's insights and data will provide the foundation necessary to build more advanced modeling assistants, conduct user studies and educational assessments of the approach, and help lay a foundation for the cognification of modeling.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Matthew",
   "pi_last_name": "Stephan",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "Matthew D Stephan",
   "pi_email_addr": "matthew.stephan@miamioh.edu",
   "nsf_id": "000754257",
   "pi_start_date": "2019-02-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Miami University",
  "inst_street_address": "501 E HIGH ST",
  "inst_street_address_2": "",
  "inst_city_name": "OXFORD",
  "inst_state_code": "OH",
  "inst_state_name": "Ohio",
  "inst_phone_num": "5135293600",
  "inst_zip_code": "450561846",
  "inst_country_name": "United States",
  "cong_dist_code": "08",
  "st_cong_dist_code": "OH08",
  "org_lgl_bus_name": "MIAMI UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "T6J6AF3AM8M8"
 },
 "perf_inst": {
  "perf_inst_name": "Miami University",
  "perf_str_addr": "500 E High Street",
  "perf_city_name": "Oxford",
  "perf_st_code": "OH",
  "perf_st_name": "Ohio",
  "perf_zip_code": "450563653",
  "perf_ctry_code": "US",
  "perf_cong_dist": "08",
  "perf_st_cong_dist": "OH08",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7798",
   "pgm_ref_txt": "SOFTWARE & HARDWARE FOUNDATION"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  }
 ],
 "app_fund": [
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 161861.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project sought to realize a<span>&nbsp;cognizant virtual software-modeling assistant to improve software design and model-driven engineering.&nbsp;&nbsp;<span>By providing assistance and suggestions, practioners can make better-informed decisions, thus yielding higher quality software for all society.&nbsp;&nbsp;&nbsp;</span></span></p>\n<p>This project laid the foundation for research and development of software development support using knowledge-based cognizant model completion and assistance.&nbsp; Specifically, by employing knowledge derived from other models, best practices, and past experiences in developing model-driven systems.&nbsp;Our new approach and corresponding system improves and facilitates informed software modeling, a critical stage in software development.&nbsp; Our specific outcomes from this project include,&nbsp;</p>\n<ul>\n<li><span>A model assistance approach that employs machine learning techniques on configurable model sets to give engineers step-wise guidance in the development of their systems.&nbsp; &nbsp;</span></li>\n<li><span>A model assistance approach that uses model clone detection on configurable model sets to provide suggestions to engineers for inspiration and application.&nbsp; &nbsp; &nbsp;</span></li>\n<li><span>A realization and demonstration of both of our approaches in a complete Simulink Intelligent Modeling Assistant, SimIMA, solution available to engineers for use in their native Simulink environments.&nbsp; &nbsp;&nbsp;</span></li>\n<li><span>An evaluation of our approaches using a curated and established corpus of Simulink models that has been independently validated.&nbsp; &nbsp;</span></li>\n<li><span>All of our data and artifacts posted on a public and persistent repository, allowing for reproduction and replication.&nbsp;&nbsp;</span></li>\n</ul>\n<p>An additional outcome that came as a side effect of our work is the implementation and application of an automatic model transformation and supporting tool support in the form of SLX2MDL, which can transform Simulink SLX representations to MDL version representations while preserving the semantics.<br /><br />To evaluate SimIMA, we used a large, publicly available, independently validated, and curated data set to facilitate reproduction and reproducibility. We employed k-cross fold validation to tune its hyperparameters and also evaluate its results. Doing so allowed us to derive the optimal weight parameters for its various classifiers and its accuracy. In our experiments on various domains, our machine-learning approach ended up with a total accuracy of around 79%.&nbsp; For our clone-detection approach, we were able to provide the correct/accurate suggestions roughly 82% of the time.&nbsp; While our overall intent was to establish the feasibility model assistants employing machine learning and model clone detection, we believe these accuracy results are very encouraging.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/23/2021<br>\n\t\t\t\t\tModified by: Matthew&nbsp;D&nbsp;Stephan</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project sought to realize a cognizant virtual software-modeling assistant to improve software design and model-driven engineering.  By providing assistance and suggestions, practioners can make better-informed decisions, thus yielding higher quality software for all society.   \n\nThis project laid the foundation for research and development of software development support using knowledge-based cognizant model completion and assistance.  Specifically, by employing knowledge derived from other models, best practices, and past experiences in developing model-driven systems. Our new approach and corresponding system improves and facilitates informed software modeling, a critical stage in software development.  Our specific outcomes from this project include, \n\nA model assistance approach that employs machine learning techniques on configurable model sets to give engineers step-wise guidance in the development of their systems.   \nA model assistance approach that uses model clone detection on configurable model sets to provide suggestions to engineers for inspiration and application.     \nA realization and demonstration of both of our approaches in a complete Simulink Intelligent Modeling Assistant, SimIMA, solution available to engineers for use in their native Simulink environments.    \nAn evaluation of our approaches using a curated and established corpus of Simulink models that has been independently validated.   \nAll of our data and artifacts posted on a public and persistent repository, allowing for reproduction and replication.  \n\n\nAn additional outcome that came as a side effect of our work is the implementation and application of an automatic model transformation and supporting tool support in the form of SLX2MDL, which can transform Simulink SLX representations to MDL version representations while preserving the semantics.\n\nTo evaluate SimIMA, we used a large, publicly available, independently validated, and curated data set to facilitate reproduction and reproducibility. We employed k-cross fold validation to tune its hyperparameters and also evaluate its results. Doing so allowed us to derive the optimal weight parameters for its various classifiers and its accuracy. In our experiments on various domains, our machine-learning approach ended up with a total accuracy of around 79%.  For our clone-detection approach, we were able to provide the correct/accurate suggestions roughly 82% of the time.  While our overall intent was to establish the feasibility model assistants employing machine learning and model clone detection, we believe these accuracy results are very encouraging.\n\n\t\t\t\t\tLast Modified: 11/23/2021\n\n\t\t\t\t\tSubmitted by: Matthew D Stephan"
 }
}