{
 "awd_id": "1901325",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CNS Core: Large: Collaborative Research: Towards an Evolvable Public Key Infrastructure",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032920000",
 "po_email": "doliveir@nsf.gov",
 "po_sign_block_name": "Daniela Oliveira",
 "awd_eff_date": "2019-06-01",
 "awd_exp_date": "2024-05-31",
 "tot_intn_awd_amt": 617561.0,
 "awd_amount": 663276.0,
 "awd_min_amd_letter_date": "2019-04-04",
 "awd_max_amd_letter_date": "2023-09-12",
 "awd_abstract_narration": "The importance of the Transport Layer Security (TLS) public key infrastructure (PKI) to the success of the Internet cannot be overstated.  From social networking to banking, from mobile devices to cloud computing, the PKI allows communicating parties to be sure of whom they are communicating with, that their communication is confidential, and that their communication has not been tampered with.  Despite its incredible importance, the PKI has been notoriously difficult to evolve to meet new security concerns and Internet demands.  This project introduces new, deployable alternatives to key parts of the PKI to make it more evolvable, manageable, and secure.\r\n\r\nThe project has three primary thrusts.  The first introduces a key enabling technology behind the subsequent thrusts, called assertion-carrying certificates (ACCs).  ACCs expand today's certificates with the capability of including a small amount of code (in the form of assertions) to be evaluated as part of the certificate validation process.  The second thrust applies ACCs to enable certificate authorities to more readily evolve to new demands for certificate delegation and automated issuance.  The third thrust applies ACCs and trusted execution environments to enable web-hosting services like content delivery networks to securely manage their customers' cryptographic keys.\r\n\r\nCorrect operation of the PKI is paramount to ensuring a secure, authenticated Internet.  Recent efforts have proven that progress towards a more secure PKI is possible, but a more fundamental focus is needed to address the underlying challenges.  This project will do just that by developing a new, extensible approach to constraining when identities on the Internet should be trusted.  This project will make it straightforward and safe to extend the basic abstractions offered by the PKI, thereby enabling it to evolve to meet changing trends.\r\n\r\nThe project's code and data will be made publicly available and maintained at https://securepki.org\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "David",
   "pi_last_name": "Levin",
   "pi_mid_init": "M",
   "pi_sufx_name": "",
   "pi_full_name": "David M Levin",
   "pi_email_addr": "dml@cs.umd.edu",
   "nsf_id": "000629973",
   "pi_start_date": "2019-04-04",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Maryland, College Park",
  "inst_street_address": "3112 LEE BUILDING",
  "inst_street_address_2": "",
  "inst_city_name": "COLLEGE PARK",
  "inst_state_code": "MD",
  "inst_state_name": "Maryland",
  "inst_phone_num": "3014056269",
  "inst_zip_code": "207425100",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "MD04",
  "org_lgl_bus_name": "UNIVERSITY OF MARYLAND, COLLEGE PARK",
  "org_prnt_uei_num": "NPU8ULVAAS23",
  "org_uei_num": "NPU8ULVAAS23"
 },
 "perf_inst": {
  "perf_inst_name": "University of Maryland College Park",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "MD",
  "perf_st_name": "Maryland",
  "perf_zip_code": "207425103",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "MD04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  },
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7354",
   "pgm_ref_txt": "COMPUTER SYSTEMS"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7925",
   "pgm_ref_txt": "LARGE PROJECT"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002324DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 417378.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 29715.0
  },
  {
   "fund_oblg_fiscal_yr": 2023,
   "fund_oblg_amt": 216183.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The importance of the Transport Layer Security (TLS) public key infrastructure (PKI) to the success of the Internet cannot be overstated. From social networking to banking, from mobile devices to cloud computing, the PKI allows communicating parties to be sure of whom they are communicating with, that their communication is confidential, and that their communication has not been tampered with. Despite its incredible importance, the PKI has been notoriously difficult to evolve to meet new security concerns and Internet demands. This project introduces new, deployable alternatives to key parts of the PKI to make it more evolvable, manageable, and secure.</p>\n<p>Currently, validation logic is tightly bound into clients or the TLS libraries they use, which makes it challenging to understand what validation policies clients have adopted, adapt these policies over time, or understand differences between the validation behavior of different clients. For example, we currently live in a world where web browsers implement the most sophisticated validation policies, yet their policies do not always agree.&nbsp; Meanwhile, other systemically important tools like scripting languages perform little-to-no validation at all. To address this, we developed a new tool, called Hammurabi, that takes a certificate validation policy as input (written in a high-level, declarative language like Prolog). Hammurabi can be run as a system service or compiled into clients as a library, and it allows tool developers to adopt and adapt sophisticated certificate validation policies with ease. As proof of concept, we reimplemented Firefox and Chrome&rsquo;s validation policies in Prolog for Hammurabi, as well as the test suite of the ZLint tool.&nbsp; We also developed prototypes of Hammurabi that can provably enforce the supplied policies.</p>\n<p>To reduce the cost of having end parties verify complex certificate chains, we also investigated cryptographic techniques for *proving* that such verification has already taken place.&nbsp; In other words, instead of receiving a certificate chain, the relying party receives a succinct proof (or signature), that the chain verified correctly.&nbsp; Since certificate chain validation is an inherently recursive process, we developed HyperNova, a recursive argument for proving incremental computations whose steps are expressed in a general framework.</p>\n<p>In addition, we identified and proposed a remedy for a systemic flaw in how much of the world manages its certificate root stores.&nbsp; When a root certificate authority (CA) in the Web PKI misbehaves, primary root-store operators such as Mozilla and Google respond by distrusting that CA. However, full distrust is often too broad, so root stores often implement partial distrust of roots, such as only accepting a root for a subset of domains.&nbsp; Unfortunately, derivative root stores (e.g., Debian and Android) that mirror decisions made by primary root stores are often out-of-date and cannot implement partial distrust, leaving TLS applications vulnerable.</p>\n<p>We proposed augmenting root stores with per-certificate programs called General Certificate Constraints (GCCs) that precisely control the trust of root certificates. We proposed that primary root-store operators write GCCs and distribute them, along with routine root certificate additions and removals, to all root stores in the Web PKI. To justify our arguments, we identified specific instances of CA certificate mis-issuance over the last decade that resulted in partial distrust of roots that derivative root stores were unable to precisely mirror.&nbsp; Finally, we developed preliminary designs for GCC deployment and how GCCs could enable pre-emptive restrictions on CA power.</p>\n<p>Our collaborative team also developed the first techniques to automate the discovery of new censorship evasion techniques purely in the application layer, developed novel, cross-platform, static and dynamic analysis techniques to detect certificate pinning in mobile apps, and in the context of content distribution networks (CDNs), explored the extent to which the bindings between DNS names, IP addresses, and application network sockets can be fully un-bound to allow much more efficient and flexible use of IP space. Many of these developments have been deployed in products, including VPNs, censorship circumvention tools, and one of the most popular content delivery networks in the world, resulting in extensive real-world impact.</p>\n<p>This collaborative project also supported numerous undergraduate, masters, and Ph.D. students and produced over a dozen research publications.</p><br>\n<p>\n Last Modified: 10/31/2024<br>\nModified by: David&nbsp;M&nbsp;Levin</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe importance of the Transport Layer Security (TLS) public key infrastructure (PKI) to the success of the Internet cannot be overstated. From social networking to banking, from mobile devices to cloud computing, the PKI allows communicating parties to be sure of whom they are communicating with, that their communication is confidential, and that their communication has not been tampered with. Despite its incredible importance, the PKI has been notoriously difficult to evolve to meet new security concerns and Internet demands. This project introduces new, deployable alternatives to key parts of the PKI to make it more evolvable, manageable, and secure.\n\n\nCurrently, validation logic is tightly bound into clients or the TLS libraries they use, which makes it challenging to understand what validation policies clients have adopted, adapt these policies over time, or understand differences between the validation behavior of different clients. For example, we currently live in a world where web browsers implement the most sophisticated validation policies, yet their policies do not always agree. Meanwhile, other systemically important tools like scripting languages perform little-to-no validation at all. To address this, we developed a new tool, called Hammurabi, that takes a certificate validation policy as input (written in a high-level, declarative language like Prolog). Hammurabi can be run as a system service or compiled into clients as a library, and it allows tool developers to adopt and adapt sophisticated certificate validation policies with ease. As proof of concept, we reimplemented Firefox and Chromes validation policies in Prolog for Hammurabi, as well as the test suite of the ZLint tool. We also developed prototypes of Hammurabi that can provably enforce the supplied policies.\n\n\nTo reduce the cost of having end parties verify complex certificate chains, we also investigated cryptographic techniques for *proving* that such verification has already taken place. In other words, instead of receiving a certificate chain, the relying party receives a succinct proof (or signature), that the chain verified correctly. Since certificate chain validation is an inherently recursive process, we developed HyperNova, a recursive argument for proving incremental computations whose steps are expressed in a general framework.\n\n\nIn addition, we identified and proposed a remedy for a systemic flaw in how much of the world manages its certificate root stores. When a root certificate authority (CA) in the Web PKI misbehaves, primary root-store operators such as Mozilla and Google respond by distrusting that CA. However, full distrust is often too broad, so root stores often implement partial distrust of roots, such as only accepting a root for a subset of domains. Unfortunately, derivative root stores (e.g., Debian and Android) that mirror decisions made by primary root stores are often out-of-date and cannot implement partial distrust, leaving TLS applications vulnerable.\n\n\nWe proposed augmenting root stores with per-certificate programs called General Certificate Constraints (GCCs) that precisely control the trust of root certificates. We proposed that primary root-store operators write GCCs and distribute them, along with routine root certificate additions and removals, to all root stores in the Web PKI. To justify our arguments, we identified specific instances of CA certificate mis-issuance over the last decade that resulted in partial distrust of roots that derivative root stores were unable to precisely mirror. Finally, we developed preliminary designs for GCC deployment and how GCCs could enable pre-emptive restrictions on CA power.\n\n\nOur collaborative team also developed the first techniques to automate the discovery of new censorship evasion techniques purely in the application layer, developed novel, cross-platform, static and dynamic analysis techniques to detect certificate pinning in mobile apps, and in the context of content distribution networks (CDNs), explored the extent to which the bindings between DNS names, IP addresses, and application network sockets can be fully un-bound to allow much more efficient and flexible use of IP space. Many of these developments have been deployed in products, including VPNs, censorship circumvention tools, and one of the most popular content delivery networks in the world, resulting in extensive real-world impact.\n\n\nThis collaborative project also supported numerous undergraduate, masters, and Ph.D. students and produced over a dozen research publications.\t\t\t\t\tLast Modified: 10/31/2024\n\n\t\t\t\t\tSubmitted by: DavidMLevin\n"
 }
}