{
 "awd_id": "1931078",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER:  A Dynamic Program Monitoring Framework Using Neural Network Hardware",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Danella Zhao",
 "awd_eff_date": "2018-09-01",
 "awd_exp_date": "2023-03-31",
 "tot_intn_awd_amt": 315726.0,
 "awd_amount": 315726.0,
 "awd_min_amd_letter_date": "2019-08-15",
 "awd_max_amd_letter_date": "2021-04-19",
 "awd_abstract_narration": "Software bugs and security attacks cripple US economy by costing more than $150 billion a year. However, there has been no major innovation in this context. This research project aims to change that fact with the help of neural network based hardware. If the project is successful, it will significantly affect current industry \r\npractices and spur a new trend. It will encourage companies to invest in new techniques for debugging and security attack analysis using neural network hardware and make a compelling use case for the hardware implementation, thereby influencing continuous investment in neural network hardware. In addition, the project will contribute to the research and educational activities of a minority serving institution. Students will be tightly integrated into the project through dissertation, thesis work, and undergraduate research work. The PI will incorporate emerging architecture design and its programming in undergraduate and graduate coursework. Moreover, the PI will involve local high school students in computer science related projects through summer internships.\r\n\r\nNeural network is a machine learning technique that mimics human brain. Therefore, neural network hardware provides some unique capabilities that can be utilized in many different ways. This project proposes to utilize neural network hardware for \"program monitoring\". Program execution monitoring is often used to detect software bugs, performance issues, security attacks etc. Neural network hardware will learn the normal \"behavior\" of the program. Then it will detect any deviation of such behavior. Such deviation can be attributed to software bugs, performance issues or security attacks. The proposed approach provides a general framework for handling these issues. Due to online learning and testing capability of neural network hardware, the framework will be adaptive to any change in program inputs, code, and platforms.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Abdullah",
   "pi_last_name": "Muzahid",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "Abdullah A Muzahid",
   "pi_email_addr": "abdullah.muzahid@tamu.edu",
   "nsf_id": "000634302",
   "pi_start_date": "2019-08-15",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Texas A&M Engineering Experiment Station",
  "inst_street_address": "3124 TAMU",
  "inst_street_address_2": "",
  "inst_city_name": "COLLEGE STATION",
  "inst_state_code": "TX",
  "inst_state_name": "Texas",
  "inst_phone_num": "9798626777",
  "inst_zip_code": "778433124",
  "inst_country_name": "United States",
  "cong_dist_code": "10",
  "st_cong_dist_code": "TX10",
  "org_lgl_bus_name": "TEXAS A&M ENGINEERING EXPERIMENT STATION",
  "org_prnt_uei_num": "QD1MX6N5YTN4",
  "org_uei_num": "QD1MX6N5YTN4"
 },
 "perf_inst": {
  "perf_inst_name": "Texas A&M Engineering Experiment Station",
  "perf_str_addr": "TEES State Headquarters Bldg.",
  "perf_city_name": "College Station",
  "perf_st_code": "TX",
  "perf_st_name": "Texas",
  "perf_zip_code": "778454645",
  "perf_ctry_code": "US",
  "perf_cong_dist": "10",
  "perf_st_cong_dist": "TX10",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7941",
   "pgm_ref_txt": "COMPUTER ARCHITECTURE"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 40203.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 176754.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 91818.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 93448.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project aims to use machine learning to improve robustness of software. We worked on several ideas realted to this overall goal. A number of PhD students worked on those ideas and published impactful researc papers. Here are the key outcomes:<br />- We devised a learning-based approach to detect and rectify software performance issues.<br />- We developed software and hardware support to detect and prevent several security vulnerabilities related software memory accesses. Our proposed ideas could significantly reduce or even eliminate those security vulnerabilities.<br />- We showed how to use machine learning to optimize hardware and software resources so that overall performance is improved.<br />- We proposed and implemented in several approaches to make hardware-based machine learning faster.<br />In terms of braoder impacts, the project provided opportunities for different level of students to get research exposure. It enabled us to incorporate several new topics in existing course contents to excite CS students in research-related activities. Some of the proposed techniques are being considered by computing industry to improve overall robustness of computer software.<br />This Project Outcomes Report for the General Public is displayed verbatim as submitted by the Principal Investigator (PI) for this award. Any opinions, findings, and conclusions or recommendations expressed in this Report are those of the PI and do not necessarily reflect the views of the National Science Foundation; NSF has not approved or endorsed its content</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/14/2023<br>\n\t\t\t\t\tModified by: Abdullah&nbsp;A&nbsp;Muzahid</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project aims to use machine learning to improve robustness of software. We worked on several ideas realted to this overall goal. A number of PhD students worked on those ideas and published impactful researc papers. Here are the key outcomes:\n- We devised a learning-based approach to detect and rectify software performance issues.\n- We developed software and hardware support to detect and prevent several security vulnerabilities related software memory accesses. Our proposed ideas could significantly reduce or even eliminate those security vulnerabilities.\n- We showed how to use machine learning to optimize hardware and software resources so that overall performance is improved.\n- We proposed and implemented in several approaches to make hardware-based machine learning faster.\nIn terms of braoder impacts, the project provided opportunities for different level of students to get research exposure. It enabled us to incorporate several new topics in existing course contents to excite CS students in research-related activities. Some of the proposed techniques are being considered by computing industry to improve overall robustness of computer software.\nThis Project Outcomes Report for the General Public is displayed verbatim as submitted by the Principal Investigator (PI) for this award. Any opinions, findings, and conclusions or recommendations expressed in this Report are those of the PI and do not necessarily reflect the views of the National Science Foundation; NSF has not approved or endorsed its content\n\n\t\t\t\t\tLast Modified: 08/14/2023\n\n\t\t\t\t\tSubmitted by: Abdullah A Muzahid"
 }
}