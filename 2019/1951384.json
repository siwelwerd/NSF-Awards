{
 "awd_id": "1951384",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Small: Collaborative Research: Dynamic data structures for vectors and graphs in sublinear memory",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922182",
 "po_email": "pbrass@nsf.gov",
 "po_sign_block_name": "Peter Brass",
 "awd_eff_date": "2019-07-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 250000.0,
 "awd_amount": 258000.0,
 "awd_min_amd_letter_date": "2019-09-20",
 "awd_max_amd_letter_date": "2023-05-05",
 "awd_abstract_narration": "Sublinear-space data structures have been of major recent interest, with applications for example in streaming algorithms, distributed computation, randomized linear algebra, and compressed sensing. Small-space solutions fit in fast cache, thus providing time speedups as well, and also require less storage and less bandwidth in distributed settings. This proposal aims to develop novel methods for designing and analyzing sublinear-space data structures for two seemingly different but closely related objects: vectors and graphs. The PIs also plan to teach advanced graduate courses whose topics overlap with the focus of this project. Furthermore, both PIs plan to train and mentor graduate and undergraduate students students in research, organize workshops, and write survey articles. The PIs plan to also participate in outreach activities to non-computer scientists and to K-12 students, and to broaden participation in computing. The research itself may also have industrial impact, being related to databases, network traffic analysis, and data mining.\r\n\r\nThe PIs will focus on a set of problems that can be captured by the turnstile streaming model: some high-dimensional vector x in R^n receives coordinate-wise updates, which in the case of graphs could have n = (|V| choose 2) (where V is the set of vertices), and edge insert/deletion then corresponds to addition/subtraction from some entry in x. This project aims to further the understanding of fundamental questions related to small-space dynamic data structures for vector updates, and especially as they relate to graph problems.\r\nFor example:\r\n\r\n* Small-space vector update data structures: the insertion-only case: In the insertion-only case, vector updates increment coordinates of x, so that x is a frequency-count vector of the number of occurrences of various items in a data stream. The PIs plan to attack some of the most fundamental problems in this model, such as norm estimation, heavy hitters, and continuous monitoring of statistics.\r\n\r\n* Fully dynamic streams and applications to graphs: Many of the best-known small-space dynamic data structures for graph problems operate by reducing to vector-update problems. For example, the only known nearly linear-space algorithm for spectral sparsifiers operates by reduction to l_2 heavy hitters, and algorithms for connectivity, k-edge connectivity, minimum spanning trees, and several others reduce to vector coordinate-sampling problems. Many open problems though still remain, e.g. what is the optimal space complexity for connectivity in dynamic streams? The PIs also plan to investigate several other dynamic graph and hypergraph problems.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jelani",
   "pi_last_name": "Nelson",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Jelani Nelson",
   "pi_email_addr": "minilek@berkeley.edu",
   "nsf_id": "000644981",
   "pi_start_date": "2019-09-20",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Berkeley",
  "inst_street_address": "1608 4TH ST STE 201",
  "inst_street_address_2": "",
  "inst_city_name": "BERKELEY",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "5106433891",
  "inst_zip_code": "947101749",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "CA12",
  "org_lgl_bus_name": "REGENTS OF THE UNIVERSITY OF CALIFORNIA, THE",
  "org_prnt_uei_num": "",
  "org_uei_num": "GS3YEVSS12N6"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Berkeley",
  "perf_str_addr": "Soda Hall 633",
  "perf_city_name": "Berkeley",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "947201776",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "CA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002324DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 250000.0
  },
  {
   "fund_oblg_fiscal_yr": 2023,
   "fund_oblg_amt": 8000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project developed new low-memory data structures, typically called sketching or streaming algorithms, for processing big datasets. Research results included:</p>\n<p>&nbsp;</p>\n<p>* The first optimal memory algorithm for approximate counting, together with a matching lower bound. Specifically, imagine keeping track of a number that is constantly being incremented. Naively if the number grows to be k digits long, an algorithm maintaining that number would use an amount of memory that is proportional to k. We showed that there is a randomized and approximate algorithm, providing a (1+epsilon)-approximation with probability at least 1-p, using memory proportional to log(k) + loglog(1/p) + log(1/epsilon) bits. We furthermore show that our algorithm is optimal. This is an improvement to a previous randomized approximate algorithm from nearly 50 years ago, the \"Morris Counter\".</p>\n<p>&nbsp;</p>\n<p>* The first sublinear memory algorithm for online prediction with nontrivially low regret. That is, imagine for a sequence of T days, each day there are n weathermen which forecast whether or not it will rain. Based on listening to those n forecasts, we must make a decision: whether or not to carry an umbrella as we leave the house. Our goal is to make the correct decision for as many days as possible. Prior state of the art algorithms for this problem needed to, for each forecaster, at least keep track of some information about that forecaster (e.g. the number of days it was wrong). Such algorithms then take at least n units of memory. This project provided the first algorithm using far less than n memory while obtaining nontrivially good performance.</p>\n<p>&nbsp;</p>\n<p>The project also produced new sketching algorithms for distributed private estimation of histograms (useful for mobile devices), statistical estimation problems while streaming over samples in low memory, new low-memory string sketching e.g. for edit distance, and more.</p>\n<p>&nbsp;</p>\n<p>Additionally, other outcomes included (1) the training of PhD students, (2) the training of undergraduate students in research, especally via the David Harold Blackwell Summer Research Institute, and (3) providing algorithms summer camps for high school students abroad, many of whom then applied to join US universities.</p><br>\n<p>\n Last Modified: 03/12/2024<br>\nModified by: Jelani&nbsp;Nelson</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThis project developed new low-memory data structures, typically called sketching or streaming algorithms, for processing big datasets. Research results included:\n\n\n\n\n\n* The first optimal memory algorithm for approximate counting, together with a matching lower bound. Specifically, imagine keeping track of a number that is constantly being incremented. Naively if the number grows to be k digits long, an algorithm maintaining that number would use an amount of memory that is proportional to k. We showed that there is a randomized and approximate algorithm, providing a (1+epsilon)-approximation with probability at least 1-p, using memory proportional to log(k) + loglog(1/p) + log(1/epsilon) bits. We furthermore show that our algorithm is optimal. This is an improvement to a previous randomized approximate algorithm from nearly 50 years ago, the \"Morris Counter\".\n\n\n\n\n\n* The first sublinear memory algorithm for online prediction with nontrivially low regret. That is, imagine for a sequence of T days, each day there are n weathermen which forecast whether or not it will rain. Based on listening to those n forecasts, we must make a decision: whether or not to carry an umbrella as we leave the house. Our goal is to make the correct decision for as many days as possible. Prior state of the art algorithms for this problem needed to, for each forecaster, at least keep track of some information about that forecaster (e.g. the number of days it was wrong). Such algorithms then take at least n units of memory. This project provided the first algorithm using far less than n memory while obtaining nontrivially good performance.\n\n\n\n\n\nThe project also produced new sketching algorithms for distributed private estimation of histograms (useful for mobile devices), statistical estimation problems while streaming over samples in low memory, new low-memory string sketching e.g. for edit distance, and more.\n\n\n\n\n\nAdditionally, other outcomes included (1) the training of PhD students, (2) the training of undergraduate students in research, especally via the David Harold Blackwell Summer Research Institute, and (3) providing algorithms summer camps for high school students abroad, many of whom then applied to join US universities.\t\t\t\t\tLast Modified: 03/12/2024\n\n\t\t\t\t\tSubmitted by: JelaniNelson\n"
 }
}