{
 "awd_id": "2100989",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: CORE: Small: Techniques for Software Model Checking of Hyperproperties",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2020-08-16",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 275430.0,
 "awd_amount": 275430.0,
 "awd_min_amd_letter_date": "2020-10-29",
 "awd_max_amd_letter_date": "2020-10-29",
 "awd_abstract_narration": "Most manufacturers and companies employ a set of security and privacy policies that specify how the data produced by their products can be accessed and propagated. Violation of such policies may result in catastrophic consequences such as breach of public services and safety or compromising highly sensitive data and privacy of citizens. Frequent reports of security exploits and loss of information privacy have unfortunately become everyday occurrences. In the context of confidentiality, one specific technique to obtain assurance is analyzing software source code to identify security flaws, in particular, to detect bad flow of information among users with different security privileges. This project aims at developing algorithms and tools that automatically detect bugs that result in violation of confidentiality through bad flow of information. The results of this project will improve public confidence in the ability of complex systems to operate safely and maintain information confidentiality. The research aims to bring about a paradigm shift in reasoning about security and privacy at software source code level.\r\n\r\nThis project develops push-button software model checking techniques for verification of a rich class of information flow policies. The specification language is based on hyperproperties, a set-theoretic framework to describe security and privacy policies. The project uses HyperLTL, a temporal logic that allows explicit quantification over traces, to formally express hyperproperties. The main objective is to make software model checking possible for hyperproperties. The investigators investigate new theories that allows code-level verification of hyperproperties, as the current semantics of HyperLTL does not allow asynchronous progress among traces. The project develops efficient model checking techniques that cannot be trivially generalized to deal with HyperLTL: partial-order reduction, abstraction/refinement, and bounded model checking. The investigators develop tools that realize these algorithms and will conduct rigorous case studies.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Borzoo",
   "pi_last_name": "Bonakdarpour",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Borzoo Bonakdarpour",
   "pi_email_addr": "borzoo@msu.edu",
   "nsf_id": "000756129",
   "pi_start_date": "2020-10-29",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Michigan State University",
  "inst_street_address": "426 AUDITORIUM RD RM 2",
  "inst_street_address_2": "",
  "inst_city_name": "EAST LANSING",
  "inst_state_code": "MI",
  "inst_state_name": "Michigan",
  "inst_phone_num": "5173555040",
  "inst_zip_code": "488242600",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MI07",
  "org_lgl_bus_name": "MICHIGAN STATE UNIVERSITY",
  "org_prnt_uei_num": "VJKZC4D1JN36",
  "org_uei_num": "R28EKN92ZTZ9"
 },
 "perf_inst": {
  "perf_inst_name": "Michigan State University",
  "perf_str_addr": "426 Administration Bldg",
  "perf_city_name": "East Lansing",
  "perf_st_code": "MI",
  "perf_st_name": "Michigan",
  "perf_zip_code": "488242600",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MI07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 275429.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><ul>\n<li>The goal of this project was to facilitate reasoning about the  correctness of security requirements known as \"information-flow  policies\". These policies ensure that in a computer program secrets do  not leak into publicly onservable channels. Likewise, they ensure that  activities of regular users don not interfere with the integrity of  secret and sensitive data.</li>\n<li>The project designed a  general-purpose technique were the user models the system in a  well-defined modeling language and the policy in another home-grown  language.</li>\n<li>We developed push-button tools that take these inputs  and declare whether or not the model satisfies the given policy. If not,  our tools generate a witness (also known as a counterexample) that why  it does not satify the policy.</li>\n<li>We focused on two types of systems:  \n<ul>\n<li>The  first type of systems is known as possibilitic systems where one do not  deal with probabilities and uncertanties of the environment.</li>\n<li>The  second type takes into account probabilistic systems where actions if  events and enviroment stimulu occu with certain probability.</li>\n</ul>\n</li>\n<li>The  project developed foundamental algorithms and techniques to facilitate  the verification process. In some cases we showed that problem is  undecidable, meaning that they cannot be solved by computer programs.  For such cases we identified sub-problems were decidability is ensured.</li>\n</ul><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/12/2022<br>\n\t\t\t\t\tModified by: Borzoo&nbsp;Bonakdarpour</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe goal of this project was to facilitate reasoning about the  correctness of security requirements known as \"information-flow  policies\". These policies ensure that in a computer program secrets do  not leak into publicly onservable channels. Likewise, they ensure that  activities of regular users don not interfere with the integrity of  secret and sensitive data.\nThe project designed a  general-purpose technique were the user models the system in a  well-defined modeling language and the policy in another home-grown  language.\nWe developed push-button tools that take these inputs  and declare whether or not the model satisfies the given policy. If not,  our tools generate a witness (also known as a counterexample) that why  it does not satify the policy.\nWe focused on two types of systems:  \n\nThe  first type of systems is known as possibilitic systems where one do not  deal with probabilities and uncertanties of the environment.\nThe  second type takes into account probabilistic systems where actions if  events and enviroment stimulu occu with certain probability.\n\n\nThe  project developed foundamental algorithms and techniques to facilitate  the verification process. In some cases we showed that problem is  undecidable, meaning that they cannot be solved by computer programs.  For such cases we identified sub-problems were decidability is ensured.\n\n\n\t\t\t\t\tLast Modified: 12/12/2022\n\n\t\t\t\t\tSubmitted by: Borzoo Bonakdarpour"
 }
}