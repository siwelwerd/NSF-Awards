{
 "awd_id": "2124431",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "FMitF: Track I: Synthesis of Quantitative Network Analytics: From Left-of-Launch to Right-of-Boom",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922585",
 "po_email": "pprabhak@nsf.gov",
 "po_sign_block_name": "Pavithra Prabhakar",
 "awd_eff_date": "2021-09-01",
 "awd_exp_date": "2024-08-31",
 "tot_intn_awd_amt": 750000.0,
 "awd_amount": 750000.0,
 "awd_min_amd_letter_date": "2021-06-08",
 "awd_max_amd_letter_date": "2021-06-08",
 "awd_abstract_narration": "Network-security analysis is currently a tedious and detailed exercise that starts with analysts collecting data from diverse sources (such as network traffic, server histories and individual computer states), and then cross-comparing this information against attack data, such as malicious host names or malware descriptions. Analysts then make security decisions by manually inspecting these data sets and looking for rare but dangerous events. Unsurprisingly, this is an error-prone process, which is further complicated by rising traffic volumes, complex network structures, and confounding factors such as proxies and Network Address Translation (NAT) boxes. This project's goal is to use ideas inspired by formal methods to develop a novel framework to automate network-traffic analysis. By improving data collection through better sensor placement and by analyzing the provenance of hostile events, the project's impacts are an improvement in security analysis, better situational awareness and lowered response times.\r\n\r\nThe project develops a query language that allows network analysts to describe the structure of the network and the desired analysis objective assuming complete observability across the network. To account for elements that confound such analyses, the project investigates automatic methods to test feasibility of analysis under partial observability. If this does not hold, it identifies statistically correlated alternative quantities that can be used to give approximately correct results with high probability. The framework also allows for the automatic synthesis of necessary monitors and their optimal placement so as to minimize errors and resource overheads. The system is equipped with mechanisms to track the provenance of measurements from all deployed sensors, thus enabling researchers to diagnose root causes after warnings are triggered or attacks uncovered.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Mukund",
   "pi_last_name": "Raghothaman",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Mukund Raghothaman",
   "pi_email_addr": "mukund.raghothaman@gmail.com",
   "nsf_id": "000807353",
   "pi_start_date": "2021-06-08",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Srivatsan",
   "pi_last_name": "Ravi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Srivatsan Ravi",
   "pi_email_addr": "sravi@isi.edu",
   "nsf_id": "000731885",
   "pi_start_date": "2021-06-08",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Jyotirmoy",
   "pi_last_name": "Deshmukh",
   "pi_mid_init": "V",
   "pi_sufx_name": "",
   "pi_full_name": "Jyotirmoy V Deshmukh",
   "pi_email_addr": "jdeshmuk@usc.edu",
   "nsf_id": "000758462",
   "pi_start_date": "2021-06-08",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Michael",
   "pi_last_name": "Collins",
   "pi_mid_init": "P",
   "pi_sufx_name": "",
   "pi_full_name": "Michael P Collins",
   "pi_email_addr": "mcollins@isi.edu",
   "nsf_id": "000849271",
   "pi_start_date": "2021-06-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Southern California",
  "inst_street_address": "3720 S FLOWER ST FL 3",
  "inst_street_address_2": "",
  "inst_city_name": "LOS ANGELES",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "2137407762",
  "inst_zip_code": "90033",
  "inst_country_name": "United States",
  "cong_dist_code": "34",
  "st_cong_dist_code": "CA34",
  "org_lgl_bus_name": "UNIVERSITY OF SOUTHERN CALIFORNIA",
  "org_prnt_uei_num": "",
  "org_uei_num": "G88KLJR3KYT5"
 },
 "perf_inst": {
  "perf_inst_name": "University of Southern California",
  "perf_str_addr": "3720 S. Flower Street",
  "perf_city_name": "Los Angeles",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "900070001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "34",
  "perf_st_cong_dist": "CA34",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "094Y00",
   "pgm_ele_name": "FMitF: Formal Methods in the F"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "071Z",
   "pgm_ref_txt": "FMitF-Formal Methods in the Field"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  }
 ],
 "app_fund": [
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 750000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p id=\"docs-internal-guid-ffd31d04-7fff-2213-a916-d54b1495abc8\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Network security analysis is a triage process, analysts face far more events than they can handle. Forensic requirements require deep instrumentation and data collection to deal with low-footprint high-risk cases. Our project addressed these issues by developing new summaries of </span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: italic; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">forensic netflow</span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">, studied the problem of learning dynamic invariants in complex distributed systems, and developed techniques to understand, debug, and modify complex control plane configurations.</span></p>\r\n<p>&nbsp;</p>\r\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">We created the notion of </span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: italic; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">superflows</span><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> with the goal of reducing the volume of data that security analysts need to examine while performing forensic audits of their systems. We developed a relational query language to express superflow hypotheses. We then extended superflows to provide more global views of a network by instrumenting multiple redundant nodes and reconciling observations from these independent vantage points. We discovered that addressing long-tail problems present in most networks require instrumenting at least 40% of their internal nodes.&nbsp;</span></p>\r\n<p>&nbsp;</p>\r\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial,sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Finally, in order to learn complex invariants from executions of distributed systems, we developed the idea of speculatively labelling unobserved states as unreachable, and aggressively using this tentatively labelled data to learn classifiers / invariants that can distinguish reachable and unreachable states. We also showed how LLMs can help in identifying an initial pool of predicates that can be combined by our algorithm to form high-quality candidate invariants.</span></p><br>\n<p>\n Last Modified: 12/29/2024<br>\nModified by: Mukund&nbsp;Raghothaman</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nNetwork security analysis is a triage process, analysts face far more events than they can handle. Forensic requirements require deep instrumentation and data collection to deal with low-footprint high-risk cases. Our project addressed these issues by developing new summaries of forensic netflow, studied the problem of learning dynamic invariants in complex distributed systems, and developed techniques to understand, debug, and modify complex control plane configurations.\r\n\n\n\r\n\n\nWe created the notion of superflows with the goal of reducing the volume of data that security analysts need to examine while performing forensic audits of their systems. We developed a relational query language to express superflow hypotheses. We then extended superflows to provide more global views of a network by instrumenting multiple redundant nodes and reconciling observations from these independent vantage points. We discovered that addressing long-tail problems present in most networks require instrumenting at least 40% of their internal nodes.\r\n\n\n\r\n\n\nFinally, in order to learn complex invariants from executions of distributed systems, we developed the idea of speculatively labelling unobserved states as unreachable, and aggressively using this tentatively labelled data to learn classifiers / invariants that can distinguish reachable and unreachable states. We also showed how LLMs can help in identifying an initial pool of predicates that can be combined by our algorithm to form high-quality candidate invariants.\t\t\t\t\tLast Modified: 12/29/2024\n\n\t\t\t\t\tSubmitted by: MukundRaghothaman\n"
 }
}