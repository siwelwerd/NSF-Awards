{
 "awd_id": "2141474",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "SHF: Medium: Collaborative Research: Enhancing Continuous Integration Testing for the Open-Source Ecosystem",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2020-10-01",
 "awd_exp_date": "2023-11-30",
 "tot_intn_awd_amt": 362997.0,
 "awd_amount": 254313.0,
 "awd_min_amd_letter_date": "2021-09-01",
 "awd_max_amd_letter_date": "2021-09-01",
 "awd_abstract_narration": "Continuous integration (CI) is an important software development activity that aims to improve software development by automating software compilation and regression testing.  Recent studies report that CI helps developers deploy faster and reduce development cost. Given these success stories, CI has attracted rapidly increasing interest and adoption, e.g., Travis CI, the currently most popular CI service, is used by over 300,000 GitHub projects.  Despite the success of CI, developers report they would like to see improvements in CI. First, they want to faster obtain regression test results.  Second, they want better handling of so-called flaky tests, which are regression tests that can non-deterministically pass or fail, and whose failures negatively affect developer's productivity.  Third, developers report that CI builds do not provide sufficient debugging assistance for reasoning about failed regression tests.  While regression testing has been studied for over three decades, it has not been studied in the context of CI until recently.\r\n\r\nTo substantially improve regression testing in CI, the PIs propose to develop novel techniques and tools that address three important challenges: (1) test selection to speed up regression testing and the development cycle, (2) test reliability to mitigate the problems that flaky tests introduce, and (3) debugging assistance to ease the effort of diagnosing and fixing the true and flaky regression test failures. The PIs plan to develop techniques and tools based on a mix of static and dynamic program analyses, leveraging not only information from two project revisions (as traditional in regression testing) but also from all historical build and testing information available in CI testing. The PIs plan to embody their techniques in a tool-set and evaluate them extensively on open-source projects and in industrial collaborations. The broader impacts of enhancing continuous integration testing are to allow software developers to faster build higher quality software, which can benefit our modern society that greatly depends on software.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Lingming",
   "pi_last_name": "Zhang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Lingming Zhang",
   "pi_email_addr": "lingming@illinois.edu",
   "nsf_id": "000683508",
   "pi_start_date": "2021-09-01",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Illinois at Urbana-Champaign",
  "inst_street_address": "506 S WRIGHT ST",
  "inst_street_address_2": "",
  "inst_city_name": "URBANA",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "2173332187",
  "inst_zip_code": "618013620",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "IL13",
  "org_lgl_bus_name": "UNIVERSITY OF ILLINOIS",
  "org_prnt_uei_num": "V2PHZ2CSCH63",
  "org_uei_num": "Y8CWNJRCNN91"
 },
 "perf_inst": {
  "perf_inst_name": "University of Illinois at Urbana-Champaign",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "618207406",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "IL13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 68551.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 91783.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 93979.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><br />Continuous integration (CI) is an important software development activity that aims to improve software development by automating software compilation and regression testing. CI has been increasingly adopted in practice in recent years, e.g., popular CI services (like GitHub Actions) are benefiting developers all over the world. While CI can indeed substantially reduce manual efforts during software development, it has been reported that developers would like to see more improvements. In this collaborative project, we revisited the limitations of the current CI process, and propose to improve: 1) the speed of regression testing (increasing the speed of the development cycle), 2) the reliability of regression testing (mitigating the problems of flaky tests), and 3) the ease of debugging test failures (automating both diagnosis and repair).</p>\n<p><br />This outcomes report focuses on the findings specific to this PI, while PI Marinov (under award number 1763788) and PI Bell (under award number 2100037) report other findings in greater detail in separate outcome reports. First, to only select the tests affected by code changes for faster regression testing, we have proposed various novel regression test selection (RTS) approaches, including both static and dynamic ones, for real-world software systems. The resulting tools have been adopted by both open-source projects and commercial systems from Google. Second, to balance the test effectiveness and flakiness for the critical machine learning projects, we proposed novel solutions to transform this into an optimization problem based on statistical analysis and mutation testing. To date, our work has helped optimize the tests for a number of popular machine learning projects. Lastly, to help developers better debug CI test failures, we proposed a number of novel fault diagnosis and program repair techniques, which substantially advance the state of the art. Our debugging techniques have been successfully applied to large-scale software systems with millions lines of code.</p>\n<p><br />The outcomes of the project have been disseminated through 30+ research papers from the PI's group (mostly published at top-tier software engineering and programming languages venues), including five ACM SIGSOFT Distinguished Paper Awards (ISSTA'19*2, ISSTA'21, ASE'22, and FSE'23) and one best industry paper award (ICST'19). The research project has also produced various open-source projects/contributions (a subset of the produced software/data can be found at: https://github.com/ise-uiuc). In addition, this project supported the training of multiple doctoral, masters and undergraduate students, including members of groups historically underrepresented in computer science. Research conducted as part of this project has already been deployed in industry, as well as covered at graduate and undergraduate courses at multiple institutions, further disseminating the knowledge.</p><br>\n<p>\n Last Modified: 02/07/2024<br>\nModified by: Lingming&nbsp;Zhang</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n\nContinuous integration (CI) is an important software development activity that aims to improve software development by automating software compilation and regression testing. CI has been increasingly adopted in practice in recent years, e.g., popular CI services (like GitHub Actions) are benefiting developers all over the world. While CI can indeed substantially reduce manual efforts during software development, it has been reported that developers would like to see more improvements. In this collaborative project, we revisited the limitations of the current CI process, and propose to improve: 1) the speed of regression testing (increasing the speed of the development cycle), 2) the reliability of regression testing (mitigating the problems of flaky tests), and 3) the ease of debugging test failures (automating both diagnosis and repair).\n\n\n\nThis outcomes report focuses on the findings specific to this PI, while PI Marinov (under award number 1763788) and PI Bell (under award number 2100037) report other findings in greater detail in separate outcome reports. First, to only select the tests affected by code changes for faster regression testing, we have proposed various novel regression test selection (RTS) approaches, including both static and dynamic ones, for real-world software systems. The resulting tools have been adopted by both open-source projects and commercial systems from Google. Second, to balance the test effectiveness and flakiness for the critical machine learning projects, we proposed novel solutions to transform this into an optimization problem based on statistical analysis and mutation testing. To date, our work has helped optimize the tests for a number of popular machine learning projects. Lastly, to help developers better debug CI test failures, we proposed a number of novel fault diagnosis and program repair techniques, which substantially advance the state of the art. Our debugging techniques have been successfully applied to large-scale software systems with millions lines of code.\n\n\n\nThe outcomes of the project have been disseminated through 30+ research papers from the PI's group (mostly published at top-tier software engineering and programming languages venues), including five ACM SIGSOFT Distinguished Paper Awards (ISSTA'19*2, ISSTA'21, ASE'22, and FSE'23) and one best industry paper award (ICST'19). The research project has also produced various open-source projects/contributions (a subset of the produced software/data can be found at: https://github.com/ise-uiuc). In addition, this project supported the training of multiple doctoral, masters and undergraduate students, including members of groups historically underrepresented in computer science. Research conducted as part of this project has already been deployed in industry, as well as covered at graduate and undergraduate courses at multiple institutions, further disseminating the knowledge.\t\t\t\t\tLast Modified: 02/07/2024\n\n\t\t\t\t\tSubmitted by: LingmingZhang\n"
 }
}