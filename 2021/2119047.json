{
 "awd_id": "2119047",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: PPoSS: Planning: Extreme-scale  Sparse Data Analytics",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Damian Dechev",
 "awd_eff_date": "2021-10-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 75000.0,
 "awd_amount": 75000.0,
 "awd_min_amd_letter_date": "2021-08-30",
 "awd_max_amd_letter_date": "2021-08-30",
 "awd_abstract_narration": "The graph data structure is used for storing and manipulating relational data. Tensors are a higher-order generalization of the two-dimensional matrix representation. Both graphs and tensors are used in exploratory and automated data analysis. Applications areas include cybersecurity, complex system analysis, and personalized healthcare. There exist a myriad of known algorithms for typical data analysis tasks in these areas. For instance, the problem of community identification in graphs, referring to automatically identifying well-connected groups of vertices in graphs, has dozens of algorithms. Analogous to the singular value decomposition in matrices, several tensor factorizations exist with diverse use-cases. Both graph algorithms and tensor factorizations use computer storage formats inspired by matrix computations. This project focuses on data analysis use-cases that result in large-scale graphs and tensors, necessitating parallel and distributed processing. The project's novelties are in identifying and developing unifying parallel algorithm design principles that span multiple graph computations and tensor factorizations. In the planning stage, several focused research tasks will explore eight unifying themes.\r\n\r\nThe project aims to develop the foundations for an end-to-end streaming data analytics system with performance comparable to highly tuned static graph analysis benchmarks on current high-end workstations and supercomputers. The investigators' multi-disciplinary expertise span high-performance computing, theory and algorithms, computer architecture, and programming languages and compilers. The cross-cutting research aims include generalizable principles to orchestrate intra- and inter-node communication, multiple approaches for exploiting hierarchical parallelism, locality-enhancing strategies, and automatic performance tuning. The software artifacts from the planning stage could form the basis for new data analytic benchmarks. The investigators will incorporate research findings into the courses they teach. Engaging experts from the national laboratories and the industry in the planning stage will help solidify future large-scale efforts. The investigators will leverage and contribute to existing institutional programs that broaden participation in computing research.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jee",
   "pi_last_name": "Choi",
   "pi_mid_init": "W",
   "pi_sufx_name": "",
   "pi_full_name": "Jee W Choi",
   "pi_email_addr": "jeec@uoregon.edu",
   "nsf_id": "000807893",
   "pi_start_date": "2021-08-30",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Boyana",
   "pi_last_name": "Norris",
   "pi_mid_init": "R",
   "pi_sufx_name": "",
   "pi_full_name": "Boyana R Norris",
   "pi_email_addr": "norris@cs.uoregon.edu",
   "nsf_id": "000385007",
   "pi_start_date": "2021-08-30",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Oregon Eugene",
  "inst_street_address": "1776 E 13TH AVE",
  "inst_street_address_2": "",
  "inst_city_name": "EUGENE",
  "inst_state_code": "OR",
  "inst_state_name": "Oregon",
  "inst_phone_num": "5413465131",
  "inst_zip_code": "974031905",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "OR04",
  "org_lgl_bus_name": "UNIVERSITY OF OREGON",
  "org_prnt_uei_num": "Z3FGN9MF92U2",
  "org_uei_num": "Z3FGN9MF92U2"
 },
 "perf_inst": {
  "perf_inst_name": "University of Oregon Eugene",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "OR",
  "perf_st_name": "Oregon",
  "perf_zip_code": "974035219",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "OR04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "042Y00",
   "pgm_ele_name": "PPoSS-PP of Scalable Systems"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  }
 ],
 "app_fund": [
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 75000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The University of Oregon team has made two main contributions to this project. The first contribution is the exploration of linearized indexing scheme for multi-dimensional sparse data. In N-dimensional space, the location of a data element is specified by a set of N indices. The N-dimensional space can be mapped on to a single line that traverses the space, which reduces the N indices to a single index. Our project has demonstrated that this method not only reduces the amount of data required to store the indices, but also allows data to be accessed in a locality-friendly manner, which leads to a significant improvement in execution time for applications that process multi-dimensional data.</p>\n<p>&nbsp;</p>\n<p>The second contribution to the project is the development of a performance-portable algorithm for tensor factorization that utilizes our new linearized indexing scheme. By using a simple list of indices, we can design our algorithm to be near-identical across different processor architectures. In order to maintain performance across different architectures, we only require replacing specific portions of the algorithm to leverage architecture-specific features. For example, between the CPU and the GPU architectures, we only need to change the portion of the algorithm that involves synchronization, as the cost of synchronization different greatly between CPUs and GPUs, due to the number of available parallel threads.&nbsp;</p>\n<p>&nbsp;</p>\n<p>Our research was published at ICS'21 and ICS'22, a top-tier conference in HPC. Our research was also incorporated into a non-negative factorization library, PLANC, developed by the Department of Energy.</p><br>\n<p>\n Last Modified: 04/04/2024<br>\nModified by: Jee&nbsp;W&nbsp;Choi</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe University of Oregon team has made two main contributions to this project. The first contribution is the exploration of linearized indexing scheme for multi-dimensional sparse data. In N-dimensional space, the location of a data element is specified by a set of N indices. The N-dimensional space can be mapped on to a single line that traverses the space, which reduces the N indices to a single index. Our project has demonstrated that this method not only reduces the amount of data required to store the indices, but also allows data to be accessed in a locality-friendly manner, which leads to a significant improvement in execution time for applications that process multi-dimensional data.\n\n\n\n\n\nThe second contribution to the project is the development of a performance-portable algorithm for tensor factorization that utilizes our new linearized indexing scheme. By using a simple list of indices, we can design our algorithm to be near-identical across different processor architectures. In order to maintain performance across different architectures, we only require replacing specific portions of the algorithm to leverage architecture-specific features. For example, between the CPU and the GPU architectures, we only need to change the portion of the algorithm that involves synchronization, as the cost of synchronization different greatly between CPUs and GPUs, due to the number of available parallel threads.\n\n\n\n\n\nOur research was published at ICS'21 and ICS'22, a top-tier conference in HPC. Our research was also incorporated into a non-negative factorization library, PLANC, developed by the Department of Energy.\t\t\t\t\tLast Modified: 04/04/2024\n\n\t\t\t\t\tSubmitted by: JeeWChoi\n"
 }
}