{
 "awd_id": "2102291",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: SHF: Small: Interactive Synthesis and Repair For Robot Programs",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2020-09-01",
 "awd_exp_date": "2024-05-31",
 "tot_intn_awd_amt": 193821.0,
 "awd_amount": 193821.0,
 "awd_min_amd_letter_date": "2020-11-04",
 "awd_max_amd_letter_date": "2020-11-04",
 "awd_abstract_narration": "Over the past few years, robots have started to be deployed in unstructured human environments. There are hundreds of robots deployed in hospitals, hotels, and supermarkets. Unfortunately, the software that runs on robots is programmed using low-level abstractions and languages, and is hard to transfer across robots and environments. In addition robotic software requires complex control logic to ensure that robots are safe and well-behaved in all situations. Thus, robot software is extraordinarily hard to write and maintain. This research project develops tools and techniques to make robot software safer, easier to write, and easier to maintain. \r\n\r\nThe intellectual merits of the project are the development of (1) techniques for fixing bugs in robot software, based on advances to automatic program repair and program synthesis; (2) abstractions for writing robot software that can automatically handle certain kinds of failures, based on new programming-language design; (3) methods for checking the correctness of robot software, based on new program-verification techniques. The project's broader significance and importance are that it helps make robot software easier to write and maintain, and cheaper, safer, and more reliable. The project encourages further research at the intersection of programming languages and robotics by publishing research results and releasing open-source software. The project also involves high-school outreach workshops to broaden participation in computing.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Arjun",
   "pi_last_name": "Guha",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Arjun Guha",
   "pi_email_addr": "a.guha@northeastern.edu",
   "nsf_id": "000633150",
   "pi_start_date": "2020-11-04",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Northeastern University",
  "inst_street_address": "360 HUNTINGTON AVE",
  "inst_street_address_2": "",
  "inst_city_name": "BOSTON",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6173735600",
  "inst_zip_code": "021155005",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "NORTHEASTERN UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "HLTMVS2JZBS6"
 },
 "perf_inst": {
  "perf_inst_name": "Northeastern University",
  "perf_str_addr": "360 Huntington Ave",
  "perf_city_name": "Boston",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021155005",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7943",
   "pgm_ref_txt": "PROGRAMMING LANGUAGES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 193821.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>As robots become increasingly common in human environments such as homes, offices, and commercial establishments, users of such robots will desire the ability to ask the robots to perform novel tasks that they were not pre-programmed for. In particular, the challenges with this setting are that the robots must be able to learn new tasks with limited input from the human - be it demonstrations, corrections, or natural language descriptions. Unfortunately, such limited data is not sufficient to train data-hungry machine learning models such as neural networks.&nbsp;This project addresses this challenge by developing novel algorithms to teach robots new tasks by synthesizing programmatic representations of new tasks. Such programmatic representations are synthesized in domain-specific languages that simultaneously constrain the search space to physically meaningful programs while allowing sufficient expressivity to learn new tasks. Programmatic representations have the additional advantage of being human readable, so a user could inspect what the robot learned, and are also amenable to repair using a few corrections from the human when the program does not exactly perform as intended (e.g., by telling a vacuum cleaning robot to drive a bit closer to the window to effectively clean the baseboard).&nbsp;</p>\n<p><br /><strong>Intellectual Merit</strong>: The project introduced several novel algorithms for programming robots, including physics-informed program synthesis, SMT-based robot transition repair, and iterative dimension-informed programming synthesis. Collectively, these algorithms form the foundations of how to perform learning from demonstration with physics-informed domain-specific languages with real robots. This project also introduced a new simulation benchmark to evaluate social navigation policies, and a benchmark to evaluate programs generated by large language models to program robots.</p>\n<p><br /><strong>Broader Impacts</strong>: This project partially supported three PhD students. Several undergraduate students were also mentored and participated in the research. The PIs gave several invited talks on the research supported by this project.</p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 07/15/2024<br>\nModified by: Arjun&nbsp;Guha</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nAs robots become increasingly common in human environments such as homes, offices, and commercial establishments, users of such robots will desire the ability to ask the robots to perform novel tasks that they were not pre-programmed for. In particular, the challenges with this setting are that the robots must be able to learn new tasks with limited input from the human - be it demonstrations, corrections, or natural language descriptions. Unfortunately, such limited data is not sufficient to train data-hungry machine learning models such as neural networks.This project addresses this challenge by developing novel algorithms to teach robots new tasks by synthesizing programmatic representations of new tasks. Such programmatic representations are synthesized in domain-specific languages that simultaneously constrain the search space to physically meaningful programs while allowing sufficient expressivity to learn new tasks. Programmatic representations have the additional advantage of being human readable, so a user could inspect what the robot learned, and are also amenable to repair using a few corrections from the human when the program does not exactly perform as intended (e.g., by telling a vacuum cleaning robot to drive a bit closer to the window to effectively clean the baseboard).\n\n\n\nIntellectual Merit: The project introduced several novel algorithms for programming robots, including physics-informed program synthesis, SMT-based robot transition repair, and iterative dimension-informed programming synthesis. Collectively, these algorithms form the foundations of how to perform learning from demonstration with physics-informed domain-specific languages with real robots. This project also introduced a new simulation benchmark to evaluate social navigation policies, and a benchmark to evaluate programs generated by large language models to program robots.\n\n\n\nBroader Impacts: This project partially supported three PhD students. Several undergraduate students were also mentored and participated in the research. The PIs gave several invited talks on the research supported by this project.\n\n\n\t\t\t\t\tLast Modified: 07/15/2024\n\n\t\t\t\t\tSubmitted by: ArjunGuha\n"
 }
}