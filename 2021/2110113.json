{
 "awd_id": "2110113",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "NSF-BSF: CIF: Small: From storage codes to recoverable systems",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032928910",
 "po_email": "jafowler@nsf.gov",
 "po_sign_block_name": "James Fowler",
 "awd_eff_date": "2021-07-01",
 "awd_exp_date": "2024-06-30",
 "tot_intn_awd_amt": 500000.0,
 "awd_amount": 500000.0,
 "awd_min_amd_letter_date": "2021-06-08",
 "awd_max_amd_letter_date": "2021-06-08",
 "awd_abstract_narration": "Modern-day data centers store large volumes of information in distributed form, placing parts of the same data file on different servers in the system wherein server failures occur on a regular basis. Recovery of data located on servers that become unavailable because of transient or permanent failures critically depends on the methods of data encoding, and developing such methods is the main directions in the design of large-scale storage systems. This project aims at constructing methods of data encoding that account for low-cost data recovery based on the nature of connections between the servers such as spatial proximity or the availability of communication links. This represents a shift from the broadly studied problems of data reconstruction that discount the varying cost of moving data between the servers based on the topology of the system, and opens a possibility of engaging new mathematical methods for the design of efficient methods of data encoding and reconstruction. In the first part, this project advances high-density storage systems based on recently discovered applications of tools from computer science and applied mathematics to the code design. In the second part, the project addresses large-size storage systems, aiming to establish new statistical properties of methods of data encoding as well as the limits on the volume of data that can be stored in the system while maintaining the recovery functionality.\r\n\r\nThis project aims at developing new methods in the problems of data coding for large-scale distributed storage. Since different parts of the codeword comprising a chunk of data are stored on different servers, efficient recovery hinges on the ability to reconstruct unavailable data from the servers that are in close proximity of the failed storage node. In technical terms, the system is described by a graph where coordinates of the codeword are stored on different vertices, and the value of each vertex is a function of the values of its neighbors in the graph. In the first part, this project aims at constructing efficient encoding methods based on recently established connections between codes for storage, index codes, and low-density quantum codes. The main goals are constructing codes of the highest possible rate as well as developing iterative procedures for the recovery of multiple nodes for various classes of graphs relying on their algebraic properties and on methods from percolation theory on finite graphs. The second part of the project is concerned with coding systems that support data recovery on infinite graphs such as the graph of integers, the two-dimensional integer lattice and the like, using methods from constrained systems, symbolic dynamics, and entropy theory for the purpose of establishing the maximum possible density of data stored in large-scale systems.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Alexander",
   "pi_last_name": "Barg",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Alexander Barg",
   "pi_email_addr": "abarg@umd.edu",
   "nsf_id": "000193827",
   "pi_start_date": "2021-06-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Maryland, College Park",
  "inst_street_address": "3112 LEE BUILDING",
  "inst_street_address_2": "",
  "inst_city_name": "COLLEGE PARK",
  "inst_state_code": "MD",
  "inst_state_name": "Maryland",
  "inst_phone_num": "3014056269",
  "inst_zip_code": "207425100",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "MD04",
  "org_lgl_bus_name": "UNIVERSITY OF MARYLAND, COLLEGE PARK",
  "org_prnt_uei_num": "NPU8ULVAAS23",
  "org_uei_num": "NPU8ULVAAS23"
 },
 "perf_inst": {
  "perf_inst_name": "University of Maryland, College Park",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "MD",
  "perf_st_name": "Maryland",
  "perf_zip_code": "207421800",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "MD04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779700",
   "pgm_ele_name": "Comm & Information Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7935",
   "pgm_ref_txt": "COMM & INFORMATION THEORY"
  }
 ],
 "app_fund": [
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 500000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>To prevent data loss in distributed storage systems, information is placed on different storage nodes with he provision that the data on any individual node can be recovered from a small subset of nodes in the systems should that node fail and become inoperable. Communication constraints within the system may further suggest that the recovery can rely only on certain particular subsets of storage nodes. With these assumptions it is natural to model storage systems as graphs whose vertices represent the set of the storage nodes and edges connect the nodes that can naturally communicate in the system. This model gives rise to the concept of storage codes on graphs which encode information in the form that allows node recovery from the set of node's neighbors in the graph.</p>\n<p><br />The project was devoted to the investigation of properties of storage codes on graphs. One of the first questions to be asked is to determine the largest size of the code on a graph for specific graph families. This question was resolved for graphs with no triangles, where it was shown that the information can be encoded in a way that allows arbitrary combinations of bits to be stored on the vertices on the graph, with very small overhead provisioned for the recovery.</p>\n<p><br />The graphical model of storage was extended to large, or potentially infinite graphs, giving rise to the concept of recoverable systems. The project examined the growth rate of the set of configurations that support node recovery for various types of neighborhoods of the node. This problem was further considered for graphs represented by two- and multi-dimensional grids, where some answers for the system capacity were also found.&nbsp;</p>\n<p><br />Overall, the project has advanced a new model of distributed storage systems, resolving some of the open problems in this area and promoting the use of diverse mathematical methods for the analysis of the model. Application of mathematical methods previously not employed for the analysis of coding schemes on graphs presents a range of new problems and challenges for further research in this area.</p><br>\n<p>\n Last Modified: 09/01/2024<br>\nModified by: Alexander&nbsp;Barg</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nTo prevent data loss in distributed storage systems, information is placed on different storage nodes with he provision that the data on any individual node can be recovered from a small subset of nodes in the systems should that node fail and become inoperable. Communication constraints within the system may further suggest that the recovery can rely only on certain particular subsets of storage nodes. With these assumptions it is natural to model storage systems as graphs whose vertices represent the set of the storage nodes and edges connect the nodes that can naturally communicate in the system. This model gives rise to the concept of storage codes on graphs which encode information in the form that allows node recovery from the set of node's neighbors in the graph.\n\n\n\nThe project was devoted to the investigation of properties of storage codes on graphs. One of the first questions to be asked is to determine the largest size of the code on a graph for specific graph families. This question was resolved for graphs with no triangles, where it was shown that the information can be encoded in a way that allows arbitrary combinations of bits to be stored on the vertices on the graph, with very small overhead provisioned for the recovery.\n\n\n\nThe graphical model of storage was extended to large, or potentially infinite graphs, giving rise to the concept of recoverable systems. The project examined the growth rate of the set of configurations that support node recovery for various types of neighborhoods of the node. This problem was further considered for graphs represented by two- and multi-dimensional grids, where some answers for the system capacity were also found.\n\n\n\nOverall, the project has advanced a new model of distributed storage systems, resolving some of the open problems in this area and promoting the use of diverse mathematical methods for the analysis of the model. Application of mathematical methods previously not employed for the analysis of coding schemes on graphs presents a range of new problems and challenges for further research in this area.\t\t\t\t\tLast Modified: 09/01/2024\n\n\t\t\t\t\tSubmitted by: AlexanderBarg\n"
 }
}