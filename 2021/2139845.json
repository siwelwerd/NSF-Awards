{
 "awd_id": "2139845",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: CCF: SHF: Scalable Software Verification through Automated Derivation of Domain-Specific Optimization Tactics",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2021-09-01",
 "awd_exp_date": "2024-08-31",
 "tot_intn_awd_amt": 198944.0,
 "awd_amount": 198944.0,
 "awd_min_amd_letter_date": "2021-08-31",
 "awd_max_amd_letter_date": "2021-08-31",
 "awd_abstract_narration": "The ever-growing reliance of society on software-intensive systems drives a continued demand for increased software dependability, making it more important than ever. Formal-verification techniques provide the highest degree of software assurance, with their strengths residing in their automated yet rigorous analysis capabilities. Performing such formal analyses is, however, an expensive endeavor, facing scalability issues. This challenge is exacerbated when considering the evolving nature of complex systems. The high cost of formal verification is thus prohibitive for rapidly evolving large-scale systems, despite the benefits it can offer for reliability, safety, and security. This research seeks to develop techniques for automating the development of optimizations for software-verification techniques with the aim that each system of interest can have verification tailored to its specific characteristics, thereby significantly reducing the verification cost. This, in turn, allows software engineers to continuously analyze evolving systems online, rather than the current practice of performing expensive, long-running formal analysis once, if at all, during the entire development process. In addition to graduate students, this project will attempt to involve undergraduate, female, and underrepresented minority students.\r\n\r\nThis research project explores the possibility of driving the automated discovery of domain-specific optimizations for software-verification techniques. Historically, such optimizations have arisen from the insights of a few dozen experts in software verification worldwide. This research is taking a different approach. The project seeks to automatically infer domain-specific, sound optimizations to trim the verification bounds without requiring any prior domain expertise on the part of the analyzer, promising to make software verification significantly more scalable and cost-effective. The intellectual merit of this research is a novel, speculative analysis, underpinned by established, proven model-finding technologies to automatically recognize opportunities for the derivation of sound optimizations, without requiring domain expertise or excessive overhead, thereby significantly diminishing the analysis cost. This research promises to advance the state-of-the-art by rendering bounded formal verification more tractable, thereby expanding the areas that can practically benefit from formal verification techniques.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Hamid",
   "pi_last_name": "Bagheri",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Hamid Bagheri",
   "pi_email_addr": "bagheri@unl.edu",
   "nsf_id": "000678516",
   "pi_start_date": "2021-08-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Nebraska-Lincoln",
  "inst_street_address": "2200 VINE ST # 830861",
  "inst_street_address_2": "",
  "inst_city_name": "LINCOLN",
  "inst_state_code": "NE",
  "inst_state_name": "Nebraska",
  "inst_phone_num": "4024723171",
  "inst_zip_code": "685032427",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "NE01",
  "org_lgl_bus_name": "BOARD OF REGENTS OF THE UNIVERSITY OF NEBRASKA",
  "org_prnt_uei_num": "",
  "org_uei_num": "HTQ6K6NJFHA6"
 },
 "perf_inst": {
  "perf_inst_name": "University of Nebraska-Lincoln",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NE",
  "perf_st_name": "Nebraska",
  "perf_zip_code": "685031435",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "NE01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 198944.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project developed innovative techniques for automating the discovery of domain-specific optimizations in software verification. Traditionally, such optimizations have emerged from insights provided by a limited number of verification experts. Our approach aimed to automatically infer sound, domain-specific optimizations to reduce verification bounds without requiring prior domain expertise, thereby making software verification more scalable and cost-effective. The intellectual merit of this research lies in its novel speculative analysis, which is built on established model-finding technologies. This method identifies opportunities for deriving sound optimizations without the need for domain expertise or excessive overhead, significantly reducing analysis costs.</p>\n<p>We demonstrated that an inexpensive, one-time speculative analysis could determine which relational bounds in a given specification could be \"fixed\" and reused from prior solutions. This capability enables the automatic discovery and exploitation of potential domain-specific optimizations for repeated verification of evolving formal specifications. To realize this concept in practice, we developed SoRBoT, the first known formal analyzer backed by this approach implemented in Alloy's relational logic. Extensive experiments using real-world software corroborated the efficacy and practicality of our approach.</p>\n<p>The project also had broader impacts on education, as the results were incorporated into course materials at both undergraduate and graduate levels. Several PhD students who participated in this project have secured positions in academia as tenure-track faculty members and in software companies, facilitating technology transfer. Additionally, the project promoted diversity in computing by supporting female and underrepresented students, ultimately contributing to a more inclusive field. By enabling engineers to improve software quality, this research positively affects a society increasingly reliant on software.</p>\n<p>The results of this work were disseminated widely through numerous publications at top academic conferences and journals, including two ACM SIGSOFT distinguished paper awards. The principal investigators and students involved delivered multiple presentations at conferences, universities, and companies to share their findings. Furthermore, the tools and artifacts resulting from this project have been made publicly available to support future research and facilitate the transition of technology to industry.</p><br>\n<p>\n Last Modified: 10/01/2024<br>\nModified by: Hamid&nbsp;Bagheri</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThis project developed innovative techniques for automating the discovery of domain-specific optimizations in software verification. Traditionally, such optimizations have emerged from insights provided by a limited number of verification experts. Our approach aimed to automatically infer sound, domain-specific optimizations to reduce verification bounds without requiring prior domain expertise, thereby making software verification more scalable and cost-effective. The intellectual merit of this research lies in its novel speculative analysis, which is built on established model-finding technologies. This method identifies opportunities for deriving sound optimizations without the need for domain expertise or excessive overhead, significantly reducing analysis costs.\n\n\nWe demonstrated that an inexpensive, one-time speculative analysis could determine which relational bounds in a given specification could be \"fixed\" and reused from prior solutions. This capability enables the automatic discovery and exploitation of potential domain-specific optimizations for repeated verification of evolving formal specifications. To realize this concept in practice, we developed SoRBoT, the first known formal analyzer backed by this approach implemented in Alloy's relational logic. Extensive experiments using real-world software corroborated the efficacy and practicality of our approach.\n\n\nThe project also had broader impacts on education, as the results were incorporated into course materials at both undergraduate and graduate levels. Several PhD students who participated in this project have secured positions in academia as tenure-track faculty members and in software companies, facilitating technology transfer. Additionally, the project promoted diversity in computing by supporting female and underrepresented students, ultimately contributing to a more inclusive field. By enabling engineers to improve software quality, this research positively affects a society increasingly reliant on software.\n\n\nThe results of this work were disseminated widely through numerous publications at top academic conferences and journals, including two ACM SIGSOFT distinguished paper awards. The principal investigators and students involved delivered multiple presentations at conferences, universities, and companies to share their findings. Furthermore, the tools and artifacts resulting from this project have been made publicly available to support future research and facilitate the transition of technology to industry.\t\t\t\t\tLast Modified: 10/01/2024\n\n\t\t\t\t\tSubmitted by: HamidBagheri\n"
 }
}