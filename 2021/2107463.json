{
 "awd_id": "2107463",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: SHF: Medium: Causal Performance Debugging for Highly-Configurable Systems",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2021-10-01",
 "awd_exp_date": "2024-09-30",
 "tot_intn_awd_amt": 407048.0,
 "awd_amount": 407048.0,
 "awd_min_amd_letter_date": "2021-07-14",
 "awd_max_amd_letter_date": "2021-07-14",
 "awd_abstract_narration": "Software performance is critical for most software systems to achieve scale and limit operating costs and energy consumption. As modern software systems, such as big data and machine-learning systems, are increasingly built by composing many reusable infrastructure components and deployed on distributed and heterogeneous hardware, developers have powerful tools and abstractions at their fingertips, and as a result face immense configuration complexity. Software and hardware need to be selected and configured carefully to achieve high performance for a given system and task. Unfortunately, in practice, performance faults and misconfigurations are common, where a system performs much worse than expected, not achieving its mission or simply wasting cost and energy. In large configuration spaces, end-users and developers face severe challenges in understanding and fixing performance faults by changing software configuration, changing hardware deployment, or modifying the software's code itself. Current approaches that model system performance by analyzing correlations among performance measurements and options are slow and may produce misleading results, obfuscating the actual causes of performance faults. Even if they can fix the problem, most of them cannot explain why (1) the obtained configurations are the real cause of the problem, and (2) a user/developer should consider the proposed recommendations. In both cases, the lack of explainability is a big issue. The project is intended to initiate a paradigm shift in today's testing and debugging methodology for complex, highly configurable systems, thereby positively impacting a broad range of industrial sectors relying on complex, highly configurable systems. Specifically, the project contributes to substantial energy savings and reduced carbon emissions, especially for the many big-data and machine-learning systems that operate at a massive scale. Finally, the research is providing valuable training for involved students from diverse backgrounds in research and generating high-quality researchers and practitioners for society.\r\n \r\nThis project develops and evaluates foundations and tools for a causal approach to performance modeling and performance debugging. This project introduces the new concept of causal performance models that are learned using causal structure learning by intervening over configuration options and observing system performance regarding (multiple) performance objectives, rather than just analyzing correlations. Causal models enable causal inference and counterfactual reasoning for numerous tasks, including debugging performance faults and misconfigurations. Based on a solid technical foundation of causal modeling and extensive experience with performance modeling for configurable systems, this project develops innovations in three thrusts: (1) It designs and refines a causal modeling approach for software performance of systems composed of multiple configurable components, using innovations in sampling strategies, code analysis, compositional reasoning, and transfer learning to build accurate causal models efficiently. (2) It develops and evaluates user-facing tool support, based on causal models, to help users select well-performing configurations for their specific tasks and hardware and resolve misconfiguration faults with configuration changes, highlighting the (causal) performance impact of configuration decisions and providing a Pareto analysis of involved tradeoffs. (3) It develops and evaluates developer-facing tool support to foster code-level debugging and documentation. Finally, all contributions are being evaluated end-to-end with developers on real performance faults, showing how both users and developers benefit from causal models and related tools.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Pooyan",
   "pi_last_name": "Jamshidi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Pooyan Jamshidi",
   "pi_email_addr": "pjamshid@cse.sc.edu",
   "nsf_id": "000772198",
   "pi_start_date": "2021-07-14",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of South Carolina at Columbia",
  "inst_street_address": "1600 HAMPTON ST",
  "inst_street_address_2": "",
  "inst_city_name": "COLUMBIA",
  "inst_state_code": "SC",
  "inst_state_name": "South Carolina",
  "inst_phone_num": "8037777093",
  "inst_zip_code": "292083403",
  "inst_country_name": "United States",
  "cong_dist_code": "06",
  "st_cong_dist_code": "SC06",
  "org_lgl_bus_name": "UNIVERSITY OF SOUTH CAROLINA",
  "org_prnt_uei_num": "Q93ZDA59ZAR5",
  "org_uei_num": "J22LNTMEDP73"
 },
 "perf_inst": {
  "perf_inst_name": "University of South Carolina",
  "perf_str_addr": "550 Assembly Street",
  "perf_city_name": "Columbia",
  "perf_st_code": "SC",
  "perf_st_name": "South Carolina",
  "perf_zip_code": "292080001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "06",
  "perf_st_cong_dist": "SC06",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 407048.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-c8a3aee9-7fff-5b44-a89e-6649d41c945a\"> </span></p>\r\n<p dir=\"ltr\"><span>Highly configurable systems, such as software platforms, robotics, and machine learning pipelines, offer vast flexibility but also present significant challenges in diagnosing and optimizing performance. This project introduced innovative methods to address these challenges using causal reasoning, transfer learning, and performance modeling. By recovering and leveraging the causal structures underlying system behavior, our research provided robust tools for debugging and optimizing system configurations, even in complex, real-world environments.</span></p>\r\n<p dir=\"ltr\"><span>Key advancements include the development of frameworks like </span><span>CaRE</span><span> and </span><span>CAMEO</span><span>, which use causal analysis to diagnose faults and optimize configurations across diverse systems, from distributed software to physical robots. In addition, tools like </span><span>InfAdapter</span><span> and </span><span>IPA</span><span> enable dynamic reconfiguration of machine learning pipelines, significantly improving performance. For example, </span><span>InfAdapter</span><span> reduced latency violations by 65% and costs by 33% compared to industry-standard tools. The </span><span>CAMEO</span><span> framework accelerated performance optimization by reducing the configuration search space while maintaining robust results across changing environments.</span></p>\r\n<p dir=\"ltr\"><span>These tools have been successfully applied in various scenarios, demonstrating substantial performance gains and scalability improvements. Beyond technical contributions, the project supported the open release of these tools, fostering adoption and collaboration, and integrated the findings into graduate and undergraduate courses, training the next generation of researchers and engineers. Collaborations with industry highlighted the practical value of these approaches, offering a pathway for broad societal impact, including more sustainable and reliable computational systems.</span></p>\r\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 02/14/2025<br>\nModified by: Pooyan&nbsp;Jamshidi</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n \r\n\n\nHighly configurable systems, such as software platforms, robotics, and machine learning pipelines, offer vast flexibility but also present significant challenges in diagnosing and optimizing performance. This project introduced innovative methods to address these challenges using causal reasoning, transfer learning, and performance modeling. By recovering and leveraging the causal structures underlying system behavior, our research provided robust tools for debugging and optimizing system configurations, even in complex, real-world environments.\r\n\n\nKey advancements include the development of frameworks like CaRE and CAMEO, which use causal analysis to diagnose faults and optimize configurations across diverse systems, from distributed software to physical robots. In addition, tools like InfAdapter and IPA enable dynamic reconfiguration of machine learning pipelines, significantly improving performance. For example, InfAdapter reduced latency violations by 65% and costs by 33% compared to industry-standard tools. The CAMEO framework accelerated performance optimization by reducing the configuration search space while maintaining robust results across changing environments.\r\n\n\nThese tools have been successfully applied in various scenarios, demonstrating substantial performance gains and scalability improvements. Beyond technical contributions, the project supported the open release of these tools, fostering adoption and collaboration, and integrated the findings into graduate and undergraduate courses, training the next generation of researchers and engineers. Collaborations with industry highlighted the practical value of these approaches, offering a pathway for broad societal impact, including more sustainable and reliable computational systems.\r\n\n\n\t\t\t\t\tLast Modified: 02/14/2025\n\n\t\t\t\t\tSubmitted by: PooyanJamshidi\n"
 }
}