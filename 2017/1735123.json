{
 "awd_id": "1735123",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EXP: Automatically Synthesizing Valid, Personalized, Formative Assessments of CS1 Concepts",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032925126",
 "po_email": "abaylor@nsf.gov",
 "po_sign_block_name": "Amy Baylor",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 549857.0,
 "awd_amount": 620027.0,
 "awd_min_amd_letter_date": "2017-07-27",
 "awd_max_amd_letter_date": "2020-05-12",
 "awd_abstract_narration": "Millions of people worldwide are trying to learn to code in schools, colleges, universities, and online. To do so successfully, they need significant practice and meaningful feedback that responds to their specific confusions and builds upon the knowledge they already have. Unfortunately, good practice content is challenging to create at scale and skilled teachers capable of providing meaningful feedback are rare and often inaccessible. Moreover, popular online learning technologies only provide a fixed amount of static content and do little to provide meaningful feedback. Because of this, many people give up learning to code, and only those with privileged access to friends, family, mentors, or teachers who can provide this support persist. This limits access to this critical 21st century literacy and ultimately harms the gender, racial, ethnic, and intellectual diversity of our computing workforce. \r\n\r\nThis project seeks to address part of this problem, applying advances in programming languages research that enable the creation of infinite amounts of diverse practice content, and advances in machine learning to build models of what learners do and do not know. By applying these two advances in computer science, the project will create a novel online learning technology that automatically generates assessment content, provides detailed immediate feedback about solutions, and uses assessment information of learners' performance to generate more personalized practice that individually targets concepts that learners are struggling to master. In creating such a system, new techniques for generating practice problems and new approaches to modeling learner knowledge of introductory programming concepts will be realized. The project will also explore students' current approach to practice, then deploy the new system into a large introductory classroom setting to experimentally measure its impact on learning and confidence. If the system is effective, the discoveries have the potential to provide learners in a range of settings more effective practice and learning. This may in turn improve both the competency and diversity of learners who further engage in computing education.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Amy",
   "pi_last_name": "Ko",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Amy J Ko",
   "pi_email_addr": "ajko@uw.edu",
   "nsf_id": "000510102",
   "pi_start_date": "2017-07-27",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Min",
   "pi_last_name": "Li",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Min Li",
   "pi_email_addr": "minli@u.washington.edu",
   "nsf_id": "000486022",
   "pi_start_date": "2017-07-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Washington",
  "inst_street_address": "4333 BROOKLYN AVE NE",
  "inst_street_address_2": "",
  "inst_city_name": "SEATTLE",
  "inst_state_code": "WA",
  "inst_state_name": "Washington",
  "inst_phone_num": "2065434043",
  "inst_zip_code": "981951016",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "WA07",
  "org_lgl_bus_name": "UNIVERSITY OF WASHINGTON",
  "org_prnt_uei_num": "",
  "org_uei_num": "HD1WMN6945W6"
 },
 "perf_inst": {
  "perf_inst_name": "University of Washington",
  "perf_str_addr": "4333 Brooklyn Ave. N.E.",
  "perf_city_name": "Seattle",
  "perf_st_code": "WA",
  "perf_st_name": "Washington",
  "perf_zip_code": "981952350",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "WA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "005Y00",
   "pgm_ele_name": "STEM + Computing (STEM+C) Part"
  },
  {
   "pgm_ele_code": "802000",
   "pgm_ele_name": "Cyberlearn & Future Learn Tech"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "019Z",
   "pgm_ref_txt": "Grad Prep APG:Enhan. Experience"
  },
  {
   "pgm_ref_code": "8045",
   "pgm_ref_txt": "Cyberlearn & Future Learn Tech"
  },
  {
   "pgm_ref_code": "8841",
   "pgm_ref_txt": "Exploration Projects"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0417",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001718DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 549857.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 20640.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 33530.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-9c79b94e-7fff-1c46-c79b-921b79357a1a\">&nbsp;</span></p>\n<p dir=\"ltr\"><span>Interest in computer science has grown rapidly over the past twenty years, attracting learners to K-12 CS electives, higher education CS majors, private coding bootcamps, and online coding tutorials. When this learning is successful, it has significant potential to empower people to create with software, as well as pursue careers in software development. However, knowing that learning is successful requires careful assessment. Prior to this award, there had been little investigation into how to ensure that assessments of CS knowledge are reliable, valid, unbiased, and feasible to create in light of increasing demand for CS education.</span></p>\n<p dir=\"ltr\"><span>This project investigated these problems of CS learning assessments, focusing specifically on programming knowledge. The project began by trying to understand what programming knowledge consists of. It contributed three new ideas in this space. First, it found that programming knowledge consists of at least four distinct kinds of knowledge: 1) reading programming language notations, 2) writing semantics in programming language notations, 3) reading templated patterns of computation in a programming language notation, and 4) writing patterns of computation in a programming language notation. Second, it found that programming knowledge also requires knowledge of application programming interfaces, which consists of three distinct kinds of knowledge: 1) knowledge of the domain concepts an API models (e.g., understanding an API that analyzes natural language might require understanding linguistic ideas like &ldquo;parts of speech&rdquo; and grammar); 2) knowledge of the hidden semantic rules that govern API execution, and 3) knowledge of patterns of API composition used to achieve particular goals. Finally, it found that programming knowledge also interacts with design knowledge in two forms: 1) program space design, which involves considering various ways to implement algorithms and data structures to achieve a goal, and 2) problem space design, which involves various ways of conceiving a problem one is addressing by creating new software. These three perspectives reveal the rich and complex space of programming knowledge that one might assess as the underlying construct and lead to important implications in constructing assessment tasks.</span></p>\n<p dir=\"ltr\"><span>Building upon these theories of programming knowledge, the project explored several aspects of assessing this knowledge. It contributed a new way of procedurally generating assessments of programming language semantics readings skills, allowing future technologies to automatically generate reliable, valid assessments of programming language learning. It contributed guidelines for applying item validity and item bias to CS assessment design and validation. It investigated the impact of situating formative assessments in CS learning, finding that giving learners agency in reflecting on their progress to choose a next learning task does not consistently help with learning. A series of studies about interest development, transfer students, coding bootcamps, student career planning, and the COVID-19 pandemic showed how sociocultural factors in a learning community can strongly shape student perceptions of the value and meaning of assessment on their identities, interests, and professional aspirations.</span></p>\n<p dir=\"ltr\"><span>The discoveries in this project have broadly impacted CS learning. The project taught more than 60 low-income students of color who were the first in their families to attend college, many of whom are now CS majors in institutions of higher education. The project&rsquo;s innovations in CS assessment have influenced the curriculum and teacher preparation at Code.org, which has impacted hundreds of thousands of students in K-12 CS education settings. The project also engaged 14 undergraduate students in research, 5 of whom pursued doctoral programs to further study CS education.</span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/05/2020<br>\n\t\t\t\t\tModified by: Amy&nbsp;J&nbsp;Ko</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2020/1735123/1735123_10507770_1601571384790_theory--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2020/1735123/1735123_10507770_1601571384790_theory--rgov-800width.jpg\" title=\"A 2 by 2 table of four types of programming knowledge\"><img src=\"/por/images/Reports/POR/2020/1735123/1735123_10507770_1601571384790_theory--rgov-66x44.jpg\" alt=\"A 2 by 2 table of four types of programming knowledge\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The project developed assessment that distinguished between reading and writing programs</div>\n<div class=\"imageCredit\">Benjamin Xie</div>\n<div class=\"imageSubmitted\">Amy&nbsp;J&nbsp;Ko</div>\n<div class=\"imageTitle\">A 2 by 2 table of four types of programming knowledge</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2020/1735123/1735123_10507770_1601579389763_asessment--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2020/1735123/1735123_10507770_1601579389763_asessment--rgov-800width.jpg\" title=\"Graphs portraying the underlying knowledge assessed by an assessment item\"><img src=\"/por/images/Reports/POR/2020/1735123/1735123_10507770_1601579389763_asessment--rgov-66x44.jpg\" alt=\"Graphs portraying the underlying knowledge assessed by an assessment item\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">An approach to modeling aspects of a program that assessed particular knowledge of a programming language.</div>\n<div class=\"imageCredit\">Greg Nelson</div>\n<div class=\"imageSubmitted\">Amy&nbsp;J&nbsp;Ko</div>\n<div class=\"imageTitle\">Graphs portraying the underlying knowledge assessed by an assessment item</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\n \nInterest in computer science has grown rapidly over the past twenty years, attracting learners to K-12 CS electives, higher education CS majors, private coding bootcamps, and online coding tutorials. When this learning is successful, it has significant potential to empower people to create with software, as well as pursue careers in software development. However, knowing that learning is successful requires careful assessment. Prior to this award, there had been little investigation into how to ensure that assessments of CS knowledge are reliable, valid, unbiased, and feasible to create in light of increasing demand for CS education.\nThis project investigated these problems of CS learning assessments, focusing specifically on programming knowledge. The project began by trying to understand what programming knowledge consists of. It contributed three new ideas in this space. First, it found that programming knowledge consists of at least four distinct kinds of knowledge: 1) reading programming language notations, 2) writing semantics in programming language notations, 3) reading templated patterns of computation in a programming language notation, and 4) writing patterns of computation in a programming language notation. Second, it found that programming knowledge also requires knowledge of application programming interfaces, which consists of three distinct kinds of knowledge: 1) knowledge of the domain concepts an API models (e.g., understanding an API that analyzes natural language might require understanding linguistic ideas like \"parts of speech\" and grammar); 2) knowledge of the hidden semantic rules that govern API execution, and 3) knowledge of patterns of API composition used to achieve particular goals. Finally, it found that programming knowledge also interacts with design knowledge in two forms: 1) program space design, which involves considering various ways to implement algorithms and data structures to achieve a goal, and 2) problem space design, which involves various ways of conceiving a problem one is addressing by creating new software. These three perspectives reveal the rich and complex space of programming knowledge that one might assess as the underlying construct and lead to important implications in constructing assessment tasks.\nBuilding upon these theories of programming knowledge, the project explored several aspects of assessing this knowledge. It contributed a new way of procedurally generating assessments of programming language semantics readings skills, allowing future technologies to automatically generate reliable, valid assessments of programming language learning. It contributed guidelines for applying item validity and item bias to CS assessment design and validation. It investigated the impact of situating formative assessments in CS learning, finding that giving learners agency in reflecting on their progress to choose a next learning task does not consistently help with learning. A series of studies about interest development, transfer students, coding bootcamps, student career planning, and the COVID-19 pandemic showed how sociocultural factors in a learning community can strongly shape student perceptions of the value and meaning of assessment on their identities, interests, and professional aspirations.\nThe discoveries in this project have broadly impacted CS learning. The project taught more than 60 low-income students of color who were the first in their families to attend college, many of whom are now CS majors in institutions of higher education. The project\u2019s innovations in CS assessment have influenced the curriculum and teacher preparation at Code.org, which has impacted hundreds of thousands of students in K-12 CS education settings. The project also engaged 14 undergraduate students in research, 5 of whom pursued doctoral programs to further study CS education.\n\n \n\n \n\n\t\t\t\t\tLast Modified: 10/05/2020\n\n\t\t\t\t\tSubmitted by: Amy J Ko"
 }
}