{
 "awd_id": "1725702",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SPX: Collaborative Research: Multicore to Wide Area Analytics on Streaming Data",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Tracy Kimbrel",
 "awd_eff_date": "2017-08-15",
 "awd_exp_date": "2021-07-31",
 "tot_intn_awd_amt": 308000.0,
 "awd_amount": 308000.0,
 "awd_min_amd_letter_date": "2017-08-02",
 "awd_max_amd_letter_date": "2019-12-02",
 "awd_abstract_narration": "In today's big data era, there is an urgent need for methods that can quickly derive analytical insights from large volumes of data that are continuously generated.  Such streaming data include video, audio, activity logs, and sensor data, and are generated on a massive scale all over the world.  The need for real-time streaming analytics can only be fulfilled with the help of appropriately designed parallel and distributed algorithms. However, parallel and distributed computing systems come in a variety of shapes and sizes, and algorithms should be designed to match the characteristics of the underlying system. This project develops methods for analyzing massive streaming data on computing systems ranging from machines with multiple cores sharing memory to geo-distributed data centers communicating over wide-area networks. The results of this research are expected to improve the efficiency, latency, and throughput of streaming analytics.  Due to the foundational nature of the analytical tasks considered, results of this project will impact disciplines that use large-scale machine learning and graph analytics, including cybersecurity, social network analysis, and transportation. Resulting software will be released as toolkits on stream processing platforms, and deployed in a smart-city camera infrastructure. Synergy between the research goals and the teaching goals of the PIs will lead to new instructional material in existing courses as well as development of new courses in data analytics. Individuals from underrepresented groups will be included as a part of the project. The project will benefit from and strengthen collaborations between academia, industry, and national labs on streaming analytics.\r\n \r\nThe first technical thrust of the project is on designing shared memory parallel algorithms for computation on data streams, that can achieve a high throughput and fast convergence for complex analytics tasks. The second thrust is on designing distributed streaming algorithms that can tolerate variable communication delays and adapt to available bandwidth in a wide-area network, through identifying good tradeoffs between freshness of results and volume of communication. These advances will be studied in the context of fundamental graph analytics and machine learning tasks such as subgraph counting, graph connectivity and clustering, matrix factorization, and deep networks. The project will utilize the vast body of theory and techniques developed in the realm of parallel computing in the design of methods for processing streaming data, leading to a toolkit of techniques that can be reused across applications. The project will also lead to advances in sequential streaming and incremental algorithms for certain problems; for instance, problems in machine learning that use iterative convergent methods. Based on the techniques designed, the project will design and build a hierarchical parameter server that operates effectively across the spectrum from multicore machines to data centers to wide-area data sources.\r\n",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Goce",
   "pi_last_name": "Trajcevski",
   "pi_mid_init": "P",
   "pi_sufx_name": "",
   "pi_full_name": "Goce P Trajcevski",
   "pi_email_addr": "gocet25@iastate.edu",
   "nsf_id": "000304901",
   "pi_start_date": "2019-12-02",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Srikanta",
   "pi_last_name": "Tirthapura",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Srikanta Tirthapura",
   "pi_email_addr": "snt@iastate.edu",
   "nsf_id": "000111060",
   "pi_start_date": "2017-08-02",
   "pi_end_date": "2019-12-02"
  }
 ],
 "inst": {
  "inst_name": "Iowa State University",
  "inst_street_address": "1350 BEARDSHEAR HALL",
  "inst_street_address_2": "515 MORRILL ROAD",
  "inst_city_name": "AMES",
  "inst_state_code": "IA",
  "inst_state_name": "Iowa",
  "inst_phone_num": "5152945225",
  "inst_zip_code": "500112103",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IA04",
  "org_lgl_bus_name": "IOWA STATE UNIVERSITY OF SCIENCE AND TECHNOLOGY",
  "org_prnt_uei_num": "DQDBM7FGJPC5",
  "org_uei_num": "DQDBM7FGJPC5"
 },
 "perf_inst": {
  "perf_inst_name": "Iowa State University",
  "perf_str_addr": "3227 Coover Hall",
  "perf_city_name": "Ames",
  "perf_st_code": "IA",
  "perf_st_name": "Iowa",
  "perf_zip_code": "500111046",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "IA04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "042Y00",
   "pgm_ele_name": "PPoSS-PP of Scalable Systems"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 308000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The main objective of this project was to develop algorithms and software for real-time mining of dense structures (subgraphs) from a massive graph stream.&nbsp;Dense subgraphs are groups of tightly interconnected vertices that reveal the underlying structure of communities in a graph. Many of today's big data applications need to identify dense structures in a streaming setting &ndash; including real-time identification of &ldquo;breaking news&rdquo; from social media, real-time identification of communities within microblogging platforms, and so on. However, the methods used so far are all designed for static graphs and do not apply directly to dynamic graphs.</p>\n<p>From a foundational perspective, identifying dense structures in a graph has been a problem of long-standing interest in computer science, but even many of the basic questions have remained unanswered in the context of dynamic graphs. We considered real-time enumeration of dense structures within an evolving graph, and commonly used definitions of dense structures, such as maximal cliques, maximal bicliques, quasi-cliques and quasi-bicliques, and related structures. The project focused on designing algorithms with provable properties of correctness and efficiency with respect to space and time as well as efficient implementations.</p>\n<p>We considered quasi-cliques which, unlike maximal cliques which are complete dense structures in a graph, are incomplete structures, and allow the absence of edges between a (controlled number of) pairs of vertices in the structure. Complementary, we also addressed the problems of counting specific structures in graphs, such as butterflies and triangles, in both static as well as streaming settings. We analyzed the algorithms using the traditional methods of worst-case time and space-complexity to derive an estimate of the runtime of the algorithms. We also considered hardness results for problems related to quasi-clique enumeration, and found that there are significant obstacles to developing worst-case efficient algorithms for these problems. Part of our efforts in streaming settings addressed the problem of concept drift detection, towards which we explored the trasitioning between steady stated and reactive state for model construction.</p>\n<p>We also worked on parallelizing solutions to substructure enumeration. Along this direction, we observed that the lack of methods that can exploit shared memory parallelism, and set out to close this gap.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/10/2021<br>\n\t\t\t\t\tModified by: Goce&nbsp;P&nbsp;Trajcevski</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe main objective of this project was to develop algorithms and software for real-time mining of dense structures (subgraphs) from a massive graph stream. Dense subgraphs are groups of tightly interconnected vertices that reveal the underlying structure of communities in a graph. Many of today's big data applications need to identify dense structures in a streaming setting &ndash; including real-time identification of \"breaking news\" from social media, real-time identification of communities within microblogging platforms, and so on. However, the methods used so far are all designed for static graphs and do not apply directly to dynamic graphs.\n\nFrom a foundational perspective, identifying dense structures in a graph has been a problem of long-standing interest in computer science, but even many of the basic questions have remained unanswered in the context of dynamic graphs. We considered real-time enumeration of dense structures within an evolving graph, and commonly used definitions of dense structures, such as maximal cliques, maximal bicliques, quasi-cliques and quasi-bicliques, and related structures. The project focused on designing algorithms with provable properties of correctness and efficiency with respect to space and time as well as efficient implementations.\n\nWe considered quasi-cliques which, unlike maximal cliques which are complete dense structures in a graph, are incomplete structures, and allow the absence of edges between a (controlled number of) pairs of vertices in the structure. Complementary, we also addressed the problems of counting specific structures in graphs, such as butterflies and triangles, in both static as well as streaming settings. We analyzed the algorithms using the traditional methods of worst-case time and space-complexity to derive an estimate of the runtime of the algorithms. We also considered hardness results for problems related to quasi-clique enumeration, and found that there are significant obstacles to developing worst-case efficient algorithms for these problems. Part of our efforts in streaming settings addressed the problem of concept drift detection, towards which we explored the trasitioning between steady stated and reactive state for model construction.\n\nWe also worked on parallelizing solutions to substructure enumeration. Along this direction, we observed that the lack of methods that can exploit shared memory parallelism, and set out to close this gap.\n\n \n\n\t\t\t\t\tLast Modified: 12/10/2021\n\n\t\t\t\t\tSubmitted by: Goce P Trajcevski"
 }
}