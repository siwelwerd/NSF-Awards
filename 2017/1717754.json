{
 "awd_id": "1717754",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Accelerating Graph Processing with Vertically Integrated Programming Model, Runtime and Architecture",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Danella Zhao",
 "awd_eff_date": "2017-07-15",
 "awd_exp_date": "2022-06-30",
 "tot_intn_awd_amt": 450000.0,
 "awd_amount": 450000.0,
 "awd_min_amd_letter_date": "2017-07-07",
 "awd_max_amd_letter_date": "2017-07-07",
 "awd_abstract_narration": "Recently, graph processing received intensive interests due to the increasing need to understand relationships. For example, in cyber security, the graph analytics are needed to identify probes on the network. In social media, the graph analytics are employed to figure out the relationships and influences between people. In infrastructure monitoring (e.g. smart building), the graph analytics are crucial in spotting failures based on system dependencies before they become critical and cause cascading failures. On the other hand, in-memory graph processing is becoming more appealing due to recent technology advances (e.g. NDP with 3D integration) that improved the scalability of memory system with lower cost. Therefore, this research program timely considers graph processing(which has broad applications) with the emerging trends in the memory system.\r\n\r\nThis project will investigate a vertically integrated approach involving programming model, runtime system and architecture to holistically accelerate in-memory graph processing. It contains three research innovations and cross-stack integration: (1) Reducing data movements with novel programming model. It will study a new graph processing programming model,?Two-phase Vertex Program?, designed for PIM that supports a novel \"source-cut\" data partition. (2) Batched regular inter-cube communication and intra-cube locality enhancement. It will examine how to re-organize the computation to make the inter-cube communications happen in a controlled manner. This allows batched communication and the overlapping of computation and communication. To this end, it will study how to partition the cores in the same cube into two groups (Process and Apply unit) to improve intra-cube memory access locality. (3) Co-designed locality-aware scheduler and prefetcher. This project will develop a novel architectural interface so that the software and architecture could interact. On one side, it provides scheduler the capability to query the locality information of scheduling candidates to make better decisions. On the other side, the scheduler could convey the scheduling decisions to architecture so that even a simple prefetcher can precisely fetch the data related to the active vertices that will be scheduled soon. The proposed research will also contribute to society through engaging high-school and undergraduate students from minority-serving institutions into research, attracting women and under-represented groups into graduate education, expanding the computer engineering curriculum with graph processing architectures and runtime systems, disseminating research infrastructure for education and training, and collaborating with the industry.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Xuehai",
   "pi_last_name": "Qian",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Xuehai Qian",
   "pi_email_addr": "qian214@purdue.edu",
   "nsf_id": "000702360",
   "pi_start_date": "2017-07-07",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Southern California",
  "inst_street_address": "3720 S FLOWER ST FL 3",
  "inst_street_address_2": "",
  "inst_city_name": "LOS ANGELES",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "2137407762",
  "inst_zip_code": "90033",
  "inst_country_name": "United States",
  "cong_dist_code": "34",
  "st_cong_dist_code": "CA34",
  "org_lgl_bus_name": "UNIVERSITY OF SOUTHERN CALIFORNIA",
  "org_prnt_uei_num": "",
  "org_uei_num": "G88KLJR3KYT5"
 },
 "perf_inst": {
  "perf_inst_name": "University of Southern California",
  "perf_str_addr": "3720 South Flower Street",
  "perf_city_name": "Los Angeles",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "900890001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "37",
  "perf_st_cong_dist": "CA37",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7941",
   "pgm_ref_txt": "COMPUTER ARCHITECTURE"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 450000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Recently, graph processing received intensive interests due to the increasing need to understand relationships, we can easily give several examples. In cyber security, the graph analytics are needed to identify probes on the network. In social media, we rely on the graph analytics to figure out the relationships and influences between people. In infrastructure monitoring (e.g. smart building), the graph ana- lytics are crucial in spotting failures based on system dependencies before they become critical and cause cascading failures. We believe that graph analytics is beginning to be applied to a very broad set of problems. On the other hand, in-memory graph processing is becoming more appealing due to recent technology advances (e.g. NDP with 3D integration) that improved the scalability of memory system with lower cost. Therefore, this research program timely considers graph processing (which has broad applications) with the emerging trends in the memory system. The outcome of this research program will likely generate far-reaching impact.<br />In this project, we target three challenges for graph processing system and architecture: 1) Excessive inter-cube data movements; 2) Irregular inter-cube communication; 3) the gap between graph algorithm and runtime system. We proposed several architectures based on processing-in-memory technology to reduce and optimize data movement. Specifically, we propose to reduce data movements with novel programming model and enable batched regular inter-cube communication and intra-cube locality enhancement. On the system side, we built a distributed graph processing system with novel APIs that allows the compiler to express algorithm semantics. Such semantics can be enforced precisely by the distributed runtime system to eliminate redundant computation and communication during graph processing. The results show the significant performnace improvements over the state-of-the-art systems. The architecture and system can enable more large graph analytics applications in various domains, including social network, netural language processing, system biology, recommendation systems and cyber security, etc.&nbsp;<br />The research outcomes of the project have been published in top computer system and architecture conferences/journals such as MICRO, ASPLOS, HPCA and ACM Transactions on Computer Systems.&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/18/2022<br>\n\t\t\t\t\tModified by: Xuehai&nbsp;Qian</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nRecently, graph processing received intensive interests due to the increasing need to understand relationships, we can easily give several examples. In cyber security, the graph analytics are needed to identify probes on the network. In social media, we rely on the graph analytics to figure out the relationships and influences between people. In infrastructure monitoring (e.g. smart building), the graph ana- lytics are crucial in spotting failures based on system dependencies before they become critical and cause cascading failures. We believe that graph analytics is beginning to be applied to a very broad set of problems. On the other hand, in-memory graph processing is becoming more appealing due to recent technology advances (e.g. NDP with 3D integration) that improved the scalability of memory system with lower cost. Therefore, this research program timely considers graph processing (which has broad applications) with the emerging trends in the memory system. The outcome of this research program will likely generate far-reaching impact.\nIn this project, we target three challenges for graph processing system and architecture: 1) Excessive inter-cube data movements; 2) Irregular inter-cube communication; 3) the gap between graph algorithm and runtime system. We proposed several architectures based on processing-in-memory technology to reduce and optimize data movement. Specifically, we propose to reduce data movements with novel programming model and enable batched regular inter-cube communication and intra-cube locality enhancement. On the system side, we built a distributed graph processing system with novel APIs that allows the compiler to express algorithm semantics. Such semantics can be enforced precisely by the distributed runtime system to eliminate redundant computation and communication during graph processing. The results show the significant performnace improvements over the state-of-the-art systems. The architecture and system can enable more large graph analytics applications in various domains, including social network, netural language processing, system biology, recommendation systems and cyber security, etc. \nThe research outcomes of the project have been published in top computer system and architecture conferences/journals such as MICRO, ASPLOS, HPCA and ACM Transactions on Computer Systems. \n\n\t\t\t\t\tLast Modified: 09/18/2022\n\n\t\t\t\t\tSubmitted by: Xuehai Qian"
 }
}