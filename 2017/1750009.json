{
 "awd_id": "1750009",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: Duality-Based Algorithm Synthesis",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2017-10-01",
 "awd_exp_date": "2020-03-31",
 "tot_intn_awd_amt": 249938.0,
 "awd_amount": 249938.0,
 "awd_min_amd_letter_date": "2017-09-05",
 "awd_max_amd_letter_date": "2017-09-05",
 "awd_abstract_narration": "The task of designing an algorithm that performs a desired function, or achieves a desired goal, currently requires expertise in the problem domain.  Consequently, although people have access to powerful computing platforms, most non-experts are limited to using these platforms through pre-programmed apps. Automated program synthesis changes this current state of affairs by enabling computers to convert high-level specification of the problem to a computable procedure.  Apart from the benefit of making technology accessible to more people, program synthesis has the promise of reducing errors, and improving performance, of software.  \r\n\r\nProgram synthesis refers to the problem of discovering a program that meets the requirements specified by a user.  It is a hard problem to solve in general.  However, if the space of possible programs is restricted, then it becomes feasible to iteratively search the space of possible programs for some program that works correctly on all inputs.  The quantifier alternation in this exists-forall formulation makes synthesis computationally difficult and hinders scalability. This project drastically improves efficiency of program synthesis by developing and exploiting a notion of duality in programming.  Duality between computing and proving promises to play a foundational role in understanding program analysis and synthesis. It not only encompasses several well-known concepts, such as types, abstractions, and abstract interpretation, but also goes beyond them to provide a general methodology for attaching a proof with a program.  Duality enables approximating the exists-forall synthesis constraint by a relatively more tractable exists-constraint.  This project develops the duality-based synthesis approach.  This project also makes contributions to education, research, and technology transfer to industry through freely distributed tools and academic visitor programs that include internships for graduate students.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Ashish",
   "pi_last_name": "Tiwari",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ashish Tiwari",
   "pi_email_addr": "ashish.tiwari@microsoft.com",
   "nsf_id": "000168554",
   "pi_start_date": "2017-09-05",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Susmit",
   "pi_last_name": "Jha",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Susmit Jha",
   "pi_email_addr": "susmit.jha@sri.com",
   "nsf_id": "000738297",
   "pi_start_date": "2017-09-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "SRI International",
  "inst_street_address": "333 RAVENSWOOD AVE",
  "inst_street_address_2": "",
  "inst_city_name": "MENLO PARK",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "6097342285",
  "inst_zip_code": "940253493",
  "inst_country_name": "United States",
  "cong_dist_code": "16",
  "st_cong_dist_code": "CA16",
  "org_lgl_bus_name": "SRI INTERNATIONAL",
  "org_prnt_uei_num": "SRG2J1WS9X63",
  "org_uei_num": "SRG2J1WS9X63"
 },
 "perf_inst": {
  "perf_inst_name": "SRI International",
  "perf_str_addr": "333 Ravenswood Avenue",
  "perf_city_name": "Menlo Park",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "940253493",
  "perf_ctry_code": "US",
  "perf_cong_dist": "16",
  "perf_st_cong_dist": "CA16",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 249938.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Automated program synthesis aims to enable computers to convert high-level specification of a problem into a computable procedure without programming by domain-experts. Currently, most non-experts are limited to using computation platforms through pre-programmed apps or fixed-functionality machine learning models. The automated synthesis technique developed in this project will make the technology accessible more widely. It will also improve the performance, safety, and robustness of programs and models. The traditional approach to programming and building models proceeds in two steps - the first step is to generate the artifact through manual programming or data-driven learning. The second step is to verify the artifact for its correctness. In this project, we have established a duality between system synthesis and proof of its correctness. This duality was used to generate correct-by-construction control algorithms and learn interpretable explanations of data-driven models. The developed duality-based synthesis technique addresses foundational challenges in scalable, automated synthesis of safe control and sequential decision-making with applications to the design of safe autonomous systems such as self-driving cars. The developed techniques also address the challenges of ensuring data-driven models are fair, trustworthy, interpretable, and resilient.</p>\n<p>The developed program synthesis techniques in this project create a user-friendly interface between humans and intelligent computer platforms. This interface will enable non-experts to program them and address the \"trinity\" of major challenges in artificial intelligence to improve trustworthiness, resilience, and the interpretability of intelligent systems.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/05/2020<br>\n\t\t\t\t\tModified by: Susmit&nbsp;Jha</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nAutomated program synthesis aims to enable computers to convert high-level specification of a problem into a computable procedure without programming by domain-experts. Currently, most non-experts are limited to using computation platforms through pre-programmed apps or fixed-functionality machine learning models. The automated synthesis technique developed in this project will make the technology accessible more widely. It will also improve the performance, safety, and robustness of programs and models. The traditional approach to programming and building models proceeds in two steps - the first step is to generate the artifact through manual programming or data-driven learning. The second step is to verify the artifact for its correctness. In this project, we have established a duality between system synthesis and proof of its correctness. This duality was used to generate correct-by-construction control algorithms and learn interpretable explanations of data-driven models. The developed duality-based synthesis technique addresses foundational challenges in scalable, automated synthesis of safe control and sequential decision-making with applications to the design of safe autonomous systems such as self-driving cars. The developed techniques also address the challenges of ensuring data-driven models are fair, trustworthy, interpretable, and resilient.\n\nThe developed program synthesis techniques in this project create a user-friendly interface between humans and intelligent computer platforms. This interface will enable non-experts to program them and address the \"trinity\" of major challenges in artificial intelligence to improve trustworthiness, resilience, and the interpretability of intelligent systems.\n\n\t\t\t\t\tLast Modified: 08/05/2020\n\n\t\t\t\t\tSubmitted by: Susmit Jha"
 }
}