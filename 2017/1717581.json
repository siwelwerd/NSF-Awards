{
 "awd_id": "1717581",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC:  CORE:  Small:  Collaborative:  A New Approach to Federated Network Security",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 131691.0,
 "awd_amount": 131691.0,
 "awd_min_amd_letter_date": "2017-07-19",
 "awd_max_amd_letter_date": "2017-07-19",
 "awd_abstract_narration": "Modern networks are often federated in nature---i.e., they are an interoperation between independent networks spanning multiple administrative domains. For example, in many enterprises, different business units control various logical segments of the network, but share common resources, such as routers, firewalls, and load-balancers. In such federated systems, the correct enforcement of network security policies relies on interactions that span multiple administrative domains. This project is developing techniques for enforcing security policies in federated networks using a new form of Proof Carrying Code (PCC), specialized to the networking domain. This enforcement mechanism will ensure that only authorized actors can reconfigure devices in federated networks, and will guarantee that configuration software preserves \"behavioral\" policies such as access control, slice isolation, etc.\r\n\r\nThe technical contributions of this research will include (i) developing PCC techniques for NetKAT, a language for SDN programming that comes equipped with a sound and complete equational reasoning system, and (ii) integrating NetKAT PCC into the Nexus Authorization Language (NAL), a framework that provides methods for specifying and enforcing distributed authorization policies. Key challenges will include how to generate, represent, and transform NetKAT proofs, and how to deal with dynamic behaviors such as network configuration changes and evolving trust models. The broader impacts of this project include (i) developing open-source software that will be tested on a GENI rack hosted by the BTV Ignite program with broader impacts in the local Burlington, VT community, and (ii) presenting education opportunities for underrepresented groups via an outreach program for high school students developed in partnership with the New York State 4-H and Science Leadership Academy.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Foster",
   "pi_mid_init": "N",
   "pi_sufx_name": "",
   "pi_full_name": "John N Foster",
   "pi_email_addr": "jnfoster@cs.cornell.edu",
   "nsf_id": "000569694",
   "pi_start_date": "2017-07-19",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Dexter",
   "pi_last_name": "Kozen",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "Dexter C Kozen",
   "pi_email_addr": "kozen@cs.cornell.edu",
   "nsf_id": "000088344",
   "pi_start_date": "2017-07-19",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "107 Hoy Road",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148537501",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 131691.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Computer networks play a critical role in implementing security policies, often serving as the first line of defense against malicious attacks. Although there are a growing number of tools for specifying and verifying behavior of software-defined networks (SDNs), most of these tools are unable to handle the challenges that arise in networks with multiple administrative domains. For example, in a<span id=\"docs-internal-guid-a0718ff8-7fff-c5e2-5d21-bb4c0daaf8c7\">&nbsp;campus network, university-level staff might manage the routers at the core of the network while department-level staff might manage the switches at the edge. Enforcing properties, such as isolation between faculty, student, and visitor traffic, requires&nbsp;</span>multiple principals to collaborate to manage different devices. With current tools, operators often have no choice but to rely on social mechanisms or even blind faith.</p>\n<p><span id=\"docs-internal-guid-a0718ff8-7fff-c5e2-5d21-bb4c0daaf8c7\">&nbsp;</span>This project developed a new approach for managing federated SDNs called Proof-Carrying Network Code (PCNC). Building on ideas from proof-carrying code and athorization logics, we developed a framework that enables principals to combine code and proofs that can be shipped to and checked by other principals. In particular, by checking proofs before installing the code on network devices, it is possible to ensure compliance with a broad range of authorization and security policies. We developed the theory of PCNC, built a prototype implementation based on Frenetic and NetKAT, and applied it to realistic and simulated case studies, including an IoT network for home health monitoring. Overall, these results demonstrate that PCNC is a promising approach for efficiently supporting authorization, verification, and deployment of rich network programs in federated SDNs.</p>\n<p dir=\"ltr\"><span>In addition to our research efforts, we also made investments in outreach. We provided introductory research experiences for undergraduate students who later went on to PhD programs and software engineering careers. We also</span>&nbsp;organized a workshop for high school students focused on computer security&nbsp;in collaboration with Science Leadership Academy (SLA), the New York State 4-H, and Cornell Information Technology (CIT). We developed a new curriculum for this workshop focused on network security with hands-on labs covering topics such as routing, encryption, passwords, and sniffing. Finally, we made the source code for PCNC available online, so that others can build on and extend our approach.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/29/2021<br>\n\t\t\t\t\tModified by: John&nbsp;N&nbsp;Foster</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nComputer networks play a critical role in implementing security policies, often serving as the first line of defense against malicious attacks. Although there are a growing number of tools for specifying and verifying behavior of software-defined networks (SDNs), most of these tools are unable to handle the challenges that arise in networks with multiple administrative domains. For example, in a campus network, university-level staff might manage the routers at the core of the network while department-level staff might manage the switches at the edge. Enforcing properties, such as isolation between faculty, student, and visitor traffic, requires multiple principals to collaborate to manage different devices. With current tools, operators often have no choice but to rely on social mechanisms or even blind faith.\n\n This project developed a new approach for managing federated SDNs called Proof-Carrying Network Code (PCNC). Building on ideas from proof-carrying code and athorization logics, we developed a framework that enables principals to combine code and proofs that can be shipped to and checked by other principals. In particular, by checking proofs before installing the code on network devices, it is possible to ensure compliance with a broad range of authorization and security policies. We developed the theory of PCNC, built a prototype implementation based on Frenetic and NetKAT, and applied it to realistic and simulated case studies, including an IoT network for home health monitoring. Overall, these results demonstrate that PCNC is a promising approach for efficiently supporting authorization, verification, and deployment of rich network programs in federated SDNs.\nIn addition to our research efforts, we also made investments in outreach. We provided introductory research experiences for undergraduate students who later went on to PhD programs and software engineering careers. We also organized a workshop for high school students focused on computer security in collaboration with Science Leadership Academy (SLA), the New York State 4-H, and Cornell Information Technology (CIT). We developed a new curriculum for this workshop focused on network security with hands-on labs covering topics such as routing, encryption, passwords, and sniffing. Finally, we made the source code for PCNC available online, so that others can build on and extend our approach.\n\n\t\t\t\t\tLast Modified: 06/29/2021\n\n\t\t\t\t\tSubmitted by: John N Foster"
 }
}