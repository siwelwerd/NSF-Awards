{
 "awd_id": "1717877",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF:Small: Optimization of Parallel and Shared Cache Memory using the Footprint Theory",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927498",
 "po_email": "achtchel@nsf.gov",
 "po_sign_block_name": "Almadena Chtchelkanova",
 "awd_eff_date": "2017-08-15",
 "awd_exp_date": "2021-07-31",
 "tot_intn_awd_amt": 456262.0,
 "awd_amount": 544262.0,
 "awd_min_amd_letter_date": "2017-08-07",
 "awd_max_amd_letter_date": "2021-05-24",
 "awd_abstract_narration": "Multicore processors bring a tremendous increase in computing power to personal, scientific, and business computing platforms. Most on-chip memory in these processors is devoted to shared cache, making it a major factor in performance.  A common practice is to improve cache performance by building a path of improvements through testing.  However, testing may take too many steps, it may not converge to a stable solution, and most importantly for large scale parallel programs, the solution is far from optimal since testing covers only a minuscule fraction of all possibilities.  \r\nInstead of testing, this research provides software developers and hardware engineers new tools based on modeling.  The research builds on the past NSF supported research which has developed the footprint theory for sequential applications. This work solves the new problems of data sharing and extends the locality theory to optimize the parallel code. Parallel systems require complex models, and this complexity is addressed by composable models to solve large scale problems with large scale modeling. The new tools include statistical models of both program and machine characteristics.  Program models include profiling analysis that derive the data and cache sharing in all thread combinations and data placements, in cache of all sizes. Cache models analyze the effect of many hardware designs including associativity, exclusivity, coherence, cache-way partitioning, and transient loads/stores. Combined use of these models enables parallel program optimization and improves thread and data placement.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Chen",
   "pi_last_name": "Ding",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Chen Ding",
   "pi_email_addr": "cding@cs.rochester.edu",
   "nsf_id": "000325741",
   "pi_start_date": "2017-08-07",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Rochester",
  "inst_street_address": "910 GENESEE ST",
  "inst_street_address_2": "STE 200",
  "inst_city_name": "ROCHESTER",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "5852754031",
  "inst_zip_code": "146113847",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "NY25",
  "org_lgl_bus_name": "UNIVERSITY OF ROCHESTER",
  "org_prnt_uei_num": "",
  "org_uei_num": "F27KDXZMF9Y8"
 },
 "perf_inst": {
  "perf_inst_name": "University of Rochester",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "146270140",
  "perf_ctry_code": "US",
  "perf_cong_dist": "25",
  "perf_st_cong_dist": "NY25",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7942",
   "pgm_ref_txt": "HIGH-PERFORMANCE COMPUTING"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 456262.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 40000.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><div class=\"page\" title=\"Page 7\">\n<div class=\"section\">\n<div class=\"layoutArea\">\n<div class=\"column\">\n<div class=\"page\" title=\"Page 1\">\n<div class=\"section\">\n<div class=\"layoutArea\">\n<div class=\"column\">\n<p><span>Modern parallel programs run on multicore CPUs and manycore GPUs with complex memory hierarchies including multiple levels of cache. A significant opportunity for optimization is cache utilization. However, such optimization is difficult since the performance depends on many factors and choices. &nbsp;</span></p>\n<p>To solve these problems, there is a large and growing body of literature on locality analysis and optimization. Locality has been defined in many ways. This research has created a unified mathematical framework encompassing widely used, distinct locality definitions.</p>\n</div>\n</div>\n</div>\n</div>\n<p><span>The relational theory helps to solve problems in practice for the precision, brevity, completeness, modularity, and integration. Researchers can use multiple metrics when solving a problem. The relational theory gives researchers the convenience in&nbsp;</span>mixing these concepts in practice.</p>\n<p><span>The relational theory shows how optimizing one metric may affect other metrics. A theory inevitably makes simplifying assumptions, but given their assumptions, the theoretical relations are both universal, i.e., across programs, and reliable, i.e., across transformations.</span></p>\n<p><span>Leveraging and extending this theory, the research has developed new techniques as follows:</span></p>\n<p><span>Lease caching:&nbsp;</span>a new variable-size cache that uses statistical knowledge of program behavior to maximize the cache performance.</p>\n<div class=\"page\" title=\"Page 2\">\n<div class=\"section\">\n<div class=\"layoutArea\">\n<div class=\"column\">\n<p><span>Codestitcher: an inter-procedural code layout optimizer based on a hierarchical framework to improve the performance by 3% to 25% (on average, by 10%) on 5 widely used applications with large code sizes: MySQL, Clang, Firefox, Apache, and Python.</span></p>\n<p><span>Higher order theory of memory allocation:&nbsp;</span>a new timescale theory to model the memory demand in real time.&nbsp;</p>\n<p>CLAM: this research has developed Compiler Lease of cAche Memory (CLAM) which augments the interface between software and hardware and lets a compiler control cache management. The new software control enables optimization beyond what is possible in traditional memory system designs.</p>\n<p>AWLCO: it is a technique of all-window-length analysis model which analyzes a sequence of events with respect to windows of all lengths. &nbsp;This work has been led by undergraduate students.</p>\n<div class=\"page\" title=\"Page 4\">\n<div class=\"section\">\n<div class=\"layoutArea\">\n<div class=\"column\">\n<p><span>Through research, this project has provided research training for 3 PhD students and 9 undergraduates. &nbsp;</span>Two of the publications, ASPLOS 2019 and CASCON 2019, were co-authored by 5 undergrads respectively. One publication, CPM 21, is led by two undergrads. Four of these students have entered or are entering a CS PhD&nbsp;program.</p>\n</div>\n</div>\n</div>\n</div>\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n</div>\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n</div><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/18/2021<br>\n\t\t\t\t\tModified by: Chen&nbsp;Ding</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2021/1717877/1717877_10514283_1629288109987_loc-def-categories--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1717877/1717877_10514283_1629288109987_loc-def-categories--rgov-800width.jpg\" title=\"Categories of locality definitions\"><img src=\"/por/images/Reports/POR/2021/1717877/1717877_10514283_1629288109987_loc-def-categories--rgov-66x44.jpg\" alt=\"Categories of locality definitions\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The figure shows locality definitions in three top-level and four second-level categories.</div>\n<div class=\"imageCredit\">ACM Transactions on Architecture and Code Optimization, Vol. 16, No. 3, Article 33.</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Chen&nbsp;Ding</div>\n<div class=\"imageTitle\">Categories of locality definitions</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1717877/1717877_10514283_1629288305092_rtl-graph--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1717877/1717877_10514283_1629288305092_rtl-graph--rgov-800width.jpg\" title=\"Relational Theory of Locality\"><img src=\"/por/images/Reports/POR/2021/1717877/1717877_10514283_1629288305092_rtl-graph--rgov-66x44.jpg\" alt=\"Relational Theory of Locality\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The graph shows the relational theory as the conversion between locality metrics</div>\n<div class=\"imageCredit\">ACM Transactions on Architecture and Code Optimization, Vol. 16, No. 3, Article 33.</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Chen&nbsp;Ding</div>\n<div class=\"imageTitle\">Relational Theory of Locality</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2021/1717877/1717877_10514283_1629288601583_AWCO-poster--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1717877/1717877_10514283_1629288601583_AWCO-poster--rgov-800width.jpg\" title=\"All Timescale Window Co-occurrence\"><img src=\"/por/images/Reports/POR/2021/1717877/1717877_10514283_1629288601583_AWCO-poster--rgov-66x44.jpg\" alt=\"All Timescale Window Co-occurrence\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The undergraduate research poster on co-occurrence analysis.</div>\n<div class=\"imageCredit\">Daniel Busaba, Yumeng Liu, and Chen Ding</div>\n<div class=\"imagePermisssions\">Public Domain</div>\n<div class=\"imageSubmitted\">Chen&nbsp;Ding</div>\n<div class=\"imageTitle\">All Timescale Window Co-occurrence</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\n\n\n\n\n\n\n\n\nModern parallel programs run on multicore CPUs and manycore GPUs with complex memory hierarchies including multiple levels of cache. A significant opportunity for optimization is cache utilization. However, such optimization is difficult since the performance depends on many factors and choices.  \n\nTo solve these problems, there is a large and growing body of literature on locality analysis and optimization. Locality has been defined in many ways. This research has created a unified mathematical framework encompassing widely used, distinct locality definitions.\n\n\n\n\n\nThe relational theory helps to solve problems in practice for the precision, brevity, completeness, modularity, and integration. Researchers can use multiple metrics when solving a problem. The relational theory gives researchers the convenience in mixing these concepts in practice.\n\nThe relational theory shows how optimizing one metric may affect other metrics. A theory inevitably makes simplifying assumptions, but given their assumptions, the theoretical relations are both universal, i.e., across programs, and reliable, i.e., across transformations.\n\nLeveraging and extending this theory, the research has developed new techniques as follows:\n\nLease caching: a new variable-size cache that uses statistical knowledge of program behavior to maximize the cache performance.\n\n\n\n\n\nCodestitcher: an inter-procedural code layout optimizer based on a hierarchical framework to improve the performance by 3% to 25% (on average, by 10%) on 5 widely used applications with large code sizes: MySQL, Clang, Firefox, Apache, and Python.\n\nHigher order theory of memory allocation: a new timescale theory to model the memory demand in real time. \n\nCLAM: this research has developed Compiler Lease of cAche Memory (CLAM) which augments the interface between software and hardware and lets a compiler control cache management. The new software control enables optimization beyond what is possible in traditional memory system designs.\n\nAWLCO: it is a technique of all-window-length analysis model which analyzes a sequence of events with respect to windows of all lengths.  This work has been led by undergraduate students.\n\n\n\n\n\nThrough research, this project has provided research training for 3 PhD students and 9 undergraduates.  Two of the publications, ASPLOS 2019 and CASCON 2019, were co-authored by 5 undergrads respectively. One publication, CPM 21, is led by two undergrads. Four of these students have entered or are entering a CS PhD program.\n\n\n\n\n\n \n\n\n\n\n\n \n\n\n\n\n\n\t\t\t\t\tLast Modified: 08/18/2021\n\n\t\t\t\t\tSubmitted by: Chen Ding"
 }
}