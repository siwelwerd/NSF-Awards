{
 "awd_id": "1704788",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "SaTC: CORE: Large: Viaduct: A Framework for Automatically Synthesizing Cryptographic Protocols",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2017-06-01",
 "awd_exp_date": "2023-05-31",
 "tot_intn_awd_amt": 2499998.0,
 "awd_amount": 2499998.0,
 "awd_min_amd_letter_date": "2017-05-24",
 "awd_max_amd_letter_date": "2022-02-01",
 "awd_abstract_narration": "Advanced cryptographic technology can enable new kinds of computing systems: secure computing and storage in the cloud, internet voting systems, secure cryptographic currencies, and more.  Unfortunately, advanced cryptography has not been widely adopted, because it tends to be too complex for most software developers to use correctly. Even experts make security-critical mistakes with modern cryptography. The expected outcome of this project is a simpler and less error-prone way to build computer systems that use advanced cryptography. \r\n\r\nThis project explores a new way to put the full power of cryptography in the hands of programmers. Programmers will not design cryptography directly. Instead, they will develop software using a high-level programming language, and the Viaduct system will automatically introduce sophisticated cryptographic mechanisms as needed to make the software secure. Viaduct automatically compiles high-level protocols to primitive cryptographic  building blocks, offering formal security guarantees in the form of machine-checkable security proofs. The project demonstrates end-to-end synthesis based on universal composability as a practical way to build secure systems.  Viaduct will make security engineering stronger, easier, and cheaper. The project will open-source Viaduct and promote it through demos, workshops, and tutorials.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Andrew",
   "pi_last_name": "Myers",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "Andrew C Myers",
   "pi_email_addr": "andru@cs.cornell.edu",
   "nsf_id": "000385587",
   "pi_start_date": "2017-05-24",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Morrisett",
   "pi_mid_init": "G",
   "pi_sufx_name": "",
   "pi_full_name": "John G Morrisett",
   "pi_email_addr": "greg.morrisett@cornell.edu",
   "nsf_id": "000347145",
   "pi_start_date": "2017-05-24",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Rafael",
   "pi_last_name": "Pass",
   "pi_mid_init": "N",
   "pi_sufx_name": "",
   "pi_full_name": "Rafael N Pass",
   "pi_email_addr": "rafael@cs.cornell.edu",
   "nsf_id": "000101933",
   "pi_start_date": "2017-05-24",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Co-Principal Investigator",
   "pi_first_name": "Elaine",
   "pi_last_name": "Shi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Elaine Shi",
   "pi_email_addr": "runting@cs.cmu.edu",
   "nsf_id": "000624210",
   "pi_start_date": "2017-05-24",
   "pi_end_date": "2021-08-31"
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "107 Hoy Road",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148537501",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7925",
   "pgm_ref_txt": "LARGE PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 564822.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 601592.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 660021.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 673563.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Security on the Internet is based largely on the use of cryptography. Cryptographic technologies protect secrets and ensure that data comes from trusted sources. Modern cryptographic techniques can do even more. For example, two computers whose owners do not trust each other can compute a result correctly without revealing each each owner's secrets to the other. Or a user can check whether their password has been leaked by communicating with an Internet database, but without leaking the password to the database. This technology enables new kinds of applications and stronger security, but unfortunately, requires too much expertise in cryptography for most developers to use securely.</p>\n<p>The Viaduct project has made progress toward fixing this problem, putting the power of modern, advanced cryptographic methods in the hands of programmers without requiring them to implement cryptography themselves. Instead, they can write code in a familiar-looking high-level programming language in which the cryptography to be used does not appear explicitly in the code. The Viaduct compiler automatically checks the security properties of the code and generates matching cryptographic mechanisms as necessary. The input to the compiler is a simple source program, but the output is a distributed system that uses cryptography. Importantly, the compiler tries to avoid using expensive cryptography when possible; it optimizes the code to used the cheapest implementation it can. The compiler is extensible and new cryptographic mechanisms can be plugged in as they become available; this project has developed several new mechanisms. An important result that the project has produced is a proof that the compilation process itself does not break the security of the program. This proof means that the developer can understand the security offered by the final distributed system simply by reading their original high-level code.</p>\n<p>The project is cross-disciplinary within computer science because it has used cutting-edge techniques from both the cryptography and the programming-languages research communities. These communities have much to offer each other; to promote engagement between the two communities, the PIs organized two successful workshops in 2022 and 2023 that brought researchers together from both areas.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/25/2023<br>\n\t\t\t\t\tModified by: Andrew&nbsp;C&nbsp;Myers</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nSecurity on the Internet is based largely on the use of cryptography. Cryptographic technologies protect secrets and ensure that data comes from trusted sources. Modern cryptographic techniques can do even more. For example, two computers whose owners do not trust each other can compute a result correctly without revealing each each owner's secrets to the other. Or a user can check whether their password has been leaked by communicating with an Internet database, but without leaking the password to the database. This technology enables new kinds of applications and stronger security, but unfortunately, requires too much expertise in cryptography for most developers to use securely.\n\nThe Viaduct project has made progress toward fixing this problem, putting the power of modern, advanced cryptographic methods in the hands of programmers without requiring them to implement cryptography themselves. Instead, they can write code in a familiar-looking high-level programming language in which the cryptography to be used does not appear explicitly in the code. The Viaduct compiler automatically checks the security properties of the code and generates matching cryptographic mechanisms as necessary. The input to the compiler is a simple source program, but the output is a distributed system that uses cryptography. Importantly, the compiler tries to avoid using expensive cryptography when possible; it optimizes the code to used the cheapest implementation it can. The compiler is extensible and new cryptographic mechanisms can be plugged in as they become available; this project has developed several new mechanisms. An important result that the project has produced is a proof that the compilation process itself does not break the security of the program. This proof means that the developer can understand the security offered by the final distributed system simply by reading their original high-level code.\n\nThe project is cross-disciplinary within computer science because it has used cutting-edge techniques from both the cryptography and the programming-languages research communities. These communities have much to offer each other; to promote engagement between the two communities, the PIs organized two successful workshops in 2022 and 2023 that brought researchers together from both areas.\n\n\t\t\t\t\tLast Modified: 09/25/2023\n\n\t\t\t\t\tSubmitted by: Andrew C Myers"
 }
}