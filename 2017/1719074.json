{
 "awd_id": "1719074",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF:Small: Accelerating Graph Analytics Through Coordinated Storage, Memory and Computing Advances",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Yuanyuan Yang",
 "awd_eff_date": "2017-09-15",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 400000.0,
 "awd_amount": 400000.0,
 "awd_min_amd_letter_date": "2017-09-13",
 "awd_max_amd_letter_date": "2017-09-13",
 "awd_abstract_narration": "Graphs represent the relationship between different entities and are the representation of choice in diverse domains, such as web page ranking, social networks, drug interactions, and communicable disease spreading. Due to the sheer size of graphs in these important domains, billions of vertices with tens of billions of edges, graph processing is a data intensive task. The size of the graphs is expected to far exceed the size of the main memory available in many computer systems. As such graph analytics will be hobbled by their inability to quickly access graph vertices and edges from computer storage. Current storage systems are mostly block based and hence treat graph data as a collection of bytes organized into pages. The advent of affordable solid state drives (SSDs) allows one to envision a future where SSDs can be made semantically aware of the underlying graph storage. Rather than treating storage as a collection of blocks, semantic awareness enables SSDs to consider graph structure while deciding on how vertices and edges are laid out, and how to access the graph elements efficiently. \r\n\r\nThis research advances the vision of semantic graph storage by proposing to make the SSD controller treat graph vertices and edges as first class objects.  In particular,  this research  will design and implement a set of application programming interfaces (APIs)  that allow application developers and algorithmic designers to specify graph layout and query storage systems using graph-oriented access requests, such as finding all the neighbors of a given vertex. A new runtime layer for SSDs will also be developed to exploit the semantic awareness to improve SSD endurance, garbage collection and caching. The benefits of semantic graph storage will be demonstrated by rethinking the implementation of  graph signal processing algorithms  to achieve an order magnitude improvement in performance. Such dramatic performance improvements in turn will enable a variety of compelling societal benefits such as accelerated drug discovery.  This research also provides opportunities for a new generation of students to study, implement and optimize graph analytics on experimental SSD platforms and to study the tradeoffs between clean abstractions and the performance impact of abstractions.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Murali",
   "pi_last_name": "Annavaram",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Murali Annavaram",
   "pi_email_addr": "annavara@usc.edu",
   "nsf_id": "000496713",
   "pi_start_date": "2017-09-13",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Antonio",
   "pi_last_name": "Ortega",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Antonio Ortega",
   "pi_email_addr": "ortega@sipi.usc.edu",
   "nsf_id": "000154600",
   "pi_start_date": "2017-09-13",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Southern California",
  "inst_street_address": "3720 S FLOWER ST FL 3",
  "inst_street_address_2": "",
  "inst_city_name": "LOS ANGELES",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "2137407762",
  "inst_zip_code": "90033",
  "inst_country_name": "United States",
  "cong_dist_code": "34",
  "st_cong_dist_code": "CA34",
  "org_lgl_bus_name": "UNIVERSITY OF SOUTHERN CALIFORNIA",
  "org_prnt_uei_num": "",
  "org_uei_num": "G88KLJR3KYT5"
 },
 "perf_inst": {
  "perf_inst_name": "University of Southern California",
  "perf_str_addr": "3720 South Flower Street",
  "perf_city_name": "Los Angeles",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "900890001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "37",
  "perf_st_cong_dist": "CA37",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7941",
   "pgm_ref_txt": "COMPUTER ARCHITECTURE"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 400000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Intellectual Contributions:</p>\n<p>Graph data structures are at the heart of our digital economy. From social media, to drug discovery graphs form the foundation of analyzing and understanding relationships. Processing graphs is an extremely data intensive operation that taxes the bandwidth available between the CPU where the graphs are processed and the storage system where the graph data is stored.&nbsp; Rather than moving large volumes of data from storage to CPU this research proposes to bring the computation closer to the storage. In particular, this work contributed to&nbsp; the following intellectual contributions:</p>\n<p>(1)&nbsp;<span>&nbsp;The work designed and implemented a prototype storage system called GraphSSD. GraphSSD is a&nbsp; flash memory drive where graphs can be stored as native objects. And operations such as graph traversals can be performed directly on the stoage using the flash memory controller.</span></p>\n<p><span>(2) The features within the G<span>raphSSD are exposed to application software using a set of programming APIs that allow a software developer to launch graph analytics directly on the storage.&nbsp;</span></span></p>\n<p>(3) We implemented&nbsp;a wide range of graph analytics on the prototype GraphSSD platform and demonstrated performance and bandwidth advantages of GraphSSD.</p>\n<p>(4) Using the experience gained from the GraphSSD design and implementation this project also developed novel graph analytics algorithms that can be used even in traditional CPU based graph systems. We designed and implemented an incremental logging mechanism to reduce the repeated writing of large graphs and thereby reduce the storage bandwidth.&nbsp;&nbsp;</p>\n<p>Broader Impacts</p>\n<p>Given the prominence of graphs in many critical applications the work done in this project provide guidance to designing new graph storage systems that can be commerically marketed in the future.&nbsp;</p>\n<p>The project also supported multiple PhD students who have gone on to work at various US social media and internet companies, thereby providing the much needed expertise to the industry.&nbsp;&nbsp;</p>\n<p>The project also supported two women students who are currently pursuing their PhD at USC, thereby contributing to the diversity of our computing industry.&nbsp;&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/06/2021<br>\n\t\t\t\t\tModified by: Murali&nbsp;Annavaram</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImage\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls onePhoto\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation onePhoto\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2021/1719074/1719074_10521847_1609974205968_GraphSSD-Illustration--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2021/1719074/1719074_10521847_1609974205968_GraphSSD-Illustration--rgov-800width.jpg\" title=\"Graph SSD illustration\"><img src=\"/por/images/Reports/POR/2021/1719074/1719074_10521847_1609974205968_GraphSSD-Illustration--rgov-66x44.jpg\" alt=\"Graph SSD illustration\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">GraphSSD with the Programmable Graph Storage Controller</div>\n<div class=\"imageCredit\">Murali Annavaram</div>\n<div class=\"imagePermisssions\">Public Domain</div>\n<div class=\"imageSubmitted\">Murali&nbsp;Annavaram</div>\n<div class=\"imageTitle\">Graph SSD illustration</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\nIntellectual Contributions:\n\nGraph data structures are at the heart of our digital economy. From social media, to drug discovery graphs form the foundation of analyzing and understanding relationships. Processing graphs is an extremely data intensive operation that taxes the bandwidth available between the CPU where the graphs are processed and the storage system where the graph data is stored.  Rather than moving large volumes of data from storage to CPU this research proposes to bring the computation closer to the storage. In particular, this work contributed to  the following intellectual contributions:\n\n(1)  The work designed and implemented a prototype storage system called GraphSSD. GraphSSD is a  flash memory drive where graphs can be stored as native objects. And operations such as graph traversals can be performed directly on the stoage using the flash memory controller.\n\n(2) The features within the GraphSSD are exposed to application software using a set of programming APIs that allow a software developer to launch graph analytics directly on the storage. \n\n(3) We implemented a wide range of graph analytics on the prototype GraphSSD platform and demonstrated performance and bandwidth advantages of GraphSSD.\n\n(4) Using the experience gained from the GraphSSD design and implementation this project also developed novel graph analytics algorithms that can be used even in traditional CPU based graph systems. We designed and implemented an incremental logging mechanism to reduce the repeated writing of large graphs and thereby reduce the storage bandwidth.  \n\nBroader Impacts\n\nGiven the prominence of graphs in many critical applications the work done in this project provide guidance to designing new graph storage systems that can be commerically marketed in the future. \n\nThe project also supported multiple PhD students who have gone on to work at various US social media and internet companies, thereby providing the much needed expertise to the industry.  \n\nThe project also supported two women students who are currently pursuing their PhD at USC, thereby contributing to the diversity of our computing industry.  \n\n \n\n\t\t\t\t\tLast Modified: 01/06/2021\n\n\t\t\t\t\tSubmitted by: Murali Annavaram"
 }
}