{
 "awd_id": "1740315",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SI2-SSE: MetPy - A Python GEMPAK Replacement for Meteorological Data Analysis",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Seung-Jong Park",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 499693.0,
 "awd_amount": 499693.0,
 "awd_min_amd_letter_date": "2017-08-29",
 "awd_max_amd_letter_date": "2017-08-29",
 "awd_abstract_narration": "The MetPy project aims to make atmospheric science research and teaching easier and more reproducible by providing a set of well-tested and modern software tools. Meteorologists require many specialized calculations and maps in order to understand the weather and make reliable predictions. The tools they use must provide correct results, since lives and property depend on accurate forecasts and research. This project will port the bulk of the functionality from a widely used and trusted -- but aging and minimally supported -- software program called GEMPAK (the GEneral Meteorological PAcKage) into MetPy, developed using the Python programming language, and with a well-designed, new software architecture. Python has been selected as the language of choice because it has become very popular in many scientific communities. MetPy will be the meteorological community's entry into this growing scientific software ecosystem. In addition to making GEMPAK's functionality available in MetPy, this project will implement a better user-interface, which will help students and researchers get started more easily. The software team will use software development best practices in its development of MetPy, and ensure that it can work with all common meteorological data sources. Every relevant aspect of MetPy will be documented in an easy to digest way on the MetPy project webpage. The development team will work with university instructors to help revise their course materials to integrate MetPy. In addition, the team will teach MetPy and Python training workshops each year, allowing university professors, students, and professionals to get hands-on training on how to do their research in a faster and more robust way. \r\n\r\nThis project seeks to fill a need within the atmospheric science community by bringing key functional elements of a foundational software program, GEMPAK, to the innovation-rich Python ecosystem. By devoting software development resources to increasing the number of data types and file formats MetPy can work with, improving the underlying data model, and reaching feature parity with GEMPAK, MetPy can be positioned as a community-supported replacement for the older package. This effort leverages the entire Python ecosystem, and supports the movement (already well under way) of the atmospheric science community to Python-driven reproducible workflows. This transition will provide a number of community benefits. By bringing needed functionality from GEMPAK to the Python ecosystem, this project will allow atmospheric scientists to: simplify the process of exploratory analysis, have a cross-platform toolchain that can be carried from the classroom to the workforce, simplify the research workflow to make science easier and more reproducible, provide a tested library of domain-specific calculations with literature references, and create publication-quality data visualizations. Educators and researchers will be able to replace their use of legacy software, which is no longer being developed and is increasingly hard to maintain, with a modern toolkit that allows increased flexibility and reproducibility within atmospheric science research. Sustainability of the atmospheric science software workflow will be enhanced by the inclusion of modern automated software build-and-test tools, robust community-supported documentation and learning materials, and the ability to quickly incorporate new sources of environmental data. Finally, modernizing the atmospheric science toolchain opens the door to the use of innovations like web-based tools (Jupyter notebooks, for example) that would be difficult or impossible to take advantage of when using legacy software.\r\n\r\nThis award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Ryan",
   "pi_last_name": "May",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ryan May",
   "pi_email_addr": "rmay@ucar.edu",
   "nsf_id": "000694155",
   "pi_start_date": "2017-08-29",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Kevin",
   "pi_last_name": "Goebbert",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "Kevin H Goebbert",
   "pi_email_addr": "kevin.goebbert@valpo.edu",
   "nsf_id": "000728222",
   "pi_start_date": "2017-08-29",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Leeman",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "John Leeman",
   "pi_email_addr": "jleeman@ucar.edu",
   "nsf_id": "000746644",
   "pi_start_date": "2017-08-29",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University Corporation For Atmospheric Res",
  "inst_street_address": "3090 CENTER GREEN DR",
  "inst_street_address_2": "",
  "inst_city_name": "BOULDER",
  "inst_state_code": "CO",
  "inst_state_name": "Colorado",
  "inst_phone_num": "3034971000",
  "inst_zip_code": "803012252",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "CO02",
  "org_lgl_bus_name": "UNIVERSITY CORPORATION FOR ATMOSPHERIC RESEARCH",
  "org_prnt_uei_num": "",
  "org_uei_num": "YEZEE8W5JKA3"
 },
 "perf_inst": {
  "perf_inst_name": "University Corporation For Atmospheric Res",
  "perf_str_addr": "3090 Center Green Drive",
  "perf_city_name": "Boulder",
  "perf_st_code": "CO",
  "perf_st_name": "Colorado",
  "perf_zip_code": "803012252",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "CO02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "152500",
   "pgm_ele_name": "Physical & Dynamic Meteorology"
  },
  {
   "pgm_ele_code": "800400",
   "pgm_ele_name": "Software Institutes"
  },
  {
   "pgm_ele_code": "807400",
   "pgm_ele_name": "EarthCube"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "4444",
   "pgm_ref_txt": "INTERDISCIPLINARY PROPOSALS"
  },
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "8004",
   "pgm_ref_txt": "Software Institutes"
  },
  {
   "pgm_ref_code": "8005",
   "pgm_ref_txt": "Scientific Software Elements"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 499693.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The major goal of this project is to advance the Python MetPy library so that it can serve as a replacement for the legacy GEMPAK tool for meteorological data analysis by leveraging the community-driven scientific Python ecosystem. By doing so, the project aims to: enable effortless exploratory analysis, provide a cross-platform toolchain that can be carried from the classroom to the workforce, simplify the research workflow to make science easier and more reproducible, provide a referenced and tested library of domain-specific calculations, and create publication-quality data visualizations.</p>\n<p>During this award, MetPy has gained the overwhelming majority of calculation functionality available within GEMPAK. We have also spent considerable effort comparing the results of calculations in MetPy with the corresponding results from GEMPAK. At this point only minor differences remain when comparing the results between MetPy and GEMPAK; these differences have been determined to be acceptable either due to differences in algorithmic approach or minor numerical instability. MetPy also gained a ?simplified? plotting interface that allows users to create data visualizations using a GEMPAK-like declarative programming style, as opposed to a more traditional imperative style.</p>\n<p>MetPy now has deep integration with XArray and uses it as the full data model for gridded data in MetPy. MetPy can now parse and interpret netCDF Climate and Forecasting (CF) metadata to identify coordinates associated with spatiotemporal dimensions, identify dimensionality on variables, and automatically create appropriate map projections for input data. This functionality is used to power a variety of tools in MetPy, including cross-sections and the simplified plotting interface. This integration and utilization of metadata in general reduces the amount of code users must write to accomplish common tasks.</p>\n<p>MetPy?s roster of supported file formats has expanded to include standard METAR surface observations as well as GEMPAK?s own file format, which is available from many long term data archives. This file format supports surface, upper air, and gridded data from a variety of sources. We have also developed a ?solver? infrastructure that allows users to provide a dataset and request a derived quantity not directly available in that dataset; MetPy will (as possible) calculate the requested quantity using the available parameters.</p>\n<p>During this period, MetPy had eight major releases (from 0.6.0 to 1.1.0) to distribute new functionality to the community. This includes moving MetPy to a 1.x version which reflects a commitment to a stable programming interface. This means the user community can reliably depend upon MetPy features not changing in non-backwards-compatible ways. These features more than tripled the size of MetPy?s code base, while maintaining 95% of those lines being covered by MetPy?s test suite.</p>\n<p>The project has provided training and professional development for students, faculty, and researchers in the atmospheric sciences. During the period of performance, this project helped sponsor 17 workshops on the use of MetPy and Python in general for atmospheric science data analysis for approximately 400 total attendees. These included:</p>\n<ul>\n<li>2017 Intermediate Python Workshop at Texas Tech University</li>\n<li>Short Course at the 2018 American Meteorological Society Annual Meeting</li>\n<li>2018 Tutorial at the Software Engineering Assembly Conference</li>\n<li>2018 Regional Workshop at Colorado State University</li>\n<li>2018 Regional Workshop at Jackson State University</li>\n<li>2018 Regional Workshop at San Jose State University</li>\n<li>2018 Unidata Training Workshop</li>\n<li>Short Course at the 2019 American Meteorological Society Annual Meeting</li>\n<li>2019 Workshop at Metro State University</li>\n<li>2019 Regional Workshop at the State University of New York in Albany</li>\n<li>2019 Regional Workshop at Valparaiso University</li>\n<li>2019 Intermediate Python Workshop at Texas Tech University</li>\n<li>Short Course at the 2020 American Meteorological Society Annual Meeting</li>\n<li>2020 Regional Workshop at University of Manitoba</li>\n<li>2020 Workshop at University of Oklahoma</li>\n<li>2020 Workshop at University of North Carolina Charlotte</li>\n<li>Virtual Short Course associated with the 2021 American Meteorological Society Annual Meeting</li>\n</ul>\n<p>As a result of the progress made on the MetPy library during this period, some courses that have traditionally used GEMPAK software have been able to use Python in its place. As part of this work, the MetPy Mondays YouTube video series was developed to help users and promote the use of MetPy. As of this writing, the videos have been viewed almost 56k times.</p>\n<p>The growth of MetPy?s user community during this time is quite evident. At the start of the project, MetPy?s documentation averaged just under 6k page views per month; at the end of this project the documentation gets almost 32k views per month, which represents over 400% growth. This is also reflected in the 91 theses and peer-reviewed publications citing or mentioning MetPy that were published in the last four years. On the GitHub collaborative development site, 222 unique individuals have contributed to the project through their reports, comments, and pull requests. According to software dependency information from GitHub, 238 other repositories and 24 packages list MetPy as a dependency.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 04/04/2022<br>\n\t\t\t\t\tModified by: Ryan&nbsp;May</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649101829208_MetPySampleImage--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649101829208_MetPySampleImage--rgov-800width.jpg\" title=\"MetPy Sample Image\"><img src=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649101829208_MetPySampleImage--rgov-66x44.jpg\" alt=\"MetPy Sample Image\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Contour analysis produced using MetPy's simplified plotting interface and many other features added in this project.</div>\n<div class=\"imageCredit\">Drew Camron</div>\n<div class=\"imagePermisssions\">Public Domain</div>\n<div class=\"imageSubmitted\">Ryan&nbsp;May</div>\n<div class=\"imageTitle\">MetPy Sample Image</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649101502291_IMG_0066--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649101502291_IMG_0066--rgov-800width.jpg\" title=\"Teaching a Python workshop\"><img src=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649101502291_IMG_0066--rgov-66x44.jpg\" alt=\"Teaching a Python workshop\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Python workshop being taught at Colorado State University in 2018</div>\n<div class=\"imageCredit\">Ryan May</div>\n<div class=\"imagePermisssions\">Public Domain</div>\n<div class=\"imageSubmitted\">Ryan&nbsp;May</div>\n<div class=\"imageTitle\">Teaching a Python workshop</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649102339862_20200128_short_course_01--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649102339862_20200128_short_course_01--rgov-800width.jpg\" title=\"2020 AMS Short Course\"><img src=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649102339862_20200128_short_course_01--rgov-66x44.jpg\" alt=\"2020 AMS Short Course\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Introducing attendees at the 2020 AMS Short Course to MetPy's GEMPAK-like plotting interface.</div>\n<div class=\"imageCredit\">Doug Dirks</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Ryan&nbsp;May</div>\n<div class=\"imageTitle\">2020 AMS Short Course</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649102425033_20200128_ryan_talk--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649102425033_20200128_ryan_talk--rgov-800width.jpg\" title=\"Announcing MetPy 1.0\"><img src=\"/por/images/Reports/POR/2022/1740315/1740315_10519180_1649102425033_20200128_ryan_talk--rgov-66x44.jpg\" alt=\"Announcing MetPy 1.0\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Announcing the release of MetPy 1.0 at the 2020 AMS Annual Meeting.</div>\n<div class=\"imageCredit\">Doug Dirks</div>\n<div class=\"imagePermisssions\">Creative Commons</div>\n<div class=\"imageSubmitted\">Ryan&nbsp;May</div>\n<div class=\"imageTitle\">Announcing MetPy 1.0</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\nThe major goal of this project is to advance the Python MetPy library so that it can serve as a replacement for the legacy GEMPAK tool for meteorological data analysis by leveraging the community-driven scientific Python ecosystem. By doing so, the project aims to: enable effortless exploratory analysis, provide a cross-platform toolchain that can be carried from the classroom to the workforce, simplify the research workflow to make science easier and more reproducible, provide a referenced and tested library of domain-specific calculations, and create publication-quality data visualizations.\n\nDuring this award, MetPy has gained the overwhelming majority of calculation functionality available within GEMPAK. We have also spent considerable effort comparing the results of calculations in MetPy with the corresponding results from GEMPAK. At this point only minor differences remain when comparing the results between MetPy and GEMPAK; these differences have been determined to be acceptable either due to differences in algorithmic approach or minor numerical instability. MetPy also gained a ?simplified? plotting interface that allows users to create data visualizations using a GEMPAK-like declarative programming style, as opposed to a more traditional imperative style.\n\nMetPy now has deep integration with XArray and uses it as the full data model for gridded data in MetPy. MetPy can now parse and interpret netCDF Climate and Forecasting (CF) metadata to identify coordinates associated with spatiotemporal dimensions, identify dimensionality on variables, and automatically create appropriate map projections for input data. This functionality is used to power a variety of tools in MetPy, including cross-sections and the simplified plotting interface. This integration and utilization of metadata in general reduces the amount of code users must write to accomplish common tasks.\n\nMetPy?s roster of supported file formats has expanded to include standard METAR surface observations as well as GEMPAK?s own file format, which is available from many long term data archives. This file format supports surface, upper air, and gridded data from a variety of sources. We have also developed a ?solver? infrastructure that allows users to provide a dataset and request a derived quantity not directly available in that dataset; MetPy will (as possible) calculate the requested quantity using the available parameters.\n\nDuring this period, MetPy had eight major releases (from 0.6.0 to 1.1.0) to distribute new functionality to the community. This includes moving MetPy to a 1.x version which reflects a commitment to a stable programming interface. This means the user community can reliably depend upon MetPy features not changing in non-backwards-compatible ways. These features more than tripled the size of MetPy?s code base, while maintaining 95% of those lines being covered by MetPy?s test suite.\n\nThe project has provided training and professional development for students, faculty, and researchers in the atmospheric sciences. During the period of performance, this project helped sponsor 17 workshops on the use of MetPy and Python in general for atmospheric science data analysis for approximately 400 total attendees. These included:\n\n2017 Intermediate Python Workshop at Texas Tech University\nShort Course at the 2018 American Meteorological Society Annual Meeting\n2018 Tutorial at the Software Engineering Assembly Conference\n2018 Regional Workshop at Colorado State University\n2018 Regional Workshop at Jackson State University\n2018 Regional Workshop at San Jose State University\n2018 Unidata Training Workshop\nShort Course at the 2019 American Meteorological Society Annual Meeting\n2019 Workshop at Metro State University\n2019 Regional Workshop at the State University of New York in Albany\n2019 Regional Workshop at Valparaiso University\n2019 Intermediate Python Workshop at Texas Tech University\nShort Course at the 2020 American Meteorological Society Annual Meeting\n2020 Regional Workshop at University of Manitoba\n2020 Workshop at University of Oklahoma\n2020 Workshop at University of North Carolina Charlotte\nVirtual Short Course associated with the 2021 American Meteorological Society Annual Meeting\n\n\nAs a result of the progress made on the MetPy library during this period, some courses that have traditionally used GEMPAK software have been able to use Python in its place. As part of this work, the MetPy Mondays YouTube video series was developed to help users and promote the use of MetPy. As of this writing, the videos have been viewed almost 56k times.\n\nThe growth of MetPy?s user community during this time is quite evident. At the start of the project, MetPy?s documentation averaged just under 6k page views per month; at the end of this project the documentation gets almost 32k views per month, which represents over 400% growth. This is also reflected in the 91 theses and peer-reviewed publications citing or mentioning MetPy that were published in the last four years. On the GitHub collaborative development site, 222 unique individuals have contributed to the project through their reports, comments, and pull requests. According to software dependency information from GitHub, 238 other repositories and 24 packages list MetPy as a dependency.\n\n \n\n \n\n \n\n\t\t\t\t\tLast Modified: 04/04/2022\n\n\t\t\t\t\tSubmitted by: Ryan May"
 }
}