{
 "awd_id": "1717712",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF:Small:Data Structures and Transactions for Emerging Nonvolatile Memory",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 449937.0,
 "awd_amount": 449937.0,
 "awd_min_amd_letter_date": "2017-07-07",
 "awd_max_amd_letter_date": "2017-07-07",
 "awd_abstract_narration": "Data that need to be persistent, either for the sake of long-term access or for recovery from system crashes, have traditionally been kept on disk and flash drives, which are very slow.  Within the next few years, much faster persistent memory is expected to be widely available at reasonable cost, raising the possibility that file systems might be replaced, at least in part, by memory that is simply \"always available.\" The intellectual merits of the project lie in addressing two key challenges to such \"always available memory\": first, ensuring that the values in memory in the wake of a system crash are always mutually consistent, despite the possibility that traditional caches often pass data to the memory out of order; second, safeguarding the structural integrity of persistent data despite the possibility that buggy programs may erroneously modify arbitrary memory locations.  The project's broader significance and importance lie in the promise of significant improvements in programmability, reliability, and system performance, and in the ability to survive power outages and hardware failures at much lower cost than has previously been possible.  This latter benefit may be of particular importance for ubiquitous sensors in the Internet of Things.\r\n\r\nThe project builds on prior work by the principal investigator and colleagues, which has developed formal correctness criteria for persistent data, together with automatic methods to guarantee this correctness.  The current project is pursuing three major research thrusts.  First, it is developing a library of reusable, high-performance persistent data structures, with particular emphasis on exploiting high-level semantics to minimize instrumentation overhead, maintaining sufficient information to complete or undo partial operations in the wake of a program or system crash, and formalizing and proving correctness.  Second, the project is developing techniques to compose persistent operations into larger atomic transactions.  This work builds on past experience with hardware and software transactional memory, and encompasses both nonblocking and lock-based approaches.  Particular emphasis is being placed on \"boosting\" the operations of persistent data structures so that they can serve as reversible high-level operations of a transactional system.  Third, the project is developing mechanisms (including user-level daemons, compiler-based sandboxing, fine-grain memory protection, and the use of virtualization hardware) to ensure that persistent data is modified only by trusted library code, thereby safeguarding its structural integrity in the presence of buggy applications.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Michael",
   "pi_last_name": "Scott",
   "pi_mid_init": "L",
   "pi_sufx_name": "",
   "pi_full_name": "Michael L Scott",
   "pi_email_addr": "scott@cs.rochester.edu",
   "nsf_id": "000343030",
   "pi_start_date": "2017-07-07",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Rochester",
  "inst_street_address": "910 GENESEE ST",
  "inst_street_address_2": "STE 200",
  "inst_city_name": "ROCHESTER",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "5852754031",
  "inst_zip_code": "146113847",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "NY25",
  "org_lgl_bus_name": "UNIVERSITY OF ROCHESTER",
  "org_prnt_uei_num": "",
  "org_uei_num": "F27KDXZMF9Y8"
 },
 "perf_inst": {
  "perf_inst_name": "Univ. of Rochester",
  "perf_str_addr": "Computer Science Dept.",
  "perf_city_name": "Rochester",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "146270226",
  "perf_ctry_code": "US",
  "perf_cong_dist": "25",
  "perf_st_cong_dist": "NY25",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7943",
   "pgm_ref_txt": "PROGRAMMING LANGUAGES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 449937.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>For 50 years, data manipulated by computers has been partitioned between fast but ephemeral working \"memory\" and slower long-term \"storage\" (file systems and databases).&nbsp; This partitioning may soon be upended by <em>persistent</em>&nbsp;memory technology -- fast working memory that retains its contents when power is lost.&nbsp; Persistent memory promises revolutionary improvements in the flexibility, performance, and reliability of systems software for both personal and server (cloud) computing.</p>\n<p><br />Work performed under this project has extended the state of the art in multiple directions.&nbsp; First, it developed what has become the standard definition of correctness for data structures designed to survive a system crash (durable linearizability -- now adopted by research groups around the world).&nbsp; Second, it introduced the fastest known system to manage persistent memory (Ralloc), together with a fast, novel mechanism to identify when memory that holds no-longer-needed data can safely be reused (Interval-Based Reclamation).&nbsp; Third, it developed three state-of-the-art systems to ensure that data structures can be recovered correctly after a crash, even if an arbitrary number of complex operations had only been partially completed when the crash occurred (QSTM, Montage, and nbMontage).&nbsp; Building on work (the Hodor project) supported by a previous NSF grant, the current project also advanced persistent memory as a compelling use case for <em>protected libraries</em>, a mechanism that allows shared services (including file systems, databases, and similar repositories) to be implemented safely and efficiently outside the traditional operating system.</p>\n<p><br />Human impacts of the project have included the training of at least eight PhD students and five undergraduates, almost all of whom appear as authors on refereed publications.&nbsp; Several of the students have gone on to distinguished positions in academia and industry.</p>\n<p><br />Ideas from the project will figure in the forthcoming fifth edition of the PI's widely used textbook on <em>Programming Language Pragmatics</em> [Morgan Kaufmann publishers, 4th edition 2016] and the second edition of his monograph on <em>Shared-Memory Synchronization</em> [Morgan &amp; Claypool publishers, 2013].&nbsp; At the University of Rochester, the PI has been a key player in efforts to broaden participation in computing among underrepresented groups.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/27/2021<br>\n\t\t\t\t\tModified by: Michael&nbsp;L&nbsp;Scott</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nFor 50 years, data manipulated by computers has been partitioned between fast but ephemeral working \"memory\" and slower long-term \"storage\" (file systems and databases).  This partitioning may soon be upended by persistent memory technology -- fast working memory that retains its contents when power is lost.  Persistent memory promises revolutionary improvements in the flexibility, performance, and reliability of systems software for both personal and server (cloud) computing.\n\n\nWork performed under this project has extended the state of the art in multiple directions.  First, it developed what has become the standard definition of correctness for data structures designed to survive a system crash (durable linearizability -- now adopted by research groups around the world).  Second, it introduced the fastest known system to manage persistent memory (Ralloc), together with a fast, novel mechanism to identify when memory that holds no-longer-needed data can safely be reused (Interval-Based Reclamation).  Third, it developed three state-of-the-art systems to ensure that data structures can be recovered correctly after a crash, even if an arbitrary number of complex operations had only been partially completed when the crash occurred (QSTM, Montage, and nbMontage).  Building on work (the Hodor project) supported by a previous NSF grant, the current project also advanced persistent memory as a compelling use case for protected libraries, a mechanism that allows shared services (including file systems, databases, and similar repositories) to be implemented safely and efficiently outside the traditional operating system.\n\n\nHuman impacts of the project have included the training of at least eight PhD students and five undergraduates, almost all of whom appear as authors on refereed publications.  Several of the students have gone on to distinguished positions in academia and industry.\n\n\nIdeas from the project will figure in the forthcoming fifth edition of the PI's widely used textbook on Programming Language Pragmatics [Morgan Kaufmann publishers, 4th edition 2016] and the second edition of his monograph on Shared-Memory Synchronization [Morgan &amp; Claypool publishers, 2013].  At the University of Rochester, the PI has been a key player in efforts to broaden participation in computing among underrepresented groups.\n\n\t\t\t\t\tLast Modified: 12/27/2021\n\n\t\t\t\t\tSubmitted by: Michael L Scott"
 }
}