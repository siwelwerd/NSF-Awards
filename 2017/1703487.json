{
 "awd_id": "1703487",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "SHF: Medium: Scalable Holistic Autotuning for Software Analytics",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2017-07-01",
 "awd_exp_date": "2023-06-30",
 "tot_intn_awd_amt": 898349.0,
 "awd_amount": 898349.0,
 "awd_min_amd_letter_date": "2017-05-22",
 "awd_max_amd_letter_date": "2022-09-07",
 "awd_abstract_narration": "Software analytics distills large quantities of low-value data down to smaller sets of higher value data that shed important insights for software quality enhancement. It is essential for software effort estimation, risk management, defect prediction, project resource management and many other tasks.\u00a0  Software analytics is a \u00a0complex, time-consuming process.\u00a0 Recent research has tried to alleviate the issue through intelligent optimizers\u00a0 that make better use of existing computational resources. The space of possible options for optimization is very large, and spans over multiple layers: all possible settings for algorithms, compilers, and execution time options. To complicate matters, there are many competing goals that could be used to guide that tuning; e.g. reducing CPU usage while increasing the predictive power of the learned model. Existing research has mainly focused on limited optimizers that explore just a few options at mostly one level while trying to improve on just one or two goals, leaving the large potential of optimizations untapped.\r\n\r\nThis research proposes to advance the state of the art to holistic scalable intelligent optimization for software analytics (SHASA). SHASA tunes all levels of options for multiple optimization objectives at the same time. It achieves this ambitious goal through the development of a set of novel techniques that efficiently handle the tremendous tuning space. These techniques take advantage of the synergies between all those options and goals by exploiting relevancy filtering (to quickly dispose of unhelpful options), locality of inference (that enables faster updates to outdated tunings) and redundancy reduction (that reduces the search space for better tunings).\u00a0 This research will produce algorithms and tools that are demonstrably more useful and efficient for software analytics research. Those techniques are generalizable beyond software analytics for use in computational science and engineering at large.\u00a0 An important broader impact is minimizing CPU and memory usage, ultimately reducing energy consumption in data centers, as data analytics computations grown significantly in scale and become computationally more demanding.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Timothy",
   "pi_last_name": "Menzies",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Timothy J Menzies",
   "pi_email_addr": "timm@ieee.org",
   "nsf_id": "000248284",
   "pi_start_date": "2017-05-22",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Co-Principal Investigator",
   "pi_first_name": "Xipeng",
   "pi_last_name": "Shen",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Xipeng Shen",
   "pi_email_addr": "xshen5@ncsu.edu",
   "nsf_id": "000180293",
   "pi_start_date": "2017-05-22",
   "pi_end_date": "2021-09-03"
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Xipeng",
   "pi_last_name": "Shen",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Xipeng Shen",
   "pi_email_addr": "xshen5@ncsu.edu",
   "nsf_id": "000180293",
   "pi_start_date": "2022-09-07",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Co-Principal Investigator",
   "pi_first_name": "Xu",
   "pi_last_name": "Liu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Xu Liu",
   "pi_email_addr": "xliu88@ncsu.edu",
   "nsf_id": "000677724",
   "pi_start_date": "2021-09-03",
   "pi_end_date": "2022-09-07"
  }
 ],
 "inst": {
  "inst_name": "North Carolina State University",
  "inst_street_address": "2601 WOLF VILLAGE WAY",
  "inst_street_address_2": "",
  "inst_city_name": "RALEIGH",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9195152444",
  "inst_zip_code": "276950001",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "NC02",
  "org_lgl_bus_name": "NORTH CAROLINA STATE UNIVERSITY",
  "org_prnt_uei_num": "U3NVH931QJJ3",
  "org_uei_num": "U3NVH931QJJ3"
 },
 "perf_inst": {
  "perf_inst_name": "North Carolina State University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "276958206",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "NC02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 898349.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>&nbsp;</p>\n<div>1) Intellectual&nbsp;Merit</div>\n<div>* A holistic approach to optimize data analytics software that blends<br />&nbsp; quantization, approximation computing, and program synthesis. The<br />&nbsp; approach shows several to hundreds of times speedups on large<br />&nbsp; machine learning and analytics applications.</div>\n<div>* We also have made progress on a novel mathematical characterized of what it means to make an algorithm run better (an idea called beta-smoothess). THis approach has the potential to further speed up and improve a wide range of software analytics.&nbsp;</div>\n<div></div>\n<div>2) Broader Impact</div>\n<div>* The outcomes open up many new opportunities for efficient use of<br />&nbsp; analytics in software engineering and beyond. The PIs have<br />&nbsp; successfully integrated the findings into their courses and graduate<br />&nbsp; students training.</div>\n<div>* As we enter the age of generative AI, we can no longer just run code. Rather, we need to be perpetually testing it, least we generate models with properties we do not approve. In that world, analytics is no longer a one-time peek at the data but a never-ending process. Our methods make that process faster and easier to do.</div>\n<div>* On a more pragmatic note, this work has repeatedly found that (at the application algorithm level) simple methods often work as good or better than more complex ones. This result underlines an often discoverred, then often forgotten principle of \"try simple before going complex\".</div>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/04/2023<br>\n\t\t\t\t\tModified by: Timothy&nbsp;J&nbsp;Menzies</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \n1) Intellectual Merit\n* A holistic approach to optimize data analytics software that blends\n  quantization, approximation computing, and program synthesis. The\n  approach shows several to hundreds of times speedups on large\n  machine learning and analytics applications.\n* We also have made progress on a novel mathematical characterized of what it means to make an algorithm run better (an idea called beta-smoothess). THis approach has the potential to further speed up and improve a wide range of software analytics. \n\n2) Broader Impact\n* The outcomes open up many new opportunities for efficient use of\n  analytics in software engineering and beyond. The PIs have\n  successfully integrated the findings into their courses and graduate\n  students training.\n* As we enter the age of generative AI, we can no longer just run code. Rather, we need to be perpetually testing it, least we generate models with properties we do not approve. In that world, analytics is no longer a one-time peek at the data but a never-ending process. Our methods make that process faster and easier to do.\n* On a more pragmatic note, this work has repeatedly found that (at the application algorithm level) simple methods often work as good or better than more complex ones. This result underlines an often discoverred, then often forgotten principle of \"try simple before going complex\".\n\n \n\n\t\t\t\t\tLast Modified: 08/04/2023\n\n\t\t\t\t\tSubmitted by: Timothy J Menzies"
 }
}