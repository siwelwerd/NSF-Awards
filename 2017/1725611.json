{
 "awd_id": "1725611",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SPX: Collaborative Research: Dependence Programming and Optimization of Scalable Irregular Numerical Applications",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2017-08-15",
 "awd_exp_date": "2021-07-31",
 "tot_intn_awd_amt": 200000.0,
 "awd_amount": 200000.0,
 "awd_min_amd_letter_date": "2017-08-02",
 "awd_max_amd_letter_date": "2017-08-02",
 "awd_abstract_narration": "Dynamic and irregular applications, such as in the Multiresolution Adaptive Numerical Environment for Scientific Simulation framework, are notoriously hard to implement efficiently, especially on emerging complex and heterogeneous high-performance computing platforms. This is further compounded by the lack of suitable programming models capable of expressing these kinds of applications, while at the same time allowing the tools to efficiently map the applications on a variety of hardware. The intellectual merits of this project are in advancing the state of the art in dependence-based programming models, compiler technologies and runtime techniques that address these issues.  The project's broader significance and importance are in laying down the intellectual foundations for the composition and optimization of irregular scalable algorithms, focusing on challenging and highly-significant spatial-tree algorithms.  This project enables design and implementation of high-performance, portable irregular applications, as well as training of the future employees of companies and government who work in these domains.\r\n\r\nThis project redefines the prevailing abstractions by unifying and extending the Concurrent Collections (CnC) dependence-based programming model with novel compiler and runtime techniques, and applying these to a very important class of dynamic, irregular numerical computations such as the ones found in the above simulation framework. Innovations in the programming model allow the programmers to separate the specification of the algorithm from a specification of how to efficiently map the application on a variety of different platforms with a variety of different tuning goals. Compiler innovations enable previously elusive optimizations of irregular applications, while runtime techniques enable efficient execution on modern, heterogeneous and distributed machines.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Louis-Noel",
   "pi_last_name": "Pouchet",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Louis-Noel Pouchet",
   "pi_email_addr": "pouchet@cs.colostate.edu",
   "nsf_id": "000637181",
   "pi_start_date": "2017-08-02",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Colorado State University",
  "inst_street_address": "601 S HOWES ST",
  "inst_street_address_2": "",
  "inst_city_name": "FORT COLLINS",
  "inst_state_code": "CO",
  "inst_state_name": "Colorado",
  "inst_phone_num": "9704916355",
  "inst_zip_code": "805212807",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "CO02",
  "org_lgl_bus_name": "COLORADO STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "LT9CXX8L19G1"
 },
 "perf_inst": {
  "perf_inst_name": "Colorado State University",
  "perf_str_addr": "200 W. Lake Street",
  "perf_city_name": "Fort Collins",
  "perf_st_code": "CO",
  "perf_st_name": "Colorado",
  "perf_zip_code": "805214593",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "CO02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "042Y00",
   "pgm_ele_name": "PPoSS-PP of Scalable Systems"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 200000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Achieving high performance across different computing systems has become increasingly harder, due to the expanding heterogeneity and complexity of high-performance computing technologies, as exemplified with exa-scale challenges. Scientific applications, such as those built upon MADNESS, require highly complex software optimizations to exploit efficiently modern computing systems. The MADNESS (Multiresolution Adaptive Numerical Environment for Scientific Simulation) system, developed by co-PI Harrison, served as a driving application for this project. MADNESS provides a general purpose numerical environment for a very broad set of applications, roughly characterized by the solution of differential and integral equations in multiple dimensions using dynamically adaptive meshes and fast solvers on trees.<br />For so-called irregular applications, such as scientific simulations using a tree-based representation of mathematical functions from MADNESS, traditional static analysis do not directly lead to an efficient implementation, due to the irregular underlying data structures or with highly dynamic, data-driven computations. This project tackles this challenge with a unified approach that combines novel extensions to a dependence-based programming model, the Concurrent Collections (CnC), with compiler analyses and transformations for delivering high performance, while at the same time addressing the unique runtime challenges for scalability, load balancing and resilience of such irregular applications.<br />At Colorado State University, under co-PI Pouchet's lead, the major goals include the development of static and dynamic compiler-based techniques to facilitate the efficient deployment, at scale, of tree-based CnC applications, exemplified by the advanced scientific simulations implemented in MADNESS. We have completed the development of several techniques to optimize irregular computations, most being inspired from the polyhedral compilation model, a mathematical framework to automatically optimize regular applications. We have delivered automatic approaches to implement divide-and-conquer algorithms at scale, based on polyhedral analysis; to optimize memory-bound computations on modern many-core systems; and to represent and optimize a class of irregular applications manipulating trees using only polyhedral concepts, broadening the application of prior techniques for array-based computations on this class of tree-based applications. Our results have been disseminated via four publications and two Master's thesis in Computer Science during this project.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/22/2022<br>\n\t\t\t\t\tModified by: Louis-Noel&nbsp;Pouchet</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nAchieving high performance across different computing systems has become increasingly harder, due to the expanding heterogeneity and complexity of high-performance computing technologies, as exemplified with exa-scale challenges. Scientific applications, such as those built upon MADNESS, require highly complex software optimizations to exploit efficiently modern computing systems. The MADNESS (Multiresolution Adaptive Numerical Environment for Scientific Simulation) system, developed by co-PI Harrison, served as a driving application for this project. MADNESS provides a general purpose numerical environment for a very broad set of applications, roughly characterized by the solution of differential and integral equations in multiple dimensions using dynamically adaptive meshes and fast solvers on trees.\nFor so-called irregular applications, such as scientific simulations using a tree-based representation of mathematical functions from MADNESS, traditional static analysis do not directly lead to an efficient implementation, due to the irregular underlying data structures or with highly dynamic, data-driven computations. This project tackles this challenge with a unified approach that combines novel extensions to a dependence-based programming model, the Concurrent Collections (CnC), with compiler analyses and transformations for delivering high performance, while at the same time addressing the unique runtime challenges for scalability, load balancing and resilience of such irregular applications.\nAt Colorado State University, under co-PI Pouchet's lead, the major goals include the development of static and dynamic compiler-based techniques to facilitate the efficient deployment, at scale, of tree-based CnC applications, exemplified by the advanced scientific simulations implemented in MADNESS. We have completed the development of several techniques to optimize irregular computations, most being inspired from the polyhedral compilation model, a mathematical framework to automatically optimize regular applications. We have delivered automatic approaches to implement divide-and-conquer algorithms at scale, based on polyhedral analysis; to optimize memory-bound computations on modern many-core systems; and to represent and optimize a class of irregular applications manipulating trees using only polyhedral concepts, broadening the application of prior techniques for array-based computations on this class of tree-based applications. Our results have been disseminated via four publications and two Master's thesis in Computer Science during this project.\n\n \n\n \n\n\t\t\t\t\tLast Modified: 06/22/2022\n\n\t\t\t\t\tSubmitted by: Louis-Noel Pouchet"
 }
}