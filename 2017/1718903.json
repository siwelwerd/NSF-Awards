{
 "awd_id": "1718903",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Test-Driven Development and Maintenance of Declarative Models",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 495487.0,
 "awd_amount": 495487.0,
 "awd_min_amd_letter_date": "2017-05-22",
 "awd_max_amd_letter_date": "2017-05-22",
 "awd_abstract_narration": "As software systems become more and more pervasive, developing reliable and dependable systems becomes more and more critical. Software designs, which model high-level, declarative properties of intended systems, hold a key to increasing reliability and dependability. Declarative modeling is not yet a common practice, because writing declarative models correctly is still challenging and a barrier to challenging problem.  To remove this impediment to the practical application of declarative (relational) modeling,  the project brings software testing concepts, methods, and tool chains to formal specifications based on the Alloy relational modeling system and its underlying satisfiability solving back-ends. Such approaches include unit testing, test generation, the definition and use of coverage metrics to underpin notions of test suite adequacy, and selective regression testing in the face of small changes to specifications.\r\n\r\nThree primary research thrusts are proposed: to build the foundations of a test-driven approach for declarative models; to define testing techniques to validate the correctness of models that users write; and to introduce sketching techniques that allow users to write incomplete models, which are completed using automated synthesis.\u00a0 The implementation of robust tools and a rigorous experimental evaluation based on controlled experiments and case-studies cross-cuts the research thrusts.\u00a0 The ability to develop correct designs, as envisioned by this project, can lead to a major increase in software reliability and dependability, which can bring substantial economic benefits and significantly improve quality of life.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Sarfraz",
   "pi_last_name": "Khurshid",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Sarfraz Khurshid",
   "pi_email_addr": "khurshid@ece.utexas.edu",
   "nsf_id": "000095313",
   "pi_start_date": "2017-05-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Texas at Austin",
  "inst_street_address": "110 INNER CAMPUS DR",
  "inst_street_address_2": "",
  "inst_city_name": "AUSTIN",
  "inst_state_code": "TX",
  "inst_state_name": "Texas",
  "inst_phone_num": "5124716424",
  "inst_zip_code": "787121139",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "TX25",
  "org_lgl_bus_name": "UNIVERSITY OF TEXAS AT AUSTIN",
  "org_prnt_uei_num": "",
  "org_uei_num": "V6AFQPN18437"
 },
 "perf_inst": {
  "perf_inst_name": "University of Texas at Austin",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "TX",
  "perf_st_name": "Texas",
  "perf_zip_code": "787121532",
  "perf_ctry_code": "US",
  "perf_cong_dist": "25",
  "perf_st_cong_dist": "TX25",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 495487.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project addressed the important problem of how to correctly build declarative models (or specifications) of software systems. A key idea was to take a test-driven approach that takes foundational concepts in software testing -- as defined and widely practiced for imperative code -- and re-defines them for the declarative paradigm, thereby laying the foundation of an effective methodology for validating correctness of models. Another key idea was to build on the success of sketching as a highly practical form of synthesis of imperative code, and introduce sketching of declarative models so they are correct by construction. The techniques and tools developed introduced novel forms of automated test generation, mutation testing, regression testing, and test-driven synthesis -- all for declarative models.</p>\r\n<p>Software models already hold immense value in software development. The ability to validate models and remove design errors early in the development process -- as envisioned in this project -- can substantially reduce the cost of software development and cost of software failures, and enhance software dependability.</p>\r\n<p>This project supported key research and education activities that provided advanced training in the area of modeling, testing, and synthesis to Masters and PhD students. Courses taught included graduate-level classes offered to part-time students who worked full-time as practitioners in the software industry, thereby providing an avenue for potential technology transfer from academia to industry. The results of the project were disseminated at peer reviewed venues through publications and presentations.</p><br>\n<p>\n Last Modified: 12/19/2024<br>\nModified by: Sarfraz&nbsp;Khurshid</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThis project addressed the important problem of how to correctly build declarative models (or specifications) of software systems. A key idea was to take a test-driven approach that takes foundational concepts in software testing -- as defined and widely practiced for imperative code -- and re-defines them for the declarative paradigm, thereby laying the foundation of an effective methodology for validating correctness of models. Another key idea was to build on the success of sketching as a highly practical form of synthesis of imperative code, and introduce sketching of declarative models so they are correct by construction. The techniques and tools developed introduced novel forms of automated test generation, mutation testing, regression testing, and test-driven synthesis -- all for declarative models.\r\n\n\nSoftware models already hold immense value in software development. The ability to validate models and remove design errors early in the development process -- as envisioned in this project -- can substantially reduce the cost of software development and cost of software failures, and enhance software dependability.\r\n\n\nThis project supported key research and education activities that provided advanced training in the area of modeling, testing, and synthesis to Masters and PhD students. Courses taught included graduate-level classes offered to part-time students who worked full-time as practitioners in the software industry, thereby providing an avenue for potential technology transfer from academia to industry. The results of the project were disseminated at peer reviewed venues through publications and presentations.\t\t\t\t\tLast Modified: 12/19/2024\n\n\t\t\t\t\tSubmitted by: SarfrazKhurshid\n"
 }
}