{
 "awd_id": "1712674",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "NeTS: Small: A Virtualized Network Resource Pool for Software-Defined Network Management",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Darleen Fisher",
 "awd_eff_date": "2016-07-01",
 "awd_exp_date": "2019-09-30",
 "tot_intn_awd_amt": 350702.0,
 "awd_amount": 350702.0,
 "awd_min_amd_letter_date": "2016-11-21",
 "awd_max_amd_letter_date": "2018-10-26",
 "awd_abstract_narration": "Management of today's networks usually requires an army of operators who devote tremendous time and energy. Software-defined networking (SDN) has been shown to be a promising paradigm for simplifying network management. However, management tasks in SDNs require the use of constrained network resources: switch memory and CPU, and the switch-controller network bandwidth. Given these resource constraints, network operators may have to reason about resource usage when initiating network management tasks.\r\n\r\nThis project seeks to explore the space of resource management for software-defined network management. Specifically, it will examine the design of virtualized resource pools that provide the abstraction of (nearly) infinite resources (memory, CPU and switch), while dynamically adapting to the resource needs of these network management tasks. This approach has the advantage that network operators do not have to reason about resource usage when instantiating network management tasks. The research will yield resource management algorithms, improved resource usage designs, and systems implementations for virtualized resource pools.\r\n\r\nNetwork operators make billion-dollar investments in network infrastructures, but put little thought into visibility and control of these infrastructures. This project can lead to better-managed, more reliable, and more resource-efficient network infrastructures in ISPs, enterprises and clouds. These efforts eventually will have broader societal impact by enabling commercial, social, and scientific advances. The proposal will give underrepresented groups and undergraduates opportunities to participate in research and will likely result in technology transfer to major cloud providers and ISPs.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Zhong",
   "pi_last_name": "Shao",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhong Shao",
   "pi_email_addr": "zhong.shao@yale.edu",
   "nsf_id": "000201856",
   "pi_start_date": "2017-12-12",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Minlan",
   "pi_last_name": "Yu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Minlan Yu",
   "pi_email_addr": "minlanyu@seas.harvard.edu",
   "nsf_id": "000607447",
   "pi_start_date": "2016-11-21",
   "pi_end_date": "2017-12-12"
  }
 ],
 "inst": {
  "inst_name": "Yale University",
  "inst_street_address": "150 MUNSON ST",
  "inst_street_address_2": "",
  "inst_city_name": "NEW HAVEN",
  "inst_state_code": "CT",
  "inst_state_name": "Connecticut",
  "inst_phone_num": "2037854689",
  "inst_zip_code": "065113572",
  "inst_country_name": "United States",
  "cong_dist_code": "03",
  "st_cong_dist_code": "CT03",
  "org_lgl_bus_name": "YALE UNIV",
  "org_prnt_uei_num": "FL6GV84CKN57",
  "org_uei_num": "FL6GV84CKN57"
 },
 "perf_inst": {
  "perf_inst_name": "Yale University",
  "perf_str_addr": "AKWatson Hall",
  "perf_city_name": "New Haven",
  "perf_st_code": "CT",
  "perf_st_name": "Connecticut",
  "perf_zip_code": "065208285",
  "perf_ctry_code": "US",
  "perf_cong_dist": "03",
  "perf_st_cong_dist": "CT03",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736300",
   "pgm_ele_name": "Networking Technology and Syst"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0114",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001415DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2014,
   "fund_oblg_amt": 350702.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p dir=\"ltr\"><span>Management of today's networks usually requires a huge army of people (i.e., operators), who devote tremendous time and energy. To simplify network management, software-defined networking (SDN) has been shown to be a promising paradigm. However, management tasks in SDNs require the use of constrained network resources: switch memory and CPU, host CPUs, and the network bandwidth to the controller. This project seeks to explore the space of resource management for software-defined network management.&nbsp;</span></p>\n<p dir=\"ltr\"><span>We first focus on resource management for measurement tasks at both hosts and switches. The first system we built is Trumpet, an event monitoring system that leverages CPU resources and end-host programmability, to monitor every packet and report at millisecond timescales.&nbsp; As data centers grow larger and strive to provide tight performance and availability SLAs, their monitoring infrastructure must move from passive systems that provide aggregated inputs to human operators, to active systems that enable programmed control. Trumpet allows operators to describe new network events such as detecting correlated bursts and loss, identifying the root cause of transient congestion, and detecting short-term anomalies at the scale of a data center tenant. The system efficiently detects these events using triggers at end-hosts, evaluate thousands of such triggers by inspecting every packet at full line rate, and report events to a controller within 10 milliseconds. The second system is FlowRadar, we designed a new way to maintain flows and their counters that scales to a large number of flows with small memory and bandwidth overhead. The key idea of FlowRadar is to encode perflow counters with a small memory and constant insertion time at switches, and then to leverage the computing power at the remote collector to perform network-wide decoding and analysis of the flow counters. With FlowRadar, operators can get better views into their networks as demonstrated by two new monitoring applications we build on top of FlowRadar.</span></p>\n<p dir=\"ltr\"><span>A complementary aspect of resource management is the design of networks and topologies with adequate resources for the task. The project pioneered work in data-center topology design with the Condor work. The design space for large, multipath datacenter networks is large and complex, and no one design fits all purposes. Network architects must trade off many criteria to design cost-effective, reliable, and maintainable networks, and typically cannot explore much of the design space. Condor allows architects to express their requirements as constraints via a Topology Description Language (TDL), rather than having to directly specify network structures. Condor then uses constraint-based synthesis to rapidly generate candidate topologies, which can be analyzed against multiple criteria. TDL supports concise descriptions of topologies such as fat-trees, BCube, and DCell; Condor can generate known and novel variants of fat-trees with simple changes to a TDL file; and can synthesize large topologies in tens of seconds. A second, more recent, piece of work explores the manageability of data centers, focusing on lifecycle management. That work develops metrics for deployment and expansion of data centers and shows that existing topology designs fall short by some of these metrics. It then goes on to develop a class of topologies called FatClique which is superior to existing topology designs by all manageability metrics.</span></p>\n<p dir=\"ltr\"><span>These outcomes have resulted in multiple publications, several presentations, and we have transitioned code to industry. In addition, the project has trained 2 PhD students. One undergraduate student and a few master students have also participated in the research.</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/19/2019<br>\n\t\t\t\t\tModified by: Zhong&nbsp;Shao</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "Management of today's networks usually requires a huge army of people (i.e., operators), who devote tremendous time and energy. To simplify network management, software-defined networking (SDN) has been shown to be a promising paradigm. However, management tasks in SDNs require the use of constrained network resources: switch memory and CPU, host CPUs, and the network bandwidth to the controller. This project seeks to explore the space of resource management for software-defined network management. \nWe first focus on resource management for measurement tasks at both hosts and switches. The first system we built is Trumpet, an event monitoring system that leverages CPU resources and end-host programmability, to monitor every packet and report at millisecond timescales.  As data centers grow larger and strive to provide tight performance and availability SLAs, their monitoring infrastructure must move from passive systems that provide aggregated inputs to human operators, to active systems that enable programmed control. Trumpet allows operators to describe new network events such as detecting correlated bursts and loss, identifying the root cause of transient congestion, and detecting short-term anomalies at the scale of a data center tenant. The system efficiently detects these events using triggers at end-hosts, evaluate thousands of such triggers by inspecting every packet at full line rate, and report events to a controller within 10 milliseconds. The second system is FlowRadar, we designed a new way to maintain flows and their counters that scales to a large number of flows with small memory and bandwidth overhead. The key idea of FlowRadar is to encode perflow counters with a small memory and constant insertion time at switches, and then to leverage the computing power at the remote collector to perform network-wide decoding and analysis of the flow counters. With FlowRadar, operators can get better views into their networks as demonstrated by two new monitoring applications we build on top of FlowRadar.\nA complementary aspect of resource management is the design of networks and topologies with adequate resources for the task. The project pioneered work in data-center topology design with the Condor work. The design space for large, multipath datacenter networks is large and complex, and no one design fits all purposes. Network architects must trade off many criteria to design cost-effective, reliable, and maintainable networks, and typically cannot explore much of the design space. Condor allows architects to express their requirements as constraints via a Topology Description Language (TDL), rather than having to directly specify network structures. Condor then uses constraint-based synthesis to rapidly generate candidate topologies, which can be analyzed against multiple criteria. TDL supports concise descriptions of topologies such as fat-trees, BCube, and DCell; Condor can generate known and novel variants of fat-trees with simple changes to a TDL file; and can synthesize large topologies in tens of seconds. A second, more recent, piece of work explores the manageability of data centers, focusing on lifecycle management. That work develops metrics for deployment and expansion of data centers and shows that existing topology designs fall short by some of these metrics. It then goes on to develop a class of topologies called FatClique which is superior to existing topology designs by all manageability metrics.\nThese outcomes have resulted in multiple publications, several presentations, and we have transitioned code to industry. In addition, the project has trained 2 PhD students. One undergraduate student and a few master students have also participated in the research.\n\n\t\t\t\t\tLast Modified: 11/19/2019\n\n\t\t\t\t\tSubmitted by: Zhong Shao"
 }
}