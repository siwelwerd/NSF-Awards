{
 "awd_id": "1651861",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: Approximation Algorithms via SDP hierarchies",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922182",
 "po_email": "pbrass@nsf.gov",
 "po_sign_block_name": "Peter Brass",
 "awd_eff_date": "2017-02-01",
 "awd_exp_date": "2024-01-31",
 "tot_intn_awd_amt": 522239.0,
 "awd_amount": 522239.0,
 "awd_min_amd_letter_date": "2017-01-24",
 "awd_max_amd_letter_date": "2020-08-06",
 "awd_abstract_narration": "Computational problems have become pervasive in all fields of science where huge amounts of data have to be processed efficiently. For computationally hard problems where computing the exact optimum solution is intractable, the next best option is to design efficient approximation algorithms that find solutions that are provably close to the optimum. In this project, the PI and the supported graduate student will design such approximation algorithms based on the still poorly understood Lasserre semidefinite programming hierarchy. The goal is to provide better algorithms for several key problems that are studied in combinatorial optimization. Practical applications of approximation algorithms can be found in many areas of science and industry. Moreover, this proposal includes the integration of research and teaching by means of graduate courses that cover the Lasserre hierarchy in a manner accessible for graduate students outside of theoretical computer science.\r\n \r\nMore concretely, the goal is to develop approximation algorithms based on the Lasserre SDP for outstanding unsolved problems like Directed Steiner Tree, Graph Coloring, Unrelated Machine Scheduling and Unique Games. In particular this means designing new rounding schemes to extract valid integral solutions and developing the analytical techniques needed to study their effectiveness. A key ingredient will be the development of a better understanding of the vector embeddings for higher moments that are provided by the Lasserre SDP. \r\n\r\nKeywords: Approximation algorithms; Semidefinite programs; Integrality gaps; Lasserre hierarchy",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Thomas",
   "pi_last_name": "Rothvoss",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Thomas Rothvoss",
   "pi_email_addr": "rothvoss@uw.edu",
   "nsf_id": "000661599",
   "pi_start_date": "2017-01-24",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Washington",
  "inst_street_address": "4333 BROOKLYN AVE NE",
  "inst_street_address_2": "",
  "inst_city_name": "SEATTLE",
  "inst_state_code": "WA",
  "inst_state_name": "Washington",
  "inst_phone_num": "2065434043",
  "inst_zip_code": "981951016",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "WA07",
  "org_lgl_bus_name": "UNIVERSITY OF WASHINGTON",
  "org_prnt_uei_num": "",
  "org_uei_num": "HD1WMN6945W6"
 },
 "perf_inst": {
  "perf_inst_name": "University of Washington",
  "perf_str_addr": "",
  "perf_city_name": "Seattle",
  "perf_st_code": "WA",
  "perf_st_name": "Washington",
  "perf_zip_code": "981950001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "WA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 178293.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 111530.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 232416.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The project investigates approximation algorithms for NP-hard problems. In a classic setting in scheduling one has a set of jobs that have interdependencies&nbsp; and a set of machines (or servers). Locating dependent jobs on different machines causes a communication delay between completion of a job and the start of any dependent job. The objective is to find a schedule that minimizes the makespan which is the time that all the jobs are completed. This problem was very poorly understood from a theoretical perspective and was featured on a top-10 list of open problems in scheduling. The main technical hurdle was the absense of any known linear programming relaxations that seemed strong enough. <br />The main outcome of this project is an approximation algorithm with a provable&nbsp; polylogarithmic approximation guarantee for minimizing makespan&nbsp; objective function. The algorithm is based on the Sherali-Adams lift of the natural (weak) linear program, which provides an automatic strengthening with a locally consistent solution. We can then prove that this lift induces a semi-metric on the set of jobs that can be interpreted as the probability to schedule jobs on different machines. Then a schedule can be obtained by iteratively applying the so-called CKR clustering algorithm for metric spaces that provides small diameter blocks. <br />We provide extensions that work for the weighted completion time objective function as well as for the case that machines have different speeds. We also provide hardness results for the generalization in which the communication delay may depend on the pair of jobs.</p><br>\n<p>\n Last Modified: 04/11/2024<br>\nModified by: Thomas&nbsp;Rothvoss</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nThe project investigates approximation algorithms for NP-hard problems. In a classic setting in scheduling one has a set of jobs that have interdependencies and a set of machines (or servers). Locating dependent jobs on different machines causes a communication delay between completion of a job and the start of any dependent job. The objective is to find a schedule that minimizes the makespan which is the time that all the jobs are completed. This problem was very poorly understood from a theoretical perspective and was featured on a top-10 list of open problems in scheduling. The main technical hurdle was the absense of any known linear programming relaxations that seemed strong enough. \nThe main outcome of this project is an approximation algorithm with a provable polylogarithmic approximation guarantee for minimizing makespan objective function. The algorithm is based on the Sherali-Adams lift of the natural (weak) linear program, which provides an automatic strengthening with a locally consistent solution. We can then prove that this lift induces a semi-metric on the set of jobs that can be interpreted as the probability to schedule jobs on different machines. Then a schedule can be obtained by iteratively applying the so-called CKR clustering algorithm for metric spaces that provides small diameter blocks. \nWe provide extensions that work for the weighted completion time objective function as well as for the case that machines have different speeds. We also provide hardness results for the generalization in which the communication delay may depend on the pair of jobs.\t\t\t\t\tLast Modified: 04/11/2024\n\n\t\t\t\t\tSubmitted by: ThomasRothvoss\n"
 }
}