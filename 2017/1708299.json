{
 "awd_id": "1708299",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: ACI-CDS&E: Highly Parallel Algorithms and Architectures for Convex Optimization for Realtime Embedded Systems (CORES)",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Tevfik Kosar",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 349988.0,
 "awd_amount": 349988.0,
 "awd_min_amd_letter_date": "2017-08-24",
 "awd_max_amd_letter_date": "2020-08-06",
 "awd_abstract_narration": "Embedded processors are ubiquitous, from toasters and microwave ovens, to automobiles, planes, drones and robots and are typically very small processors that are compute and memory constrained. Real-time embedded systems have the additional requirement of completing tasks within a certain time period to accurately and safely control appliances and devices like automobiles, planes, robots, etc. Convex optimization has emerged as an important mathematical tool for automatic control and robotics and other areas of science and engineering disciplines including machine learning and statistical information processing.  In many fields, convex optimization is used by the human designers as optimization tool where it is nearly always constrained to problems solved in a few hours, minutes or seconds. Highly Parallel Algorithms and Architectures for Convex Optimization for Realtime Embedded Systems (CORES) project takes advantage of the recent advances in embedded hardware and optimization techniques to explore opportunities for real-time convex optimization on the low-cost embedded systems in these disciplines in milli- and micro-seconds. The development of novel algorithms and their high-performance implementations for the real-time solution of practical engineering and scientific optimization problems on the embedded system will open new opportunities in the area of emerging computational science and engineering for cyber physical systems on low-cost platforms. Equally important is the CORES contributions to the education of the next generation of researchers and creators of future infrastructure for realtime computational systems for problems involving engineering optimization. Foremost, CORES will provide undergraduate and graduate level educational opportunities with a multidisciplinary breadth spanning areas as diverse as optimization theory, parallel algorithms for numerical optimization, embedded computer systems, and heterogeneous computing architectures.  Interactions with the control engineering and auto industries in the State of Michigan confirms the need for the development of expertise in this area for present and future engineering research and development. The results from CORES research will have an impact in the fields of engineering optimization and computing infrastructure for cyber physical systems.\r\n\r\n\r\n\r\nThe current algorithms for realtime convex optimization can only solve the problem with about a hundred unknowns in the Karush Kuhn Tucker (KKT) convex optimization matrices. This is because the realtime solution enforces a strict time limit on the linear solver (e.g., in microseconds) and  the current algorithms are not designed to fully utilize the limited compute power of the embedded system (e.g., a few CPU cores, plus a GPU). The CORES project will analyze the structure of complex multi-dimensional convex optimization algorithms and replaces the existing sequential implementations, which are the current performance bottleneck, with implementations of new tracking algorithms. Efficient implementations of the algorithms that can effectively leverage the compute power of the scalable heterogeneous system  architecture (SHSA) of the embedded system will be developed. The goal is to speed up the solution process and scale up the size of the optimization problems by orders of magnitude for realtime embedded applications such as control of complex cyber-physical systems (CPS). Specifically, CORES will focus on: (1) Development of high performance linear solvers that exploit the structures of the KKT matrices and leverage the compute power of SHSA and (2) Development of automatic code generation and analysis tools that analyze the structure of the convex optimization problem from a high level modeling language like MATLAB or PYTHON, perform a mapping to a decomposed parallel algorithm, and generate a hybridized multicore CPU and GPU code in OpenCL/CUDA format. Tools that CORES aims to develop come with hierarchical parallel-feature extraction, targeted for various computing elements of SHSA e.g. CPUs and GPU) in a way that eliminates the inefficiencies of inter-processors data sharing. Emerging SHSA combines general-purpose low-latency CPU cores with programmable high-bandwidth vector processing engines on a single platform, connected through a high speed data transfer engines that could still become the performance bottleneck. This feature creates unique opportunities for CORES, and others, to develop sophisticated and specialized computational algorithms and tools for engineering applications such as machine learning and autonomous vehicles  that can exploit such architectures for significantly enhancing performance and scaling up the problem size, while reducing the cost.\r\n\r\nThis project is supported by the Office of Advanced Cyberinfrastructure in the Directorate for Computer & Information Science & Engineering and the Division of Mathematical Sciences in the Directorate of Mathematical and Physical Sciences.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Glen",
   "pi_last_name": "Archer",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Glen E Archer",
   "pi_email_addr": "gearcher@mtu.edu",
   "nsf_id": "000426029",
   "pi_start_date": "2020-08-06",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Saeid",
   "pi_last_name": "Nooshabadi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Saeid Nooshabadi",
   "pi_email_addr": "saeid@mtu.edu",
   "nsf_id": "000552983",
   "pi_start_date": "2017-08-24",
   "pi_end_date": "2020-08-06"
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Saeid",
   "pi_last_name": "Nooshabadi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Saeid Nooshabadi",
   "pi_email_addr": "saeid@mtu.edu",
   "nsf_id": "000552983",
   "pi_start_date": "2020-08-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Michigan Technological University",
  "inst_street_address": "1400 TOWNSEND DR",
  "inst_street_address_2": "",
  "inst_city_name": "HOUGHTON",
  "inst_state_code": "MI",
  "inst_state_name": "Michigan",
  "inst_phone_num": "9064871885",
  "inst_zip_code": "499311200",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "MI01",
  "org_lgl_bus_name": "MICHIGAN TECHNOLOGICAL UNIVERSITY",
  "org_prnt_uei_num": "GKMSN3DA6P91",
  "org_uei_num": "GKMSN3DA6P91"
 },
 "perf_inst": {
  "perf_inst_name": "Michigan Technological University",
  "perf_str_addr": "1400 Townsend Dr",
  "perf_city_name": "Houghton",
  "perf_st_code": "MI",
  "perf_st_name": "Michigan",
  "perf_zip_code": "499311295",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "MI01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806900",
   "pgm_ele_name": "CDS&E-MSS"
  },
  {
   "pgm_ele_code": "808400",
   "pgm_ele_name": "CDS&E"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "8084",
   "pgm_ref_txt": "CDS&E"
  },
  {
   "pgm_ref_code": "9263",
   "pgm_ref_txt": "COMPUTATIONAL SCIENCE & ENGING"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 349988.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-e2fbd356-7fff-9fe4-2718-16293c80d041\">\n<p>This project exploited the property of the KKT matrix involved in the solution of the problem that only some parts of the matrix change during the solution iterations of the algorithm. Our results show that the proposed method can effectively reduce the run time of the solvers.</p>\n<p>This project&nbsp;developed a technique that integrates deep learning artificial intelligence (AI) with traditional high-performance computing (HPC) simulations for use in a climate simulation. At each time step of an HPC simulation, the in situ ML method is exposed to both compressed image data and the original image. Over the duration of the simulation, only the compressed image data is stored to disk, while an ML method adaptively learns the correct super-resolution transformation of the compressed data.</p>\n<p>The project used deep neural learning and convex optimization for radar point-cloud processing to detect pose objects at the rear of a truck. One example is the pose detection of the trailer model to ascertain the hitch angle using the radar points associated with the trailer.</p>\n<p>New software for new convex optimization solvers and optimizations for heterogeneous architectures (multi-core CPUs and GPU accelerators) was developed. The developments were released through the MAGMA library in the MAGMA 2.5.4, MAGMA 2.6.0, and MAGMA 2.6.1 releases. Developments of convex optimization solvers for DNN training were released through the MagmaDDN library, release 1.2. The libraries are publicly available on MAGMA&rsquo;s Bitbucket repository.&nbsp;</p>\n<p>Related to portability of the solvers, the project ported MAGMA to HIP for AMD GPUs using auto-tools (scripts) and demonstrated both functional and performance portability, and merged the HIP development into MAGMA. The work was released through MAGMA 2.6.0 and MAGMA 2.6.1, available on Bitbucket as open-source software.</p>\n</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/05/2021<br>\n\t\t\t\t\tModified by: Saeid&nbsp;Nooshabadi</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\n\nThis project exploited the property of the KKT matrix involved in the solution of the problem that only some parts of the matrix change during the solution iterations of the algorithm. Our results show that the proposed method can effectively reduce the run time of the solvers.\n\nThis project developed a technique that integrates deep learning artificial intelligence (AI) with traditional high-performance computing (HPC) simulations for use in a climate simulation. At each time step of an HPC simulation, the in situ ML method is exposed to both compressed image data and the original image. Over the duration of the simulation, only the compressed image data is stored to disk, while an ML method adaptively learns the correct super-resolution transformation of the compressed data.\n\nThe project used deep neural learning and convex optimization for radar point-cloud processing to detect pose objects at the rear of a truck. One example is the pose detection of the trailer model to ascertain the hitch angle using the radar points associated with the trailer.\n\nNew software for new convex optimization solvers and optimizations for heterogeneous architectures (multi-core CPUs and GPU accelerators) was developed. The developments were released through the MAGMA library in the MAGMA 2.5.4, MAGMA 2.6.0, and MAGMA 2.6.1 releases. Developments of convex optimization solvers for DNN training were released through the MagmaDDN library, release 1.2. The libraries are publicly available on MAGMA\u2019s Bitbucket repository. \n\nRelated to portability of the solvers, the project ported MAGMA to HIP for AMD GPUs using auto-tools (scripts) and demonstrated both functional and performance portability, and merged the HIP development into MAGMA. The work was released through MAGMA 2.6.0 and MAGMA 2.6.1, available on Bitbucket as open-source software.\n\n\n\t\t\t\t\tLast Modified: 09/05/2021\n\n\t\t\t\t\tSubmitted by: Saeid Nooshabadi"
 }
}