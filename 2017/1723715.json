{
 "awd_id": "1723715",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CAPA: Collaborative Research: A Multi-Paradigm Programming Infrastructure for Heterogeneous Architectures",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2017-09-15",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 425000.0,
 "awd_amount": 501000.0,
 "awd_min_amd_letter_date": "2017-08-31",
 "awd_max_amd_letter_date": "2021-05-28",
 "awd_abstract_narration": "Heterogeneous computing with extensive use of hardware accelerators, such as FPGAs and GPUs, has shown great promise to bring in orders of magnitude improvement in computing efficiency for a wide range of applications. However, such heterogeneous platforms are difficult to program, especially with FPGAs, limiting their use to only a small subset of programmers with specialized hardware knowledge.  The intellectual merits of this research are to develop a highly productive multi-paradigm programming infrastructure for heterogeneous architectures that integrates convenient heterogeneous programming models, automated compilation for high-level domain-specific languages, novel runtime, and debugging support. The project's broader significance and importance are to introduce the latest research into multiple graduate and undergraduate courses and tutorials at major conferences, with the goal of training a new generation of diverse students and professionals to use heterogeneous programming models. These programmers will be able to apply the developed infrastructure effectively to many important compute-intensive applications in our society to further the digital revolution.  \r\n\r\nSpecifically, the project has four innovative research components: (1) a new programming model, named HeteroCL, that enables programming of heterogeneous systems in a single unified program, (2) a reusable methodology to efficiently transform high-level DSLs to HeteroCL, (3) an efficient runtime system that support the HeteroCL programming model and high-level DSLs, with unique capability of dynamic and intelligent co-scheduling of workloads to CPUs and accelerators at multiple levels of computing hierarchy,  and (4) novel FPGA performance debugging tools for instrumentation and performance monitoring.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Zhiru",
   "pi_last_name": "Zhang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhiru Zhang",
   "pi_email_addr": "zhiruz@cornell.edu",
   "nsf_id": "000631474",
   "pi_start_date": "2017-08-31",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Adrian",
   "pi_last_name": "Sampson",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Adrian Sampson",
   "pi_email_addr": "asampson@cornell.edu",
   "nsf_id": "000719636",
   "pi_start_date": "2017-08-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "136 Hoy Road",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148533801",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "164000",
   "pgm_ele_name": "Information Technology Researc"
  },
  {
   "pgm_ele_code": "287800",
   "pgm_ele_name": "Special Projects - CCF"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "021Z",
   "pgm_ref_txt": "Industry Partnerships"
  },
  {
   "pgm_ref_code": "026Z",
   "pgm_ref_txt": "NSCI: National Strategic Computing Initi"
  },
  {
   "pgm_ref_code": "2878",
   "pgm_ref_txt": "SPECIAL PROJECTS - CCF"
  },
  {
   "pgm_ref_code": "7798",
   "pgm_ref_txt": "SOFTWARE & HARDWARE FOUNDATION"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "8585",
   "pgm_ref_txt": "NSF/Intel Partnership Projects"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 425000.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 60000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-f382ece7-7fff-d7e7-3dc1-de1cc842969f\">\n<p dir=\"ltr\"><span>Heterogeneous computing, which involves using specialized hardware accelerators such as FPGAs and GPUs, has the potential to significantly increase computing efficiency for a variety of important applications. Recent advances in industry have led to highly integrated heterogeneous computing systems, such as multi-chip packages with CPUs and FPGAs, and cloud platforms with GPUs and FPGAs. However, these platforms are difficult to program, especially when it comes to FPGAs, and their use has been limited to a small group of programmers with specialized hardware expertise.</span></p>\n<p dir=\"ltr\"><span>This project aimed to develop a multi-paradigm programming infrastructure for heterogeneous architectures that combines new programming models, automated compilation for domain-specific languages, and verification support. The research team made significant progress in this area, including the creation of HeteroCL, a programming framework that includes a Python-based DSL and a compiler that maps algorithms into efficient accelerators running on FPGAs. HeteroCL separates the specification of algorithms from hardware customization in terms of data types, compute, and memory architectures, improving both design productivity and portability. The team also developed Calyx, a compiler infrastructure that uses a novel intermediate representation to encode both the temporal control behavior of programs and shareable hardware resources, making it possible to quickly create compilers for domain-specific languages that generate RTL. These research efforts have resulted in 10+ publications in computer architecture, EDA, FPGA, and programming language conferences and journals, and have been demonstrated using several hardware prototypes. Additionally, most of the software and datasets developed in this project have been released as open-source.</span></p>\n<p dir=\"ltr\"><span>As part of this project's outreach plan, the PIs worked with Diversity Programs in Engineering (DPE) and the Cornell University Louis Stokes Alliance for Minority Participation Summer Research Experience for Undergraduates (CU LSAMP) to provide research experience for a group of talented undergraduate students from underrepresented background. They also co-organized a new workshop on Languages, Tools, and Techniques for Accelerator Design (LATTE), in conjunction with ASPLOS. The LATTE workshop included peer-reviewed papers and invited talks from both academia and industry around the theme of language- and compiler-based approaches to designing custom hardware accelerators.&nbsp;</span></p>\n<div><span><br /></span></div>\n</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/06/2023<br>\n\t\t\t\t\tModified by: Zhiru&nbsp;Zhang</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nHeterogeneous computing, which involves using specialized hardware accelerators such as FPGAs and GPUs, has the potential to significantly increase computing efficiency for a variety of important applications. Recent advances in industry have led to highly integrated heterogeneous computing systems, such as multi-chip packages with CPUs and FPGAs, and cloud platforms with GPUs and FPGAs. However, these platforms are difficult to program, especially when it comes to FPGAs, and their use has been limited to a small group of programmers with specialized hardware expertise.\nThis project aimed to develop a multi-paradigm programming infrastructure for heterogeneous architectures that combines new programming models, automated compilation for domain-specific languages, and verification support. The research team made significant progress in this area, including the creation of HeteroCL, a programming framework that includes a Python-based DSL and a compiler that maps algorithms into efficient accelerators running on FPGAs. HeteroCL separates the specification of algorithms from hardware customization in terms of data types, compute, and memory architectures, improving both design productivity and portability. The team also developed Calyx, a compiler infrastructure that uses a novel intermediate representation to encode both the temporal control behavior of programs and shareable hardware resources, making it possible to quickly create compilers for domain-specific languages that generate RTL. These research efforts have resulted in 10+ publications in computer architecture, EDA, FPGA, and programming language conferences and journals, and have been demonstrated using several hardware prototypes. Additionally, most of the software and datasets developed in this project have been released as open-source.\nAs part of this project's outreach plan, the PIs worked with Diversity Programs in Engineering (DPE) and the Cornell University Louis Stokes Alliance for Minority Participation Summer Research Experience for Undergraduates (CU LSAMP) to provide research experience for a group of talented undergraduate students from underrepresented background. They also co-organized a new workshop on Languages, Tools, and Techniques for Accelerator Design (LATTE), in conjunction with ASPLOS. The LATTE workshop included peer-reviewed papers and invited talks from both academia and industry around the theme of language- and compiler-based approaches to designing custom hardware accelerators. \n\n\n\n\n \n\n\t\t\t\t\tLast Modified: 01/06/2023\n\n\t\t\t\t\tSubmitted by: Zhiru Zhang"
 }
}