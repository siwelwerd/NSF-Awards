{
 "awd_id": "1718586",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: STARSS: Small: Property Driven Hardware Security",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Jeremy Epstein",
 "awd_eff_date": "2017-10-01",
 "awd_exp_date": "2022-09-30",
 "tot_intn_awd_amt": 326000.0,
 "awd_amount": 358000.0,
 "awd_min_amd_letter_date": "2017-08-22",
 "awd_max_amd_letter_date": "2020-10-15",
 "awd_abstract_narration": "The task of designing modern hardware that is impervious to any and every security attack is almost impossible to achieve. It is extremely hard to ensure that these complex, multi-billion transistor systems are functionally correct, let alone secure. Thus, it should not be surprising that there are a large and growing number of attacks that target hardware vulnerabilities. The state of the art for hardware design security relies heavily on functional verification, manual inspection, and code review to identify security vulnerabilities. This labor-intensive process does not scale, it significantly reduces productivity, and provides no guarantee that a security flaw will be identified. Continuing with the status quo will undoubtedly leave hardware designs susceptible to attacks manifested through hardware, firmware, and software vulnerabilities. This project develops a property driven approach to hardware security, which enables automatic verification of security properties on a hardware design. \r\n\r\nThe project encompasses three major research goals: creating expressive security property languages, building comprehensive models that analyze the security of a hardware design, and generating tools that can verify security properties in an efficient and scalable manner. The investigators address these challenges by developing models that enable the specification of a wide variety of security properties. The project builds a novel security property specification languages leveraging these models, and develops new techniques that enable the verification of these properties using existing formal solvers, simulation environments, and emulation platforms. Finally, they address the usability of this property driven approach by verifying security properties on different hardware designs.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Ryan",
   "pi_last_name": "Kastner",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ryan Kastner",
   "pi_email_addr": "kastner@ucsd.edu",
   "nsf_id": "000278580",
   "pi_start_date": "2017-08-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-San Diego",
  "inst_street_address": "9500 GILMAN DR",
  "inst_street_address_2": "",
  "inst_city_name": "LA JOLLA",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8585344896",
  "inst_zip_code": "920930021",
  "inst_country_name": "United States",
  "cong_dist_code": "50",
  "st_cong_dist_code": "CA50",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, SAN DIEGO",
  "org_prnt_uei_num": "",
  "org_uei_num": "UYTTZT6G9DT1"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-San Diego",
  "perf_str_addr": "",
  "perf_city_name": "La Jolla",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "920930934",
  "perf_ctry_code": "US",
  "perf_cong_dist": "50",
  "perf_st_cong_dist": "CA50",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "021Z",
   "pgm_ref_txt": "Industry Partnerships"
  },
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "8225",
   "pgm_ref_txt": "SaTC Special Projects"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 326000.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 16000.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Property-driven hardware security is a verification methodology that defines the threat model, specifies the security requirements as properties, detects violations of those properties, and assesses the resultant consequences to security. In practice, security experts and hardware designers are tasked with understanding the threat model and writing formal properties describing the desired security requirements. Once these properties are specified, powerful commercial hardware security verification tools can detect whether the hardware adheres to these behaviors.</p>\n<p>Translating software and system-level security requirements into hardware security properties is a complex, mostly manual process that is the bottleneck of property-driven hardware security. Specifying hardware security properties is challenging because it requires insights from security auditors and hardware designers. Security auditors will not deeply understand the hardware?s functionality, while hardware designers rarely understand the nuances of the security requirements. This forces the security and hardware teams to jointly understand the security requirements and their implications on the hardware design (and vice-versa).</p>\n<p>The intellectual merits of the project involved developing a property-driven approach to hardware security, which enables automatic verification of security properties on a hardware design. This encompassed three primary research tasks: developing expressive security property languages built upon hardware information flow tracking, building comprehensive models that describe the security-related behaviors of a hardware design, and creating tools that can efficiently verify these models' security properties.</p>\n<p>An example of the research is the Aker design and verification framework for SoC access control. Aker builds upon the Access Control Wrapper (ACW) -- a high-performance and easy-to-integrate hardware module that dynamically manages access to shared resources. To build an SoC access control system, Aker distributes the ACWs throughout the SoC, wrapping controller IP cores and configuring the ACWs to perform local access control. &nbsp;Aker provides a property-driven security verification using MITRE common weakness enumerations to ensure the access control system is functioning correctly and securely. Aker verifies the SoC access control at the IP level to ensure the absence of bugs in the functionalities of the ACW module, at the firmware level to confirm the secure operation of the ACW when integrated with a hardware root-of-trust (HRoT), and at the system, level to evaluate security threats due to the interactions among shared resources.</p>\n<p>The broader impacts were training the next generation of computer scientists and engineers in designing secure and trustworthy hardware and computing systems. This was accomplished by educating post-doctoral researchers, graduate student researchers, and undergraduate students. The project funded one post-doctoral scholar and several graduate student researchers. The project involved undergraduate researchers through UCSD Early Research Scholars Program, which broadens computing research participation by targeting underrepresented groups for a year-long research apprenticeship early in their undergraduate career.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/10/2022<br>\n\t\t\t\t\tModified by: Ryan&nbsp;Kastner</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nProperty-driven hardware security is a verification methodology that defines the threat model, specifies the security requirements as properties, detects violations of those properties, and assesses the resultant consequences to security. In practice, security experts and hardware designers are tasked with understanding the threat model and writing formal properties describing the desired security requirements. Once these properties are specified, powerful commercial hardware security verification tools can detect whether the hardware adheres to these behaviors.\n\nTranslating software and system-level security requirements into hardware security properties is a complex, mostly manual process that is the bottleneck of property-driven hardware security. Specifying hardware security properties is challenging because it requires insights from security auditors and hardware designers. Security auditors will not deeply understand the hardware?s functionality, while hardware designers rarely understand the nuances of the security requirements. This forces the security and hardware teams to jointly understand the security requirements and their implications on the hardware design (and vice-versa).\n\nThe intellectual merits of the project involved developing a property-driven approach to hardware security, which enables automatic verification of security properties on a hardware design. This encompassed three primary research tasks: developing expressive security property languages built upon hardware information flow tracking, building comprehensive models that describe the security-related behaviors of a hardware design, and creating tools that can efficiently verify these models' security properties.\n\nAn example of the research is the Aker design and verification framework for SoC access control. Aker builds upon the Access Control Wrapper (ACW) -- a high-performance and easy-to-integrate hardware module that dynamically manages access to shared resources. To build an SoC access control system, Aker distributes the ACWs throughout the SoC, wrapping controller IP cores and configuring the ACWs to perform local access control.  Aker provides a property-driven security verification using MITRE common weakness enumerations to ensure the access control system is functioning correctly and securely. Aker verifies the SoC access control at the IP level to ensure the absence of bugs in the functionalities of the ACW module, at the firmware level to confirm the secure operation of the ACW when integrated with a hardware root-of-trust (HRoT), and at the system, level to evaluate security threats due to the interactions among shared resources.\n\nThe broader impacts were training the next generation of computer scientists and engineers in designing secure and trustworthy hardware and computing systems. This was accomplished by educating post-doctoral researchers, graduate student researchers, and undergraduate students. The project funded one post-doctoral scholar and several graduate student researchers. The project involved undergraduate researchers through UCSD Early Research Scholars Program, which broadens computing research participation by targeting underrepresented groups for a year-long research apprenticeship early in their undergraduate career.\n\n \n\n\t\t\t\t\tLast Modified: 10/10/2022\n\n\t\t\t\t\tSubmitted by: Ryan Kastner"
 }
}