{
 "awd_id": "1703936",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "NeTS: Medium: Collaborative Research: Diagnosing Datacenter Networks with Quantitative Provenance",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Darleen Fisher",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2023-09-30",
 "tot_intn_awd_amt": 856480.0,
 "awd_amount": 856480.0,
 "awd_min_amd_letter_date": "2017-07-22",
 "awd_max_amd_letter_date": "2020-08-06",
 "awd_abstract_narration": "The increasing complexity of data center networks has made it considerably more difficult to identify the source of a networking problem when something goes wrong.  However, a set of new diagnostic tools can help diagnose subtle bugs that would be difficult to find with existing tools.\r\nOne promising approach is based on data provenance, a concept that was originally developed by the database community but is now increasingly being applied in the networking domain. In this approach, the network keeps track of causality as data flows through the system -- for instance, by noting a router's configuration state that contributed to a particular forwarding decision. This information can then be used later to determine a\r\ncomprehensive explanation of an observed networking problem.\r\n\r\nThis project will develop a quantitative equivalent of provenance for data networking that can be used to reason about properties such as time or probability.  The key idea is to use this provenance to improve root-cause analysis of network events.  The proposed effort will develop the scientific foundations of quantitative provenance, as well as practical techniques for capturing, storing, and reasoning about it. The investigators will add several quantitative metrics to provenance: temporal, probabilistic and influence; three research thrusts will be considered, one corresponding to each of these metrics. The project will explore efficient and reusable implementations of new diagnostic tools, which will be applied to several concrete case studies.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Linh Thi Xuan",
   "pi_last_name": "Phan",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Linh Thi Xuan Phan",
   "pi_email_addr": "linhphan@cis.upenn.edu",
   "nsf_id": "000581290",
   "pi_start_date": "2017-07-22",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Boon Thau",
   "pi_last_name": "Loo",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Boon Thau Loo",
   "pi_email_addr": "boonloo@cis.upenn.edu",
   "nsf_id": "000488968",
   "pi_start_date": "2017-07-22",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Andreas",
   "pi_last_name": "Haeberlen",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Andreas Haeberlen",
   "pi_email_addr": "ahae@cis.upenn.edu",
   "nsf_id": "000562850",
   "pi_start_date": "2017-07-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Pennsylvania",
  "inst_street_address": "3451 WALNUT ST STE 440A",
  "inst_street_address_2": "",
  "inst_city_name": "PHILADELPHIA",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "2158987293",
  "inst_zip_code": "191046205",
  "inst_country_name": "United States",
  "cong_dist_code": "03",
  "st_cong_dist_code": "PA03",
  "org_lgl_bus_name": "TRUSTEES OF THE UNIVERSITY OF PENNSYLVANIA, THE",
  "org_prnt_uei_num": "GM1XX56LEP58",
  "org_uei_num": "GM1XX56LEP58"
 },
 "perf_inst": {
  "perf_inst_name": "Trustees of the University of Pennsylvania",
  "perf_str_addr": "3330 Walnut Street",
  "perf_city_name": "Philadelphia",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "191046205",
  "perf_ctry_code": "US",
  "perf_cong_dist": "03",
  "perf_st_cong_dist": "PA03",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736300",
   "pgm_ele_name": "Networking Technology and Syst"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 223572.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 470801.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 162107.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span>Provenance is a way to reason about where a given piece of data came from, or why a particular event occurred. To use a real-world analogy, the provenance of a cup of coffee would include its ingredients (the water and the beans) as well as a description of the brewing process; it would then continue recursively with the provenance of the water and the beans. A data structure like this has several important uses in distributed systems, including diagnostics. Consider, for instance, what would happen if a data-center system, with perhaps thousands of servers, produces an unexpected output. Finding the root causes of this output among the millions of things that such a system is doing would be quite difficult for a human operator. But if the system has been keeping track of provenance, the task is much easier: the operator can simply inspect the provenance of the unexpected output. However, existing solutions could only produce qualitative answers: while it was possible to tell that a given output was computed from certain inputs, it was not possible to tell, say, why the computation took unusually long.</span><br /><br /><span>This project addressed this problem by generalizing provenance to quantitative properties. We developed theoretical foundations for quantitative provenance, we built systems for capturing it and reasoning about it, we developed several tools and applications, and we studied a number of different use cases. We have particularly focused on 1) temporal provenance, which can be used about timing and delays; 2) probabilistic provenance, which can be used to reason about probability distributions; and 3) meta provenance, which can be used to reason about the influence of a particular piece of code on a certain event.</span><br /><br /><span>Today, the most important application scenario for our results is diagnostics in data-center networks. This is important because data centers are running the large-scale services we use every day - including the global payment network or airline reservation systems, but also Amazon, Google, Facebook, Instagram, Uber, and pretty much any other large web platform. The high complexity of these systems makes diagnostics particularly challenging. However, we have also found uses in a number of other domains. For instance, one result helped us quickly find malfunctioning rotors in multirotor aircraft, which could help to improve their safety; another has been useful in a collaboration with industry, to improve a next-generation metaverse platform; and a third was even able to find a security issue in NASA's space shuttle and has led to changes to industry standards.</span><br /><br /><span>The project has helped to train several PhD students, some of whom have already graduated and are now working in the tech industry. It has also provided research experience and training to many Master's and undergraduate students, and it has had an impact on three core computer-science courses at Penn, each of which has been taken by more than 100 undergraduate and graduate students per semester.</span></p><br>\n<p>\n Last Modified: 03/31/2024<br>\nModified by: Linh Thi Xuan&nbsp;Phan</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nProvenance is a way to reason about where a given piece of data came from, or why a particular event occurred. To use a real-world analogy, the provenance of a cup of coffee would include its ingredients (the water and the beans) as well as a description of the brewing process; it would then continue recursively with the provenance of the water and the beans. A data structure like this has several important uses in distributed systems, including diagnostics. Consider, for instance, what would happen if a data-center system, with perhaps thousands of servers, produces an unexpected output. Finding the root causes of this output among the millions of things that such a system is doing would be quite difficult for a human operator. But if the system has been keeping track of provenance, the task is much easier: the operator can simply inspect the provenance of the unexpected output. However, existing solutions could only produce qualitative answers: while it was possible to tell that a given output was computed from certain inputs, it was not possible to tell, say, why the computation took unusually long.\n\nThis project addressed this problem by generalizing provenance to quantitative properties. We developed theoretical foundations for quantitative provenance, we built systems for capturing it and reasoning about it, we developed several tools and applications, and we studied a number of different use cases. We have particularly focused on 1) temporal provenance, which can be used about timing and delays; 2) probabilistic provenance, which can be used to reason about probability distributions; and 3) meta provenance, which can be used to reason about the influence of a particular piece of code on a certain event.\n\nToday, the most important application scenario for our results is diagnostics in data-center networks. This is important because data centers are running the large-scale services we use every day - including the global payment network or airline reservation systems, but also Amazon, Google, Facebook, Instagram, Uber, and pretty much any other large web platform. The high complexity of these systems makes diagnostics particularly challenging. However, we have also found uses in a number of other domains. For instance, one result helped us quickly find malfunctioning rotors in multirotor aircraft, which could help to improve their safety; another has been useful in a collaboration with industry, to improve a next-generation metaverse platform; and a third was even able to find a security issue in NASA's space shuttle and has led to changes to industry standards.\n\nThe project has helped to train several PhD students, some of whom have already graduated and are now working in the tech industry. It has also provided research experience and training to many Master's and undergraduate students, and it has had an impact on three core computer-science courses at Penn, each of which has been taken by more than 100 undergraduate and graduate students per semester.\t\t\t\t\tLast Modified: 03/31/2024\n\n\t\t\t\t\tSubmitted by: Linh Thi XuanPhan\n"
 }
}