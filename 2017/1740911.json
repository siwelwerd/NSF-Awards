{
 "awd_id": "1740911",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: USBRCCR: Collaborative: Securing Networks in the Programmable Data Plane Era",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032922981",
 "po_email": "pregalia@nsf.gov",
 "po_sign_block_name": "Phillip Regalia",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2020-08-31",
 "tot_intn_awd_amt": 200000.0,
 "awd_amount": 200000.0,
 "awd_min_amd_letter_date": "2017-06-21",
 "awd_max_amd_letter_date": "2017-06-21",
 "awd_abstract_narration": "Recent advances in software-defined networking (SDN) and programmable data planes allow datacenter and enterprise network operators to quickly deploy new protocols, customize network behavior, and develop innovative services. These advances promise to improve and streamline network operations, improving the quality of service provided to end users. However programmable data planes also introduce new complexities to network management, notably, ensuring that the network satisfies critical security properties. Current network verification and analysis tools cannot handle these complex new networks. This work aims to address three important problems at the intersection of networking and computer security: First, the work proposes to develop new techniques that allow operators to verify that their network satisfies security properties like tenant isolation in a cloud hosting environment. Second, this work proposes to use the data plane to implement a security mechanism to enforce security properties, an approach that complements verification as a way to ensure correct network behavior. Finally, the work proposes to develop new security services that leverage the capabilities of a programmable data plane. Results of the proposed work will promote the adoption of more secure and flexible next-generation networks by providing operators the tools necessary to verify and enforce critical network security properties.\r\n \r\nAs programmable data planes are poised to transform modern the architecture of modern networks, the proposed work will advance the current state of the art in networking by extending verification and enforcement techniques to programmable data plane networks, for which neither network verification nor security policy mechanisms currently exist. To do so, investigators will transform data plane programs, expressed in P4, into assertions suitable for analysis using existing network verification tools based on SMT solvers. Investigators will also develop a security kernel implemented as a P4 data plane program to enforce network-wide security properties at run time. Finally, this work will also develop new data plane services that will enable a new class of security functions to be deployed in the network in order to improve the overall security of computer networks.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Kirill",
   "pi_last_name": "Levchenko",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Kirill Levchenko",
   "pi_email_addr": "klevchen@illinois.edu",
   "nsf_id": "000584143",
   "pi_start_date": "2017-06-21",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-San Diego",
  "inst_street_address": "9500 GILMAN DR",
  "inst_street_address_2": "",
  "inst_city_name": "LA JOLLA",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8585344896",
  "inst_zip_code": "920930021",
  "inst_country_name": "United States",
  "cong_dist_code": "50",
  "st_cong_dist_code": "CA50",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, SAN DIEGO",
  "org_prnt_uei_num": "",
  "org_uei_num": "UYTTZT6G9DT1"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-San Diego",
  "perf_str_addr": "",
  "perf_city_name": "La Jolla",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "920930934",
  "perf_ctry_code": "US",
  "perf_cong_dist": "50",
  "perf_st_cong_dist": "CA50",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "022Z",
   "pgm_ref_txt": "International Partnerships"
  },
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 200000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-62b719ee-7fff-0f9c-4038-60c621e3f19e\">\n<p dir=\"ltr\"><span>The project proposed to develop new techniques for </span><span>verifying security and correctness properties in programmable data planes.</span><span> The project also investigated designing new data plane security services, as well as new approaches that take advantage of data plane programmability to </span><span>enforce network-wide security policies.</span></p>\n<p dir=\"ltr\"><span>The major outcomes from this project are as follows:</span></p>\n<ol>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>The ASSERT-P4 work created a new P4 verification tool that accepts annocations in P4 programs and translates the P4 program with annotations into an equivalent C program suitable for verification using KLEE. This has demonstrated that it is possible to verify complex properties of P4 programs automatically. It is an important step in developing a set of tools that can be used to verify programmable data planes.&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>The P4box work created a new language extension to P4 that allows a programmer to specify code fragments to be inserted into main program code at designated points, following the Aspect-Oriented Programming paradigm. The unique feature of P4box is allows programmers to add such enforcement to an existing program without modifying the program itself. This is important for preserving program structure and modularity.</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>The VirtP4 work created an environment for virtualization of P4-based switches, thus providing a favorable environment for testing P4 switches in a controlled environment. This has demonstrated the feasibility of type-1 virtualization of P4-based switches, while maintaining isolation and preserving the intellectual property of switches.&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>The ForenGuard work provided a new flow-level forensics and diagnosis capability in SDN networks. Unlike traditional forensics tools that only involve either network level or host level, ForenGuard monitors and records the runtime activities and their causal dependencies involving both the SDN control plane and data plane.&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>The vNIDS work has developed a new controller to enable elasticity control of virtual NIDS (Network Intrusion Detection Systems).&nbsp;</span></p>\n</li>\n<li dir=\"ltr\">\n<p dir=\"ltr\"><span>A new attack surface and vulnerability in existing software-defined infrastructure is identified, which is termed as Control Plane Reflection Attack. A new defense framework called SWGuard was also developed to mitigate such attacks.&nbsp;</span></p>\n</li>\n</ol>\n<p dir=\"ltr\"><span>Results of this project have been disseminated through scholarly publications such as SOSR 18, CoNext 18, IFIP Networking 19, ICCCN 18, DSN 18, CCS 18, RAID 18,&nbsp; and </span><span>IEEE Transactions on Information Forensics and Security (</span><span>TIFS</span><span>), ACM/IEEE Transactions on Networking</span><span>. In addition, members of this project are actively engaged with the P4 community and where they discuss results of this work.</span></p>\n<p dir=\"ltr\"><span>This project has enabled some close working relationships between US and Brazilian researchers. We have been holding monthly virtual meetings during which each geographical team discusses results and comments on future team directions. These meetings have provided opportunities for students to participate in a large, multi-national research collaboration. </span></p>\n<div><span><br /></span></div>\n</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/21/2020<br>\n\t\t\t\t\tModified by: Kirill&nbsp;Levchenko</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nThe project proposed to develop new techniques for verifying security and correctness properties in programmable data planes. The project also investigated designing new data plane security services, as well as new approaches that take advantage of data plane programmability to enforce network-wide security policies.\nThe major outcomes from this project are as follows:\n\n\nThe ASSERT-P4 work created a new P4 verification tool that accepts annocations in P4 programs and translates the P4 program with annotations into an equivalent C program suitable for verification using KLEE. This has demonstrated that it is possible to verify complex properties of P4 programs automatically. It is an important step in developing a set of tools that can be used to verify programmable data planes. \n\n\nThe P4box work created a new language extension to P4 that allows a programmer to specify code fragments to be inserted into main program code at designated points, following the Aspect-Oriented Programming paradigm. The unique feature of P4box is allows programmers to add such enforcement to an existing program without modifying the program itself. This is important for preserving program structure and modularity.\n\n\nThe VirtP4 work created an environment for virtualization of P4-based switches, thus providing a favorable environment for testing P4 switches in a controlled environment. This has demonstrated the feasibility of type-1 virtualization of P4-based switches, while maintaining isolation and preserving the intellectual property of switches. \n\n\nThe ForenGuard work provided a new flow-level forensics and diagnosis capability in SDN networks. Unlike traditional forensics tools that only involve either network level or host level, ForenGuard monitors and records the runtime activities and their causal dependencies involving both the SDN control plane and data plane. \n\n\nThe vNIDS work has developed a new controller to enable elasticity control of virtual NIDS (Network Intrusion Detection Systems). \n\n\nA new attack surface and vulnerability in existing software-defined infrastructure is identified, which is termed as Control Plane Reflection Attack. A new defense framework called SWGuard was also developed to mitigate such attacks. \n\n\nResults of this project have been disseminated through scholarly publications such as SOSR 18, CoNext 18, IFIP Networking 19, ICCCN 18, DSN 18, CCS 18, RAID 18,  and IEEE Transactions on Information Forensics and Security (TIFS), ACM/IEEE Transactions on Networking. In addition, members of this project are actively engaged with the P4 community and where they discuss results of this work.\nThis project has enabled some close working relationships between US and Brazilian researchers. We have been holding monthly virtual meetings during which each geographical team discusses results and comments on future team directions. These meetings have provided opportunities for students to participate in a large, multi-national research collaboration. \n\n\n\n\n \n\n\t\t\t\t\tLast Modified: 12/21/2020\n\n\t\t\t\t\tSubmitted by: Kirill Levchenko"
 }
}