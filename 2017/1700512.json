{
 "awd_id": "1700512",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "SDI-CSCS: Collaborative Research: S2OS: Enabling Infrastructure-Wide Programmable Security with SDI",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Erik Brunvand",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 400000.0,
 "awd_amount": 400000.0,
 "awd_min_amd_letter_date": "2017-05-01",
 "awd_max_amd_letter_date": "2019-08-06",
 "awd_abstract_narration": "Traditionally, many of our critical systems have been developed with security as a reactive add-on, rather than a by default design. As a result, existing security mechanisms are often fragmented, hard to configure or verify, which makes it difficult to defend against various cyber attacks. This project will build the \"holy grail\" for enterprise/cloud/data-center security management with software-defined infrastructure (SDI): a unified framework for security and management of disparate resources, ranging from processes to storage to networking. Cloud computing is now an essential part of our national cyberinfrastructure; the proposed work will lower the total cost of ownership for clouds - further unlocking economic and environmental benefits - as well as improving the security of today's clouds.\r\n\r\nThis project proposes S2OS (SDI-defined Security Operating System), which abstracts security capabilities and primitives at both the host Operating System (OS) and network levels and offers an easy-to-use and programmable security model for monitoring and dynamically securing applications. This project will explore new techniques to transparently compose software into a unified enterprise, even if the individual pieces were never explicitly designed to inter-operate, similar in a way a traditional operating system managing various hardware resources for upper-layer user applications. Further, this project will contribute new ways to leverage global information for making effective local security management decisions. Finally, this project enables new innovations in programming dynamic, host-network coordinated, and intelligent security applications to protect the entire infrastructure.\r\n\r\nThis project will make significant contributions to how enterprise, data centers and cloud computing are securely built and managed. The project's PIs will engage in educational and outreach activities to train the next generation talent. In particular, the PIs plan to integrate the interdisciplinary research ideas into courses spanning networking, systems and security. The project will also actively encourage participation from underrepresented groups and transfer technology to industry partners.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Donald",
   "pi_last_name": "Porter",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Donald E Porter",
   "pi_email_addr": "porter@cs.unc.edu",
   "nsf_id": "000569931",
   "pi_start_date": "2017-05-01",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of North Carolina at Chapel Hill",
  "inst_street_address": "104 AIRPORT DR STE 2200",
  "inst_street_address_2": "",
  "inst_city_name": "CHAPEL HILL",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9199663411",
  "inst_zip_code": "275995023",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "NC04",
  "org_lgl_bus_name": "UNIVERSITY OF NORTH CAROLINA AT CHAPEL HILL",
  "org_prnt_uei_num": "D3LHU66KBLD5",
  "org_uei_num": "D3LHU66KBLD5"
 },
 "perf_inst": {
  "perf_inst_name": "University of North Carolina at Chapel Hill",
  "perf_str_addr": "201 S. Columbia St",
  "perf_city_name": "Chapel Hill",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "275993175",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "NC04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "164000",
   "pgm_ele_name": "Information Technology Researc"
  },
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7354",
   "pgm_ref_txt": "COMPUTER SYSTEMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 268805.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 131195.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p id=\"docs-internal-guid-ff72516a-7fff-a274-faa1-511b1449b26a\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">The goal of this project was to study the unified abstractions and management of software security at data-center scale.&nbsp; We prototyped and evaluated S2OS, a security OS for managing software-defined infrastructure. &nbsp; S2OS contributes techniques for virtualizing hardware and software, including components that predate S2OS, such as trusted execution environment (TEE) hardware.&nbsp; This project demonstrates the potential for leveraging global information, such as using machine learning on network data to identify and defend against malware.&nbsp; This project has also contributed additional system management and security data, tools, and techniques.</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Intellectual Merit: One set of contributions from this project are in the area of techniques to virtualize, or abstract and integrate, hardware and software that is not designed for software-defined security management.&nbsp; Examples include vSGX, a virtualized environment for running code designed for Intel&rsquo;s SGX on AMD&rsquo;s SEV&mdash;both are trusted execution environments with different requirements and restrictions&mdash;facilitating more flexible code deployments.&nbsp; Similarly, the project has contributed techniques for refactoring code to deploy in a TEE, and has demonstrated that, unlike CPU hardware, the most efficient layer for virtualizing accelerators, such as GPUs, is at the software API level.</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">A second set of contributions from the project come from studying how to program management software across these hardware and software resources in a data center.&nbsp; For instance, the Toccoa sub-project supports programmable network packet analysis at the rate of tens of millions of packets per second, while also scaling out to more nodes linearly.&nbsp; Similarly, the SysFlow sub-project is a programming framework for modeling and controlling software activities across the entire infrastructure, providing a data-center-scale data plane and control plane separation.</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Finally, S2OS contributes novel security defense and mitigation techniques that are only possible with data collected, analyzed, and applied at scale.&nbsp; For instance, the IMap sub-project shows how to implement network-level defenses that leverage data collected at scale, yet are deployed in individual switches.&nbsp; The xNIDS sub-project further applies machine learning to characterize network traffic, troubleshoot issues, and automatically generate defenses.&nbsp; Similarly, our study of ransomware defense shows that network-level monitoring for a command-and-control channel can be more effective than tracking file access behavior on a single system.&nbsp; Other examples of novel security management applications enabled by S2OS include 1) risk-aware micro-segmentation for micro-services, which confines file accesses within a container&rsquo;s scope and isolates potentially compromised containers from one another; 2) Fine-grained and Context-aware Access Control (FCAC) in Web Applications, which offers context-aware, fine-grained access control within web servers, and 3)&nbsp; Virtual Patching, a security policy enforcement layer that prevents the exploitation of a known vulnerability in a timely manner, even if a patch is not yet available.</span></p>\n<p>&nbsp;</p>\n<p style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\" dir=\"ltr\"><span style=\"font-size: 11pt; font-family: Arial; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Broader Impacts: Data-center scale computing is rapidly becoming the norm for modern computing, yet security and administrative tools are struggling to scale up from a single machine to a rack or data-center.&nbsp; The S2OS project shows how to leverage and extend software-defined infrastructure to build security management solutions at scale.&nbsp; The project has supported the training and research of seventeen students.&nbsp; Key software components of S2OS have been released as open source.</span></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/08/2022<br>\n\t\t\t\t\tModified by: Donald&nbsp;E&nbsp;Porter</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "The goal of this project was to study the unified abstractions and management of software security at data-center scale.  We prototyped and evaluated S2OS, a security OS for managing software-defined infrastructure.   S2OS contributes techniques for virtualizing hardware and software, including components that predate S2OS, such as trusted execution environment (TEE) hardware.  This project demonstrates the potential for leveraging global information, such as using machine learning on network data to identify and defend against malware.  This project has also contributed additional system management and security data, tools, and techniques.\n\n \nIntellectual Merit: One set of contributions from this project are in the area of techniques to virtualize, or abstract and integrate, hardware and software that is not designed for software-defined security management.  Examples include vSGX, a virtualized environment for running code designed for Intel\u2019s SGX on AMD\u2019s SEV&mdash;both are trusted execution environments with different requirements and restrictions&mdash;facilitating more flexible code deployments.  Similarly, the project has contributed techniques for refactoring code to deploy in a TEE, and has demonstrated that, unlike CPU hardware, the most efficient layer for virtualizing accelerators, such as GPUs, is at the software API level.\n\n \nA second set of contributions from the project come from studying how to program management software across these hardware and software resources in a data center.  For instance, the Toccoa sub-project supports programmable network packet analysis at the rate of tens of millions of packets per second, while also scaling out to more nodes linearly.  Similarly, the SysFlow sub-project is a programming framework for modeling and controlling software activities across the entire infrastructure, providing a data-center-scale data plane and control plane separation.\n\n \nFinally, S2OS contributes novel security defense and mitigation techniques that are only possible with data collected, analyzed, and applied at scale.  For instance, the IMap sub-project shows how to implement network-level defenses that leverage data collected at scale, yet are deployed in individual switches.  The xNIDS sub-project further applies machine learning to characterize network traffic, troubleshoot issues, and automatically generate defenses.  Similarly, our study of ransomware defense shows that network-level monitoring for a command-and-control channel can be more effective than tracking file access behavior on a single system.  Other examples of novel security management applications enabled by S2OS include 1) risk-aware micro-segmentation for micro-services, which confines file accesses within a container\u2019s scope and isolates potentially compromised containers from one another; 2) Fine-grained and Context-aware Access Control (FCAC) in Web Applications, which offers context-aware, fine-grained access control within web servers, and 3)  Virtual Patching, a security policy enforcement layer that prevents the exploitation of a known vulnerability in a timely manner, even if a patch is not yet available.\n\n \nBroader Impacts: Data-center scale computing is rapidly becoming the norm for modern computing, yet security and administrative tools are struggling to scale up from a single machine to a rack or data-center.  The S2OS project shows how to leverage and extend software-defined infrastructure to build security management solutions at scale.  The project has supported the training and research of seventeen students.  Key software components of S2OS have been released as open source.\n\n\t\t\t\t\tLast Modified: 02/08/2022\n\n\t\t\t\t\tSubmitted by: Donald E Porter"
 }
}