{
 "awd_id": "1715458",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: CORE: Small: Collaborative: GOALI: Detecting and Reconstructing Network Anomalies and Intrusions in Heavy Duty Vehicles",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032922981",
 "po_email": "pregalia@nsf.gov",
 "po_sign_block_name": "Phillip Regalia",
 "awd_eff_date": "2017-08-01",
 "awd_exp_date": "2023-07-31",
 "tot_intn_awd_amt": 275701.0,
 "awd_amount": 291701.0,
 "awd_min_amd_letter_date": "2017-07-22",
 "awd_max_amd_letter_date": "2022-05-10",
 "awd_abstract_narration": "Heavy vehicles (e.g., trucks and busses) are a critical element of U.S. and worldwide logistics, often carrying cargo of high value or high risk (e.g., explosive liquids and gasses).  Heavy vehicles often have hundreds of Electronic Control Units (ECUs) that communicate over an internal network to carry commands (such as \"engage the brakes\") or share sensor data (such as the temperature of pressurized cargo unit carrying petroleum). ECUs with access to the communication network can send any message they want.  If the network or an ECU is compromised by an attack, the truck or a cargo container safety mechanism could malfunction. This project is gathering data from operational trucks to better understand communication among components of heavy vehicles and developing techniques to detect attacks in this environment.\r\n\r\nThe project is working to accomplish three main objectives: (1) Collect representative Controller Area Network (CAN) bus data from operational heavy vehicles, (2) Develop detection systems that can distinguish anomalous CAN bus network traffic, and (3) Test and verify the detection systems to reduce the number of false positives. The team is developing a log algebra to efficiently assess live CAN traffic using embedded devices with limited resources. Data is being gathered from truck traffic during highway operation, enabling the application of machine learning algorithms for anomaly detection. The team is evaluating the effectiveness of their intrusion detection techniques in their heavy vehicle testbed, using synthetic attacks against testbed ECUs and real-world CAN traffic data.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Indrakshi",
   "pi_last_name": "Ray",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Indrakshi Ray",
   "pi_email_addr": "iray@cs.colostate.edu",
   "nsf_id": "000484109",
   "pi_start_date": "2017-07-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Colorado State University",
  "inst_street_address": "601 S HOWES ST",
  "inst_street_address_2": "",
  "inst_city_name": "FORT COLLINS",
  "inst_state_code": "CO",
  "inst_state_name": "Colorado",
  "inst_phone_num": "9704916355",
  "inst_zip_code": "805212807",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "CO02",
  "org_lgl_bus_name": "COLORADO STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "LT9CXX8L19G1"
 },
 "perf_inst": {
  "perf_inst_name": "Colorado State University",
  "perf_str_addr": "200 W. Lake Street",
  "perf_city_name": "Fort Collins",
  "perf_st_code": "CO",
  "perf_st_name": "Colorado",
  "perf_zip_code": "805214593",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "CO02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "065Z",
   "pgm_ref_txt": "Human factors for security research"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 275701.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span>Almost all aspects of a modern day automobile are controlled by embedded computers known as Electronic Control Units (ECUs). ECUs communicate with each other through an internal network, popularly known as Controller Area Network (CAN) bus.&nbsp; In medium and heavy vehicles (those over 14,000 pounds), ECUs are manufactured by different Original Equipment Manufacturers (OEMs). Thus, for reasons of interoperability, the Society of Automotive Engineers (SAE) mandates that the ECUs coomunicate using a common protocol, the SAE-J1939 protocol. The messages adhering to the SAE-J1939 protocol have a fixed format. These messages are used for sending commands to other ECUs, or reporting the values of the various parameters.&nbsp; An attacker may send a malicious message, adhering to the J1939 protocol, over the network. This can be sent by an ECU that has been compromised or injected into the network through a device connected to the OBD II port or remotely through the telematics unit. The project focused on security issues of the SAE-J1939 protocol.</span></p>\n<p><span>&nbsp;</span></p>\n<p><span>In our laboratory setting, we were able to carry out various types of denial-of-service attacks on the SAE-J1939 protocol. Some of these attacks were replicated in the annual CyberTruck Challenge competition where students can hack on to real-world heavy vehicles provided by the vendors. Many new attacks were also carried out in the CyberTruck Challenge.&nbsp; Since attacks on medium and heavy vehicles are very much possible, it is important to detect and mitigate their effects.</span></p>\n<p><span>&nbsp;</span></p>\n<p><span>Our work focussed on the attacks on SAE-J1939 messages transmitted over the internal network of the heavy vehicles. We were able to obtain log of these messages produced by different heavy vehicles. Unfortunately, we were unable to get any real-world attack data. Consequently, we injected messages into the log files to simulate command injection attacks.&nbsp; We developed two techniques for detecting attacks. The first technique is based on graph theory. This technique creates a graph based on a sampling window, where nodes correspond to events extracted from the J1939 messages and the directed edges between nodes signify precedence of events. We provide metrics to assess the ramdomness of the graph; the graphs corresponding to logs having attacks exhibit more randomness than those without. Note that, such detection must happen in real-time.&nbsp; As the size of the graph is dependent on the length of the sampling window (which is very small), the graph generation and attack detection can take place in real-time. The second approach for attack detection uses machine learning techniques. In this case, we used different machine learning approaches and evaluated their comparative performance with regards to attack detection. We trained the machine learning classifiers which were subsequently ported on Raspberry Pi for attack detection. Here again, we were able to do the detection in real-time.</span></p>\n<p><span>&nbsp;</span></p>\n<p><span>Our next work focussed on ensuring resiliency in the face of an attack. SAE-J1939 messages contain values of various parameters reported by the sensors. A malicious ECU may alter the parameter values. Here, we wanted to see if the compromised parameter values can be reconstructed from the non-compromised sensor values. We only considered those parameters that were continually reported and had over 500 messages. For each such parameter, we found the set of 5 or 10 parameters with which it was correlated.&nbsp; We used a multivariate neural network to reconstruct the values of the compromised parameters using the correlated non-compromised parameters. For most paramters, we found using more correlated parameters gave better results than using fewer ones.</span></p>\n<p><span>&nbsp;</span></p>\n<p><span>In the above work, we used a neural network predictor for each parameter. Moreover, it allows only one parameter to fail at any given time. Our next work removed this restriction and focused on using a single predictor that is capable of predicting multiple parameters. Here we have experimented with neural network and transformer models. The neural network and transformer models give good results, but there is scope for further improvement.</span></p>\n<p><span>&nbsp;</span></p>\n<p><span>Deep learning and transformer models shows promise for attack detection and reconstructing compromised sensor values. However, these algorithms are very resource intensive and not suitable for embedded systems. Towards this end, one of our efforts developed sparse transformers that are less resource intensive with regards to computation and storage and can be incorporated in heavy vehicles.</span></p>\n<p><span>&nbsp;</span></p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 04/04/2024<br>\nModified by: Indrakshi&nbsp;Ray</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\nAlmost all aspects of a modern day automobile are controlled by embedded computers known as Electronic Control Units (ECUs). ECUs communicate with each other through an internal network, popularly known as Controller Area Network (CAN) bus. In medium and heavy vehicles (those over 14,000 pounds), ECUs are manufactured by different Original Equipment Manufacturers (OEMs). Thus, for reasons of interoperability, the Society of Automotive Engineers (SAE) mandates that the ECUs coomunicate using a common protocol, the SAE-J1939 protocol. The messages adhering to the SAE-J1939 protocol have a fixed format. These messages are used for sending commands to other ECUs, or reporting the values of the various parameters. An attacker may send a malicious message, adhering to the J1939 protocol, over the network. This can be sent by an ECU that has been compromised or injected into the network through a device connected to the OBD II port or remotely through the telematics unit. The project focused on security issues of the SAE-J1939 protocol.\n\n\n\n\n\nIn our laboratory setting, we were able to carry out various types of denial-of-service attacks on the SAE-J1939 protocol. Some of these attacks were replicated in the annual CyberTruck Challenge competition where students can hack on to real-world heavy vehicles provided by the vendors. Many new attacks were also carried out in the CyberTruck Challenge. Since attacks on medium and heavy vehicles are very much possible, it is important to detect and mitigate their effects.\n\n\n\n\n\nOur work focussed on the attacks on SAE-J1939 messages transmitted over the internal network of the heavy vehicles. We were able to obtain log of these messages produced by different heavy vehicles. Unfortunately, we were unable to get any real-world attack data. Consequently, we injected messages into the log files to simulate command injection attacks. We developed two techniques for detecting attacks. The first technique is based on graph theory. This technique creates a graph based on a sampling window, where nodes correspond to events extracted from the J1939 messages and the directed edges between nodes signify precedence of events. We provide metrics to assess the ramdomness of the graph; the graphs corresponding to logs having attacks exhibit more randomness than those without. Note that, such detection must happen in real-time. As the size of the graph is dependent on the length of the sampling window (which is very small), the graph generation and attack detection can take place in real-time. The second approach for attack detection uses machine learning techniques. In this case, we used different machine learning approaches and evaluated their comparative performance with regards to attack detection. We trained the machine learning classifiers which were subsequently ported on Raspberry Pi for attack detection. Here again, we were able to do the detection in real-time.\n\n\n\n\n\nOur next work focussed on ensuring resiliency in the face of an attack. SAE-J1939 messages contain values of various parameters reported by the sensors. A malicious ECU may alter the parameter values. Here, we wanted to see if the compromised parameter values can be reconstructed from the non-compromised sensor values. We only considered those parameters that were continually reported and had over 500 messages. For each such parameter, we found the set of 5 or 10 parameters with which it was correlated. We used a multivariate neural network to reconstruct the values of the compromised parameters using the correlated non-compromised parameters. For most paramters, we found using more correlated parameters gave better results than using fewer ones.\n\n\n\n\n\nIn the above work, we used a neural network predictor for each parameter. Moreover, it allows only one parameter to fail at any given time. Our next work removed this restriction and focused on using a single predictor that is capable of predicting multiple parameters. Here we have experimented with neural network and transformer models. The neural network and transformer models give good results, but there is scope for further improvement.\n\n\n\n\n\nDeep learning and transformer models shows promise for attack detection and reconstructing compromised sensor values. However, these algorithms are very resource intensive and not suitable for embedded systems. Towards this end, one of our efforts developed sparse transformers that are less resource intensive with regards to computation and storage and can be incorporated in heavy vehicles.\n\n\n\n\n\n\t\t\t\t\tLast Modified: 04/04/2024\n\n\t\t\t\t\tSubmitted by: IndrakshiRay\n"
 }
}