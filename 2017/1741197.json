{
 "awd_id": "1741197",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "BIGDATA: F: Collaborative Research: Design and Computation of Scalable Graph Distances in Metric Spaces: A Unified Multiscale Interpretable Perspective",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032927347",
 "po_email": "sspengle@nsf.gov",
 "po_sign_block_name": "Sylvia Spengler",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2023-08-31",
 "tot_intn_awd_amt": 1023986.0,
 "awd_amount": 1023986.0,
 "awd_min_amd_letter_date": "2017-09-05",
 "awd_max_amd_letter_date": "2017-09-05",
 "awd_abstract_narration": "Representations of real-world phenomena as graphs (a.k.a. networks) are ubiquitous, ranging from social and information networks, to technological, biological, chemical, and brain networks. Many graph mining tasks -- including clustering, anomaly detection, nearest neighbor, similarity search, pattern recognition, and transfer learning -- require a distance measure between graphs to be computed efficiently. The existing distance measures between graphs leave a lot to be desired. They are overwhelmingly based on heuristics.\u00a0\u00a0Many do not scale to graphs with millions of nodes; others do not satisfy the metric properties of non-negativity, positive definiteness, symmetry, and triangle inequality. This project studies a formal mathematical foundation covering a family of graph distances that overcome these limitations, focusing on real-world applications in biology and social network analysis. It also provides a universal methodology for parallelizing the computation of graph distance metrics within this family over massive graphs with millions of nodes, and scaling it over cloud computing resources.\r\n\r\nThis project studies, designs, and evaluates graph distances that satisfy the following six properties: (1) They are scalable -- i.e., they are strictly subquadratic in runtime and achieve a speedup when computed in parallel. (2) They are metrics -- i.e., they satisfy\r\nnon-negativity, positive definiteness, symmetry, and triangle inequality. (3) They are discriminative, as measured by comparisons to the \"chemical distance\", which finds the optimal mapping between two graphs that minimizes edge discrepancies. (4) They are statistically\r\nrobust -- i.e., they have confidence intervals. (5) They can incorporate auxiliary information available on nodes and links. (6) They are interpretable to subject matter experts. Rather than providing a single metric, this project explores a family of such graph distance metrics. It also provides a universal methodology, using the Alternating Directions Method of Multipliers (ADMM), to parallelizing the computation of graph distance metrics within this family over massive graphs with millions of nodes. The proposed metrics are evaluated over massive real-world graphs using Apache Spark on a cloud computing infrastructure.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Stratis",
   "pi_last_name": "Ioannidis",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Stratis Ioannidis",
   "pi_email_addr": "IOANNIDIS@ECE.NEU.EDU",
   "nsf_id": "000711788",
   "pi_start_date": "2017-09-05",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Tina",
   "pi_last_name": "Eliassi-Rad",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Tina Eliassi-Rad",
   "pi_email_addr": "tina@eliassi.org",
   "nsf_id": "000333983",
   "pi_start_date": "2017-09-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Northeastern University",
  "inst_street_address": "360 HUNTINGTON AVE",
  "inst_street_address_2": "",
  "inst_city_name": "BOSTON",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6173735600",
  "inst_zip_code": "021155005",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "NORTHEASTERN UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "HLTMVS2JZBS6"
 },
 "perf_inst": {
  "perf_inst_name": "Northeastern University",
  "perf_str_addr": "360 Huntington Avenue",
  "perf_city_name": "Boston",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021155005",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "808300",
   "pgm_ele_name": "Big Data Science &Engineering"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7433",
   "pgm_ref_txt": "CyberInfra Frmwrk 21st (CIF21)"
  },
  {
   "pgm_ref_code": "8083",
   "pgm_ref_txt": "Big Data Science &Engineering"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 1023986.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-87d394c1-7fff-f16e-d9c9-9bb0da9d65f6\"> </span></p>\n<p dir=\"ltr\"><strong>Tractable Graph Distances</strong><span><strong>.</strong> We studied generalizations of the so-called chemical and Chartrand-Kubiki-Shultz (CKS) distances that (a) satisfy the metric property and (b) are tractable, in that they can be computed either by solving a convex optimization problem, or by a polynomial time algorithm. In particular, we proposed relaxations over the Birkhoff polytope and the Stiefel manifold. We also sought ways of incorporating node features of in these metrics. We also proposed and implemented a massively parallel implementation framework for their computation via the alternating direction&rsquo;s method of multipliers (ADMM) and implemented this over Apache Spark.</span></p>\n<p dir=\"ltr\"><strong>Graph Distances from a Topological View through Non-Backtracking Walks. </strong><span>We relied on the theory of the length spectrum function from algebraic topology, and its relationship to the non-backtracking cycles of a graph, to introduce two new techniques. Both techniques are interpretable w.r.t. features of complex networks such as presence of hubs, triangles, and communities. We developed techniques that identify which nodes have the largest impact on its leading eigenvalue of the non-backtracking matrix, which has many applications in network science and graph mining. We studied the spectrum of the non-backtracking matrix after a node is removed from the graph and derived two new centrality measures. Our spectral analysis and centrality measures can be broadly applied, and will be of interest to both theorists and practitioners alike.</span></p>\n<p dir=\"ltr\"><strong>Geometric Laplacian Eigenmap Embedding. </strong><span>Graph embedding seeks to build low-dimensional representations of nodes in a graph. One popular approach is Laplacian Eigenmaps (LE), which constructs a graph embedding based on the spectral properties of the graph&rsquo;s laplacian. We used the Laplacian matrix to find an embedding with geometric properties instead of spectral ones, by leveraging the so-called simplex geometry of the graph. Our approach, Geometric Laplacian Eigenmap Embedding, outperformed competitors (including LE) in the tasks of graph reconstruction and link prediction.</span></p>\n<p dir=\"ltr\"><strong>Identifying and Mitigating Instability in Embeddings of the Degenerate Core: </strong><span>The degenerate core of a graph is the most influential part of that graph. We examined the stability of embeddings, i.e., resilence to perturbations, for the nodes in the degenerate core. We observed three patterns of instability across a variety of popular graph embedding algorithms and numerous real-world and synthetic data sets. We also correlated abrupt points of instability with increases in edge density. Subsequently, we introduced STABLE: an algorithm that takes an existing graph embedding algorithm and adds a stability objective. We showed how STABLE works on two popular graph embedding algorithms and reported experiments that showed the value of STABLE.</span></p>\n<p dir=\"ltr\"><strong>Explaining Node Embeddings: </strong><span>We introduced a method for explaining node embeddings based on a given set of sense features. Our explanations explain the embedding of any node in a graph. We introduced XM, a framework that modifies existing embedding algorithms to produce embeddings that result in less noisy explanations. XM also provides granular explanations at the node and dimension level that can be used as building blocks to generate explanations at the subgraph or graph level via a diffusion process. XM can guide model selection by removing dimensions that do not contribute to explanations.</span></p>\n<p dir=\"ltr\"><strong>Inductive Link Prediction in Static and Temporal Graphs for Isolated Nodes: </strong><span>Link prediction is a crucial task in graph machine learning with diverse applications. An example is in predicting which proteins will bind with which ligands for drug discovery. We explored the interplay between node attributes and graph topology and demonstrated that incorporating pre-trained node attributes improves the generalization power of link prediction models. We proposed a new method, UPNA (Unsupervised Pre-training of Node Attribute), which solves the inductive link prediction problem. We showcased its applicability in a drug discovery task.</span></p>\n<p dir=\"ltr\"><strong>Graph Transfer Learning. </strong><span>Given two graphs and labels in the nodes of the first graph, we wish to predict the labels on the second graph. We propose a tractable, non-combinatorial method for solving the graph transfer learning problem by combining classification and embedding losses with a continuous, convex penalty motivated by tractable graph distances. We demonstrate that our method successfully predicts labels across graphs with almost perfect accuracy; in the same scenarios, training embeddings through standard methods leads to predictions that are no better than random.</span></p>\n<p dir=\"ltr\"><strong>Generative Models for Graphs.</strong><span> We propose AlignGraph, a group of generative models that combine fast and efficient graph alignment methods with a family of deep generative models that are invariant to node permutations. Our experiments demonstrate that our framework successfully learns graph distributions, outperforming competitors.</span></p>\n<p dir=\"ltr\"><strong>Broader Impacts: </strong><span>Five Ph.D. students and two undergraduate students were involved in the project during its duration. Research findings were disseminated in 14 conference and journal publications. Results were further disseminated through several tutorials organized by the PIs, as well as through invited seminars and keynotes at academic institutions and companies in the US as well as internationally. Our code was made publicly available and shared via GitHub repositories.</span></p>\n<p>&nbsp;</p><br>\n<p>\n Last Modified: 12/19/2023<br>\nModified by: Stratis&nbsp;Ioannidis</p></div>\n<div class=\"porSideCol\"\n></div>\n</div>\n",
  "por_txt_cntn": "\n\n \n\n\nTractable Graph Distances. We studied generalizations of the so-called chemical and Chartrand-Kubiki-Shultz (CKS) distances that (a) satisfy the metric property and (b) are tractable, in that they can be computed either by solving a convex optimization problem, or by a polynomial time algorithm. In particular, we proposed relaxations over the Birkhoff polytope and the Stiefel manifold. We also sought ways of incorporating node features of in these metrics. We also proposed and implemented a massively parallel implementation framework for their computation via the alternating directions method of multipliers (ADMM) and implemented this over Apache Spark.\n\n\nGraph Distances from a Topological View through Non-Backtracking Walks. We relied on the theory of the length spectrum function from algebraic topology, and its relationship to the non-backtracking cycles of a graph, to introduce two new techniques. Both techniques are interpretable w.r.t. features of complex networks such as presence of hubs, triangles, and communities. We developed techniques that identify which nodes have the largest impact on its leading eigenvalue of the non-backtracking matrix, which has many applications in network science and graph mining. We studied the spectrum of the non-backtracking matrix after a node is removed from the graph and derived two new centrality measures. Our spectral analysis and centrality measures can be broadly applied, and will be of interest to both theorists and practitioners alike.\n\n\nGeometric Laplacian Eigenmap Embedding. Graph embedding seeks to build low-dimensional representations of nodes in a graph. One popular approach is Laplacian Eigenmaps (LE), which constructs a graph embedding based on the spectral properties of the graphs laplacian. We used the Laplacian matrix to find an embedding with geometric properties instead of spectral ones, by leveraging the so-called simplex geometry of the graph. Our approach, Geometric Laplacian Eigenmap Embedding, outperformed competitors (including LE) in the tasks of graph reconstruction and link prediction.\n\n\nIdentifying and Mitigating Instability in Embeddings of the Degenerate Core: The degenerate core of a graph is the most influential part of that graph. We examined the stability of embeddings, i.e., resilence to perturbations, for the nodes in the degenerate core. We observed three patterns of instability across a variety of popular graph embedding algorithms and numerous real-world and synthetic data sets. We also correlated abrupt points of instability with increases in edge density. Subsequently, we introduced STABLE: an algorithm that takes an existing graph embedding algorithm and adds a stability objective. We showed how STABLE works on two popular graph embedding algorithms and reported experiments that showed the value of STABLE.\n\n\nExplaining Node Embeddings: We introduced a method for explaining node embeddings based on a given set of sense features. Our explanations explain the embedding of any node in a graph. We introduced XM, a framework that modifies existing embedding algorithms to produce embeddings that result in less noisy explanations. XM also provides granular explanations at the node and dimension level that can be used as building blocks to generate explanations at the subgraph or graph level via a diffusion process. XM can guide model selection by removing dimensions that do not contribute to explanations.\n\n\nInductive Link Prediction in Static and Temporal Graphs for Isolated Nodes: Link prediction is a crucial task in graph machine learning with diverse applications. An example is in predicting which proteins will bind with which ligands for drug discovery. We explored the interplay between node attributes and graph topology and demonstrated that incorporating pre-trained node attributes improves the generalization power of link prediction models. We proposed a new method, UPNA (Unsupervised Pre-training of Node Attribute), which solves the inductive link prediction problem. We showcased its applicability in a drug discovery task.\n\n\nGraph Transfer Learning. Given two graphs and labels in the nodes of the first graph, we wish to predict the labels on the second graph. We propose a tractable, non-combinatorial method for solving the graph transfer learning problem by combining classification and embedding losses with a continuous, convex penalty motivated by tractable graph distances. We demonstrate that our method successfully predicts labels across graphs with almost perfect accuracy; in the same scenarios, training embeddings through standard methods leads to predictions that are no better than random.\n\n\nGenerative Models for Graphs. We propose AlignGraph, a group of generative models that combine fast and efficient graph alignment methods with a family of deep generative models that are invariant to node permutations. Our experiments demonstrate that our framework successfully learns graph distributions, outperforming competitors.\n\n\nBroader Impacts: Five Ph.D. students and two undergraduate students were involved in the project during its duration. Research findings were disseminated in 14 conference and journal publications. Results were further disseminated through several tutorials organized by the PIs, as well as through invited seminars and keynotes at academic institutions and companies in the US as well as internationally. Our code was made publicly available and shared via GitHub repositories.\n\n\n\t\t\t\t\tLast Modified: 12/19/2023\n\n\t\t\t\t\tSubmitted by: StratisIoannidis\n"
 }
}