{
 "awd_id": "1657199",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII: SaTC: ExHume: An Empirical Approach to Program Analysis for Security",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2017-02-01",
 "awd_exp_date": "2021-01-31",
 "tot_intn_awd_amt": 174952.0,
 "awd_amount": 174952.0,
 "awd_min_amd_letter_date": "2017-01-27",
 "awd_max_amd_letter_date": "2017-01-27",
 "awd_abstract_narration": "As software controls an ever-increasing number of devices that perform critical tasks, their security and robustness are of paramount importance to society. In addition, malicious software and \"greyware\" that violates the privacy of users causes billions in damage every year and erodes public confidence in computing systems. However, despite decades of work on techniques to analyze software with automated techniques, it remains a difficult and largely manual task. The ExHume project aims to address this issue by collecting detailed information about both normal and erroneous behaviors of a large corpus of real-world software. This behavioral information will then be used to inform a new generation of empirically guided program analysis techniques, with the goal of significantly improving software vulnerability discovery and reverse engineering techniques.\r\n\r\nThe technical approach taken by ExHume is to capture in vivo traces of software using low-overhead record and replay techniques. This corpus, which will consist of normal and buggy executions of benign and malicious software, can then be mined to extract a wide variety of detailed, dynamic information about the runtime properties of the software under test. Specifically, the data gathered will be used to create (a) new heuristics for guiding program exploration, which can be used for symbolic execution and guided fuzz testing; (b) methods for identifying previously unseen implementations of known functionality and algorithms; and (c) a set of domain-specific dynamic taint analyses that can aid in explicating the features used by image processing and machine learning algorithms.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Brendan",
   "pi_last_name": "Dolan-Gavitt",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Brendan Dolan-Gavitt",
   "pi_email_addr": "bd52@nyu.edu",
   "nsf_id": "000701772",
   "pi_start_date": "2017-01-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "New York University",
  "inst_street_address": "70 WASHINGTON SQ S",
  "inst_street_address_2": "",
  "inst_city_name": "NEW YORK",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "2129982121",
  "inst_zip_code": "100121019",
  "inst_country_name": "United States",
  "cong_dist_code": "10",
  "st_cong_dist_code": "NY10",
  "org_lgl_bus_name": "NEW YORK UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "NX9PXMKW5KW8"
 },
 "perf_inst": {
  "perf_inst_name": "New York University",
  "perf_str_addr": "70 Washington Square S",
  "perf_city_name": "New York",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "100121019",
  "perf_ctry_code": "US",
  "perf_cong_dist": "10",
  "perf_st_cong_dist": "NY10",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "026Y00",
   "pgm_ele_name": "CRII CISE Research Initiation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 174952.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The goals of the ExHume project were to 1) create large datasets of both benign and malicious software; 2) develop techniques to analyze those datasets and produce novel insights for use in program analysis; and 3) develop new program analyses to support goals like finding vulnerabilities in software.</p>\n<p><br />The project made substantial progress on all three goals. We created a large dataset of execution traces of malicious software (Malrec) and a dataset of traces of Linux kernel crashes. We also developed an improved and easier to use tool for capturing and analyzing such traces, PyPANDA, and released it as open source software. Finally, we developed techniques for creating benchmarks that can be used to evaluate the performance of bug-finding tools, and ran a competition that ranked participants on their bug-finding abilities, Rode0day.</p>\n<p><br />The datasets we collected led to insights that helped improve the state of the art in vulnerability detection and uncover hidden features in mobile applications. We developed a new tool, HeapExpo, that makes detection of a particular class of software vulnerabilitie, known as \"use-after-free\" vulnerabilities, more precise. And we helped to develop and evaluate a new technique that can uncover hidden behavior in Android applications, including backdoors, secret features, and censorship activities, and used it to analyze over 150,000 Android apps.</p>\n<p><br />The broader impact of these new tools, datasets, and techniques is to make it easier to find and fix vulnerabilities in software, analyze and classify malicious software in order to better defend against it, and improve the security of mobile applications.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/05/2021<br>\n\t\t\t\t\tModified by: Brendan&nbsp;Dolan-Gavitt</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe goals of the ExHume project were to 1) create large datasets of both benign and malicious software; 2) develop techniques to analyze those datasets and produce novel insights for use in program analysis; and 3) develop new program analyses to support goals like finding vulnerabilities in software.\n\n\nThe project made substantial progress on all three goals. We created a large dataset of execution traces of malicious software (Malrec) and a dataset of traces of Linux kernel crashes. We also developed an improved and easier to use tool for capturing and analyzing such traces, PyPANDA, and released it as open source software. Finally, we developed techniques for creating benchmarks that can be used to evaluate the performance of bug-finding tools, and ran a competition that ranked participants on their bug-finding abilities, Rode0day.\n\n\nThe datasets we collected led to insights that helped improve the state of the art in vulnerability detection and uncover hidden features in mobile applications. We developed a new tool, HeapExpo, that makes detection of a particular class of software vulnerabilitie, known as \"use-after-free\" vulnerabilities, more precise. And we helped to develop and evaluate a new technique that can uncover hidden behavior in Android applications, including backdoors, secret features, and censorship activities, and used it to analyze over 150,000 Android apps.\n\n\nThe broader impact of these new tools, datasets, and techniques is to make it easier to find and fix vulnerabilities in software, analyze and classify malicious software in order to better defend against it, and improve the security of mobile applications.\n\n \n\n\t\t\t\t\tLast Modified: 07/05/2021\n\n\t\t\t\t\tSubmitted by: Brendan Dolan-Gavitt"
 }
}