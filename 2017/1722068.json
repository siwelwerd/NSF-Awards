{
 "awd_id": "1722068",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SBIR Phase I:  Automated Security for the DevOps World",
 "cfda_num": "47.084",
 "org_code": "15030000",
 "po_phone": "7032928772",
 "po_email": "patherto@nsf.gov",
 "po_sign_block_name": "Peter Atherton",
 "awd_eff_date": "2017-07-01",
 "awd_exp_date": "2018-03-31",
 "tot_intn_awd_amt": 225000.0,
 "awd_amount": 225000.0,
 "awd_min_amd_letter_date": "2017-06-28",
 "awd_max_amd_letter_date": "2017-06-28",
 "awd_abstract_narration": "The broader impact/commercial potential of this Small Business Innovation Research (SBIR) Phase I project is to provide robust, automated security protections to enterprise web applications. With the growing threat of attacks at the web application layer, security is a top of mind concern for both the developers and users of web applications. At the same time, defending against these attacks is a resource-intensive, error-prone process that typically is performed manually by specialized web security experts. The project will use application-aware analysis and an innovative information model to automatically build and deploy web security policies on enterprise servers, freeing the enterprise to focus on their core business and reduce the overhead of internal security teams. The project will also use a hybrid static/dynamic analysis to automatically craft server-side and client-side policies using modern web protection mechanisms to give users of web applications confidence that their interactions with a web application will be secure. This approach leverages cutting-edge techniques from program analysis and machine learning, and will advance the state of the art in automated security policy generation.\r\n\r\nThis Small Business Innovation Research (SBIR) Phase I project will explore ways in which automated security policies enact meaningful protection of sensitive resources. Protecting web applications is a challenging research problem in that automated approaches are either biased towards significant false positive rates, in which benign behavior is flagged as malicious, or significant false negative rates, in which malicious activity is not detected. This project aims to resolve this bias using application aware whitelists: the project automatically explores an application's behavior dynamically, and will also statically build a model of that application's purpose. The project is expected to yield two major components: a server-side protection module to isolate and harden sensitive resources on an enterprise deployment, and a client-side protection module to enforce fine-grained policies for users of the enterprise's web applications. The project will involve developing, analyzing, and improving both of these components using large-scale web applications and will integrate the experience and challenges of enterprises with leading web applications.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "TIP",
 "org_dir_long_name": "Directorate for Technology, Innovation, and Partnerships",
 "div_abbr": "TI",
 "org_div_long_name": "Translational Impacts",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Andrew",
   "pi_last_name": "Davidson",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Andrew Davidson",
   "pi_email_addr": "drew@talasecurity.io",
   "nsf_id": "000740574",
   "pi_start_date": "2017-06-28",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Tala Security Inc",
  "inst_street_address": "1185 Adler Ct",
  "inst_street_address_2": "",
  "inst_city_name": "Fremont",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "4086558382",
  "inst_zip_code": "945364027",
  "inst_country_name": "United States",
  "cong_dist_code": "14",
  "st_cong_dist_code": "CA14",
  "org_lgl_bus_name": null,
  "org_prnt_uei_num": null,
  "org_uei_num": "MGP4MQW6KWM7"
 },
 "perf_inst": {
  "perf_inst_name": "Tala Security Inc",
  "perf_str_addr": "1185 Adler Ct",
  "perf_city_name": "Fremont",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "945364027",
  "perf_ctry_code": "US",
  "perf_cong_dist": "14",
  "perf_st_cong_dist": "CA14",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "537100",
   "pgm_ele_name": "SBIR Phase I"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "5371",
   "pgm_ref_txt": "SMALL BUSINESS PHASE I"
  },
  {
   "pgm_ref_code": "8032",
   "pgm_ref_txt": "Software Services and Applications"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 225000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The primary outcome of this SBIR is the creation of the Tala System Hardening engine. This software archtecture brings a modular, compiler-inspired automation system to bear on the timely problem of hardening web infrastructure (such as web servers and web sites). The system operates in three phases: in the first phase, data feeds are collected and aggregated, integrating code, events, and user guidance to explore the user's web infrastructure. In the second phase, the feeds are compiled into an intermediate representation called the Application Information Model (AIM). In the final phase, the AIM is compiled into a number of output targets that can be used to harden web infrastructure. A key design element of the system architecture is that output targets can be configured to support the user's needs. Additionally, the AIM itself can be useful in its own right in allowing users to examine security-relevant details of their own architecture through the inferences detected by the analysis. As a consequence of this design, some of the output targets can include configuration for existing policy engines. As such, users can rely on existing policy enforcement mechanisms that they already trust and are already widely deployed. The Tala System Hardening engine is at the core of two distinct offerings: ClientPod and ServerPod.</p>\n<p>ServerPod gathers data feeds from an internal view of the user's web server, capturing the behavior of the system as seen by a system administrator in benign circumstances. In the output phase, the policy engine crafts server-side policies that prevent malicious behavior as it exists on the server. For example, if an attacker managed to exploit a vulnerability on a web site to attack the server resources directly, ServerPod-generated policies can mitigate the impact of the breach and protect critical resources within the server.</p>\n<p>ClientPod gathers data feeds from an external view of the user's web server, capturing the behavior of the system as seen by a visitor to a website in benign circumstances. ClientPod-generated policies protect visitors from common web attacks that may be carried out against a website, mitigating the effect of a breach that is designed to attack end-users. The primary output of ClientPod allows the creation of Content Security Policies (CSP) which can be integrated into the user's web site and delivered to visitors as they visit the page. Because all major browsers already support the enforcement of CSP, no additional action is required for end-users to take advantage of these additional protections.&nbsp;</p>\n<p>We believe that both ClientPod and ServerPod are valuable security tools developed under the SBIR. We have created a publication on ServerPod which has been accepted in a peer-reviewed journal. ClientPod has been integrated into Tala's first commercial product, offered as a web service to scan and generate security policies, and a dynamic web module, offered for installation within a user's web infrastructure to automatically harden web pages as they are served.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/21/2018<br>\n\t\t\t\t\tModified by: Andrew&nbsp;Davidson</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe primary outcome of this SBIR is the creation of the Tala System Hardening engine. This software archtecture brings a modular, compiler-inspired automation system to bear on the timely problem of hardening web infrastructure (such as web servers and web sites). The system operates in three phases: in the first phase, data feeds are collected and aggregated, integrating code, events, and user guidance to explore the user's web infrastructure. In the second phase, the feeds are compiled into an intermediate representation called the Application Information Model (AIM). In the final phase, the AIM is compiled into a number of output targets that can be used to harden web infrastructure. A key design element of the system architecture is that output targets can be configured to support the user's needs. Additionally, the AIM itself can be useful in its own right in allowing users to examine security-relevant details of their own architecture through the inferences detected by the analysis. As a consequence of this design, some of the output targets can include configuration for existing policy engines. As such, users can rely on existing policy enforcement mechanisms that they already trust and are already widely deployed. The Tala System Hardening engine is at the core of two distinct offerings: ClientPod and ServerPod.\n\nServerPod gathers data feeds from an internal view of the user's web server, capturing the behavior of the system as seen by a system administrator in benign circumstances. In the output phase, the policy engine crafts server-side policies that prevent malicious behavior as it exists on the server. For example, if an attacker managed to exploit a vulnerability on a web site to attack the server resources directly, ServerPod-generated policies can mitigate the impact of the breach and protect critical resources within the server.\n\nClientPod gathers data feeds from an external view of the user's web server, capturing the behavior of the system as seen by a visitor to a website in benign circumstances. ClientPod-generated policies protect visitors from common web attacks that may be carried out against a website, mitigating the effect of a breach that is designed to attack end-users. The primary output of ClientPod allows the creation of Content Security Policies (CSP) which can be integrated into the user's web site and delivered to visitors as they visit the page. Because all major browsers already support the enforcement of CSP, no additional action is required for end-users to take advantage of these additional protections. \n\nWe believe that both ClientPod and ServerPod are valuable security tools developed under the SBIR. We have created a publication on ServerPod which has been accepted in a peer-reviewed journal. ClientPod has been integrated into Tala's first commercial product, offered as a web service to scan and generate security policies, and a dynamic web module, offered for installation within a user's web infrastructure to automatically harden web pages as they are served.\n\n \n\n\t\t\t\t\tLast Modified: 06/21/2018\n\n\t\t\t\t\tSubmitted by: Andrew Davidson"
 }
}