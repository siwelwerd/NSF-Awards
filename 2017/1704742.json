{
 "awd_id": "1704742",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "NeTS: CSR: Large: Collaborative Research: Co-Design of Network, Storage and Computation Fabrics for Disaggregated Datacenters",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Darleen Fisher",
 "awd_eff_date": "2017-09-15",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 2099897.0,
 "awd_amount": 2099897.0,
 "awd_min_amd_letter_date": "2017-06-09",
 "awd_max_amd_letter_date": "2021-08-16",
 "awd_abstract_narration": "Traditional datacenters are built using servers, each of which tightly integrates a small amount of CPU (central processing unit), memory and storage onto a single motherboard. However, the end of Dennard's scaling and the slowdown of Moore's Law has led to surfacing of several fundamental limitations of such server-centric architectures (e.g., the memory-capacity wall making CPU-memory co-location unsustainable). Consequently, a new computing paradigm is emerging -- a disaggregated architecture, where each resource type is built as a standalone 'blade' and a network fabric interconnects the resource blades within and across racks. The computer architecture community has established a number of benefits of such disaggregated architectures, including the potential to have 10-100x larger resource capacity. While beneficial from the computer architecture perspective, disaggregated architectures alter several assumptions that once guided the design and optimization of existing networks, systems and applications (e.g., CPU-storage colocation, high CPU-memory bandwidth, storage hierarchy, data locality, failure models, etc.). Capitalizing on the benefits of disaggregated architectures will thus require re-architecting legacy systems and networks.\r\nThis project aims to co-design the network, storage and compute fabrics for disaggregated datacenters.\r\n\r\nOn the network front, the project will design ultra-low latency intra-rack and inter-rack fabrics including a new network software stack that incorporates efficient congestion control, failure tolerance and scheduling mechanisms. The co-design of network and storage fabrics will lead to new (distributed) memory and storage management stacks for disaggregated storage, and a resource manager that provides essential isolation, sharing and elasticity guarantees across multiple applications sharing disaggregated storage and network fabrics. Finally, the project will build new distributed programming frameworks and re-architect existing applications to efficiently and correctly operate on disaggregated architectures. \r\n\r\nThis project will provide solutions to some of the most difficult and important technical questions surrounding this emerging computing paradigm and will have broad community impact primarily through educational and outreach activities, and technology transfer. Software artifacts resulting from this project will be publicly released to ensure repeatability and to foster follow up research. The project also has a substantial educational component including new courses and public release of teaching materials. Finally, the project will provide the necessary thrust to build an inter-disciplinary research community via mentoring of graduate students and postdoctoral scholars, yearly workshops and industry retreats to bridge the gap between industrial development and academic research.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Rachit",
   "pi_last_name": "Agarwal",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Rachit Agarwal",
   "pi_email_addr": "ra625@cornell.edu",
   "nsf_id": "000728107",
   "pi_start_date": "2017-06-09",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Hakim",
   "pi_last_name": "Weatherspoon",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Hakim Weatherspoon",
   "pi_email_addr": "hweather@cs.cornell.edu",
   "nsf_id": "000508809",
   "pi_start_date": "2017-06-09",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Christina",
   "pi_last_name": "Delimitrou",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Christina Delimitrou",
   "pi_email_addr": "delimitrou@csail.mit.edu",
   "nsf_id": "000711267",
   "pi_start_date": "2017-06-09",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "107 Hoy Road",
  "perf_city_name": "Ithaca",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148537501",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736300",
   "pgm_ele_name": "Networking Technology and Syst"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7925",
   "pgm_ref_txt": "LARGE PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0118",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001819DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0119",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001920DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0121",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002122DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 420779.0
  },
  {
   "fund_oblg_fiscal_yr": 2018,
   "fund_oblg_amt": 480479.0
  },
  {
   "fund_oblg_fiscal_yr": 2019,
   "fund_oblg_amt": 493598.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 347928.0
  },
  {
   "fund_oblg_fiscal_yr": 2021,
   "fund_oblg_amt": 357113.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-f7c3d0f0-7fff-2601-5bea-876280c42bd2\"> </span></p>\n<p dir=\"ltr\"><span>Traditional datacenters are built using servers, each of which tightly integrates a small amount of CPU, memory and storage onto a single motherboard. Such </span><span>server-centric</span><span> architectures have been the mainstay for decades since they achieve good scalability, cross-job isolation and data locality. However, the end of Dennard's scaling and the slowdown of Moore's Law has led to surfacing of several fundamental limitations of these architectures &mdash; unsustainable compute-memory colocation, resource underutilization, and the inability to independently scale individual resources for applications with time-varying demands.&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>This project explores a clean-slate </span><span>disaggregated</span><span> architecture &mdash; one where each resource type is built as a standalone `blade', slices of which can be stitched over a network fabric. Resource disaggregation has a number of benefits. First, since compute, memory, storage and networking technologies exhibit different trends in terms of cost, performance and power scaling, disaggregated architectures can enable orders of magnitude larger resource density. Second, blurring the server boundaries can allow near-perfect resource utilization. Third, managing each resource pool separately can enable independent scaling of individual resources for time-varying application demands. Finally, decoupling resources can allow each resource technology to evolve independently, and reduce time-to-adoption of new technologies. While beneficial, decoupling of resources in disaggregated architectures alters many fundamental assumptions that once guided the design and optimization of existing distributed networks, systems, and applications (e.g., compute-storage co-location, high CPU-memory bandwidth, storage hierarchy, data locality, failure models, etc.).&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>Project Outcomes &mdash; Intellectual merits: </span><span>This project takes the first step towards resolving fundamental challenges in design of network, storage, and computation fabrics for disaggregated architectures. We have designed and built new network fabrics that can provide the ultra-low latency and high bandwidth required to enable disaggregated architectures; we have also rearchitected network stacks to incorporate novel congestion control, host resource provisioning, and host resource scheduling mechanisms specialized for disaggregated architectures. Our project has also led to new storage and memory management stacks that enable efficient isolation, sharing, and elastic memory and storage resource allocation for applications running atop disaggregated architectures. Finally, we have rearchitected today&rsquo;s widely-deployed databases, distributed programming frameworks, and applications to run atop disaggregated architectures. These projects have led to advances in many subareas of computer science, and our results have been disseminated via many publications at top-tier conferences in operating systems, computer networking, computer architecture, and even theory.&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>Project Outcomes &mdash; Broader impacts: </span><span>This project has provided solutions to some of the most difficult and important technical questions surrounding the emerging computing paradigm of disaggregated architectures, and has had broad community impact primarily through educational and outreach activities, and through&nbsp; technology transfer.&nbsp;</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>Our education and outreach activities involved creating new education material on resource disaggregation, mentoring of undergraduate and graduate students, community workshops on resource disaggregation, and engagement with industry. These outreach activities have had significant broader impacts. Teaching material on resource disaggregation developed during the course of this project has been incorporated within several computer systems, networking and architecture courses at Cornell and Berkeley; this material is already being used at multiple institutions. Many of our mentees are now faculty and PhD students at academic institutions; and, many of our mentees are enabling industrial advances in resource disaggregation. Overall, our outreach activities have led to resource disaggregation emerging as one of the most active research subareas in various domains of computer science including computer systems, operating systems, computer architecture and databases; our project has led to the first publicly available dataset on disaggregated architectures, that is further fueling the research activities in these areas.</span></p>\n<p>&nbsp;</p>\n<p dir=\"ltr\"><span>During the course of this project, we have produced open-source network and storage stacks, and new hardware demonstrating feasibility of disaggregated architectures. Many of these are starting to have real-world impact: our open-source software systems have already been incorporated within Kubernetes, and are being upstreamed to the Linux kernel; and, resource scheduling mechanisms developed during this project are used by a startup to serve millions of queries over petabytes of data from thousands of customers on a daily basis. These are directly contributing to the US economy.</span></p>\n<p><br /><br /><br /><br /><br /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 07/10/2023<br>\n\t\t\t\t\tModified by: Rachit&nbsp;Agarwal</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nTraditional datacenters are built using servers, each of which tightly integrates a small amount of CPU, memory and storage onto a single motherboard. Such server-centric architectures have been the mainstay for decades since they achieve good scalability, cross-job isolation and data locality. However, the end of Dennard's scaling and the slowdown of Moore's Law has led to surfacing of several fundamental limitations of these architectures &mdash; unsustainable compute-memory colocation, resource underutilization, and the inability to independently scale individual resources for applications with time-varying demands. \n\n \nThis project explores a clean-slate disaggregated architecture &mdash; one where each resource type is built as a standalone `blade', slices of which can be stitched over a network fabric. Resource disaggregation has a number of benefits. First, since compute, memory, storage and networking technologies exhibit different trends in terms of cost, performance and power scaling, disaggregated architectures can enable orders of magnitude larger resource density. Second, blurring the server boundaries can allow near-perfect resource utilization. Third, managing each resource pool separately can enable independent scaling of individual resources for time-varying application demands. Finally, decoupling resources can allow each resource technology to evolve independently, and reduce time-to-adoption of new technologies. While beneficial, decoupling of resources in disaggregated architectures alters many fundamental assumptions that once guided the design and optimization of existing distributed networks, systems, and applications (e.g., compute-storage co-location, high CPU-memory bandwidth, storage hierarchy, data locality, failure models, etc.). \n\n \nProject Outcomes &mdash; Intellectual merits: This project takes the first step towards resolving fundamental challenges in design of network, storage, and computation fabrics for disaggregated architectures. We have designed and built new network fabrics that can provide the ultra-low latency and high bandwidth required to enable disaggregated architectures; we have also rearchitected network stacks to incorporate novel congestion control, host resource provisioning, and host resource scheduling mechanisms specialized for disaggregated architectures. Our project has also led to new storage and memory management stacks that enable efficient isolation, sharing, and elastic memory and storage resource allocation for applications running atop disaggregated architectures. Finally, we have rearchitected today\u2019s widely-deployed databases, distributed programming frameworks, and applications to run atop disaggregated architectures. These projects have led to advances in many subareas of computer science, and our results have been disseminated via many publications at top-tier conferences in operating systems, computer networking, computer architecture, and even theory. \n\n \nProject Outcomes &mdash; Broader impacts: This project has provided solutions to some of the most difficult and important technical questions surrounding the emerging computing paradigm of disaggregated architectures, and has had broad community impact primarily through educational and outreach activities, and through  technology transfer. \n\n \nOur education and outreach activities involved creating new education material on resource disaggregation, mentoring of undergraduate and graduate students, community workshops on resource disaggregation, and engagement with industry. These outreach activities have had significant broader impacts. Teaching material on resource disaggregation developed during the course of this project has been incorporated within several computer systems, networking and architecture courses at Cornell and Berkeley; this material is already being used at multiple institutions. Many of our mentees are now faculty and PhD students at academic institutions; and, many of our mentees are enabling industrial advances in resource disaggregation. Overall, our outreach activities have led to resource disaggregation emerging as one of the most active research subareas in various domains of computer science including computer systems, operating systems, computer architecture and databases; our project has led to the first publicly available dataset on disaggregated architectures, that is further fueling the research activities in these areas.\n\n \nDuring the course of this project, we have produced open-source network and storage stacks, and new hardware demonstrating feasibility of disaggregated architectures. Many of these are starting to have real-world impact: our open-source software systems have already been incorporated within Kubernetes, and are being upstreamed to the Linux kernel; and, resource scheduling mechanisms developed during this project are used by a startup to serve millions of queries over petabytes of data from thousands of customers on a daily basis. These are directly contributing to the US economy.\n\n\n\n\n\n\n\n\n \n\n \n\n\t\t\t\t\tLast Modified: 07/10/2023\n\n\t\t\t\t\tSubmitted by: Rachit Agarwal"
 }
}