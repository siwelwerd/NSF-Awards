{
 "awd_id": "1729603",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: CI-SUSTAIN: StarExec: Cross-Community Infrastructure for Logic Solving",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2023-07-31",
 "tot_intn_awd_amt": 552195.0,
 "awd_amount": 610641.0,
 "awd_min_amd_letter_date": "2017-05-17",
 "awd_max_amd_letter_date": "2022-11-14",
 "awd_abstract_narration": "StarExec is a web-accessed compute service that was developed (under a prior NSF grant) as a community resource/infrastructure to support researchers in the field of automatic theorem proving and other research areas that depend on logic-solving methods.  Research groups in these areas cannot support their own infrastructure due to the high cost of the hardware and the high degree of specialized expertise needed to run and optimize large-scale solver executions. StarExec users can upload solvers and benchmarks to the system, configure and execute jobs to run selected solvers on selected benchmarks, and collaborate by sharing data and artifacts.  The infrastructure was first developed to facilitate solver competitions and now supports a large number of users in many areas of research where logic solvers are used. \r\n\r\nThis new grant sustains and expands StarExec by providing additional hardware (computing clusters) and human resources at the University of Iowa to meet the growing demand for this infrastructure, as the use of logic solvers expands to new research areas and larger-scale problems.  Part of the long-term, sustainability strategy is to create multiple instances of the StarExec software, starting with the University of Miami, which will serve as a demonstration and model for future expansion.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Aaron",
   "pi_last_name": "Stump",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "Aaron D Stump",
   "pi_email_addr": "aaron-stump@uiowa.edu",
   "nsf_id": "000241804",
   "pi_start_date": "2017-05-17",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Cesare",
   "pi_last_name": "Tinelli",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Cesare Tinelli",
   "pi_email_addr": "cesare-tinelli@uiowa.edu",
   "nsf_id": "000304361",
   "pi_start_date": "2017-05-17",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Iowa",
  "inst_street_address": "105 JESSUP HALL",
  "inst_street_address_2": "",
  "inst_city_name": "IOWA CITY",
  "inst_state_code": "IA",
  "inst_state_name": "Iowa",
  "inst_phone_num": "3193352123",
  "inst_zip_code": "522421316",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "IA01",
  "org_lgl_bus_name": "THE UNIVERSITY OF IOWA",
  "org_prnt_uei_num": "",
  "org_uei_num": "Z1H9VJS8NG16"
 },
 "perf_inst": {
  "perf_inst_name": "University of Iowa",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "IA",
  "perf_st_name": "Iowa",
  "perf_zip_code": "522421419",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "IA01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735900",
   "pgm_ele_name": "CCRI-CISE Cmnty Rsrch Infrstrc"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7359",
   "pgm_ref_txt": "COMPUTING RES INFRASTRUCTURE"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  }
 ],
 "app_fund": [
  {
   "app_code": "",
   "app_name": "",
   "app_symb_id": "",
   "fund_code": "01002223DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 552195.0
  },
  {
   "fund_oblg_fiscal_yr": 2022,
   "fund_oblg_amt": 58446.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The StarExec project provides a shared web resource for researchers working in the area of automated theorem proving.&nbsp; In this area, software tools called solvers are used to test whether formulas in different logics or logical theories are valid or not.&nbsp; Logic solving has many applications in different areas of Computer Science, due to the expressive power of logic: problems from diverse fields can be translated into logical formulas, and then solved using solvers.<br /><br />Research communities have developed around different specific forms of logic or logic-solving problems.&nbsp; StarExec is a resource used by many such communities -- there are currently 16 different ones present on StarExec -- for activities like hosting libraries of benchmark formulas and evaluating solvers on benchmarks.&nbsp; (The \"Star\" in StarExec indicates that it is for all these communitites, as star in Computer Science is used as a pattern matching everything.)&nbsp; StarExec has a compute cluster of over 275 compute nodes, for running solvers. StarExec users can create jobs to run solvers on benchmark formulas, using these nodes.<br /><br />For the ten years the project was funded by NSF, across two CRI grants, StarExec hosted over 60 competitions, organized by leaders in the various communities, where solver implementors compete to see whose solver can solve the most formulas the most quickly.&nbsp; The system also averages around 20-40 unique logins per week, handling approximately 500,000 to 750,000 (and sometimes in the millions) solver invocations per week.&nbsp; The system has over 1,300 registered users.<br /><br />In addition to providing a valuable and heavily used service to the different subcommunities of automated theorem proving, StarExec provided invaluable training opportunities for undergraduates and Master's students at The University of Iowa.&nbsp; Students, at least at The University of Iowa where the system was developed, rarely have the chance to work on a codebase of this size, around 150,000 lines of code in various languages.&nbsp; Also, StarExec is a live running system, with many users.&nbsp; This makes working on it a more real-world coding experience than is usually available to University students.&nbsp; Alumni from the project have gone on to excellent jobs at a variety of companies from Google and Microsoft, to State Farm and John Deere.<br /><br /><br /></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/02/2023<br>\n\t\t\t\t\tModified by: Aaron&nbsp;D&nbsp;Stump</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe StarExec project provides a shared web resource for researchers working in the area of automated theorem proving.  In this area, software tools called solvers are used to test whether formulas in different logics or logical theories are valid or not.  Logic solving has many applications in different areas of Computer Science, due to the expressive power of logic: problems from diverse fields can be translated into logical formulas, and then solved using solvers.\n\nResearch communities have developed around different specific forms of logic or logic-solving problems.  StarExec is a resource used by many such communities -- there are currently 16 different ones present on StarExec -- for activities like hosting libraries of benchmark formulas and evaluating solvers on benchmarks.  (The \"Star\" in StarExec indicates that it is for all these communitites, as star in Computer Science is used as a pattern matching everything.)  StarExec has a compute cluster of over 275 compute nodes, for running solvers. StarExec users can create jobs to run solvers on benchmark formulas, using these nodes.\n\nFor the ten years the project was funded by NSF, across two CRI grants, StarExec hosted over 60 competitions, organized by leaders in the various communities, where solver implementors compete to see whose solver can solve the most formulas the most quickly.  The system also averages around 20-40 unique logins per week, handling approximately 500,000 to 750,000 (and sometimes in the millions) solver invocations per week.  The system has over 1,300 registered users.\n\nIn addition to providing a valuable and heavily used service to the different subcommunities of automated theorem proving, StarExec provided invaluable training opportunities for undergraduates and Master's students at The University of Iowa.  Students, at least at The University of Iowa where the system was developed, rarely have the chance to work on a codebase of this size, around 150,000 lines of code in various languages.  Also, StarExec is a live running system, with many users.  This makes working on it a more real-world coding experience than is usually available to University students.  Alumni from the project have gone on to excellent jobs at a variety of companies from Google and Microsoft, to State Farm and John Deere.\n\n\n\n\n\t\t\t\t\tLast Modified: 10/02/2023\n\n\t\t\t\t\tSubmitted by: Aaron D Stump"
 }
}