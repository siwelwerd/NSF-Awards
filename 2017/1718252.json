{
 "awd_id": "1718252",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Collaborative Research: Flexible Resource Management and Coordination Schemes for Lightweight, Rapidly Deployable OS/Rs",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Erik Brunvand",
 "awd_eff_date": "2017-08-01",
 "awd_exp_date": "2021-07-31",
 "tot_intn_awd_amt": 249771.0,
 "awd_amount": 265771.0,
 "awd_min_amd_letter_date": "2017-07-12",
 "awd_max_amd_letter_date": "2020-04-06",
 "awd_abstract_narration": "Current cloud systems leverage either heavy-weight virtualization (running applications inside full-fledged virtual machines (VMs) with their own operating systems) or containers (light-weight software environments that share a single underlying operating system). This collaborative project aims to increase the efficiency of cloud systems by enabling the rapid deployment of specialized operating system and runtime (SOS/R) environments optimized for particular applications or runtime systems. This will allow users of applications with special performance requirements to enjoy the convenience of cloud infrastructure without sacrificing performance or design constraints imposed by general-purpose operating systems.\r\n\r\nThe project will advance the state of the art in cloud system software by: (a) enabling the development of a general specialized hosting framework allowing the deployment of arbitrary system software stacks as both VMs and native co-kernel instances; (b) a set of interfaces and mechanisms to allow SOS/R environments to react to highly dynamic and variable hardware resource availability; (c) novel approaches that leverage hardware virtualization features to host SOS/Rs; and (d) a thorough evaluation of all of these approaches using realistic cloud workloads at scale.\r\n\r\nThis work will enable users of cloud systems to efficiently deploy diverse and specialized system architectures. This will not only enhance the capabilities of existing cloud and data center platforms, but will also enable the deployment of new types of operating systems and runtimes. Prototype systems produced in this effort will be made available to the general public as open-source software, and will also be leveraged as teaching and platforms for courses in operating systems, virtualization, runtime environments, and general cloud computing. \r\n\r\nData, code, and results generated from the project will be made freely available indefinitely on the team's webpages. All software packages will be accompanied by instructions for building and running them using freely available open-source tools. Data and results will be made available in compressed archive formats. Links to specific repositories (such as git repositories for code) will be made public either at http://hexsa.halek.co or http://prognosticlab.org.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Kyle",
   "pi_last_name": "Hale",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "Kyle C Hale",
   "pi_email_addr": "kyle.hale@oregonstate.edu",
   "nsf_id": "000723705",
   "pi_start_date": "2017-07-12",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Illinois Institute of Technology",
  "inst_street_address": "10 W 35TH ST",
  "inst_street_address_2": "",
  "inst_city_name": "CHICAGO",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "3125673035",
  "inst_zip_code": "606163717",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "IL01",
  "org_lgl_bus_name": "ILLINOIS INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "",
  "org_uei_num": "E2NDENMDUEG8"
 },
 "perf_inst": {
  "perf_inst_name": "Illinois Institute of Technology",
  "perf_str_addr": "10 West 31st Street",
  "perf_city_name": "Chicago",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "606163717",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "IL01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7354",
   "pgm_ref_txt": "COMPUTER SYSTEMS"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0120",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01002021DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 249771.0
  },
  {
   "fund_oblg_fiscal_yr": 2020,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-81fbd914-7fff-e7bc-91cb-886a87c2cfae\"> </span></p>\n<p><span id=\"docs-internal-guid-834c3138-7fff-9fee-60be-61aa34d76902\"> </span></p>\n<p dir=\"ltr\"><span>The primary focus of this project was to investigate extending specialized operating and runtime systems (SOS/Rs) to operate in a coordinated environment and to be deployed and managed with the ease of containers. We were particularly interested in new deployment models of specialized OSes, integrating them with container technologies, and adapting cloud services to use specialized system software.</span></p>\n<p dir=\"ltr\"><span>Over the course of the project, we developed novel system software, programming language extensions, development tools, analytical performance models, and simulation infrastructure to evaluate multi-OS deployments involving SOS/Rs. Our multi-OS performance model allows developers to project the speedups they would get if they were to adopt a multi-OS platform before they undertake a major porting effort. We have shown how even with a simple version of our model, we can accurately predict application speedups. To further ease multi-OS deployment, we developed Diver, a Rust-based tool that allows programmers to provision and deploy SOS/Rs in the same way that containers are provisioned.&nbsp;</span></p>\n<p dir=\"ltr\"><span>We also developed a new virtualization abstraction (virtines) that allows programmers to easily provision code in virtual context using tailored system software stacks. These abstractions are built on our open-source hypervisor framework called Wasp, which was built from scratch at IIT, and custom C language extensions developed with the clang/LLVM compiler framework. Our virtines infrastructure can be used as an alternative back-end for serverless platforms, giving better isolation and competitive performance relative to traditional container mechanisms. We have developed a prototype of one such serverless virtines platform.&nbsp;</span></p>\n<p dir=\"ltr\"><span>This project has contributed to education and student training. A new virtual machines course, and a new course on serverless and edge computing were developed at IIT as part of this project. The VM course is now a core component of the graduate systems curriculum at IIT. Several PhD students were trained in the course of this project. Undergraduates and Masters students were also deeply involved, including REUs, with two undergraduates co-authoring a research paper that formed a major component of this project. Two undergraduates trained as part of this project went on to top PhD programs, and one founded a startup company.&nbsp;</span></p>\n<p dir=\"ltr\"><span>This project continues to have broader impacts. We are still improving our modeling framework developed for specialized OS/Rs, and have involved others in the multi-OS HPC community to validate our work. The virtines infrastructure (Wasp) we built continues to be used to train new students, and has resulted in follow-on work involving automatic synthesis of bespoke execution contexts. The work has also helped to form collaborations with other research groups working on low-latency serverless computing. The work in this project has also opened up a new research direction involving transparently provisioned, specialized virtual machines at the edge.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/28/2021<br>\n\t\t\t\t\tModified by: Kyle&nbsp;C&nbsp;Hale</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \n\n \nThe primary focus of this project was to investigate extending specialized operating and runtime systems (SOS/Rs) to operate in a coordinated environment and to be deployed and managed with the ease of containers. We were particularly interested in new deployment models of specialized OSes, integrating them with container technologies, and adapting cloud services to use specialized system software.\nOver the course of the project, we developed novel system software, programming language extensions, development tools, analytical performance models, and simulation infrastructure to evaluate multi-OS deployments involving SOS/Rs. Our multi-OS performance model allows developers to project the speedups they would get if they were to adopt a multi-OS platform before they undertake a major porting effort. We have shown how even with a simple version of our model, we can accurately predict application speedups. To further ease multi-OS deployment, we developed Diver, a Rust-based tool that allows programmers to provision and deploy SOS/Rs in the same way that containers are provisioned. \nWe also developed a new virtualization abstraction (virtines) that allows programmers to easily provision code in virtual context using tailored system software stacks. These abstractions are built on our open-source hypervisor framework called Wasp, which was built from scratch at IIT, and custom C language extensions developed with the clang/LLVM compiler framework. Our virtines infrastructure can be used as an alternative back-end for serverless platforms, giving better isolation and competitive performance relative to traditional container mechanisms. We have developed a prototype of one such serverless virtines platform. \nThis project has contributed to education and student training. A new virtual machines course, and a new course on serverless and edge computing were developed at IIT as part of this project. The VM course is now a core component of the graduate systems curriculum at IIT. Several PhD students were trained in the course of this project. Undergraduates and Masters students were also deeply involved, including REUs, with two undergraduates co-authoring a research paper that formed a major component of this project. Two undergraduates trained as part of this project went on to top PhD programs, and one founded a startup company. \nThis project continues to have broader impacts. We are still improving our modeling framework developed for specialized OS/Rs, and have involved others in the multi-OS HPC community to validate our work. The virtines infrastructure (Wasp) we built continues to be used to train new students, and has resulted in follow-on work involving automatic synthesis of bespoke execution contexts. The work has also helped to form collaborations with other research groups working on low-latency serverless computing. The work in this project has also opened up a new research direction involving transparently provisioned, specialized virtual machines at the edge.\n\n \n\n\t\t\t\t\tLast Modified: 11/28/2021\n\n\t\t\t\t\tSubmitted by: Kyle C Hale"
 }
}