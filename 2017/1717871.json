{
 "awd_id": "1717871",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SaTC: CORE: Small: Collaborative: Data-driven Approaches for Large-scale Security Analysis of Mobile Applications",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2017-08-15",
 "awd_exp_date": "2021-07-31",
 "tot_intn_awd_amt": 200000.0,
 "awd_amount": 200000.0,
 "awd_min_amd_letter_date": "2017-07-18",
 "awd_max_amd_letter_date": "2017-07-18",
 "awd_abstract_narration": "This project investigates how to apply big-data analysis techniques to analyze mobile apps for the Android platform, for the purpose of accurately identifying security problems therein. A major challenge is the scale of the problem, with thousands of new apps entering the online app markets on a daily basis. Current technologies cannot keep up with the pace of the threats, and malware are regularly found in both large-scale marketplaces such as the official Google Play market and in third-party markets. The project adopts a number of advanced machine learning and data mining techniques to tackle those challenges. The large number of apps in the markets allows an automated machine learning algorithm to better capture security-related patterns and trends in the data, so that it can predict with good accuracy which apps may have security problems. Those apps are worth the more in-depth and expensive analysis that usually requires significant human effort. This creates an effective triage to deal with the scale challenge, and can be used by industry to scale the security vetting process of mobile apps. Artifacts produced from the research are released in open source and benefit practitioners. New courses on mobile apps and their security are developed. Undergraduate students are involved in this research. Underrepresented groups, including female students, also participate in the research. The materials developed from the research are used to further enrich cybersecurity education opportunities in the PIs' multiple outreach platforms in their institutions, to enable a large student body to benefit from the project.\r\n\r\n\r\nThe project designs solutions to tackle the unique challenges in applying machine learning for mobile app security analysis, most of which are due to the big data nature of the problem. A key scientific challenge faced in mobile app security analysis is the difficulty in obtaining high-quality ground truth. Many times one has to rely upon imperfect data in training and evaluation. The research experiments with a number of approaches to deal with the noise due to the imperfect labels, including semi-supervised learning algorithms, which can learn from small amounts of labeled data, or even from positive data only, together with unlabeled data. The project also explores a novel approach that uses social media information to acquire additional information to improve the ground truth and/or the prediction accuracy.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Doina",
   "pi_last_name": "Caragea",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Doina Caragea",
   "pi_email_addr": "dcaragea@ksu.edu",
   "nsf_id": "000391976",
   "pi_start_date": "2017-07-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Kansas State University",
  "inst_street_address": "1601 VATTIER STREET",
  "inst_street_address_2": "103 FAIRCHILD HALL",
  "inst_city_name": "MANHATTAN",
  "inst_state_code": "KS",
  "inst_state_name": "Kansas",
  "inst_phone_num": "7855326804",
  "inst_zip_code": "665062504",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "KS01",
  "org_lgl_bus_name": "KANSAS STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "CFMMM5JM7HJ9"
 },
 "perf_inst": {
  "perf_inst_name": "Kansas State University",
  "perf_str_addr": "2 FAIRCHILD HALL",
  "perf_city_name": "Manhattan",
  "perf_st_code": "KS",
  "perf_st_name": "Kansas",
  "perf_zip_code": "665061103",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "KS01",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "025Z",
   "pgm_ref_txt": "SaTC: Secure and Trustworthy Cyberspace"
  },
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 200000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project has investigated how to apply big-data analysis techniques to analyze mobile apps for the Android platform for the purpose of accurately identifying security problems therein. A major challenge is the scale of the problem, with thousands of new apps entering the online app markets on a daily basis. Current technologies cannot keep up with the pace of the threats, and malware are regularly found in both large-scale marketplaces such as the official Google Play market and in third-party markets. The project has adopted advanced machine learning and deep learning techniques to tackle those challenges, as highlighted below.&nbsp;</p>\n<p><br />We have studied machine learning algorithms on the task of detecting zero-day Android malware from noisy ground truth. We have performed extensive practical experimentation with different types of machine learning approaches, including traditional machine learning, transductive learning and modern recurrent neural networks. Experimental results have shown that all types of approaches can achieve verifiable zero-day malware detection, even when trained with a noisy ground truth dataset.&nbsp;</p>\n<p><br />We have designed deep learning models based on a hybrid analysis technique, which combines the complementary strengths of the static and dynamic analysis paradigms to attain better accuracy. Using lightweight static and dynamic analysis procedures, we obtained multiple artifacts and used them to train deep learning models, specifically, long short-term memory (LSTM) networks, bidirectional LSTM &nbsp;(BiLSTM) networks and attention based BiLSTM networks for identifying Android malware. Experimental results have shown that the best results are obtained with an attention-based BiLSTM model that uses hybrid static and dynamic artifacts. Furthermore, a robustness analysis has indicated that the best model is fairly robust against imbalanced data and is scalable. In another work, we have shown how the attention mechanism can be used to find the API calls that are predictive with respect to the maliciousness &nbsp;of Android apps. In turn, the information about predictive API calls can be used to improve the interpretability of the deep learning models.&nbsp;</p>\n<p><br />We have designed a novel deep learning model based on capsule graph neural networks (CapsGraphNet). Our model makes use of more precise program semantics through an Android app's inter-procedural control flow graphs (ICFGs), instead of the code sequences found in the app's code. To perform a thorough comparison between our cutting-edge CapsGraphNet model and a traditional machine learning approach with features engineered in prior work, we created a market-scale dataset by collecting over 2.4 million apps from 2017 to 2019 from a number of Android app stores through AndroZoo. This dataset reflects the distribution of malicious apps in the real world. We labeled the apps in the dataset following best practices from the literature, using the latest scan results from VirusTotal. We organized the evaluation data by quarters: models trained on one quarter are tested on the data in the following quarter. This ensures the evaluation results correspond to realistic use patterns of the models. Our experimental results have shown that the deep learning and machine learning models generally have similar performance in terms of precision, recall, and F1 metrics, on our train/test subsets. The deep learning models, despite needing significantly more computational resources, do not appear to provide an obvious advantage over traditional machine learning when no changes occur in the Android development environment. However, the deep learning models perform better than the machine learning models when changes in the Android development environment are observed, as deep learning has the ability to extract features on-the-fly and can thus handle changes in data distribution.&nbsp;We will share with the research community the dataset (specifically, each &nbsp;app's SHA256 hash value as well as each app's VirusTotal report url based on which the app's label is determined). This dataset will enable other researchers to verify and reproduce our experimental results, as well as comparing with our results in future research in this area. Other outcomes of this project have been shared though public code repositories and disseminated as peer-reviewed conference or journal articles.&nbsp;</p>\n<p><br />Components of this research have been integrated in courses taught by the PIs at their respective institutions. The research involved the training of two PhD students, six MS students and four undergraduate students, including one female PhD student, two female MS students, and two female undergraduate students. These students participated in dataset construction, data analysis and preprocessing, in the design and implementation of algorithms for Android malware identification, and in paper/thesis/report writing. Thus, all students have gained experience and skills in research, in collaboration, and in written and verbal technical communication.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/15/2021<br>\n\t\t\t\t\tModified by: Doina&nbsp;Caragea</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project has investigated how to apply big-data analysis techniques to analyze mobile apps for the Android platform for the purpose of accurately identifying security problems therein. A major challenge is the scale of the problem, with thousands of new apps entering the online app markets on a daily basis. Current technologies cannot keep up with the pace of the threats, and malware are regularly found in both large-scale marketplaces such as the official Google Play market and in third-party markets. The project has adopted advanced machine learning and deep learning techniques to tackle those challenges, as highlighted below. \n\n\nWe have studied machine learning algorithms on the task of detecting zero-day Android malware from noisy ground truth. We have performed extensive practical experimentation with different types of machine learning approaches, including traditional machine learning, transductive learning and modern recurrent neural networks. Experimental results have shown that all types of approaches can achieve verifiable zero-day malware detection, even when trained with a noisy ground truth dataset. \n\n\nWe have designed deep learning models based on a hybrid analysis technique, which combines the complementary strengths of the static and dynamic analysis paradigms to attain better accuracy. Using lightweight static and dynamic analysis procedures, we obtained multiple artifacts and used them to train deep learning models, specifically, long short-term memory (LSTM) networks, bidirectional LSTM  (BiLSTM) networks and attention based BiLSTM networks for identifying Android malware. Experimental results have shown that the best results are obtained with an attention-based BiLSTM model that uses hybrid static and dynamic artifacts. Furthermore, a robustness analysis has indicated that the best model is fairly robust against imbalanced data and is scalable. In another work, we have shown how the attention mechanism can be used to find the API calls that are predictive with respect to the maliciousness  of Android apps. In turn, the information about predictive API calls can be used to improve the interpretability of the deep learning models. \n\n\nWe have designed a novel deep learning model based on capsule graph neural networks (CapsGraphNet). Our model makes use of more precise program semantics through an Android app's inter-procedural control flow graphs (ICFGs), instead of the code sequences found in the app's code. To perform a thorough comparison between our cutting-edge CapsGraphNet model and a traditional machine learning approach with features engineered in prior work, we created a market-scale dataset by collecting over 2.4 million apps from 2017 to 2019 from a number of Android app stores through AndroZoo. This dataset reflects the distribution of malicious apps in the real world. We labeled the apps in the dataset following best practices from the literature, using the latest scan results from VirusTotal. We organized the evaluation data by quarters: models trained on one quarter are tested on the data in the following quarter. This ensures the evaluation results correspond to realistic use patterns of the models. Our experimental results have shown that the deep learning and machine learning models generally have similar performance in terms of precision, recall, and F1 metrics, on our train/test subsets. The deep learning models, despite needing significantly more computational resources, do not appear to provide an obvious advantage over traditional machine learning when no changes occur in the Android development environment. However, the deep learning models perform better than the machine learning models when changes in the Android development environment are observed, as deep learning has the ability to extract features on-the-fly and can thus handle changes in data distribution. We will share with the research community the dataset (specifically, each  app's SHA256 hash value as well as each app's VirusTotal report url based on which the app's label is determined). This dataset will enable other researchers to verify and reproduce our experimental results, as well as comparing with our results in future research in this area. Other outcomes of this project have been shared though public code repositories and disseminated as peer-reviewed conference or journal articles. \n\n\nComponents of this research have been integrated in courses taught by the PIs at their respective institutions. The research involved the training of two PhD students, six MS students and four undergraduate students, including one female PhD student, two female MS students, and two female undergraduate students. These students participated in dataset construction, data analysis and preprocessing, in the design and implementation of algorithms for Android malware identification, and in paper/thesis/report writing. Thus, all students have gained experience and skills in research, in collaboration, and in written and verbal technical communication.\n\n \n\n\t\t\t\t\tLast Modified: 11/15/2021\n\n\t\t\t\t\tSubmitted by: Doina Caragea"
 }
}