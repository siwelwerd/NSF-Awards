{
 "awd_id": "1717420",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF:Small:GOALI:Formal Equivalence Checking for Quasi-Delay-Insensitive Circuits",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927843",
 "po_email": "sabasu@nsf.gov",
 "po_sign_block_name": "Sankar Basu",
 "awd_eff_date": "2017-08-15",
 "awd_exp_date": "2022-07-31",
 "tot_intn_awd_amt": 449999.0,
 "awd_amount": 449999.0,
 "awd_min_amd_letter_date": "2017-08-10",
 "awd_max_amd_letter_date": "2020-01-24",
 "awd_abstract_narration": "Digital integrated circuits (ICs) are designed based on a periodic signal called the clock, which synchronizes the operation of the components of an Integrated Circuit (IC) referred to as synchronous circuits. However, the rigidity of clock-based synchronous design causes the resulting ICs to malfunction in extreme environments (e.g., very hot/cold, large temperature swings, high radiation). An alternate approach to IC design is the asynchronous paradigm, where correct operation is achieved through the use of locally distributed handshaking protocols instead of a global synchronizing clock. Quasi-Delay-Insensitive (QDI) asynchronous circuits have been shown to function in extreme environments and also consume lower power compared to synchronous circuits. However, designing QDI circuits correctly is more difficult, because their behavior is much more complex and unconstrained. The goal of this project is to develop verification methodologies for QDI circuits, which will have a broad impact, enabling reliable design and therefore more widespread usage of QDI circuits in extreme environment and low-power Internet of Things (IoT) applications, such as space exploration, power industry, automobile industry, wireless sensor networks, etc. The project will have close collaboration with industry via transfer technology, and plans to prepare students for a career in the technical fields covered by this project.\r\n\r\nThe proposed technical approach aims to develop a systematic proof technique that can be used to establish the functional equivalence of a QDI circuit with its synchronous counterpart. It is based on formal verification, where mathematical proofs are used to establish correctness of the design, or find anomalies if the design is not correct. The proposed approach exploits the fact that synchronous circuits are much easier to design and verify. Therefore, to verify a QDI circuit, the previously verified synchronous counterpart will be used as the reference.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Sudarshan",
   "pi_last_name": "Srinivasan",
   "pi_mid_init": "K",
   "pi_sufx_name": "",
   "pi_full_name": "Sudarshan K Srinivasan",
   "pi_email_addr": "sudarshan.srinivasan@ndsu.edu",
   "nsf_id": "000503857",
   "pi_start_date": "2017-08-10",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Scott",
   "pi_last_name": "Smith",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "Scott C Smith",
   "pi_email_addr": "scott.smith@tamuk.edu",
   "nsf_id": "000398344",
   "pi_start_date": "2017-08-10",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Havlicek",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "John Havlicek",
   "pi_email_addr": "john@etacompute.com",
   "nsf_id": "000736452",
   "pi_start_date": "2017-08-10",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Vidura",
   "pi_last_name": "Wijayasekara",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Vidura Wijayasekara",
   "pi_email_addr": "vidura@etacompute.com",
   "nsf_id": "000736456",
   "pi_start_date": "2017-08-10",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "North Dakota State University Fargo",
  "inst_street_address": "1340 ADMINISTRATION AVE",
  "inst_street_address_2": "",
  "inst_city_name": "FARGO",
  "inst_state_code": "ND",
  "inst_state_name": "North Dakota",
  "inst_phone_num": "7012318045",
  "inst_zip_code": "58105",
  "inst_country_name": "United States",
  "cong_dist_code": "00",
  "st_cong_dist_code": "ND00",
  "org_lgl_bus_name": "NORTH DAKOTA STATE UNIVERSITY",
  "org_prnt_uei_num": "EZ4WPGRE1RD5",
  "org_uei_num": "EZ4WPGRE1RD5"
 },
 "perf_inst": {
  "perf_inst_name": "North Dakota State University Fargo",
  "perf_str_addr": "1411 Centennial Blvd",
  "perf_city_name": "Fargo",
  "perf_st_code": "ND",
  "perf_st_name": "North Dakota",
  "perf_zip_code": "581055775",
  "perf_ctry_code": "US",
  "perf_cong_dist": "00",
  "perf_st_cong_dist": "ND00",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "150400",
   "pgm_ele_name": "GOALI-Grnt Opp Acad Lia wIndus"
  },
  {
   "pgm_ele_code": "164000",
   "pgm_ele_name": "Information Technology Researc"
  },
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7945",
   "pgm_ref_txt": "DES AUTO FOR MICRO & NANO SYST"
  },
  {
   "pgm_ref_code": "8206",
   "pgm_ref_txt": "Formal Methods and Verification"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 449999.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Quasi-Delay-Insensitive (QDI) asynchronous circuits require very little timing analysis, and are considered to be correct-by-construction; therefore, they are much more robust with respect to process, voltage, and temperature (PVT) variations, compared to synchronous circuits. They have been demonstrated to function without breaking down in high radiation environments and temperatures ranging from -196&ordm;C to 125&ordm;C. This ability to function correctly in extreme environments makes QDI circuits very suitable for applications including space exploration, power industry, automobile industry (internal combustion engines), oil/gas exploration, medical imaging instrumentation, laser industry, superconducting computing, and energy storage systems. However, the Computer-Aided Design (CAD) technology and tools required to verify and guarantee safety (i.e., correctness) and liveness (i.e., circuit won't deadlock) of QDI circuits was very limited. The goal of this project was to develop formal techniques that can be applied directly to the three main QDI circuit paradigms, NULL Convention Logic (NCL), Sleep Convention Logic (SCL), and Pre-Charge Half-Buffer (PCHB) circuits, to ensure their safety and liveness. These three QDI paradigms all utilize 4-phase handshaking control with dual-rail logic (i.e., 2 wires represent 1 bit of data, with the following four values: 1) only wire0 asserted: DATA0 which is equivalent to a bit of 0, 2) only wire1 asserted: DATA1 which is equivalent to a bit of 1, 3) neither wire asserted: NULL which occurs after each DATA value, and 4) both wires asserted: ILLEGAL which will not occur in a properly operating circuit).</p>\n<p>The major outcomes of this project are:</p>\n<p>i) The following formal verification approach for QDI circuits was developed as a three-step process, which easily scales to large circuits and directly exploits advances in verification methods for synchronous circuits. 1) The first step automatically generates an equivalent synchronous circuit version of the original QDI circuit. 2) The second step utilizes an existing verification tool for synchronous circuits (e.g., Z3) to verify the generated synchronous circuit against the original synchronous circuit specification, which the QDI circuit being verified was derived from. This step verifies the logical correctness of the QDI circuit. 3) The third step directly verifies the QDI circuit&rsquo;s handshaking control circuitry for liveness, using a graph-based algorithm developed to ensure that every datapath connection is correctly acknowledged by the handshaking control circuitry. 3a) Since NCL combinational logic (C/L) circuits must also be designed as input-complete (i.e., all outputs cannot transition to DATA/NULL until all inputs transition to DATA/NULL) and observable (i.e., any gate that transitions during the current DATA/NULL cycle must cause at least 1 output to transition) in order to guarantee liveness, formal methods utilizing Z3 were developed to check NCL C/L circuits for input-completeness and observability. Input-completeness and observability are not required for SCL and PCHB circuits.</p>\n<p>ii) The QDI verification techniques developed in i) above focus on checking circuit behavior when inputs are NULL and DATA. ILLEGAL inputs are not taken into consideration, since ILLEGAL inputs should not occur in a properly operating circuit. However, ILLEGAL inputs could be utilized to insert hardware trojans into a QDI circuit. A variety of NCL and SCL hardware trojans that exploit the ILLEGAL state to leak information (e.g., private key in RSA decryption circuit) were demonstrated. Some of these were detectable via the methods developed in i) above; however, some were not. Hence, formal methods utilizing Z3 to check NCL and SCL circuits for hardware trojans that exploit the ILLEGAL state were developed.</p>\n<p>iii) In addition to developing the above-mentioned formal verification methods, which will allow QDI circuits to be utilized more in the IC design industry, this project also helped train 5 PhD students and 1 MS student, and resulted in 3 journal publications, 1 book chapter, 5 conference publications, 2 PhD dissertations, and 1 MS thesis.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/07/2022<br>\n\t\t\t\t\tModified by: Sudarshan&nbsp;K&nbsp;Srinivasan</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nQuasi-Delay-Insensitive (QDI) asynchronous circuits require very little timing analysis, and are considered to be correct-by-construction; therefore, they are much more robust with respect to process, voltage, and temperature (PVT) variations, compared to synchronous circuits. They have been demonstrated to function without breaking down in high radiation environments and temperatures ranging from -196&ordm;C to 125&ordm;C. This ability to function correctly in extreme environments makes QDI circuits very suitable for applications including space exploration, power industry, automobile industry (internal combustion engines), oil/gas exploration, medical imaging instrumentation, laser industry, superconducting computing, and energy storage systems. However, the Computer-Aided Design (CAD) technology and tools required to verify and guarantee safety (i.e., correctness) and liveness (i.e., circuit won't deadlock) of QDI circuits was very limited. The goal of this project was to develop formal techniques that can be applied directly to the three main QDI circuit paradigms, NULL Convention Logic (NCL), Sleep Convention Logic (SCL), and Pre-Charge Half-Buffer (PCHB) circuits, to ensure their safety and liveness. These three QDI paradigms all utilize 4-phase handshaking control with dual-rail logic (i.e., 2 wires represent 1 bit of data, with the following four values: 1) only wire0 asserted: DATA0 which is equivalent to a bit of 0, 2) only wire1 asserted: DATA1 which is equivalent to a bit of 1, 3) neither wire asserted: NULL which occurs after each DATA value, and 4) both wires asserted: ILLEGAL which will not occur in a properly operating circuit).\n\nThe major outcomes of this project are:\n\ni) The following formal verification approach for QDI circuits was developed as a three-step process, which easily scales to large circuits and directly exploits advances in verification methods for synchronous circuits. 1) The first step automatically generates an equivalent synchronous circuit version of the original QDI circuit. 2) The second step utilizes an existing verification tool for synchronous circuits (e.g., Z3) to verify the generated synchronous circuit against the original synchronous circuit specification, which the QDI circuit being verified was derived from. This step verifies the logical correctness of the QDI circuit. 3) The third step directly verifies the QDI circuit\u2019s handshaking control circuitry for liveness, using a graph-based algorithm developed to ensure that every datapath connection is correctly acknowledged by the handshaking control circuitry. 3a) Since NCL combinational logic (C/L) circuits must also be designed as input-complete (i.e., all outputs cannot transition to DATA/NULL until all inputs transition to DATA/NULL) and observable (i.e., any gate that transitions during the current DATA/NULL cycle must cause at least 1 output to transition) in order to guarantee liveness, formal methods utilizing Z3 were developed to check NCL C/L circuits for input-completeness and observability. Input-completeness and observability are not required for SCL and PCHB circuits.\n\nii) The QDI verification techniques developed in i) above focus on checking circuit behavior when inputs are NULL and DATA. ILLEGAL inputs are not taken into consideration, since ILLEGAL inputs should not occur in a properly operating circuit. However, ILLEGAL inputs could be utilized to insert hardware trojans into a QDI circuit. A variety of NCL and SCL hardware trojans that exploit the ILLEGAL state to leak information (e.g., private key in RSA decryption circuit) were demonstrated. Some of these were detectable via the methods developed in i) above; however, some were not. Hence, formal methods utilizing Z3 to check NCL and SCL circuits for hardware trojans that exploit the ILLEGAL state were developed.\n\niii) In addition to developing the above-mentioned formal verification methods, which will allow QDI circuits to be utilized more in the IC design industry, this project also helped train 5 PhD students and 1 MS student, and resulted in 3 journal publications, 1 book chapter, 5 conference publications, 2 PhD dissertations, and 1 MS thesis.\n\n \n\n\t\t\t\t\tLast Modified: 12/07/2022\n\n\t\t\t\t\tSubmitted by: Sudarshan K Srinivasan"
 }
}