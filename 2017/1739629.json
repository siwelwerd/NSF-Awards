{
 "awd_id": "1739629",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CPS: Small: Sound Invariant Generation for Continuous and Hybrid Systems",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2022-08-31",
 "tot_intn_awd_amt": 479117.0,
 "awd_amount": 479117.0,
 "awd_min_amd_letter_date": "2017-08-22",
 "awd_max_amd_letter_date": "2017-08-22",
 "awd_abstract_narration": "This project considers the pragmatic challenge of broadening the reach and general accessibility of cyber-physical system (CPS) analysis. It capitalizes on logical foundations for cyber-physical systems to study automated analysis for CPS without sacrificing correctness of the analysis results. While the complexities of CPSs can be quite demanding, there is a considerable pragmatic difference between rigorous reasoning techniques that are available to verification experts compared to techniques that provide a vast amount of automation support to become more accessible for novices and more productive for experts. This project focuses on finding invariants, which convey crucial insights about quantities or relationships, such as minimum safety distances, that do not change while the CPS drives or flies.\r\n\r\nCyber-physical systems such as self-driving cars, advanced computerized car safety technology, and drones have considerable potential to change the world for the better. Their designs face intensive safety requirements, however, and feature increasingly complex behaviors. The advanced but correct automation of CPS analysis technology developed in this project is crucial to broaden the reach of trustworthy verification and validation results. In the long run, there is a chance that this technology will fundamentally change the way that CPS are engineered by enabling CPS engineers to have increasingly comprehensive safety analysis tools at their fingertips. As a demonstration with considerable impact potential, this project studies safe control functionalities for quadrotors. Quadcopters are a popular choice for realizing many applications, but their safety is a nontrivial challenge. Not every company or grass-roots effort will have the capacity to conduct a full verification and validation effort. That is why a set of baseline functionalities that have been preverified are expected to be a helpful basis for such designs. The results of this project, including CPS models, controllers, proofs, and tools, will be made available on the KeYmaera X web page: http://keymaeraX.org/",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Andre",
   "pi_last_name": "Platzer",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Andre Platzer",
   "pi_email_addr": "aplatzer@cs.cmu.edu",
   "nsf_id": "000525583",
   "pi_start_date": "2017-08-22",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133890",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7354",
   "pgm_ref_txt": "COMPUTER SYSTEMS"
  },
  {
   "pgm_ref_code": "7918",
   "pgm_ref_txt": "CYBER-PHYSICAL SYSTEMS (CPS)"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 479117.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Cyber-physical systems (CPS) such as self-driving cars, advanced computerized car safety technology, and drones have considerable potential to change the world for the better. Their designs face intensive safety requirements, however, and feature increasingly complex behaviors. The advanced but correct automation of CPS analysis technology developed in this project is on the critical path to broadening the reach of trustworthy verification and validation techniques. In the long run, there is a chance that this technology will fundamentally change the way that CPSs are designed by enabling CPS engineers to have increasingly comprehensive but rigorous safety analysis tools at their fingertips.</p>\n<p>This project considered the pragmatic challenge of broadening the reach and general accessibility of CPS analysis technology. It capitalizes on logical foundations for cyber-physical systems to study automated analysis for CPSs without sacrificing correctness of the analysis results. While the complexities of CPSs can be quite demanding, there is a considerable pragmatic difference between rigorous reasoning techniques that are only available to verification experts compared to techniques that provide a vast amount of automation support to become more accessible for novices and more productive for experts. This project focused on finding invariants, which convey crucial insights about quantities or relationships, such as minimum safety distances, that never change while the CPS drives or flies or otherwise follows its physical dynamics. Once found and justified, an invariant can be exploited for CPS analysis because it constitutes a logical quantity that always stays the same during the evolution of the CPS. Any safety property that follows from an invariant holds always if the invariant was true when the CPS was initially activated.</p>\n<p>The central goal of the project is to make invariant generation significantly more automatic. Building proofs of safety about CPSs in a theorem prover relies on finding the right invariants: this is not an easy task which has traditionally been the responsibility of the user. Finding the right invariants often involves significant expertise. By automating the discovery of invariants this projects made formal proofs of safety much easier and quicker to construct, which greatly help in reducing the time and the level of expertise required to use theorem provers in the domain of CPS verification.</p>\n<p>Specific technological outcomes of this project include the Pegasus continuous invariant generation tool and the advances that its inclusion in the KeYmaera X theorem prover afford for correct automated verification of continuous and hybrid systems. This bundle of software tools makes it significantly easier to rigorously justify the safety of CPS with the help of automated theorem proving. On the educational side, these advances also help students in the Logical Foundations of Cyber-Physical Systems undergraduate, masters, and PhD course answer more complicated CPS analysis questions in easier ways. Other outcomes include formally verified algorithms for handling real arithmetic decision problems. These are important for increasing the rigor in CPS analysis, because real arithmetic reasoning is an important part of CPS analysis and existing rigorous reasoning approaches for real arithmetic needed witnesses, which are difficult to generate systematically. The research also pioneered the first automated theorem prover that self-trains by unsupervised machine learning in AlphaZero style to solve loop invariant synthesis benchmarks.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/13/2022<br>\n\t\t\t\t\tModified by: Andre&nbsp;Platzer</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nCyber-physical systems (CPS) such as self-driving cars, advanced computerized car safety technology, and drones have considerable potential to change the world for the better. Their designs face intensive safety requirements, however, and feature increasingly complex behaviors. The advanced but correct automation of CPS analysis technology developed in this project is on the critical path to broadening the reach of trustworthy verification and validation techniques. In the long run, there is a chance that this technology will fundamentally change the way that CPSs are designed by enabling CPS engineers to have increasingly comprehensive but rigorous safety analysis tools at their fingertips.\n\nThis project considered the pragmatic challenge of broadening the reach and general accessibility of CPS analysis technology. It capitalizes on logical foundations for cyber-physical systems to study automated analysis for CPSs without sacrificing correctness of the analysis results. While the complexities of CPSs can be quite demanding, there is a considerable pragmatic difference between rigorous reasoning techniques that are only available to verification experts compared to techniques that provide a vast amount of automation support to become more accessible for novices and more productive for experts. This project focused on finding invariants, which convey crucial insights about quantities or relationships, such as minimum safety distances, that never change while the CPS drives or flies or otherwise follows its physical dynamics. Once found and justified, an invariant can be exploited for CPS analysis because it constitutes a logical quantity that always stays the same during the evolution of the CPS. Any safety property that follows from an invariant holds always if the invariant was true when the CPS was initially activated.\n\nThe central goal of the project is to make invariant generation significantly more automatic. Building proofs of safety about CPSs in a theorem prover relies on finding the right invariants: this is not an easy task which has traditionally been the responsibility of the user. Finding the right invariants often involves significant expertise. By automating the discovery of invariants this projects made formal proofs of safety much easier and quicker to construct, which greatly help in reducing the time and the level of expertise required to use theorem provers in the domain of CPS verification.\n\nSpecific technological outcomes of this project include the Pegasus continuous invariant generation tool and the advances that its inclusion in the KeYmaera X theorem prover afford for correct automated verification of continuous and hybrid systems. This bundle of software tools makes it significantly easier to rigorously justify the safety of CPS with the help of automated theorem proving. On the educational side, these advances also help students in the Logical Foundations of Cyber-Physical Systems undergraduate, masters, and PhD course answer more complicated CPS analysis questions in easier ways. Other outcomes include formally verified algorithms for handling real arithmetic decision problems. These are important for increasing the rigor in CPS analysis, because real arithmetic reasoning is an important part of CPS analysis and existing rigorous reasoning approaches for real arithmetic needed witnesses, which are difficult to generate systematically. The research also pioneered the first automated theorem prover that self-trains by unsupervised machine learning in AlphaZero style to solve loop invariant synthesis benchmarks.\n\n\t\t\t\t\tLast Modified: 10/13/2022\n\n\t\t\t\t\tSubmitted by: Andre Platzer"
 }
}