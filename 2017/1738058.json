{
 "awd_id": "1738058",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: A New Communication Measure for Distributed Computations",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2017-09-01",
 "awd_exp_date": "2021-08-31",
 "tot_intn_awd_amt": 224986.0,
 "awd_amount": 224986.0,
 "awd_min_amd_letter_date": "2017-08-31",
 "awd_max_amd_letter_date": "2019-11-06",
 "awd_abstract_narration": "Distributed computations will play a huge role in the future of computer systems that range from a general purpose machine to a special purpose sensor network. Wild-life, infrastructure and environment monitoring as well as other smart-city projects will benefit from advances in such computational models. As a result any fundamental advances in these new models will have significant broader impacts.  The investigator plans to involve students ranging from graduate school to local high schools such as Thomas Jefferson High School for Science and Technology. \r\n\r\nA distributed computation is typically viewed as a collection of local decisions to solve a problem. Unlike a single processor system where all the information necessary to compute the target function is available to the processor, in a distributed computation, each component of the system has limited knowledge/information. In addition, the flow of information from one component to another may be restricted by the system's inter-component communication capacities. In light of the limitations of each component's communication capacity, two natural questions arise: How should information flow among the components in order to compute the function efficiently, and How much information, in terms of bits, must be transmitted to each component at minimum. Communication complexity has proved to be very useful in obtaining bounds on the complexity of various problems ranging from circuit complexity to streaming algorithms. This project considers a variety of communication models to capture the essence of necessary data convergence to compute a function. A new measure of communication complexity is pursued and this measure captures an important component of what it means to be a distributive computation.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Balasubramania",
   "pi_last_name": "Kalyanasundaram",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Balasubramania Kalyanasundaram",
   "pi_email_addr": "kalyan@cs.georgetown.edu",
   "nsf_id": "000218267",
   "pi_start_date": "2017-08-31",
   "pi_end_date": "2018-02-13"
  },
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Balasubramania",
   "pi_last_name": "Kalyanasundaram",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Balasubramania Kalyanasundaram",
   "pi_email_addr": "kalyan@cs.georgetown.edu",
   "nsf_id": "000218267",
   "pi_start_date": "2019-11-06",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Mahendran",
   "pi_last_name": "Velauthapillai",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Mahendran Velauthapillai",
   "pi_email_addr": "mahe@cs.georgetown.edu",
   "nsf_id": "000285269",
   "pi_start_date": "2018-02-13",
   "pi_end_date": "2019-11-06"
  }
 ],
 "inst": {
  "inst_name": "Georgetown University",
  "inst_street_address": "MAIN CAMPUS",
  "inst_street_address_2": "",
  "inst_city_name": "WASHINGTON",
  "inst_state_code": "DC",
  "inst_state_name": "District of Columbia",
  "inst_phone_num": "2026250100",
  "inst_zip_code": "20057",
  "inst_country_name": "United States",
  "cong_dist_code": "00",
  "st_cong_dist_code": "DC00",
  "org_lgl_bus_name": "GEORGETOWN UNIVERSITY",
  "org_prnt_uei_num": "TF2CMKY1HMX9",
  "org_uei_num": "TF2CMKY1HMX9"
 },
 "perf_inst": {
  "perf_inst_name": "Georgetown University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "DC",
  "perf_st_name": "District of Columbia",
  "perf_zip_code": "200571232",
  "perf_ctry_code": "US",
  "perf_cong_dist": "00",
  "perf_st_cong_dist": "DC00",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "7927",
   "pgm_ref_txt": "COMPLEXITY & CRYPTOGRAPHY"
  },
  {
   "pgm_ref_code": "7934",
   "pgm_ref_txt": "PARAL/DISTRIBUTED ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 224986.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>A fundamental goal of the project is to understand what can and cannot be computed in a distributed fashion.&nbsp; In order to answer the question, we ask the following mathematical question:&nbsp; Given n bits distributed georgraphically, how can we compute a joint function of all these n input bits?</p>\n<p>There are many ways to solve the problem.&nbsp; One easy way is to gather all remaining (n-1) bits into one position and compute the function.&nbsp; This, we call,&nbsp; simply sequential.&nbsp; But on the other hand, if each bit is a person who receives no more than, say 20 bits of information from others then we say that such functions are highly distributed.&nbsp; Armed with this intuitive notion of what is meant by distributed computation, we introduce a model and studied what is meant by a distributed computation.</p>\n<p>In this model, there are n people and each has a bit.&nbsp; They want to compute a function of these n input bits.&nbsp; These n people communicate with each other sending bits.&nbsp; In order to account for every bit of information send or received we adopted a model that focusses on number of bits send or received by any person.&nbsp; &nbsp;Unlike other models this focus on the number of bits sent or received at a person.&nbsp; &nbsp;When a person wants to send a message to another person, he/she sends the message text and puts it in the queue for the other person.&nbsp; However, when other person receives the message, he/she does not know the sender unless the sender has attached his/her id.&nbsp; &nbsp;There is a bit of asymmetry in the communication.&nbsp; While a person can send a message to any other person, he/she must attach his/her address if he/she wants to the other person to know who sent it.&nbsp;</p>\n<p>What can be computed if each person can send or receive one bit?&nbsp; We showed that read-once functions can be computed under this paradigm.&nbsp; &nbsp; We also showed that more than read-once functions can be computed.&nbsp; We also establish a lower bound by showing counting number of 1's in the input, for say 20 or more, cannot be done.&nbsp;&nbsp;</p>\n<p>If we increase the number of bits to two, then suddenly we can compute the number of 1's&nbsp; in the input up to, say n/10.&nbsp; &nbsp;This shows the power of this model and tell us that it is hard to establish any lower bound for 2 bits or more.</p>\n<p>We studied what can be computed if every person can send or receive to constantly many bits to other nodes?&nbsp; Without symmetry this problem is trivial.&nbsp; We showed that under oblivious model the set of function is exactly equal to the linear sized bouded degree circuits.&nbsp; We showed that the counting problem (i.e, number of 1s)&nbsp; is fully solvable if we allow communication complexity of 10.&nbsp; We show that GCD of two numbers in the range 0 to n-1 can be computed if we allowed O(1) number of bits sent or received at each node.&nbsp;</p>\n<p>We showed that a random bi-symmetric function will require Omega(log n) bits.&nbsp; But, as expected, we are unable to establish the lower bound for an explicit function.&nbsp; For any f(n) &lt; n,&nbsp; we showed a rich class of functions solvable by communication complexity f(n) log n bits but not by f(n).&nbsp; &nbsp;This establishes an hierarchy of problems solvable for every function f(n) less than n.&nbsp; But, unfortunately we are unable to show any lower bound for 2 or higher for an explicit function.&nbsp; &nbsp;</p>\n<p>We are in the process of testing some graph properties under our model where each person knows if a particular edge exists or not.&nbsp; There are n^2 people and they carry the information of the graph.&nbsp; &nbsp;For instance, we believe that we can do breadth-first search and depth-first search of a graph in O(1) communication for each person.&nbsp;&nbsp;</p>\n<p>While the model may not seem symmetric for some researchers, we believe that the model accurate reflect the intution we had when we started the project.&nbsp; No one is any where near to show a lower bound for linear sized circuit, say a simple bound of 6n or more for an explicit function.&nbsp; &nbsp;It is a hard problem and we hope to make progress towards both lower and upper bounds in our model.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/17/2022<br>\n\t\t\t\t\tModified by: Balasubramania&nbsp;Kalyanasundaram</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nA fundamental goal of the project is to understand what can and cannot be computed in a distributed fashion.  In order to answer the question, we ask the following mathematical question:  Given n bits distributed georgraphically, how can we compute a joint function of all these n input bits?\n\nThere are many ways to solve the problem.  One easy way is to gather all remaining (n-1) bits into one position and compute the function.  This, we call,  simply sequential.  But on the other hand, if each bit is a person who receives no more than, say 20 bits of information from others then we say that such functions are highly distributed.  Armed with this intuitive notion of what is meant by distributed computation, we introduce a model and studied what is meant by a distributed computation.\n\nIn this model, there are n people and each has a bit.  They want to compute a function of these n input bits.  These n people communicate with each other sending bits.  In order to account for every bit of information send or received we adopted a model that focusses on number of bits send or received by any person.   Unlike other models this focus on the number of bits sent or received at a person.   When a person wants to send a message to another person, he/she sends the message text and puts it in the queue for the other person.  However, when other person receives the message, he/she does not know the sender unless the sender has attached his/her id.   There is a bit of asymmetry in the communication.  While a person can send a message to any other person, he/she must attach his/her address if he/she wants to the other person to know who sent it. \n\nWhat can be computed if each person can send or receive one bit?  We showed that read-once functions can be computed under this paradigm.    We also showed that more than read-once functions can be computed.  We also establish a lower bound by showing counting number of 1's in the input, for say 20 or more, cannot be done.  \n\nIf we increase the number of bits to two, then suddenly we can compute the number of 1's  in the input up to, say n/10.   This shows the power of this model and tell us that it is hard to establish any lower bound for 2 bits or more.\n\nWe studied what can be computed if every person can send or receive to constantly many bits to other nodes?  Without symmetry this problem is trivial.  We showed that under oblivious model the set of function is exactly equal to the linear sized bouded degree circuits.  We showed that the counting problem (i.e, number of 1s)  is fully solvable if we allow communication complexity of 10.  We show that GCD of two numbers in the range 0 to n-1 can be computed if we allowed O(1) number of bits sent or received at each node. \n\nWe showed that a random bi-symmetric function will require Omega(log n) bits.  But, as expected, we are unable to establish the lower bound for an explicit function.  For any f(n) &lt; n,  we showed a rich class of functions solvable by communication complexity f(n) log n bits but not by f(n).   This establishes an hierarchy of problems solvable for every function f(n) less than n.  But, unfortunately we are unable to show any lower bound for 2 or higher for an explicit function.   \n\nWe are in the process of testing some graph properties under our model where each person knows if a particular edge exists or not.  There are n^2 people and they carry the information of the graph.   For instance, we believe that we can do breadth-first search and depth-first search of a graph in O(1) communication for each person.  \n\nWhile the model may not seem symmetric for some researchers, we believe that the model accurate reflect the intution we had when we started the project.  No one is any where near to show a lower bound for linear sized circuit, say a simple bound of 6n or more for an explicit function.   It is a hard problem and we hope to make progress towards both lower and upper bounds in our model.\n\n \n\n \n\n \n\n\t\t\t\t\tLast Modified: 01/17/2022\n\n\t\t\t\t\tSubmitted by: Balasubramania Kalyanasundaram"
 }
}