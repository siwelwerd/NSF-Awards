{
 "awd_id": "1657175",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CRII: SHF: ACI: Performance-in-Depth Sparse Solvers for Heterogeneous Parallel Platforms.",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927498",
 "po_email": "achtchel@nsf.gov",
 "po_sign_block_name": "Almadena Chtchelkanova",
 "awd_eff_date": "2017-02-15",
 "awd_exp_date": "2020-01-31",
 "tot_intn_awd_amt": 175000.0,
 "awd_amount": 175000.0,
 "awd_min_amd_letter_date": "2017-02-09",
 "awd_max_amd_letter_date": "2018-07-07",
 "awd_abstract_narration": "Sparse numerical computations are at the heart of many science and engineering simulations. However, the complex irregularities in sparse methods limit the performance of many scientific software. This project integrates mathematical reformulation, algorithm redesign, and performance engineering to develop high-performance sparse solvers for heterogeneous parallel platforms. The outcomes of this research are innovative tools and methodologies that advance the field of large-scale scientific simulations. In addition, the project has a broader impact in training graduate students to perform interdisciplinary research.\r\n \r\nThe project conducts an in-depth investigation of performance bottlenecks in sparse solvers and reformulates their standard variants to deliver end-to-end performance. Cross-layer solutions are developed to improve data locality, reduce communication, and increase inherent parallelism in sparse linear solvers. The solutions involve multi-level algorithm restructuring and performance tuning to significantly improve the scalability and performance of sparse computations while preserving their numerical accuracy, convergence, and stability. The proposed methods and algorithms are implemented as domain-specific high-performance software and a benchmark suite to promote iterative improvements of the developed algorithms and codes.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Narayan",
   "pi_last_name": "Mandayam",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Narayan Mandayam",
   "pi_email_addr": "narayan@winlab.rutgers.edu",
   "nsf_id": "000492962",
   "pi_start_date": "2018-07-07",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Maryam",
   "pi_last_name": "Mehri Dehnavi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Maryam Mehri Dehnavi",
   "pi_email_addr": "maryam.mehri@rutgers.edu",
   "nsf_id": "000710463",
   "pi_start_date": "2017-02-09",
   "pi_end_date": "2018-07-07"
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Maryam",
   "pi_last_name": "Mehri Dehnavi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Maryam Mehri Dehnavi",
   "pi_email_addr": "maryam.mehri@rutgers.edu",
   "nsf_id": "000710463",
   "pi_start_date": "2018-07-07",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Rutgers University New Brunswick",
  "inst_street_address": "3 RUTGERS PLZ",
  "inst_street_address_2": "",
  "inst_city_name": "NEW BRUNSWICK",
  "inst_state_code": "NJ",
  "inst_state_name": "New Jersey",
  "inst_phone_num": "8489320150",
  "inst_zip_code": "089018559",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "NJ12",
  "org_lgl_bus_name": "RUTGERS, THE STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "M1LVPE5GLSD9"
 },
 "perf_inst": {
  "perf_inst_name": "Rutgers University New Brunswick",
  "perf_str_addr": "715, 96 Frelinghuysen Road",
  "perf_city_name": "Piscataway",
  "perf_st_code": "NJ",
  "perf_st_name": "New Jersey",
  "perf_zip_code": "088548018",
  "perf_ctry_code": "US",
  "perf_cong_dist": "06",
  "perf_st_cong_dist": "NJ06",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "026Y00",
   "pgm_ele_name": "CRII CISE Research Initiation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7942",
   "pgm_ref_txt": "HIGH-PERFORMANCE COMPUTING"
  },
  {
   "pgm_ref_code": "8228",
   "pgm_ref_txt": "CISE Resrch Initiatn Initiatve"
  }
 ],
 "app_fund": [
  {
   "app_code": "0117",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001718DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2017,
   "fund_oblg_amt": 175000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-5c649cac-7fff-d22a-aad5-74286f15083c\">&nbsp;</span></p>\n<p dir=\"ltr\"><span>Sparse numerical computations are at the heart of many science and engineering simulations. However, the complex irregularities in sparse methods limit the performance of many scientific software. In this project we integrated mathematical reformulation, algorithm redesign, and performance engineering to develop high-performance sparse solvers and software for heterogeneous parallel platforms. The outcomes of the project were the invention of novel algorithms and inspection strategies that analyze the irregularity in sparse matrix computations in scientific simulations. The analysis was used to build domain-specific code generators and cloud engines, specifically the MatRox, Sympiler, and ASYNC frameworks. These frameworks use multi-level algorithm restructuring and performance tuning to significantly improve the scalability and performance of sparse computations while preserving their numerical accuracy, convergence, and stability. As a result, practitioners and domain experts that use MatRox, Sympiler, and ASYNC can automatically generate high-performance code in scientific and machine learning applications. The frameworks are developed with a domain-specific language to improve programmer productivity.&nbsp;&nbsp;&nbsp;</span></p>\n<p><br /><span>The project has produced nine peer-reviewed publications. Code generation frameworks Sympiler and MatRox as well as the cloud computing engine ASYNC are the software artifacts produced from the project. These frameworks are made publicly available. Several graduate and undergraduate students were trained in numerical analysis, compiler development, cloud computing, and optimization methods. The</span><span> trainees working on the project have won numerous awards such as the ACM Grant Final Student Research Competition award and the 2018 Adobe Research fellowship.</span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 03/09/2020<br>\n\t\t\t\t\tModified by: Narayan&nbsp;Mandayam</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nSparse numerical computations are at the heart of many science and engineering simulations. However, the complex irregularities in sparse methods limit the performance of many scientific software. In this project we integrated mathematical reformulation, algorithm redesign, and performance engineering to develop high-performance sparse solvers and software for heterogeneous parallel platforms. The outcomes of the project were the invention of novel algorithms and inspection strategies that analyze the irregularity in sparse matrix computations in scientific simulations. The analysis was used to build domain-specific code generators and cloud engines, specifically the MatRox, Sympiler, and ASYNC frameworks. These frameworks use multi-level algorithm restructuring and performance tuning to significantly improve the scalability and performance of sparse computations while preserving their numerical accuracy, convergence, and stability. As a result, practitioners and domain experts that use MatRox, Sympiler, and ASYNC can automatically generate high-performance code in scientific and machine learning applications. The frameworks are developed with a domain-specific language to improve programmer productivity.   \n\n\nThe project has produced nine peer-reviewed publications. Code generation frameworks Sympiler and MatRox as well as the cloud computing engine ASYNC are the software artifacts produced from the project. These frameworks are made publicly available. Several graduate and undergraduate students were trained in numerical analysis, compiler development, cloud computing, and optimization methods. The trainees working on the project have won numerous awards such as the ACM Grant Final Student Research Competition award and the 2018 Adobe Research fellowship.\n\n \n\n \n\n\t\t\t\t\tLast Modified: 03/09/2020\n\n\t\t\t\t\tSubmitted by: Narayan Mandayam"
 }
}